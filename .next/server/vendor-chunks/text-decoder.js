"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/text-decoder";
exports.ids = ["vendor-chunks/text-decoder"];
exports.modules = {

/***/ "(rsc)/./node_modules/text-decoder/index.js":
/*!********************************************!*\
  !*** ./node_modules/text-decoder/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst PassThroughDecoder = __webpack_require__(/*! ./lib/pass-through-decoder */ \"(rsc)/./node_modules/text-decoder/lib/pass-through-decoder.js\");\nconst UTF8Decoder = __webpack_require__(/*! ./lib/utf8-decoder */ \"(rsc)/./node_modules/text-decoder/lib/utf8-decoder.js\");\nmodule.exports = class TextDecoder {\n    constructor(encoding = \"utf8\"){\n        this.encoding = normalizeEncoding(encoding);\n        switch(this.encoding){\n            case \"utf8\":\n                this.decoder = new UTF8Decoder();\n                break;\n            case \"utf16le\":\n            case \"base64\":\n                throw new Error(\"Unsupported encoding: \" + this.encoding);\n            default:\n                this.decoder = new PassThroughDecoder(this.encoding);\n        }\n    }\n    get remaining() {\n        return this.decoder.remaining;\n    }\n    push(data) {\n        if (typeof data === \"string\") return data;\n        return this.decoder.decode(data);\n    }\n    // For Node.js compatibility\n    write(data) {\n        return this.push(data);\n    }\n    end(data) {\n        let result = \"\";\n        if (data) result = this.push(data);\n        result += this.decoder.flush();\n        return result;\n    }\n};\nfunction normalizeEncoding(encoding) {\n    encoding = encoding.toLowerCase();\n    switch(encoding){\n        case \"utf8\":\n        case \"utf-8\":\n            return \"utf8\";\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n            return \"utf16le\";\n        case \"latin1\":\n        case \"binary\":\n            return \"latin1\";\n        case \"base64\":\n        case \"ascii\":\n        case \"hex\":\n            return encoding;\n        default:\n            throw new Error(\"Unknown encoding: \" + encoding);\n    }\n}\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdGV4dC1kZWNvZGVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxxQkFBcUJDLG1CQUFPQSxDQUFDO0FBQ25DLE1BQU1DLGNBQWNELG1CQUFPQSxDQUFDO0FBRTVCRSxPQUFPQyxPQUFPLEdBQUcsTUFBTUM7SUFDckJDLFlBQWFDLFdBQVcsTUFBTSxDQUFFO1FBQzlCLElBQUksQ0FBQ0EsUUFBUSxHQUFHQyxrQkFBa0JEO1FBRWxDLE9BQVEsSUFBSSxDQUFDQSxRQUFRO1lBQ25CLEtBQUs7Z0JBQ0gsSUFBSSxDQUFDRSxPQUFPLEdBQUcsSUFBSVA7Z0JBQ25CO1lBQ0YsS0FBSztZQUNMLEtBQUs7Z0JBQ0gsTUFBTSxJQUFJUSxNQUFNLDJCQUEyQixJQUFJLENBQUNILFFBQVE7WUFDMUQ7Z0JBQ0UsSUFBSSxDQUFDRSxPQUFPLEdBQUcsSUFBSVQsbUJBQW1CLElBQUksQ0FBQ08sUUFBUTtRQUN2RDtJQUNGO0lBRUEsSUFBSUksWUFBYTtRQUNmLE9BQU8sSUFBSSxDQUFDRixPQUFPLENBQUNFLFNBQVM7SUFDL0I7SUFFQUMsS0FBTUMsSUFBSSxFQUFFO1FBQ1YsSUFBSSxPQUFPQSxTQUFTLFVBQVUsT0FBT0E7UUFDckMsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ0ssTUFBTSxDQUFDRDtJQUM3QjtJQUVBLDRCQUE0QjtJQUM1QkUsTUFBT0YsSUFBSSxFQUFFO1FBQ1gsT0FBTyxJQUFJLENBQUNELElBQUksQ0FBQ0M7SUFDbkI7SUFFQUcsSUFBS0gsSUFBSSxFQUFFO1FBQ1QsSUFBSUksU0FBUztRQUNiLElBQUlKLE1BQU1JLFNBQVMsSUFBSSxDQUFDTCxJQUFJLENBQUNDO1FBQzdCSSxVQUFVLElBQUksQ0FBQ1IsT0FBTyxDQUFDUyxLQUFLO1FBQzVCLE9BQU9EO0lBQ1Q7QUFDRjtBQUVBLFNBQVNULGtCQUFtQkQsUUFBUTtJQUNsQ0EsV0FBV0EsU0FBU1ksV0FBVztJQUUvQixPQUFRWjtRQUNOLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBTztRQUNULEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPO1FBQ1QsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPO1FBQ1QsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT0E7UUFDVDtZQUNFLE1BQU0sSUFBSUcsTUFBTSx1QkFBdUJIO0lBQzNDO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnZvaWZ5Ly4vbm9kZV9tb2R1bGVzL3RleHQtZGVjb2Rlci9pbmRleC5qcz9kNmY0Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFBhc3NUaHJvdWdoRGVjb2RlciA9IHJlcXVpcmUoJy4vbGliL3Bhc3MtdGhyb3VnaC1kZWNvZGVyJylcbmNvbnN0IFVURjhEZWNvZGVyID0gcmVxdWlyZSgnLi9saWIvdXRmOC1kZWNvZGVyJylcblxubW9kdWxlLmV4cG9ydHMgPSBjbGFzcyBUZXh0RGVjb2RlciB7XG4gIGNvbnN0cnVjdG9yIChlbmNvZGluZyA9ICd1dGY4Jykge1xuICAgIHRoaXMuZW5jb2RpbmcgPSBub3JtYWxpemVFbmNvZGluZyhlbmNvZGluZylcblxuICAgIHN3aXRjaCAodGhpcy5lbmNvZGluZykge1xuICAgICAgY2FzZSAndXRmOCc6XG4gICAgICAgIHRoaXMuZGVjb2RlciA9IG5ldyBVVEY4RGVjb2RlcigpXG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlICd1dGYxNmxlJzpcbiAgICAgIGNhc2UgJ2Jhc2U2NCc6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVW5zdXBwb3J0ZWQgZW5jb2Rpbmc6ICcgKyB0aGlzLmVuY29kaW5nKVxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhpcy5kZWNvZGVyID0gbmV3IFBhc3NUaHJvdWdoRGVjb2Rlcih0aGlzLmVuY29kaW5nKVxuICAgIH1cbiAgfVxuXG4gIGdldCByZW1haW5pbmcgKCkge1xuICAgIHJldHVybiB0aGlzLmRlY29kZXIucmVtYWluaW5nXG4gIH1cblxuICBwdXNoIChkYXRhKSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykgcmV0dXJuIGRhdGFcbiAgICByZXR1cm4gdGhpcy5kZWNvZGVyLmRlY29kZShkYXRhKVxuICB9XG5cbiAgLy8gRm9yIE5vZGUuanMgY29tcGF0aWJpbGl0eVxuICB3cml0ZSAoZGF0YSkge1xuICAgIHJldHVybiB0aGlzLnB1c2goZGF0YSlcbiAgfVxuXG4gIGVuZCAoZGF0YSkge1xuICAgIGxldCByZXN1bHQgPSAnJ1xuICAgIGlmIChkYXRhKSByZXN1bHQgPSB0aGlzLnB1c2goZGF0YSlcbiAgICByZXN1bHQgKz0gdGhpcy5kZWNvZGVyLmZsdXNoKClcbiAgICByZXR1cm4gcmVzdWx0XG4gIH1cbn1cblxuZnVuY3Rpb24gbm9ybWFsaXplRW5jb2RpbmcgKGVuY29kaW5nKSB7XG4gIGVuY29kaW5nID0gZW5jb2RpbmcudG9Mb3dlckNhc2UoKVxuXG4gIHN3aXRjaCAoZW5jb2RpbmcpIHtcbiAgICBjYXNlICd1dGY4JzpcbiAgICBjYXNlICd1dGYtOCc6XG4gICAgICByZXR1cm4gJ3V0ZjgnXG4gICAgY2FzZSAndWNzMic6XG4gICAgY2FzZSAndWNzLTInOlxuICAgIGNhc2UgJ3V0ZjE2bGUnOlxuICAgIGNhc2UgJ3V0Zi0xNmxlJzpcbiAgICAgIHJldHVybiAndXRmMTZsZSdcbiAgICBjYXNlICdsYXRpbjEnOlxuICAgIGNhc2UgJ2JpbmFyeSc6XG4gICAgICByZXR1cm4gJ2xhdGluMSdcbiAgICBjYXNlICdiYXNlNjQnOlxuICAgIGNhc2UgJ2FzY2lpJzpcbiAgICBjYXNlICdoZXgnOlxuICAgICAgcmV0dXJuIGVuY29kaW5nXG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcignVW5rbm93biBlbmNvZGluZzogJyArIGVuY29kaW5nKVxuICB9XG59O1xuIl0sIm5hbWVzIjpbIlBhc3NUaHJvdWdoRGVjb2RlciIsInJlcXVpcmUiLCJVVEY4RGVjb2RlciIsIm1vZHVsZSIsImV4cG9ydHMiLCJUZXh0RGVjb2RlciIsImNvbnN0cnVjdG9yIiwiZW5jb2RpbmciLCJub3JtYWxpemVFbmNvZGluZyIsImRlY29kZXIiLCJFcnJvciIsInJlbWFpbmluZyIsInB1c2giLCJkYXRhIiwiZGVjb2RlIiwid3JpdGUiLCJlbmQiLCJyZXN1bHQiLCJmbHVzaCIsInRvTG93ZXJDYXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/text-decoder/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/text-decoder/lib/pass-through-decoder.js":
/*!***************************************************************!*\
  !*** ./node_modules/text-decoder/lib/pass-through-decoder.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst b4a = __webpack_require__(/*! b4a */ \"(rsc)/./node_modules/b4a/index.js\");\nmodule.exports = class PassThroughDecoder {\n    constructor(encoding){\n        this.encoding = encoding;\n    }\n    get remaining() {\n        return 0;\n    }\n    decode(tail) {\n        return b4a.toString(tail, this.encoding);\n    }\n    flush() {\n        return \"\";\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdGV4dC1kZWNvZGVyL2xpYi9wYXNzLXRocm91Z2gtZGVjb2Rlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsTUFBTUMsbUJBQU9BLENBQUM7QUFFcEJDLE9BQU9DLE9BQU8sR0FBRyxNQUFNQztJQUNyQkMsWUFBYUMsUUFBUSxDQUFFO1FBQ3JCLElBQUksQ0FBQ0EsUUFBUSxHQUFHQTtJQUNsQjtJQUVBLElBQUlDLFlBQWE7UUFDZixPQUFPO0lBQ1Q7SUFFQUMsT0FBUUMsSUFBSSxFQUFFO1FBQ1osT0FBT1QsSUFBSVUsUUFBUSxDQUFDRCxNQUFNLElBQUksQ0FBQ0gsUUFBUTtJQUN6QztJQUVBSyxRQUFTO1FBQ1AsT0FBTztJQUNUO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnZvaWZ5Ly4vbm9kZV9tb2R1bGVzL3RleHQtZGVjb2Rlci9saWIvcGFzcy10aHJvdWdoLWRlY29kZXIuanM/NzhjMSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBiNGEgPSByZXF1aXJlKCdiNGEnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNsYXNzIFBhc3NUaHJvdWdoRGVjb2RlciB7XG4gIGNvbnN0cnVjdG9yIChlbmNvZGluZykge1xuICAgIHRoaXMuZW5jb2RpbmcgPSBlbmNvZGluZ1xuICB9XG5cbiAgZ2V0IHJlbWFpbmluZyAoKSB7XG4gICAgcmV0dXJuIDBcbiAgfVxuXG4gIGRlY29kZSAodGFpbCkge1xuICAgIHJldHVybiBiNGEudG9TdHJpbmcodGFpbCwgdGhpcy5lbmNvZGluZylcbiAgfVxuXG4gIGZsdXNoICgpIHtcbiAgICByZXR1cm4gJydcbiAgfVxufVxuIl0sIm5hbWVzIjpbImI0YSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiUGFzc1Rocm91Z2hEZWNvZGVyIiwiY29uc3RydWN0b3IiLCJlbmNvZGluZyIsInJlbWFpbmluZyIsImRlY29kZSIsInRhaWwiLCJ0b1N0cmluZyIsImZsdXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/text-decoder/lib/pass-through-decoder.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/text-decoder/lib/utf8-decoder.js":
/*!*******************************************************!*\
  !*** ./node_modules/text-decoder/lib/utf8-decoder.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst b4a = __webpack_require__(/*! b4a */ \"(rsc)/./node_modules/b4a/index.js\");\n/**\n * https://encoding.spec.whatwg.org/#utf-8-decoder\n */ module.exports = class UTF8Decoder {\n    constructor(){\n        this.codePoint = 0;\n        this.bytesSeen = 0;\n        this.bytesNeeded = 0;\n        this.lowerBoundary = 0x80;\n        this.upperBoundary = 0xbf;\n    }\n    get remaining() {\n        return this.bytesSeen;\n    }\n    decode(data) {\n        // If we have a fast path, just sniff if the last part is a boundary\n        if (this.bytesNeeded === 0) {\n            let isBoundary = true;\n            for(let i = Math.max(0, data.byteLength - 4), n = data.byteLength; i < n && isBoundary; i++){\n                isBoundary = data[i] <= 0x7f;\n            }\n            if (isBoundary) return b4a.toString(data, \"utf8\");\n        }\n        let result = \"\";\n        for(let i = 0, n = data.byteLength; i < n; i++){\n            const byte = data[i];\n            if (this.bytesNeeded === 0) {\n                if (byte <= 0x7f) {\n                    result += String.fromCharCode(byte);\n                } else {\n                    this.bytesSeen = 1;\n                    if (byte >= 0xc2 && byte <= 0xdf) {\n                        this.bytesNeeded = 2;\n                        this.codePoint = byte & 0x1f;\n                    } else if (byte >= 0xe0 && byte <= 0xef) {\n                        if (byte === 0xe0) this.lowerBoundary = 0xa0;\n                        else if (byte === 0xed) this.upperBoundary = 0x9f;\n                        this.bytesNeeded = 3;\n                        this.codePoint = byte & 0xf;\n                    } else if (byte >= 0xf0 && byte <= 0xf4) {\n                        if (byte === 0xf0) this.lowerBoundary = 0x90;\n                        if (byte === 0xf4) this.upperBoundary = 0x8f;\n                        this.bytesNeeded = 4;\n                        this.codePoint = byte & 0x7;\n                    } else {\n                        result += \"�\";\n                    }\n                }\n                continue;\n            }\n            if (byte < this.lowerBoundary || byte > this.upperBoundary) {\n                this.codePoint = 0;\n                this.bytesNeeded = 0;\n                this.bytesSeen = 0;\n                this.lowerBoundary = 0x80;\n                this.upperBoundary = 0xbf;\n                result += \"�\";\n                continue;\n            }\n            this.lowerBoundary = 0x80;\n            this.upperBoundary = 0xbf;\n            this.codePoint = this.codePoint << 6 | byte & 0x3f;\n            this.bytesSeen++;\n            if (this.bytesSeen !== this.bytesNeeded) continue;\n            result += String.fromCodePoint(this.codePoint);\n            this.codePoint = 0;\n            this.bytesNeeded = 0;\n            this.bytesSeen = 0;\n        }\n        return result;\n    }\n    flush() {\n        const result = this.bytesNeeded > 0 ? \"�\" : \"\";\n        this.codePoint = 0;\n        this.bytesNeeded = 0;\n        this.bytesSeen = 0;\n        this.lowerBoundary = 0x80;\n        this.upperBoundary = 0xbf;\n        return result;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdGV4dC1kZWNvZGVyL2xpYi91dGY4LWRlY29kZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLE1BQU1DLG1CQUFPQSxDQUFDO0FBRXBCOztDQUVDLEdBQ0RDLE9BQU9DLE9BQU8sR0FBRyxNQUFNQztJQUNyQkMsYUFBZTtRQUNiLElBQUksQ0FBQ0MsU0FBUyxHQUFHO1FBQ2pCLElBQUksQ0FBQ0MsU0FBUyxHQUFHO1FBQ2pCLElBQUksQ0FBQ0MsV0FBVyxHQUFHO1FBQ25CLElBQUksQ0FBQ0MsYUFBYSxHQUFHO1FBQ3JCLElBQUksQ0FBQ0MsYUFBYSxHQUFHO0lBQ3ZCO0lBRUEsSUFBSUMsWUFBYTtRQUNmLE9BQU8sSUFBSSxDQUFDSixTQUFTO0lBQ3ZCO0lBRUFLLE9BQVFDLElBQUksRUFBRTtRQUNaLG9FQUFvRTtRQUNwRSxJQUFJLElBQUksQ0FBQ0wsV0FBVyxLQUFLLEdBQUc7WUFDMUIsSUFBSU0sYUFBYTtZQUVqQixJQUFLLElBQUlDLElBQUlDLEtBQUtDLEdBQUcsQ0FBQyxHQUFHSixLQUFLSyxVQUFVLEdBQUcsSUFBSUMsSUFBSU4sS0FBS0ssVUFBVSxFQUFFSCxJQUFJSSxLQUFLTCxZQUFZQyxJQUFLO2dCQUM1RkQsYUFBYUQsSUFBSSxDQUFDRSxFQUFFLElBQUk7WUFDMUI7WUFFQSxJQUFJRCxZQUFZLE9BQU9kLElBQUlvQixRQUFRLENBQUNQLE1BQU07UUFDNUM7UUFFQSxJQUFJUSxTQUFTO1FBRWIsSUFBSyxJQUFJTixJQUFJLEdBQUdJLElBQUlOLEtBQUtLLFVBQVUsRUFBRUgsSUFBSUksR0FBR0osSUFBSztZQUMvQyxNQUFNTyxPQUFPVCxJQUFJLENBQUNFLEVBQUU7WUFFcEIsSUFBSSxJQUFJLENBQUNQLFdBQVcsS0FBSyxHQUFHO2dCQUMxQixJQUFJYyxRQUFRLE1BQU07b0JBQ2hCRCxVQUFVRSxPQUFPQyxZQUFZLENBQUNGO2dCQUNoQyxPQUFPO29CQUNMLElBQUksQ0FBQ2YsU0FBUyxHQUFHO29CQUVqQixJQUFJZSxRQUFRLFFBQVFBLFFBQVEsTUFBTTt3QkFDaEMsSUFBSSxDQUFDZCxXQUFXLEdBQUc7d0JBQ25CLElBQUksQ0FBQ0YsU0FBUyxHQUFHZ0IsT0FBTztvQkFDMUIsT0FBTyxJQUFJQSxRQUFRLFFBQVFBLFFBQVEsTUFBTTt3QkFDdkMsSUFBSUEsU0FBUyxNQUFNLElBQUksQ0FBQ2IsYUFBYSxHQUFHOzZCQUNuQyxJQUFJYSxTQUFTLE1BQU0sSUFBSSxDQUFDWixhQUFhLEdBQUc7d0JBQzdDLElBQUksQ0FBQ0YsV0FBVyxHQUFHO3dCQUNuQixJQUFJLENBQUNGLFNBQVMsR0FBR2dCLE9BQU87b0JBQzFCLE9BQU8sSUFBSUEsUUFBUSxRQUFRQSxRQUFRLE1BQU07d0JBQ3ZDLElBQUlBLFNBQVMsTUFBTSxJQUFJLENBQUNiLGFBQWEsR0FBRzt3QkFDeEMsSUFBSWEsU0FBUyxNQUFNLElBQUksQ0FBQ1osYUFBYSxHQUFHO3dCQUN4QyxJQUFJLENBQUNGLFdBQVcsR0FBRzt3QkFDbkIsSUFBSSxDQUFDRixTQUFTLEdBQUdnQixPQUFPO29CQUMxQixPQUFPO3dCQUNMRCxVQUFVO29CQUNaO2dCQUNGO2dCQUVBO1lBQ0Y7WUFFQSxJQUFJQyxPQUFPLElBQUksQ0FBQ2IsYUFBYSxJQUFJYSxPQUFPLElBQUksQ0FBQ1osYUFBYSxFQUFFO2dCQUMxRCxJQUFJLENBQUNKLFNBQVMsR0FBRztnQkFDakIsSUFBSSxDQUFDRSxXQUFXLEdBQUc7Z0JBQ25CLElBQUksQ0FBQ0QsU0FBUyxHQUFHO2dCQUNqQixJQUFJLENBQUNFLGFBQWEsR0FBRztnQkFDckIsSUFBSSxDQUFDQyxhQUFhLEdBQUc7Z0JBRXJCVyxVQUFVO2dCQUVWO1lBQ0Y7WUFFQSxJQUFJLENBQUNaLGFBQWEsR0FBRztZQUNyQixJQUFJLENBQUNDLGFBQWEsR0FBRztZQUVyQixJQUFJLENBQUNKLFNBQVMsR0FBRyxJQUFLLENBQUNBLFNBQVMsSUFBSSxJQUFNZ0IsT0FBTztZQUNqRCxJQUFJLENBQUNmLFNBQVM7WUFFZCxJQUFJLElBQUksQ0FBQ0EsU0FBUyxLQUFLLElBQUksQ0FBQ0MsV0FBVyxFQUFFO1lBRXpDYSxVQUFVRSxPQUFPRSxhQUFhLENBQUMsSUFBSSxDQUFDbkIsU0FBUztZQUU3QyxJQUFJLENBQUNBLFNBQVMsR0FBRztZQUNqQixJQUFJLENBQUNFLFdBQVcsR0FBRztZQUNuQixJQUFJLENBQUNELFNBQVMsR0FBRztRQUNuQjtRQUVBLE9BQU9jO0lBQ1Q7SUFFQUssUUFBUztRQUNQLE1BQU1MLFNBQVMsSUFBSSxDQUFDYixXQUFXLEdBQUcsSUFBSSxNQUFXO1FBRWpELElBQUksQ0FBQ0YsU0FBUyxHQUFHO1FBQ2pCLElBQUksQ0FBQ0UsV0FBVyxHQUFHO1FBQ25CLElBQUksQ0FBQ0QsU0FBUyxHQUFHO1FBQ2pCLElBQUksQ0FBQ0UsYUFBYSxHQUFHO1FBQ3JCLElBQUksQ0FBQ0MsYUFBYSxHQUFHO1FBRXJCLE9BQU9XO0lBQ1Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2ludm9pZnkvLi9ub2RlX21vZHVsZXMvdGV4dC1kZWNvZGVyL2xpYi91dGY4LWRlY29kZXIuanM/OWNhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBiNGEgPSByZXF1aXJlKCdiNGEnKVxuXG4vKipcbiAqIGh0dHBzOi8vZW5jb2Rpbmcuc3BlYy53aGF0d2cub3JnLyN1dGYtOC1kZWNvZGVyXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gY2xhc3MgVVRGOERlY29kZXIge1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgdGhpcy5jb2RlUG9pbnQgPSAwXG4gICAgdGhpcy5ieXRlc1NlZW4gPSAwXG4gICAgdGhpcy5ieXRlc05lZWRlZCA9IDBcbiAgICB0aGlzLmxvd2VyQm91bmRhcnkgPSAweDgwXG4gICAgdGhpcy51cHBlckJvdW5kYXJ5ID0gMHhiZlxuICB9XG5cbiAgZ2V0IHJlbWFpbmluZyAoKSB7XG4gICAgcmV0dXJuIHRoaXMuYnl0ZXNTZWVuXG4gIH1cblxuICBkZWNvZGUgKGRhdGEpIHtcbiAgICAvLyBJZiB3ZSBoYXZlIGEgZmFzdCBwYXRoLCBqdXN0IHNuaWZmIGlmIHRoZSBsYXN0IHBhcnQgaXMgYSBib3VuZGFyeVxuICAgIGlmICh0aGlzLmJ5dGVzTmVlZGVkID09PSAwKSB7XG4gICAgICBsZXQgaXNCb3VuZGFyeSA9IHRydWVcblxuICAgICAgZm9yIChsZXQgaSA9IE1hdGgubWF4KDAsIGRhdGEuYnl0ZUxlbmd0aCAtIDQpLCBuID0gZGF0YS5ieXRlTGVuZ3RoOyBpIDwgbiAmJiBpc0JvdW5kYXJ5OyBpKyspIHtcbiAgICAgICAgaXNCb3VuZGFyeSA9IGRhdGFbaV0gPD0gMHg3ZlxuICAgICAgfVxuXG4gICAgICBpZiAoaXNCb3VuZGFyeSkgcmV0dXJuIGI0YS50b1N0cmluZyhkYXRhLCAndXRmOCcpXG4gICAgfVxuXG4gICAgbGV0IHJlc3VsdCA9ICcnXG5cbiAgICBmb3IgKGxldCBpID0gMCwgbiA9IGRhdGEuYnl0ZUxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgY29uc3QgYnl0ZSA9IGRhdGFbaV1cblxuICAgICAgaWYgKHRoaXMuYnl0ZXNOZWVkZWQgPT09IDApIHtcbiAgICAgICAgaWYgKGJ5dGUgPD0gMHg3Zikge1xuICAgICAgICAgIHJlc3VsdCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGJ5dGUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5ieXRlc1NlZW4gPSAxXG5cbiAgICAgICAgICBpZiAoYnl0ZSA+PSAweGMyICYmIGJ5dGUgPD0gMHhkZikge1xuICAgICAgICAgICAgdGhpcy5ieXRlc05lZWRlZCA9IDJcbiAgICAgICAgICAgIHRoaXMuY29kZVBvaW50ID0gYnl0ZSAmIDB4MWZcbiAgICAgICAgICB9IGVsc2UgaWYgKGJ5dGUgPj0gMHhlMCAmJiBieXRlIDw9IDB4ZWYpIHtcbiAgICAgICAgICAgIGlmIChieXRlID09PSAweGUwKSB0aGlzLmxvd2VyQm91bmRhcnkgPSAweGEwXG4gICAgICAgICAgICBlbHNlIGlmIChieXRlID09PSAweGVkKSB0aGlzLnVwcGVyQm91bmRhcnkgPSAweDlmXG4gICAgICAgICAgICB0aGlzLmJ5dGVzTmVlZGVkID0gM1xuICAgICAgICAgICAgdGhpcy5jb2RlUG9pbnQgPSBieXRlICYgMHhmXG4gICAgICAgICAgfSBlbHNlIGlmIChieXRlID49IDB4ZjAgJiYgYnl0ZSA8PSAweGY0KSB7XG4gICAgICAgICAgICBpZiAoYnl0ZSA9PT0gMHhmMCkgdGhpcy5sb3dlckJvdW5kYXJ5ID0gMHg5MFxuICAgICAgICAgICAgaWYgKGJ5dGUgPT09IDB4ZjQpIHRoaXMudXBwZXJCb3VuZGFyeSA9IDB4OGZcbiAgICAgICAgICAgIHRoaXMuYnl0ZXNOZWVkZWQgPSA0XG4gICAgICAgICAgICB0aGlzLmNvZGVQb2ludCA9IGJ5dGUgJiAweDdcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVzdWx0ICs9ICdcXHVmZmZkJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIGlmIChieXRlIDwgdGhpcy5sb3dlckJvdW5kYXJ5IHx8IGJ5dGUgPiB0aGlzLnVwcGVyQm91bmRhcnkpIHtcbiAgICAgICAgdGhpcy5jb2RlUG9pbnQgPSAwXG4gICAgICAgIHRoaXMuYnl0ZXNOZWVkZWQgPSAwXG4gICAgICAgIHRoaXMuYnl0ZXNTZWVuID0gMFxuICAgICAgICB0aGlzLmxvd2VyQm91bmRhcnkgPSAweDgwXG4gICAgICAgIHRoaXMudXBwZXJCb3VuZGFyeSA9IDB4YmZcblxuICAgICAgICByZXN1bHQgKz0gJ1xcdWZmZmQnXG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgdGhpcy5sb3dlckJvdW5kYXJ5ID0gMHg4MFxuICAgICAgdGhpcy51cHBlckJvdW5kYXJ5ID0gMHhiZlxuXG4gICAgICB0aGlzLmNvZGVQb2ludCA9ICh0aGlzLmNvZGVQb2ludCA8PCA2KSB8IChieXRlICYgMHgzZilcbiAgICAgIHRoaXMuYnl0ZXNTZWVuKytcblxuICAgICAgaWYgKHRoaXMuYnl0ZXNTZWVuICE9PSB0aGlzLmJ5dGVzTmVlZGVkKSBjb250aW51ZVxuXG4gICAgICByZXN1bHQgKz0gU3RyaW5nLmZyb21Db2RlUG9pbnQodGhpcy5jb2RlUG9pbnQpXG5cbiAgICAgIHRoaXMuY29kZVBvaW50ID0gMFxuICAgICAgdGhpcy5ieXRlc05lZWRlZCA9IDBcbiAgICAgIHRoaXMuYnl0ZXNTZWVuID0gMFxuICAgIH1cblxuICAgIHJldHVybiByZXN1bHRcbiAgfVxuXG4gIGZsdXNoICgpIHtcbiAgICBjb25zdCByZXN1bHQgPSB0aGlzLmJ5dGVzTmVlZGVkID4gMCA/ICdcXHVmZmZkJyA6ICcnXG5cbiAgICB0aGlzLmNvZGVQb2ludCA9IDBcbiAgICB0aGlzLmJ5dGVzTmVlZGVkID0gMFxuICAgIHRoaXMuYnl0ZXNTZWVuID0gMFxuICAgIHRoaXMubG93ZXJCb3VuZGFyeSA9IDB4ODBcbiAgICB0aGlzLnVwcGVyQm91bmRhcnkgPSAweGJmXG5cbiAgICByZXR1cm4gcmVzdWx0XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJiNGEiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsIlVURjhEZWNvZGVyIiwiY29uc3RydWN0b3IiLCJjb2RlUG9pbnQiLCJieXRlc1NlZW4iLCJieXRlc05lZWRlZCIsImxvd2VyQm91bmRhcnkiLCJ1cHBlckJvdW5kYXJ5IiwicmVtYWluaW5nIiwiZGVjb2RlIiwiZGF0YSIsImlzQm91bmRhcnkiLCJpIiwiTWF0aCIsIm1heCIsImJ5dGVMZW5ndGgiLCJuIiwidG9TdHJpbmciLCJyZXN1bHQiLCJieXRlIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiZnJvbUNvZGVQb2ludCIsImZsdXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/text-decoder/lib/utf8-decoder.js\n");

/***/ })

};
;