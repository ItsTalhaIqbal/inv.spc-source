"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/tw-to-css";
exports.ids = ["vendor-chunks/tw-to-css"];
exports.modules = {

/***/ "(rsc)/./node_modules/tw-to-css/dist/index.mjs":
/*!***********************************************!*\
  !*** ./node_modules/tw-to-css/dist/index.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tailwindToCSS: () => (/* binding */ Op),\n/* harmony export */   twToCSS: () => (/* binding */ ob),\n/* harmony export */   twi: () => (/* binding */ Sp),\n/* harmony export */   twj: () => (/* binding */ ab)\n/* harmony export */ });\nvar Ap = Object.create;\nvar gr = Object.defineProperty;\nvar _p = Object.getOwnPropertyDescriptor;\nvar Tp = Object.getOwnPropertyNames;\nvar Pp = Object.getPrototypeOf, Ip = Object.prototype.hasOwnProperty;\nvar dt = (t, e)=>()=>(t && (e = t(t = 0)), e);\nvar S = (t, e)=>()=>(e || t((e = {\n            exports: {}\n        }).exports, e), e.exports), yr = (t, e)=>{\n    for(var r in e)gr(t, r, {\n        get: e[r],\n        enumerable: !0\n    });\n}, Ia = (t, e, r, n)=>{\n    if (e && typeof e == \"object\" || typeof e == \"function\") for (let i of Tp(e))!Ip.call(t, i) && i !== r && gr(t, i, {\n        get: ()=>e[i],\n        enumerable: !(n = _p(e, i)) || n.enumerable\n    });\n    return t;\n};\nvar H = (t, e, r)=>(r = t != null ? Ap(Pp(t)) : {}, Ia(e || !t || !t.__esModule ? gr(r, \"default\", {\n        value: t,\n        enumerable: !0\n    }) : r, t)), $e = (t)=>Ia(gr({}, \"__esModule\", {\n        value: !0\n    }), t);\nvar Ma, Da = dt(()=>{\n    Ma = `*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:theme(\"borderColor.DEFAULT\",currentColor)}:before,:after{--tw-content: \"\"}html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:theme(\"fontFamily.sans\",ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\");font-feature-settings:theme(\"fontFamily.sans[1].fontFeatureSettings\",normal);font-variation-settings:theme(\"fontFamily.sans[1].fontVariationSettings\",normal)}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:theme(\"fontFamily.mono\",ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace);font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:theme(\"colors.gray.400\",#9ca3af)}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}\n`;\n});\nvar Fa = {};\nyr(Fa, {\n    default: ()=>ht\n});\nvar ht, vr = dt(()=>{\n    Da();\n    ht = {\n        readFileSync: ()=>Ma\n    };\n});\nvar Na = S((mb, La)=>{\n    \"use strict\";\n    var jn = class {\n        constructor(e = {}){\n            if (!(e.maxSize && e.maxSize > 0)) throw new TypeError(\"`maxSize` must be a number greater than 0\");\n            if (typeof e.maxAge == \"number\" && e.maxAge === 0) throw new TypeError(\"`maxAge` must be a number greater than 0\");\n            this.maxSize = e.maxSize, this.maxAge = e.maxAge || 1 / 0, this.onEviction = e.onEviction, this.cache = new Map, this.oldCache = new Map, this._size = 0;\n        }\n        _emitEvictions(e) {\n            if (typeof this.onEviction == \"function\") for (let [r, n] of e)this.onEviction(r, n.value);\n        }\n        _deleteIfExpired(e, r) {\n            return typeof r.expiry == \"number\" && r.expiry <= Date.now() ? (typeof this.onEviction == \"function\" && this.onEviction(e, r.value), this.delete(e)) : !1;\n        }\n        _getOrDeleteIfExpired(e, r) {\n            if (this._deleteIfExpired(e, r) === !1) return r.value;\n        }\n        _getItemValue(e, r) {\n            return r.expiry ? this._getOrDeleteIfExpired(e, r) : r.value;\n        }\n        _peek(e, r) {\n            let n = r.get(e);\n            return this._getItemValue(e, n);\n        }\n        _set(e, r) {\n            this.cache.set(e, r), this._size++, this._size >= this.maxSize && (this._size = 0, this._emitEvictions(this.oldCache), this.oldCache = this.cache, this.cache = new Map);\n        }\n        _moveToRecent(e, r) {\n            this.oldCache.delete(e), this._set(e, r);\n        }\n        *_entriesAscending() {\n            for (let e of this.oldCache){\n                let [r, n] = e;\n                this.cache.has(r) || this._deleteIfExpired(r, n) === !1 && (yield e);\n            }\n            for (let e of this.cache){\n                let [r, n] = e;\n                this._deleteIfExpired(r, n) === !1 && (yield e);\n            }\n        }\n        get(e) {\n            if (this.cache.has(e)) {\n                let r = this.cache.get(e);\n                return this._getItemValue(e, r);\n            }\n            if (this.oldCache.has(e)) {\n                let r = this.oldCache.get(e);\n                if (this._deleteIfExpired(e, r) === !1) return this._moveToRecent(e, r), r.value;\n            }\n        }\n        set(e, r, { maxAge: n = this.maxAge === 1 / 0 ? void 0 : Date.now() + this.maxAge } = {}) {\n            this.cache.has(e) ? this.cache.set(e, {\n                value: r,\n                maxAge: n\n            }) : this._set(e, {\n                value: r,\n                expiry: n\n            });\n        }\n        has(e) {\n            return this.cache.has(e) ? !this._deleteIfExpired(e, this.cache.get(e)) : this.oldCache.has(e) ? !this._deleteIfExpired(e, this.oldCache.get(e)) : !1;\n        }\n        peek(e) {\n            if (this.cache.has(e)) return this._peek(e, this.cache);\n            if (this.oldCache.has(e)) return this._peek(e, this.oldCache);\n        }\n        delete(e) {\n            let r = this.cache.delete(e);\n            return r && this._size--, this.oldCache.delete(e) || r;\n        }\n        clear() {\n            this.cache.clear(), this.oldCache.clear(), this._size = 0;\n        }\n        resize(e) {\n            if (!(e && e > 0)) throw new TypeError(\"`maxSize` must be a number greater than 0\");\n            let r = [\n                ...this._entriesAscending()\n            ], n = r.length - e;\n            n < 0 ? (this.cache = new Map(r), this.oldCache = new Map, this._size = r.length) : (n > 0 && this._emitEvictions(r.slice(0, n)), this.oldCache = new Map(r.slice(n)), this.cache = new Map, this._size = 0), this.maxSize = e;\n        }\n        *keys() {\n            for (let [e] of this)yield e;\n        }\n        *values() {\n            for (let [, e] of this)yield e;\n        }\n        *[Symbol.iterator]() {\n            for (let e of this.cache){\n                let [r, n] = e;\n                this._deleteIfExpired(r, n) === !1 && (yield [\n                    r,\n                    n.value\n                ]);\n            }\n            for (let e of this.oldCache){\n                let [r, n] = e;\n                this.cache.has(r) || this._deleteIfExpired(r, n) === !1 && (yield [\n                    r,\n                    n.value\n                ]);\n            }\n        }\n        *entriesDescending() {\n            let e = [\n                ...this.cache\n            ];\n            for(let r = e.length - 1; r >= 0; --r){\n                let n = e[r], [i, a] = n;\n                this._deleteIfExpired(i, a) === !1 && (yield [\n                    i,\n                    a.value\n                ]);\n            }\n            e = [\n                ...this.oldCache\n            ];\n            for(let r = e.length - 1; r >= 0; --r){\n                let n = e[r], [i, a] = n;\n                this.cache.has(i) || this._deleteIfExpired(i, a) === !1 && (yield [\n                    i,\n                    a.value\n                ]);\n            }\n        }\n        *entriesAscending() {\n            for (let [e, r] of this._entriesAscending())yield [\n                e,\n                r.value\n            ];\n        }\n        get size() {\n            if (!this._size) return this.oldCache.size;\n            let e = 0;\n            for (let r of this.oldCache.keys())this.cache.has(r) || e++;\n            return Math.min(this._size + e, this.maxSize);\n        }\n    };\n    La.exports = jn;\n});\nvar Ua = {};\nyr(Ua, {\n    default: ()=>Bn\n});\nvar Bn, Gn = dt(()=>{\n    Bn = {\n        yellow: (t)=>t\n    };\n});\nvar Yn = S(()=>{});\nvar br = S((bb, Va)=>{\n    \"use strict\";\n    var ja = (Gn(), $e(Ua)), za = Yn(), Ue = class extends Error {\n        constructor(e, r, n, i, a, s){\n            super(e), this.name = \"CssSyntaxError\", this.reason = e, a && (this.file = a), i && (this.source = i), s && (this.plugin = s), typeof r < \"u\" && typeof n < \"u\" && (typeof r == \"number\" ? (this.line = r, this.column = n) : (this.line = r.line, this.column = r.column, this.endLine = n.line, this.endColumn = n.column)), this.setMessage(), Error.captureStackTrace && Error.captureStackTrace(this, Ue);\n        }\n        setMessage() {\n            this.message = this.plugin ? this.plugin + \": \" : \"\", this.message += this.file ? this.file : \"<css input>\", typeof this.line < \"u\" && (this.message += \":\" + this.line + \":\" + this.column), this.message += \": \" + this.reason;\n        }\n        showSourceCode(e) {\n            if (!this.source) return \"\";\n            let r = this.source;\n            e == null && (e = ja.isColorSupported), za && e && (r = za(r));\n            let n = r.split(/\\r?\\n/), i = Math.max(this.line - 3, 0), a = Math.min(this.line + 2, n.length), s = String(a).length, o, l;\n            if (e) {\n                let { bold: u, gray: f, red: p } = ja.createColors(!0);\n                o = (c)=>u(p(c)), l = (c)=>f(c);\n            } else o = l = (u)=>u;\n            return n.slice(i, a).map((u, f)=>{\n                let p = i + 1 + f, c = \" \" + (\" \" + p).slice(-s) + \" | \";\n                if (p === this.line) {\n                    let d = l(c.replace(/\\d/g, \" \")) + u.slice(0, this.column - 1).replace(/[^\\t]/g, \" \");\n                    return o(\">\") + l(c) + u + `\n ` + d + o(\"^\");\n                }\n                return \" \" + l(c) + u;\n            }).join(`\n`);\n        }\n        toString() {\n            let e = this.showSourceCode();\n            return e && (e = `\n\n` + e + `\n`), this.name + \": \" + this.message + e;\n        }\n    };\n    Va.exports = Ue;\n    Ue.default = Ue;\n});\nvar xr = S((xb, Hn)=>{\n    \"use strict\";\n    Hn.exports.isClean = Symbol(\"isClean\");\n    Hn.exports.my = Symbol(\"my\");\n});\nvar Qn = S((Sb, Ba)=>{\n    \"use strict\";\n    var Wa = {\n        after: `\n`,\n        beforeClose: `\n`,\n        beforeComment: `\n`,\n        beforeDecl: `\n`,\n        beforeOpen: \" \",\n        beforeRule: `\n`,\n        colon: \": \",\n        commentLeft: \" \",\n        commentRight: \" \",\n        emptyBody: \"\",\n        indent: \"    \",\n        semicolon: !1\n    };\n    function Mp(t) {\n        return t[0].toUpperCase() + t.slice(1);\n    }\n    var gt = class {\n        constructor(e){\n            this.builder = e;\n        }\n        atrule(e, r) {\n            let n = \"@\" + e.name, i = e.params ? this.rawValue(e, \"params\") : \"\";\n            if (typeof e.raws.afterName < \"u\" ? n += e.raws.afterName : i && (n += \" \"), e.nodes) this.block(e, n + i);\n            else {\n                let a = (e.raws.between || \"\") + (r ? \";\" : \"\");\n                this.builder(n + i + a, e);\n            }\n        }\n        beforeAfter(e, r) {\n            let n;\n            e.type === \"decl\" ? n = this.raw(e, null, \"beforeDecl\") : e.type === \"comment\" ? n = this.raw(e, null, \"beforeComment\") : r === \"before\" ? n = this.raw(e, null, \"beforeRule\") : n = this.raw(e, null, \"beforeClose\");\n            let i = e.parent, a = 0;\n            for(; i && i.type !== \"root\";)a += 1, i = i.parent;\n            if (n.includes(`\n`)) {\n                let s = this.raw(e, null, \"indent\");\n                if (s.length) for(let o = 0; o < a; o++)n += s;\n            }\n            return n;\n        }\n        block(e, r) {\n            let n = this.raw(e, \"between\", \"beforeOpen\");\n            this.builder(r + n + \"{\", e, \"start\");\n            let i;\n            e.nodes && e.nodes.length ? (this.body(e), i = this.raw(e, \"after\")) : i = this.raw(e, \"after\", \"emptyBody\"), i && this.builder(i), this.builder(\"}\", e, \"end\");\n        }\n        body(e) {\n            let r = e.nodes.length - 1;\n            for(; r > 0 && e.nodes[r].type === \"comment\";)r -= 1;\n            let n = this.raw(e, \"semicolon\");\n            for(let i = 0; i < e.nodes.length; i++){\n                let a = e.nodes[i], s = this.raw(a, \"before\");\n                s && this.builder(s), this.stringify(a, r !== i || n);\n            }\n        }\n        comment(e) {\n            let r = this.raw(e, \"left\", \"commentLeft\"), n = this.raw(e, \"right\", \"commentRight\");\n            this.builder(\"/*\" + r + e.text + n + \"*/\", e);\n        }\n        decl(e, r) {\n            let n = this.raw(e, \"between\", \"colon\"), i = e.prop + n + this.rawValue(e, \"value\");\n            e.important && (i += e.raws.important || \" !important\"), r && (i += \";\"), this.builder(i, e);\n        }\n        document(e) {\n            this.body(e);\n        }\n        raw(e, r, n) {\n            let i;\n            if (n || (n = r), r && (i = e.raws[r], typeof i < \"u\")) return i;\n            let a = e.parent;\n            if (n === \"before\" && (!a || a.type === \"root\" && a.first === e || a && a.type === \"document\")) return \"\";\n            if (!a) return Wa[n];\n            let s = e.root();\n            if (s.rawCache || (s.rawCache = {}), typeof s.rawCache[n] < \"u\") return s.rawCache[n];\n            if (n === \"before\" || n === \"after\") return this.beforeAfter(e, n);\n            {\n                let o = \"raw\" + Mp(n);\n                this[o] ? i = this[o](s, e) : s.walk((l)=>{\n                    if (i = l.raws[r], typeof i < \"u\") return !1;\n                });\n            }\n            return typeof i > \"u\" && (i = Wa[n]), s.rawCache[n] = i, i;\n        }\n        rawBeforeClose(e) {\n            let r;\n            return e.walk((n)=>{\n                if (n.nodes && n.nodes.length > 0 && typeof n.raws.after < \"u\") return r = n.raws.after, r.includes(`\n`) && (r = r.replace(/[^\\n]+$/, \"\")), !1;\n            }), r && (r = r.replace(/\\S/g, \"\")), r;\n        }\n        rawBeforeComment(e, r) {\n            let n;\n            return e.walkComments((i)=>{\n                if (typeof i.raws.before < \"u\") return n = i.raws.before, n.includes(`\n`) && (n = n.replace(/[^\\n]+$/, \"\")), !1;\n            }), typeof n > \"u\" ? n = this.raw(r, null, \"beforeDecl\") : n && (n = n.replace(/\\S/g, \"\")), n;\n        }\n        rawBeforeDecl(e, r) {\n            let n;\n            return e.walkDecls((i)=>{\n                if (typeof i.raws.before < \"u\") return n = i.raws.before, n.includes(`\n`) && (n = n.replace(/[^\\n]+$/, \"\")), !1;\n            }), typeof n > \"u\" ? n = this.raw(r, null, \"beforeRule\") : n && (n = n.replace(/\\S/g, \"\")), n;\n        }\n        rawBeforeOpen(e) {\n            let r;\n            return e.walk((n)=>{\n                if (n.type !== \"decl\" && (r = n.raws.between, typeof r < \"u\")) return !1;\n            }), r;\n        }\n        rawBeforeRule(e) {\n            let r;\n            return e.walk((n)=>{\n                if (n.nodes && (n.parent !== e || e.first !== n) && typeof n.raws.before < \"u\") return r = n.raws.before, r.includes(`\n`) && (r = r.replace(/[^\\n]+$/, \"\")), !1;\n            }), r && (r = r.replace(/\\S/g, \"\")), r;\n        }\n        rawColon(e) {\n            let r;\n            return e.walkDecls((n)=>{\n                if (typeof n.raws.between < \"u\") return r = n.raws.between.replace(/[^\\s:]/g, \"\"), !1;\n            }), r;\n        }\n        rawEmptyBody(e) {\n            let r;\n            return e.walk((n)=>{\n                if (n.nodes && n.nodes.length === 0 && (r = n.raws.after, typeof r < \"u\")) return !1;\n            }), r;\n        }\n        rawIndent(e) {\n            if (e.raws.indent) return e.raws.indent;\n            let r;\n            return e.walk((n)=>{\n                let i = n.parent;\n                if (i && i !== e && i.parent && i.parent === e && typeof n.raws.before < \"u\") {\n                    let a = n.raws.before.split(`\n`);\n                    return r = a[a.length - 1], r = r.replace(/\\S/g, \"\"), !1;\n                }\n            }), r;\n        }\n        rawSemicolon(e) {\n            let r;\n            return e.walk((n)=>{\n                if (n.nodes && n.nodes.length && n.last.type === \"decl\" && (r = n.raws.semicolon, typeof r < \"u\")) return !1;\n            }), r;\n        }\n        rawValue(e, r) {\n            let n = e[r], i = e.raws[r];\n            return i && i.value === n ? i.raw : n;\n        }\n        root(e) {\n            this.body(e), e.raws.after && this.builder(e.raws.after);\n        }\n        rule(e) {\n            this.block(e, this.rawValue(e, \"selector\")), e.raws.ownSemicolon && this.builder(e.raws.ownSemicolon, e, \"end\");\n        }\n        stringify(e, r) {\n            if (!this[e.type]) throw new Error(\"Unknown AST node type \" + e.type + \". Maybe you need to change PostCSS stringifier.\");\n            this[e.type](e, r);\n        }\n    };\n    Ba.exports = gt;\n    gt.default = gt;\n});\nvar yt = S((kb, Ga)=>{\n    \"use strict\";\n    var Fp = Qn();\n    function Jn(t, e) {\n        new Fp(e).stringify(t);\n    }\n    Ga.exports = Jn;\n    Jn.default = Jn;\n});\nvar wt = S((Ob, Ya)=>{\n    \"use strict\";\n    var { isClean: Sr, my: Lp } = xr(), Np = br(), qp = Qn(), $p = yt();\n    function Xn(t, e) {\n        let r = new t.constructor;\n        for(let n in t){\n            if (!Object.prototype.hasOwnProperty.call(t, n) || n === \"proxyCache\") continue;\n            let i = t[n], a = typeof i;\n            n === \"parent\" && a === \"object\" ? e && (r[n] = e) : n === \"source\" ? r[n] = i : Array.isArray(i) ? r[n] = i.map((s)=>Xn(s, r)) : (a === \"object\" && i !== null && (i = Xn(i)), r[n] = i);\n        }\n        return r;\n    }\n    var vt = class {\n        constructor(e = {}){\n            this.raws = {}, this[Sr] = !1, this[Lp] = !0;\n            for(let r in e)if (r === \"nodes\") {\n                this.nodes = [];\n                for (let n of e[r])typeof n.clone == \"function\" ? this.append(n.clone()) : this.append(n);\n            } else this[r] = e[r];\n        }\n        addToError(e) {\n            if (e.postcssNode = this, e.stack && this.source && /\\n\\s{4}at /.test(e.stack)) {\n                let r = this.source;\n                e.stack = e.stack.replace(/\\n\\s{4}at /, `$&${r.input.from}:${r.start.line}:${r.start.column}$&`);\n            }\n            return e;\n        }\n        after(e) {\n            return this.parent.insertAfter(this, e), this;\n        }\n        assign(e = {}) {\n            for(let r in e)this[r] = e[r];\n            return this;\n        }\n        before(e) {\n            return this.parent.insertBefore(this, e), this;\n        }\n        cleanRaws(e) {\n            delete this.raws.before, delete this.raws.after, e || delete this.raws.between;\n        }\n        clone(e = {}) {\n            let r = Xn(this);\n            for(let n in e)r[n] = e[n];\n            return r;\n        }\n        cloneAfter(e = {}) {\n            let r = this.clone(e);\n            return this.parent.insertAfter(this, r), r;\n        }\n        cloneBefore(e = {}) {\n            let r = this.clone(e);\n            return this.parent.insertBefore(this, r), r;\n        }\n        error(e, r = {}) {\n            if (this.source) {\n                let { end: n, start: i } = this.rangeBy(r);\n                return this.source.input.error(e, {\n                    column: i.column,\n                    line: i.line\n                }, {\n                    column: n.column,\n                    line: n.line\n                }, r);\n            }\n            return new Np(e);\n        }\n        getProxyProcessor() {\n            return {\n                get (e, r) {\n                    return r === \"proxyOf\" ? e : r === \"root\" ? ()=>e.root().toProxy() : e[r];\n                },\n                set (e, r, n) {\n                    return e[r] === n || (e[r] = n, (r === \"prop\" || r === \"value\" || r === \"name\" || r === \"params\" || r === \"important\" || r === \"text\") && e.markDirty()), !0;\n                }\n            };\n        }\n        markDirty() {\n            if (this[Sr]) {\n                this[Sr] = !1;\n                let e = this;\n                for(; e = e.parent;)e[Sr] = !1;\n            }\n        }\n        next() {\n            if (!this.parent) return;\n            let e = this.parent.index(this);\n            return this.parent.nodes[e + 1];\n        }\n        positionBy(e, r) {\n            let n = this.source.start;\n            if (e.index) n = this.positionInside(e.index, r);\n            else if (e.word) {\n                r = this.toString();\n                let i = r.indexOf(e.word);\n                i !== -1 && (n = this.positionInside(i, r));\n            }\n            return n;\n        }\n        positionInside(e, r) {\n            let n = r || this.toString(), i = this.source.start.column, a = this.source.start.line;\n            for(let s = 0; s < e; s++)n[s] === `\n` ? (i = 1, a += 1) : i += 1;\n            return {\n                column: i,\n                line: a\n            };\n        }\n        prev() {\n            if (!this.parent) return;\n            let e = this.parent.index(this);\n            return this.parent.nodes[e - 1];\n        }\n        rangeBy(e) {\n            let r = {\n                column: this.source.start.column,\n                line: this.source.start.line\n            }, n = this.source.end ? {\n                column: this.source.end.column + 1,\n                line: this.source.end.line\n            } : {\n                column: r.column + 1,\n                line: r.line\n            };\n            if (e.word) {\n                let i = this.toString(), a = i.indexOf(e.word);\n                a !== -1 && (r = this.positionInside(a, i), n = this.positionInside(a + e.word.length, i));\n            } else e.start ? r = {\n                column: e.start.column,\n                line: e.start.line\n            } : e.index && (r = this.positionInside(e.index)), e.end ? n = {\n                column: e.end.column,\n                line: e.end.line\n            } : e.endIndex ? n = this.positionInside(e.endIndex) : e.index && (n = this.positionInside(e.index + 1));\n            return (n.line < r.line || n.line === r.line && n.column <= r.column) && (n = {\n                column: r.column + 1,\n                line: r.line\n            }), {\n                end: n,\n                start: r\n            };\n        }\n        raw(e, r) {\n            return new qp().raw(this, e, r);\n        }\n        remove() {\n            return this.parent && this.parent.removeChild(this), this.parent = void 0, this;\n        }\n        replaceWith(...e) {\n            if (this.parent) {\n                let r = this, n = !1;\n                for (let i of e)i === this ? n = !0 : n ? (this.parent.insertAfter(r, i), r = i) : this.parent.insertBefore(r, i);\n                n || this.remove();\n            }\n            return this;\n        }\n        root() {\n            let e = this;\n            for(; e.parent && e.parent.type !== \"document\";)e = e.parent;\n            return e;\n        }\n        toJSON(e, r) {\n            let n = {}, i = r == null;\n            r = r || new Map;\n            let a = 0;\n            for(let s in this){\n                if (!Object.prototype.hasOwnProperty.call(this, s) || s === \"parent\" || s === \"proxyCache\") continue;\n                let o = this[s];\n                if (Array.isArray(o)) n[s] = o.map((l)=>typeof l == \"object\" && l.toJSON ? l.toJSON(null, r) : l);\n                else if (typeof o == \"object\" && o.toJSON) n[s] = o.toJSON(null, r);\n                else if (s === \"source\") {\n                    let l = r.get(o.input);\n                    l == null && (l = a, r.set(o.input, a), a++), n[s] = {\n                        end: o.end,\n                        inputId: l,\n                        start: o.start\n                    };\n                } else n[s] = o;\n            }\n            return i && (n.inputs = [\n                ...r.keys()\n            ].map((s)=>s.toJSON())), n;\n        }\n        toProxy() {\n            return this.proxyCache || (this.proxyCache = new Proxy(this, this.getProxyProcessor())), this.proxyCache;\n        }\n        toString(e = $p) {\n            e.stringify && (e = e.stringify);\n            let r = \"\";\n            return e(this, (n)=>{\n                r += n;\n            }), r;\n        }\n        warn(e, r, n) {\n            let i = {\n                node: this\n            };\n            for(let a in n)i[a] = n[a];\n            return e.warn(r, i);\n        }\n        get proxyOf() {\n            return this;\n        }\n    };\n    Ya.exports = vt;\n    vt.default = vt;\n});\nvar xt = S((Eb, Ha)=>{\n    \"use strict\";\n    var Up = wt(), bt = class extends Up {\n        constructor(e){\n            e && typeof e.value < \"u\" && typeof e.value != \"string\" && (e = {\n                ...e,\n                value: String(e.value)\n            }), super(e), this.type = \"decl\";\n        }\n        get variable() {\n            return this.prop.startsWith(\"--\") || this.prop[0] === \"$\";\n        }\n    };\n    Ha.exports = bt;\n    bt.default = bt;\n});\nvar kr = S(()=>{});\nvar St = {};\nyr(St, {\n    join: ()=>Kn\n});\nvar Kn, kt = dt(()=>{\n    Kn = ()=>\"\";\n});\nvar Zn = {};\nyr(Zn, {\n    default: ()=>jp\n});\nvar jp, ei = dt(()=>{\n    jp = null;\n});\nvar Ja = S((_b, Qa)=>{\n    var zp = \"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\", Vp = (t, e = 21)=>(r = e)=>{\n            let n = \"\", i = r;\n            for(; i--;)n += t[Math.random() * t.length | 0];\n            return n;\n        }, Wp = (t = 21)=>{\n        let e = \"\", r = t;\n        for(; r--;)e += zp[Math.random() * 64 | 0];\n        return e;\n    };\n    Qa.exports = {\n        nanoid: Wp,\n        customAlphabet: Vp\n    };\n});\nvar ri = S((Tb, Za)=>{\n    \"use strict\";\n    var { SourceMapConsumer: Xa, SourceMapGenerator: Ka } = kr(), { existsSync: Bp, readFileSync: Gp } = (vr(), $e(Fa)), { dirname: ti, join: Yp } = (kt(), $e(St));\n    function Hp(t) {\n        return Buffer ? Buffer.from(t, \"base64\").toString() : window.atob(t);\n    }\n    var Ot = class {\n        constructor(e, r){\n            if (r.map === !1) return;\n            this.loadAnnotation(e), this.inline = this.startWith(this.annotation, \"data:\");\n            let n = r.map ? r.map.prev : void 0, i = this.loadMap(r.from, n);\n            !this.mapFile && r.from && (this.mapFile = r.from), this.mapFile && (this.root = ti(this.mapFile)), i && (this.text = i);\n        }\n        consumer() {\n            return this.consumerCache || (this.consumerCache = new Xa(this.text)), this.consumerCache;\n        }\n        decodeInline(e) {\n            let r = /^data:application\\/json;charset=utf-?8;base64,/, n = /^data:application\\/json;base64,/, i = /^data:application\\/json;charset=utf-?8,/, a = /^data:application\\/json,/;\n            if (i.test(e) || a.test(e)) return decodeURIComponent(e.substr(RegExp.lastMatch.length));\n            if (r.test(e) || n.test(e)) return Hp(e.substr(RegExp.lastMatch.length));\n            let s = e.match(/data:application\\/json;([^,]+),/)[1];\n            throw new Error(\"Unsupported source map encoding \" + s);\n        }\n        getAnnotationURL(e) {\n            return e.replace(/^\\/\\*\\s*# sourceMappingURL=/, \"\").trim();\n        }\n        isMap(e) {\n            return typeof e != \"object\" ? !1 : typeof e.mappings == \"string\" || typeof e._mappings == \"string\" || Array.isArray(e.sections);\n        }\n        loadAnnotation(e) {\n            let r = e.match(/\\/\\*\\s*# sourceMappingURL=/gm);\n            if (!r) return;\n            let n = e.lastIndexOf(r.pop()), i = e.indexOf(\"*/\", n);\n            n > -1 && i > -1 && (this.annotation = this.getAnnotationURL(e.substring(n, i)));\n        }\n        loadFile(e) {\n            if (this.root = ti(e), Bp(e)) return this.mapFile = e, Gp(e, \"utf-8\").toString().trim();\n        }\n        loadMap(e, r) {\n            if (r === !1) return !1;\n            if (r) {\n                if (typeof r == \"string\") return r;\n                if (typeof r == \"function\") {\n                    let n = r(e);\n                    if (n) {\n                        let i = this.loadFile(n);\n                        if (!i) throw new Error(\"Unable to load previous source map: \" + n.toString());\n                        return i;\n                    }\n                } else {\n                    if (r instanceof Xa) return Ka.fromSourceMap(r).toString();\n                    if (r instanceof Ka) return r.toString();\n                    if (this.isMap(r)) return JSON.stringify(r);\n                    throw new Error(\"Unsupported previous source map format: \" + r.toString());\n                }\n            } else {\n                if (this.inline) return this.decodeInline(this.annotation);\n                if (this.annotation) {\n                    let n = this.annotation;\n                    return e && (n = Yp(ti(e), n)), this.loadFile(n);\n                }\n            }\n        }\n        startWith(e, r) {\n            return e ? e.substr(0, r.length) === r : !1;\n        }\n        withContent() {\n            return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);\n        }\n    };\n    Za.exports = Ot;\n    Ot.default = Ot;\n});\nvar Et = S((Pb, no)=>{\n    \"use strict\";\n    var { SourceMapConsumer: Qp, SourceMapGenerator: Jp } = kr(), { fileURLToPath: eo, pathToFileURL: Or } = (ei(), $e(Zn)), { isAbsolute: si, resolve: ai } = (kt(), $e(St)), { nanoid: Xp } = Ja(), ni = Yn(), to = br(), Kp = ri(), ii = Symbol(\"fromOffsetCache\"), Zp = Boolean(Qp && Jp), ro = Boolean(ai && si), Ye = class {\n        constructor(e, r = {}){\n            if (e === null || typeof e > \"u\" || typeof e == \"object\" && !e.toString) throw new Error(`PostCSS received ${e} instead of CSS string`);\n            if (this.css = e.toString(), this.css[0] === \"\\uFEFF\" || this.css[0] === \"￾\" ? (this.hasBOM = !0, this.css = this.css.slice(1)) : this.hasBOM = !1, r.from && (!ro || /^\\w+:\\/\\//.test(r.from) || si(r.from) ? this.file = r.from : this.file = ai(r.from)), ro && Zp) {\n                let n = new Kp(this.css, r);\n                if (n.text) {\n                    this.map = n;\n                    let i = n.consumer().file;\n                    !this.file && i && (this.file = this.mapResolve(i));\n                }\n            }\n            this.file || (this.id = \"<input css \" + Xp(6) + \">\"), this.map && (this.map.file = this.from);\n        }\n        error(e, r, n, i = {}) {\n            let a, s, o;\n            if (r && typeof r == \"object\") {\n                let u = r, f = n;\n                if (typeof u.offset == \"number\") {\n                    let p = this.fromOffset(u.offset);\n                    r = p.line, n = p.col;\n                } else r = u.line, n = u.column;\n                if (typeof f.offset == \"number\") {\n                    let p = this.fromOffset(f.offset);\n                    s = p.line, o = p.col;\n                } else s = f.line, o = f.column;\n            } else if (!n) {\n                let u = this.fromOffset(r);\n                r = u.line, n = u.col;\n            }\n            let l = this.origin(r, n, s, o);\n            return l ? a = new to(e, l.endLine === void 0 ? l.line : {\n                column: l.column,\n                line: l.line\n            }, l.endLine === void 0 ? l.column : {\n                column: l.endColumn,\n                line: l.endLine\n            }, l.source, l.file, i.plugin) : a = new to(e, s === void 0 ? r : {\n                column: n,\n                line: r\n            }, s === void 0 ? n : {\n                column: o,\n                line: s\n            }, this.css, this.file, i.plugin), a.input = {\n                column: n,\n                endColumn: o,\n                endLine: s,\n                line: r,\n                source: this.css\n            }, this.file && (Or && (a.input.url = Or(this.file).toString()), a.input.file = this.file), a;\n        }\n        fromOffset(e) {\n            let r, n;\n            if (this[ii]) n = this[ii];\n            else {\n                let a = this.css.split(`\n`);\n                n = new Array(a.length);\n                let s = 0;\n                for(let o = 0, l = a.length; o < l; o++)n[o] = s, s += a[o].length + 1;\n                this[ii] = n;\n            }\n            r = n[n.length - 1];\n            let i = 0;\n            if (e >= r) i = n.length - 1;\n            else {\n                let a = n.length - 2, s;\n                for(; i < a;)if (s = i + (a - i >> 1), e < n[s]) a = s - 1;\n                else if (e >= n[s + 1]) i = s + 1;\n                else {\n                    i = s;\n                    break;\n                }\n            }\n            return {\n                col: e - n[i] + 1,\n                line: i + 1\n            };\n        }\n        mapResolve(e) {\n            return /^\\w+:\\/\\//.test(e) ? e : ai(this.map.consumer().sourceRoot || this.map.root || \".\", e);\n        }\n        origin(e, r, n, i) {\n            if (!this.map) return !1;\n            let a = this.map.consumer(), s = a.originalPositionFor({\n                column: r,\n                line: e\n            });\n            if (!s.source) return !1;\n            let o;\n            typeof n == \"number\" && (o = a.originalPositionFor({\n                column: i,\n                line: n\n            }));\n            let l;\n            si(s.source) ? l = Or(s.source) : l = new URL(s.source, this.map.consumer().sourceRoot || Or(this.map.mapFile));\n            let u = {\n                column: s.column,\n                endColumn: o && o.column,\n                endLine: o && o.line,\n                line: s.line,\n                url: l.toString()\n            };\n            if (l.protocol === \"file:\") if (eo) u.file = eo(l);\n            else throw new Error(\"file: protocol is not available in this PostCSS build\");\n            let f = a.sourceContentFor(s.source);\n            return f && (u.source = f), u;\n        }\n        toJSON() {\n            let e = {};\n            for (let r of [\n                \"hasBOM\",\n                \"css\",\n                \"file\",\n                \"id\"\n            ])this[r] != null && (e[r] = this[r]);\n            return this.map && (e.map = {\n                ...this.map\n            }, e.map.consumerCache && (e.map.consumerCache = void 0)), e;\n        }\n        get from() {\n            return this.file || this.id;\n        }\n    };\n    no.exports = Ye;\n    Ye.default = Ye;\n    ni && ni.registerInput && ni.registerInput(Ye);\n});\nvar li = S((Ib, uo)=>{\n    \"use strict\";\n    var { SourceMapConsumer: so, SourceMapGenerator: Er } = kr(), { dirname: Cr, relative: ao, resolve: oo, sep: lo } = (kt(), $e(St)), { pathToFileURL: io } = (ei(), $e(Zn)), ed = Et(), td = Boolean(so && Er), rd = Boolean(Cr && oo && ao && lo), oi = class {\n        constructor(e, r, n, i){\n            this.stringify = e, this.mapOpts = n.map || {}, this.root = r, this.opts = n, this.css = i, this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute, this.memoizedFileURLs = new Map, this.memoizedPaths = new Map, this.memoizedURLs = new Map;\n        }\n        addAnnotation() {\n            let e;\n            this.isInline() ? e = \"data:application/json;base64,\" + this.toBase64(this.map.toString()) : typeof this.mapOpts.annotation == \"string\" ? e = this.mapOpts.annotation : typeof this.mapOpts.annotation == \"function\" ? e = this.mapOpts.annotation(this.opts.to, this.root) : e = this.outputFile() + \".map\";\n            let r = `\n`;\n            this.css.includes(`\\r\n`) && (r = `\\r\n`), this.css += r + \"/*# sourceMappingURL=\" + e + \" */\";\n        }\n        applyPrevMaps() {\n            for (let e of this.previous()){\n                let r = this.toUrl(this.path(e.file)), n = e.root || Cr(e.file), i;\n                this.mapOpts.sourcesContent === !1 ? (i = new so(e.text), i.sourcesContent && (i.sourcesContent = i.sourcesContent.map(()=>null))) : i = e.consumer(), this.map.applySourceMap(i, r, this.toUrl(this.path(n)));\n            }\n        }\n        clearAnnotation() {\n            if (this.mapOpts.annotation !== !1) if (this.root) {\n                let e;\n                for(let r = this.root.nodes.length - 1; r >= 0; r--)e = this.root.nodes[r], e.type === \"comment\" && e.text.indexOf(\"# sourceMappingURL=\") === 0 && this.root.removeChild(r);\n            } else this.css && (this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, \"\"));\n        }\n        generate() {\n            if (this.clearAnnotation(), rd && td && this.isMap()) return this.generateMap();\n            {\n                let e = \"\";\n                return this.stringify(this.root, (r)=>{\n                    e += r;\n                }), [\n                    e\n                ];\n            }\n        }\n        generateMap() {\n            if (this.root) this.generateString();\n            else if (this.previous().length === 1) {\n                let e = this.previous()[0].consumer();\n                e.file = this.outputFile(), this.map = Er.fromSourceMap(e);\n            } else this.map = new Er({\n                file: this.outputFile()\n            }), this.map.addMapping({\n                generated: {\n                    column: 0,\n                    line: 1\n                },\n                original: {\n                    column: 0,\n                    line: 1\n                },\n                source: this.opts.from ? this.toUrl(this.path(this.opts.from)) : \"<no source>\"\n            });\n            return this.isSourcesContent() && this.setSourcesContent(), this.root && this.previous().length > 0 && this.applyPrevMaps(), this.isAnnotation() && this.addAnnotation(), this.isInline() ? [\n                this.css\n            ] : [\n                this.css,\n                this.map\n            ];\n        }\n        generateString() {\n            this.css = \"\", this.map = new Er({\n                file: this.outputFile()\n            });\n            let e = 1, r = 1, n = \"<no source>\", i = {\n                generated: {\n                    column: 0,\n                    line: 0\n                },\n                original: {\n                    column: 0,\n                    line: 0\n                },\n                source: \"\"\n            }, a, s;\n            this.stringify(this.root, (o, l, u)=>{\n                if (this.css += o, l && u !== \"end\" && (i.generated.line = e, i.generated.column = r - 1, l.source && l.source.start ? (i.source = this.sourcePath(l), i.original.line = l.source.start.line, i.original.column = l.source.start.column - 1, this.map.addMapping(i)) : (i.source = n, i.original.line = 1, i.original.column = 0, this.map.addMapping(i))), a = o.match(/\\n/g), a ? (e += a.length, s = o.lastIndexOf(`\n`), r = o.length - s) : r += o.length, l && u !== \"start\") {\n                    let f = l.parent || {\n                        raws: {}\n                    };\n                    (!(l.type === \"decl\" || l.type === \"atrule\" && !l.nodes) || l !== f.last || f.raws.semicolon) && (l.source && l.source.end ? (i.source = this.sourcePath(l), i.original.line = l.source.end.line, i.original.column = l.source.end.column - 1, i.generated.line = e, i.generated.column = r - 2, this.map.addMapping(i)) : (i.source = n, i.original.line = 1, i.original.column = 0, i.generated.line = e, i.generated.column = r - 1, this.map.addMapping(i)));\n                }\n            });\n        }\n        isAnnotation() {\n            return this.isInline() ? !0 : typeof this.mapOpts.annotation < \"u\" ? this.mapOpts.annotation : this.previous().length ? this.previous().some((e)=>e.annotation) : !0;\n        }\n        isInline() {\n            if (typeof this.mapOpts.inline < \"u\") return this.mapOpts.inline;\n            let e = this.mapOpts.annotation;\n            return typeof e < \"u\" && e !== !0 ? !1 : this.previous().length ? this.previous().some((r)=>r.inline) : !0;\n        }\n        isMap() {\n            return typeof this.opts.map < \"u\" ? !!this.opts.map : this.previous().length > 0;\n        }\n        isSourcesContent() {\n            return typeof this.mapOpts.sourcesContent < \"u\" ? this.mapOpts.sourcesContent : this.previous().length ? this.previous().some((e)=>e.withContent()) : !0;\n        }\n        outputFile() {\n            return this.opts.to ? this.path(this.opts.to) : this.opts.from ? this.path(this.opts.from) : \"to.css\";\n        }\n        path(e) {\n            if (this.mapOpts.absolute || e.charCodeAt(0) === 60 || /^\\w+:\\/\\//.test(e)) return e;\n            let r = this.memoizedPaths.get(e);\n            if (r) return r;\n            let n = this.opts.to ? Cr(this.opts.to) : \".\";\n            typeof this.mapOpts.annotation == \"string\" && (n = Cr(oo(n, this.mapOpts.annotation)));\n            let i = ao(n, e);\n            return this.memoizedPaths.set(e, i), i;\n        }\n        previous() {\n            if (!this.previousMaps) if (this.previousMaps = [], this.root) this.root.walk((e)=>{\n                if (e.source && e.source.input.map) {\n                    let r = e.source.input.map;\n                    this.previousMaps.includes(r) || this.previousMaps.push(r);\n                }\n            });\n            else {\n                let e = new ed(this.css, this.opts);\n                e.map && this.previousMaps.push(e.map);\n            }\n            return this.previousMaps;\n        }\n        setSourcesContent() {\n            let e = {};\n            if (this.root) this.root.walk((r)=>{\n                if (r.source) {\n                    let n = r.source.input.from;\n                    if (n && !e[n]) {\n                        e[n] = !0;\n                        let i = this.usesFileUrls ? this.toFileUrl(n) : this.toUrl(this.path(n));\n                        this.map.setSourceContent(i, r.source.input.css);\n                    }\n                }\n            });\n            else if (this.css) {\n                let r = this.opts.from ? this.toUrl(this.path(this.opts.from)) : \"<no source>\";\n                this.map.setSourceContent(r, this.css);\n            }\n        }\n        sourcePath(e) {\n            return this.mapOpts.from ? this.toUrl(this.mapOpts.from) : this.usesFileUrls ? this.toFileUrl(e.source.input.from) : this.toUrl(this.path(e.source.input.from));\n        }\n        toBase64(e) {\n            return Buffer ? Buffer.from(e).toString(\"base64\") : window.btoa(unescape(encodeURIComponent(e)));\n        }\n        toFileUrl(e) {\n            let r = this.memoizedFileURLs.get(e);\n            if (r) return r;\n            if (io) {\n                let n = io(e).toString();\n                return this.memoizedFileURLs.set(e, n), n;\n            } else throw new Error(\"`map.absolute` option is not available in this PostCSS build\");\n        }\n        toUrl(e) {\n            let r = this.memoizedURLs.get(e);\n            if (r) return r;\n            lo === \"\\\\\" && (e = e.replace(/\\\\/g, \"/\"));\n            let n = encodeURI(e).replace(/[#?]/g, encodeURIComponent);\n            return this.memoizedURLs.set(e, n), n;\n        }\n    };\n    uo.exports = oi;\n});\nvar At = S((Rb, fo)=>{\n    \"use strict\";\n    var nd = wt(), Ct = class extends nd {\n        constructor(e){\n            super(e), this.type = \"comment\";\n        }\n    };\n    fo.exports = Ct;\n    Ct.default = Ct;\n});\nvar _e = S((Db, bo)=>{\n    \"use strict\";\n    var { isClean: co, my: po } = xr(), ho = xt(), mo = At(), id = wt(), go, ui, fi, yo;\n    function vo(t) {\n        return t.map((e)=>(e.nodes && (e.nodes = vo(e.nodes)), delete e.source, e));\n    }\n    function wo(t) {\n        if (t[co] = !1, t.proxyOf.nodes) for (let e of t.proxyOf.nodes)wo(e);\n    }\n    var ae = class extends id {\n        append(...e) {\n            for (let r of e){\n                let n = this.normalize(r, this.last);\n                for (let i of n)this.proxyOf.nodes.push(i);\n            }\n            return this.markDirty(), this;\n        }\n        cleanRaws(e) {\n            if (super.cleanRaws(e), this.nodes) for (let r of this.nodes)r.cleanRaws(e);\n        }\n        each(e) {\n            if (!this.proxyOf.nodes) return;\n            let r = this.getIterator(), n, i;\n            for(; this.indexes[r] < this.proxyOf.nodes.length && (n = this.indexes[r], i = e(this.proxyOf.nodes[n], n), i !== !1);)this.indexes[r] += 1;\n            return delete this.indexes[r], i;\n        }\n        every(e) {\n            return this.nodes.every(e);\n        }\n        getIterator() {\n            this.lastEach || (this.lastEach = 0), this.indexes || (this.indexes = {}), this.lastEach += 1;\n            let e = this.lastEach;\n            return this.indexes[e] = 0, e;\n        }\n        getProxyProcessor() {\n            return {\n                get (e, r) {\n                    return r === \"proxyOf\" ? e : e[r] ? r === \"each\" || typeof r == \"string\" && r.startsWith(\"walk\") ? (...n)=>e[r](...n.map((i)=>typeof i == \"function\" ? (a, s)=>i(a.toProxy(), s) : i)) : r === \"every\" || r === \"some\" ? (n)=>e[r]((i, ...a)=>n(i.toProxy(), ...a)) : r === \"root\" ? ()=>e.root().toProxy() : r === \"nodes\" ? e.nodes.map((n)=>n.toProxy()) : r === \"first\" || r === \"last\" ? e[r].toProxy() : e[r] : e[r];\n                },\n                set (e, r, n) {\n                    return e[r] === n || (e[r] = n, (r === \"name\" || r === \"params\" || r === \"selector\") && e.markDirty()), !0;\n                }\n            };\n        }\n        index(e) {\n            return typeof e == \"number\" ? e : (e.proxyOf && (e = e.proxyOf), this.proxyOf.nodes.indexOf(e));\n        }\n        insertAfter(e, r) {\n            let n = this.index(e), i = this.normalize(r, this.proxyOf.nodes[n]).reverse();\n            n = this.index(e);\n            for (let s of i)this.proxyOf.nodes.splice(n + 1, 0, s);\n            let a;\n            for(let s in this.indexes)a = this.indexes[s], n < a && (this.indexes[s] = a + i.length);\n            return this.markDirty(), this;\n        }\n        insertBefore(e, r) {\n            let n = this.index(e), i = n === 0 ? \"prepend\" : !1, a = this.normalize(r, this.proxyOf.nodes[n], i).reverse();\n            n = this.index(e);\n            for (let o of a)this.proxyOf.nodes.splice(n, 0, o);\n            let s;\n            for(let o in this.indexes)s = this.indexes[o], n <= s && (this.indexes[o] = s + a.length);\n            return this.markDirty(), this;\n        }\n        normalize(e, r) {\n            if (typeof e == \"string\") e = vo(go(e).nodes);\n            else if (Array.isArray(e)) {\n                e = e.slice(0);\n                for (let i of e)i.parent && i.parent.removeChild(i, \"ignore\");\n            } else if (e.type === \"root\" && this.type !== \"document\") {\n                e = e.nodes.slice(0);\n                for (let i of e)i.parent && i.parent.removeChild(i, \"ignore\");\n            } else if (e.type) e = [\n                e\n            ];\n            else if (e.prop) {\n                if (typeof e.value > \"u\") throw new Error(\"Value field is missed in node creation\");\n                typeof e.value != \"string\" && (e.value = String(e.value)), e = [\n                    new ho(e)\n                ];\n            } else if (e.selector) e = [\n                new ui(e)\n            ];\n            else if (e.name) e = [\n                new fi(e)\n            ];\n            else if (e.text) e = [\n                new mo(e)\n            ];\n            else throw new Error(\"Unknown node type in node creation\");\n            return e.map((i)=>(i[po] || ae.rebuild(i), i = i.proxyOf, i.parent && i.parent.removeChild(i), i[co] && wo(i), typeof i.raws.before > \"u\" && r && typeof r.raws.before < \"u\" && (i.raws.before = r.raws.before.replace(/\\S/g, \"\")), i.parent = this.proxyOf, i));\n        }\n        prepend(...e) {\n            e = e.reverse();\n            for (let r of e){\n                let n = this.normalize(r, this.first, \"prepend\").reverse();\n                for (let i of n)this.proxyOf.nodes.unshift(i);\n                for(let i in this.indexes)this.indexes[i] = this.indexes[i] + n.length;\n            }\n            return this.markDirty(), this;\n        }\n        push(e) {\n            return e.parent = this, this.proxyOf.nodes.push(e), this;\n        }\n        removeAll() {\n            for (let e of this.proxyOf.nodes)e.parent = void 0;\n            return this.proxyOf.nodes = [], this.markDirty(), this;\n        }\n        removeChild(e) {\n            e = this.index(e), this.proxyOf.nodes[e].parent = void 0, this.proxyOf.nodes.splice(e, 1);\n            let r;\n            for(let n in this.indexes)r = this.indexes[n], r >= e && (this.indexes[n] = r - 1);\n            return this.markDirty(), this;\n        }\n        replaceValues(e, r, n) {\n            return n || (n = r, r = {}), this.walkDecls((i)=>{\n                r.props && !r.props.includes(i.prop) || r.fast && !i.value.includes(r.fast) || (i.value = i.value.replace(e, n));\n            }), this.markDirty(), this;\n        }\n        some(e) {\n            return this.nodes.some(e);\n        }\n        walk(e) {\n            return this.each((r, n)=>{\n                let i;\n                try {\n                    i = e(r, n);\n                } catch (a) {\n                    throw r.addToError(a);\n                }\n                return i !== !1 && r.walk && (i = r.walk(e)), i;\n            });\n        }\n        walkAtRules(e, r) {\n            return r ? e instanceof RegExp ? this.walk((n, i)=>{\n                if (n.type === \"atrule\" && e.test(n.name)) return r(n, i);\n            }) : this.walk((n, i)=>{\n                if (n.type === \"atrule\" && n.name === e) return r(n, i);\n            }) : (r = e, this.walk((n, i)=>{\n                if (n.type === \"atrule\") return r(n, i);\n            }));\n        }\n        walkComments(e) {\n            return this.walk((r, n)=>{\n                if (r.type === \"comment\") return e(r, n);\n            });\n        }\n        walkDecls(e, r) {\n            return r ? e instanceof RegExp ? this.walk((n, i)=>{\n                if (n.type === \"decl\" && e.test(n.prop)) return r(n, i);\n            }) : this.walk((n, i)=>{\n                if (n.type === \"decl\" && n.prop === e) return r(n, i);\n            }) : (r = e, this.walk((n, i)=>{\n                if (n.type === \"decl\") return r(n, i);\n            }));\n        }\n        walkRules(e, r) {\n            return r ? e instanceof RegExp ? this.walk((n, i)=>{\n                if (n.type === \"rule\" && e.test(n.selector)) return r(n, i);\n            }) : this.walk((n, i)=>{\n                if (n.type === \"rule\" && n.selector === e) return r(n, i);\n            }) : (r = e, this.walk((n, i)=>{\n                if (n.type === \"rule\") return r(n, i);\n            }));\n        }\n        get first() {\n            if (!!this.proxyOf.nodes) return this.proxyOf.nodes[0];\n        }\n        get last() {\n            if (!!this.proxyOf.nodes) return this.proxyOf.nodes[this.proxyOf.nodes.length - 1];\n        }\n    };\n    ae.registerParse = (t)=>{\n        go = t;\n    };\n    ae.registerRule = (t)=>{\n        ui = t;\n    };\n    ae.registerAtRule = (t)=>{\n        fi = t;\n    };\n    ae.registerRoot = (t)=>{\n        yo = t;\n    };\n    bo.exports = ae;\n    ae.default = ae;\n    ae.rebuild = (t)=>{\n        t.type === \"atrule\" ? Object.setPrototypeOf(t, fi.prototype) : t.type === \"rule\" ? Object.setPrototypeOf(t, ui.prototype) : t.type === \"decl\" ? Object.setPrototypeOf(t, ho.prototype) : t.type === \"comment\" ? Object.setPrototypeOf(t, mo.prototype) : t.type === \"root\" && Object.setPrototypeOf(t, yo.prototype), t[po] = !0, t.nodes && t.nodes.forEach((e)=>{\n            ae.rebuild(e);\n        });\n    };\n});\nvar Ar = S((Mb, ko)=>{\n    \"use strict\";\n    var sd = _e(), xo, So, je = class extends sd {\n        constructor(e){\n            super({\n                type: \"document\",\n                ...e\n            }), this.nodes || (this.nodes = []);\n        }\n        toResult(e = {}) {\n            return new xo(new So, this, e).stringify();\n        }\n    };\n    je.registerLazyResult = (t)=>{\n        xo = t;\n    };\n    je.registerProcessor = (t)=>{\n        So = t;\n    };\n    ko.exports = je;\n    je.default = je;\n});\nvar ci = S((Fb, Eo)=>{\n    \"use strict\";\n    var Oo = {};\n    Eo.exports = function(e) {\n        Oo[e] || (Oo[e] = !0, typeof console < \"u\" && console.warn && console.warn(e));\n    };\n});\nvar pi = S((Lb, Co)=>{\n    \"use strict\";\n    var _t = class {\n        constructor(e, r = {}){\n            if (this.type = \"warning\", this.text = e, r.node && r.node.source) {\n                let n = r.node.rangeBy(r);\n                this.line = n.start.line, this.column = n.start.column, this.endLine = n.end.line, this.endColumn = n.end.column;\n            }\n            for(let n in r)this[n] = r[n];\n        }\n        toString() {\n            return this.node ? this.node.error(this.text, {\n                index: this.index,\n                plugin: this.plugin,\n                word: this.word\n            }).message : this.plugin ? this.plugin + \": \" + this.text : this.text;\n        }\n    };\n    Co.exports = _t;\n    _t.default = _t;\n});\nvar _r = S((Nb, Ao)=>{\n    \"use strict\";\n    var ad = pi(), Tt = class {\n        constructor(e, r, n){\n            this.processor = e, this.messages = [], this.root = r, this.opts = n, this.css = void 0, this.map = void 0;\n        }\n        toString() {\n            return this.css;\n        }\n        warn(e, r = {}) {\n            r.plugin || this.lastPlugin && this.lastPlugin.postcssPlugin && (r.plugin = this.lastPlugin.postcssPlugin);\n            let n = new ad(e, r);\n            return this.messages.push(n), n;\n        }\n        warnings() {\n            return this.messages.filter((e)=>e.type === \"warning\");\n        }\n        get content() {\n            return this.css;\n        }\n    };\n    Ao.exports = Tt;\n    Tt.default = Tt;\n});\nvar Ro = S((qb, Io)=>{\n    \"use strict\";\n    var di = \"'\".charCodeAt(0), _o = '\"'.charCodeAt(0), Tr = \"\\\\\".charCodeAt(0), To = \"/\".charCodeAt(0), Pr = `\n`.charCodeAt(0), Pt = \" \".charCodeAt(0), Ir = \"\\f\".charCodeAt(0), Rr = \"\t\".charCodeAt(0), Dr = \"\\r\".charCodeAt(0), od = \"[\".charCodeAt(0), ld = \"]\".charCodeAt(0), ud = \"(\".charCodeAt(0), fd = \")\".charCodeAt(0), cd = \"{\".charCodeAt(0), pd = \"}\".charCodeAt(0), dd = \";\".charCodeAt(0), hd = \"*\".charCodeAt(0), md = \":\".charCodeAt(0), gd = \"@\".charCodeAt(0), Mr = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g, Fr = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g, yd = /.[\\r\\n\"'(/\\\\]/, Po = /[\\da-f]/i;\n    Io.exports = function(e, r = {}) {\n        let n = e.css.valueOf(), i = r.ignoreErrors, a, s, o, l, u, f, p, c, d, h, y = n.length, m = 0, g = [], w = [];\n        function b() {\n            return m;\n        }\n        function v(E) {\n            throw e.error(\"Unclosed \" + E, m);\n        }\n        function O() {\n            return w.length === 0 && m >= y;\n        }\n        function x(E) {\n            if (w.length) return w.pop();\n            if (m >= y) return;\n            let I = E ? E.ignoreUnclosed : !1;\n            switch(a = n.charCodeAt(m), a){\n                case Pr:\n                case Pt:\n                case Rr:\n                case Dr:\n                case Ir:\n                    {\n                        s = m;\n                        do s += 1, a = n.charCodeAt(s);\n                        while (a === Pt || a === Pr || a === Rr || a === Dr || a === Ir);\n                        h = [\n                            \"space\",\n                            n.slice(m, s)\n                        ], m = s - 1;\n                        break;\n                    }\n                case od:\n                case ld:\n                case cd:\n                case pd:\n                case md:\n                case dd:\n                case fd:\n                    {\n                        let F = String.fromCharCode(a);\n                        h = [\n                            F,\n                            F,\n                            m\n                        ];\n                        break;\n                    }\n                case ud:\n                    {\n                        if (c = g.length ? g.pop()[1] : \"\", d = n.charCodeAt(m + 1), c === \"url\" && d !== di && d !== _o && d !== Pt && d !== Pr && d !== Rr && d !== Ir && d !== Dr) {\n                            s = m;\n                            do {\n                                if (f = !1, s = n.indexOf(\")\", s + 1), s === -1) if (i || I) {\n                                    s = m;\n                                    break;\n                                } else v(\"bracket\");\n                                for(p = s; n.charCodeAt(p - 1) === Tr;)p -= 1, f = !f;\n                            }while (f);\n                            h = [\n                                \"brackets\",\n                                n.slice(m, s + 1),\n                                m,\n                                s\n                            ], m = s;\n                        } else s = n.indexOf(\")\", m + 1), l = n.slice(m, s + 1), s === -1 || yd.test(l) ? h = [\n                            \"(\",\n                            \"(\",\n                            m\n                        ] : (h = [\n                            \"brackets\",\n                            l,\n                            m,\n                            s\n                        ], m = s);\n                        break;\n                    }\n                case di:\n                case _o:\n                    {\n                        o = a === di ? \"'\" : '\"', s = m;\n                        do {\n                            if (f = !1, s = n.indexOf(o, s + 1), s === -1) if (i || I) {\n                                s = m + 1;\n                                break;\n                            } else v(\"string\");\n                            for(p = s; n.charCodeAt(p - 1) === Tr;)p -= 1, f = !f;\n                        }while (f);\n                        h = [\n                            \"string\",\n                            n.slice(m, s + 1),\n                            m,\n                            s\n                        ], m = s;\n                        break;\n                    }\n                case gd:\n                    {\n                        Mr.lastIndex = m + 1, Mr.test(n), Mr.lastIndex === 0 ? s = n.length - 1 : s = Mr.lastIndex - 2, h = [\n                            \"at-word\",\n                            n.slice(m, s + 1),\n                            m,\n                            s\n                        ], m = s;\n                        break;\n                    }\n                case Tr:\n                    {\n                        for(s = m, u = !0; n.charCodeAt(s + 1) === Tr;)s += 1, u = !u;\n                        if (a = n.charCodeAt(s + 1), u && a !== To && a !== Pt && a !== Pr && a !== Rr && a !== Dr && a !== Ir && (s += 1, Po.test(n.charAt(s)))) {\n                            for(; Po.test(n.charAt(s + 1));)s += 1;\n                            n.charCodeAt(s + 1) === Pt && (s += 1);\n                        }\n                        h = [\n                            \"word\",\n                            n.slice(m, s + 1),\n                            m,\n                            s\n                        ], m = s;\n                        break;\n                    }\n                default:\n                    {\n                        a === To && n.charCodeAt(m + 1) === hd ? (s = n.indexOf(\"*/\", m + 2) + 1, s === 0 && (i || I ? s = n.length : v(\"comment\")), h = [\n                            \"comment\",\n                            n.slice(m, s + 1),\n                            m,\n                            s\n                        ], m = s) : (Fr.lastIndex = m + 1, Fr.test(n), Fr.lastIndex === 0 ? s = n.length - 1 : s = Fr.lastIndex - 2, h = [\n                            \"word\",\n                            n.slice(m, s + 1),\n                            m,\n                            s\n                        ], g.push(h), m = s);\n                        break;\n                    }\n            }\n            return m++, h;\n        }\n        function A(E) {\n            w.push(E);\n        }\n        return {\n            back: A,\n            endOfFile: O,\n            nextToken: x,\n            position: b\n        };\n    };\n});\nvar Lr = S(($b, Mo)=>{\n    \"use strict\";\n    var Do = _e(), He = class extends Do {\n        constructor(e){\n            super(e), this.type = \"atrule\";\n        }\n        append(...e) {\n            return this.proxyOf.nodes || (this.nodes = []), super.append(...e);\n        }\n        prepend(...e) {\n            return this.proxyOf.nodes || (this.nodes = []), super.prepend(...e);\n        }\n    };\n    Mo.exports = He;\n    He.default = He;\n    Do.registerAtRule(He);\n});\nvar Qe = S((Ub, qo)=>{\n    \"use strict\";\n    var Fo = _e(), Lo, No, Te = class extends Fo {\n        constructor(e){\n            super(e), this.type = \"root\", this.nodes || (this.nodes = []);\n        }\n        normalize(e, r, n) {\n            let i = super.normalize(e);\n            if (r) {\n                if (n === \"prepend\") this.nodes.length > 1 ? r.raws.before = this.nodes[1].raws.before : delete r.raws.before;\n                else if (this.first !== r) for (let a of i)a.raws.before = r.raws.before;\n            }\n            return i;\n        }\n        removeChild(e, r) {\n            let n = this.index(e);\n            return !r && n === 0 && this.nodes.length > 1 && (this.nodes[1].raws.before = this.nodes[n].raws.before), super.removeChild(e);\n        }\n        toResult(e = {}) {\n            return new Lo(new No, this, e).stringify();\n        }\n    };\n    Te.registerLazyResult = (t)=>{\n        Lo = t;\n    };\n    Te.registerProcessor = (t)=>{\n        No = t;\n    };\n    qo.exports = Te;\n    Te.default = Te;\n    Fo.registerRoot(Te);\n});\nvar hi = S((jb, $o)=>{\n    \"use strict\";\n    var It = {\n        comma (t) {\n            return It.split(t, [\n                \",\"\n            ], !0);\n        },\n        space (t) {\n            let e = [\n                \" \",\n                `\n`,\n                \"\t\"\n            ];\n            return It.split(t, e);\n        },\n        split (t, e, r) {\n            let n = [], i = \"\", a = !1, s = 0, o = !1, l = \"\", u = !1;\n            for (let f of t)u ? u = !1 : f === \"\\\\\" ? u = !0 : o ? f === l && (o = !1) : f === '\"' || f === \"'\" ? (o = !0, l = f) : f === \"(\" ? s += 1 : f === \")\" ? s > 0 && (s -= 1) : s === 0 && e.includes(f) && (a = !0), a ? (i !== \"\" && n.push(i.trim()), i = \"\", a = !1) : i += f;\n            return (r || i !== \"\") && n.push(i.trim()), n;\n        }\n    };\n    $o.exports = It;\n    It.default = It;\n});\nvar Nr = S((zb, jo)=>{\n    \"use strict\";\n    var Uo = _e(), vd = hi(), Je = class extends Uo {\n        constructor(e){\n            super(e), this.type = \"rule\", this.nodes || (this.nodes = []);\n        }\n        get selectors() {\n            return vd.comma(this.selector);\n        }\n        set selectors(e) {\n            let r = this.selector ? this.selector.match(/,\\s*/) : null, n = r ? r[0] : \",\" + this.raw(\"between\", \"beforeOpen\");\n            this.selector = e.join(n);\n        }\n    };\n    jo.exports = Je;\n    Je.default = Je;\n    Uo.registerRule(Je);\n});\nvar Bo = S((Vb, Wo)=>{\n    \"use strict\";\n    var wd = xt(), bd = Ro(), xd = At(), Sd = Lr(), kd = Qe(), zo = Nr(), Vo = {\n        empty: !0,\n        space: !0\n    };\n    function Od(t) {\n        for(let e = t.length - 1; e >= 0; e--){\n            let r = t[e], n = r[3] || r[2];\n            if (n) return n;\n        }\n    }\n    var mi = class {\n        constructor(e){\n            this.input = e, this.root = new kd, this.current = this.root, this.spaces = \"\", this.semicolon = !1, this.customProperty = !1, this.createTokenizer(), this.root.source = {\n                input: e,\n                start: {\n                    column: 1,\n                    line: 1,\n                    offset: 0\n                }\n            };\n        }\n        atrule(e) {\n            let r = new Sd;\n            r.name = e[1].slice(1), r.name === \"\" && this.unnamedAtrule(r, e), this.init(r, e[2]);\n            let n, i, a, s = !1, o = !1, l = [], u = [];\n            for(; !this.tokenizer.endOfFile();){\n                if (e = this.tokenizer.nextToken(), n = e[0], n === \"(\" || n === \"[\" ? u.push(n === \"(\" ? \")\" : \"]\") : n === \"{\" && u.length > 0 ? u.push(\"}\") : n === u[u.length - 1] && u.pop(), u.length === 0) if (n === \";\") {\n                    r.source.end = this.getPosition(e[2]), r.source.end.offset++, this.semicolon = !0;\n                    break;\n                } else if (n === \"{\") {\n                    o = !0;\n                    break;\n                } else if (n === \"}\") {\n                    if (l.length > 0) {\n                        for(a = l.length - 1, i = l[a]; i && i[0] === \"space\";)i = l[--a];\n                        i && (r.source.end = this.getPosition(i[3] || i[2]), r.source.end.offset++);\n                    }\n                    this.end(e);\n                    break;\n                } else l.push(e);\n                else l.push(e);\n                if (this.tokenizer.endOfFile()) {\n                    s = !0;\n                    break;\n                }\n            }\n            r.raws.between = this.spacesAndCommentsFromEnd(l), l.length ? (r.raws.afterName = this.spacesAndCommentsFromStart(l), this.raw(r, \"params\", l), s && (e = l[l.length - 1], r.source.end = this.getPosition(e[3] || e[2]), r.source.end.offset++, this.spaces = r.raws.between, r.raws.between = \"\")) : (r.raws.afterName = \"\", r.params = \"\"), o && (r.nodes = [], this.current = r);\n        }\n        checkMissedSemicolon(e) {\n            let r = this.colon(e);\n            if (r === !1) return;\n            let n = 0, i;\n            for(let a = r - 1; a >= 0 && (i = e[a], !(i[0] !== \"space\" && (n += 1, n === 2))); a--);\n            throw this.input.error(\"Missed semicolon\", i[0] === \"word\" ? i[3] + 1 : i[2]);\n        }\n        colon(e) {\n            let r = 0, n, i, a;\n            for (let [s, o] of e.entries()){\n                if (n = o, i = n[0], i === \"(\" && (r += 1), i === \")\" && (r -= 1), r === 0 && i === \":\") if (!a) this.doubleColon(n);\n                else {\n                    if (a[0] === \"word\" && a[1] === \"progid\") continue;\n                    return s;\n                }\n                a = n;\n            }\n            return !1;\n        }\n        comment(e) {\n            let r = new xd;\n            this.init(r, e[2]), r.source.end = this.getPosition(e[3] || e[2]), r.source.end.offset++;\n            let n = e[1].slice(2, -2);\n            if (/^\\s*$/.test(n)) r.text = \"\", r.raws.left = n, r.raws.right = \"\";\n            else {\n                let i = n.match(/^(\\s*)([^]*\\S)(\\s*)$/);\n                r.text = i[2], r.raws.left = i[1], r.raws.right = i[3];\n            }\n        }\n        createTokenizer() {\n            this.tokenizer = bd(this.input);\n        }\n        decl(e, r) {\n            let n = new wd;\n            this.init(n, e[0][2]);\n            let i = e[e.length - 1];\n            for(i[0] === \";\" && (this.semicolon = !0, e.pop()), n.source.end = this.getPosition(i[3] || i[2] || Od(e)), n.source.end.offset++; e[0][0] !== \"word\";)e.length === 1 && this.unknownWord(e), n.raws.before += e.shift()[1];\n            for(n.source.start = this.getPosition(e[0][2]), n.prop = \"\"; e.length;){\n                let u = e[0][0];\n                if (u === \":\" || u === \"space\" || u === \"comment\") break;\n                n.prop += e.shift()[1];\n            }\n            n.raws.between = \"\";\n            let a;\n            for(; e.length;)if (a = e.shift(), a[0] === \":\") {\n                n.raws.between += a[1];\n                break;\n            } else a[0] === \"word\" && /\\w/.test(a[1]) && this.unknownWord([\n                a\n            ]), n.raws.between += a[1];\n            (n.prop[0] === \"_\" || n.prop[0] === \"*\") && (n.raws.before += n.prop[0], n.prop = n.prop.slice(1));\n            let s = [], o;\n            for(; e.length && (o = e[0][0], !(o !== \"space\" && o !== \"comment\"));)s.push(e.shift());\n            this.precheckMissedSemicolon(e);\n            for(let u = e.length - 1; u >= 0; u--){\n                if (a = e[u], a[1].toLowerCase() === \"!important\") {\n                    n.important = !0;\n                    let f = this.stringFrom(e, u);\n                    f = this.spacesFromEnd(e) + f, f !== \" !important\" && (n.raws.important = f);\n                    break;\n                } else if (a[1].toLowerCase() === \"important\") {\n                    let f = e.slice(0), p = \"\";\n                    for(let c = u; c > 0; c--){\n                        let d = f[c][0];\n                        if (p.trim().indexOf(\"!\") === 0 && d !== \"space\") break;\n                        p = f.pop()[1] + p;\n                    }\n                    p.trim().indexOf(\"!\") === 0 && (n.important = !0, n.raws.important = p, e = f);\n                }\n                if (a[0] !== \"space\" && a[0] !== \"comment\") break;\n            }\n            e.some((u)=>u[0] !== \"space\" && u[0] !== \"comment\") && (n.raws.between += s.map((u)=>u[1]).join(\"\"), s = []), this.raw(n, \"value\", s.concat(e), r), n.value.includes(\":\") && !r && this.checkMissedSemicolon(e);\n        }\n        doubleColon(e) {\n            throw this.input.error(\"Double colon\", {\n                offset: e[2]\n            }, {\n                offset: e[2] + e[1].length\n            });\n        }\n        emptyRule(e) {\n            let r = new zo;\n            this.init(r, e[2]), r.selector = \"\", r.raws.between = \"\", this.current = r;\n        }\n        end(e) {\n            this.current.nodes && this.current.nodes.length && (this.current.raws.semicolon = this.semicolon), this.semicolon = !1, this.current.raws.after = (this.current.raws.after || \"\") + this.spaces, this.spaces = \"\", this.current.parent ? (this.current.source.end = this.getPosition(e[2]), this.current.source.end.offset++, this.current = this.current.parent) : this.unexpectedClose(e);\n        }\n        endFile() {\n            this.current.parent && this.unclosedBlock(), this.current.nodes && this.current.nodes.length && (this.current.raws.semicolon = this.semicolon), this.current.raws.after = (this.current.raws.after || \"\") + this.spaces, this.root.source.end = this.getPosition(this.tokenizer.position());\n        }\n        freeSemicolon(e) {\n            if (this.spaces += e[1], this.current.nodes) {\n                let r = this.current.nodes[this.current.nodes.length - 1];\n                r && r.type === \"rule\" && !r.raws.ownSemicolon && (r.raws.ownSemicolon = this.spaces, this.spaces = \"\");\n            }\n        }\n        getPosition(e) {\n            let r = this.input.fromOffset(e);\n            return {\n                column: r.col,\n                line: r.line,\n                offset: e\n            };\n        }\n        init(e, r) {\n            this.current.push(e), e.source = {\n                input: this.input,\n                start: this.getPosition(r)\n            }, e.raws.before = this.spaces, this.spaces = \"\", e.type !== \"comment\" && (this.semicolon = !1);\n        }\n        other(e) {\n            let r = !1, n = null, i = !1, a = null, s = [], o = e[1].startsWith(\"--\"), l = [], u = e;\n            for(; u;){\n                if (n = u[0], l.push(u), n === \"(\" || n === \"[\") a || (a = u), s.push(n === \"(\" ? \")\" : \"]\");\n                else if (o && i && n === \"{\") a || (a = u), s.push(\"}\");\n                else if (s.length === 0) if (n === \";\") if (i) {\n                    this.decl(l, o);\n                    return;\n                } else break;\n                else if (n === \"{\") {\n                    this.rule(l);\n                    return;\n                } else if (n === \"}\") {\n                    this.tokenizer.back(l.pop()), r = !0;\n                    break;\n                } else n === \":\" && (i = !0);\n                else n === s[s.length - 1] && (s.pop(), s.length === 0 && (a = null));\n                u = this.tokenizer.nextToken();\n            }\n            if (this.tokenizer.endOfFile() && (r = !0), s.length > 0 && this.unclosedBracket(a), r && i) {\n                if (!o) for(; l.length && (u = l[l.length - 1][0], !(u !== \"space\" && u !== \"comment\"));)this.tokenizer.back(l.pop());\n                this.decl(l, o);\n            } else this.unknownWord(l);\n        }\n        parse() {\n            let e;\n            for(; !this.tokenizer.endOfFile();)switch(e = this.tokenizer.nextToken(), e[0]){\n                case \"space\":\n                    this.spaces += e[1];\n                    break;\n                case \";\":\n                    this.freeSemicolon(e);\n                    break;\n                case \"}\":\n                    this.end(e);\n                    break;\n                case \"comment\":\n                    this.comment(e);\n                    break;\n                case \"at-word\":\n                    this.atrule(e);\n                    break;\n                case \"{\":\n                    this.emptyRule(e);\n                    break;\n                default:\n                    this.other(e);\n                    break;\n            }\n            this.endFile();\n        }\n        precheckMissedSemicolon() {}\n        raw(e, r, n, i) {\n            let a, s, o = n.length, l = \"\", u = !0, f, p;\n            for(let c = 0; c < o; c += 1)a = n[c], s = a[0], s === \"space\" && c === o - 1 && !i ? u = !1 : s === \"comment\" ? (p = n[c - 1] ? n[c - 1][0] : \"empty\", f = n[c + 1] ? n[c + 1][0] : \"empty\", !Vo[p] && !Vo[f] ? l.slice(-1) === \",\" ? u = !1 : l += a[1] : u = !1) : l += a[1];\n            if (!u) {\n                let c = n.reduce((d, h)=>d + h[1], \"\");\n                e.raws[r] = {\n                    raw: c,\n                    value: l\n                };\n            }\n            e[r] = l;\n        }\n        rule(e) {\n            e.pop();\n            let r = new zo;\n            this.init(r, e[0][2]), r.raws.between = this.spacesAndCommentsFromEnd(e), this.raw(r, \"selector\", e), this.current = r;\n        }\n        spacesAndCommentsFromEnd(e) {\n            let r, n = \"\";\n            for(; e.length && (r = e[e.length - 1][0], !(r !== \"space\" && r !== \"comment\"));)n = e.pop()[1] + n;\n            return n;\n        }\n        spacesAndCommentsFromStart(e) {\n            let r, n = \"\";\n            for(; e.length && (r = e[0][0], !(r !== \"space\" && r !== \"comment\"));)n += e.shift()[1];\n            return n;\n        }\n        spacesFromEnd(e) {\n            let r, n = \"\";\n            for(; e.length && (r = e[e.length - 1][0], r === \"space\");)n = e.pop()[1] + n;\n            return n;\n        }\n        stringFrom(e, r) {\n            let n = \"\";\n            for(let i = r; i < e.length; i++)n += e[i][1];\n            return e.splice(r, e.length - r), n;\n        }\n        unclosedBlock() {\n            let e = this.current.source.start;\n            throw this.input.error(\"Unclosed block\", e.line, e.column);\n        }\n        unclosedBracket(e) {\n            throw this.input.error(\"Unclosed bracket\", {\n                offset: e[2]\n            }, {\n                offset: e[2] + 1\n            });\n        }\n        unexpectedClose(e) {\n            throw this.input.error(\"Unexpected }\", {\n                offset: e[2]\n            }, {\n                offset: e[2] + 1\n            });\n        }\n        unknownWord(e) {\n            throw this.input.error(\"Unknown word\", {\n                offset: e[0][2]\n            }, {\n                offset: e[0][2] + e[0][1].length\n            });\n        }\n        unnamedAtrule(e, r) {\n            throw this.input.error(\"At-rule without name\", {\n                offset: r[2]\n            }, {\n                offset: r[2] + r[1].length\n            });\n        }\n    };\n    Wo.exports = mi;\n});\nvar $r = S((Wb, Go)=>{\n    \"use strict\";\n    var Ed = _e(), Cd = Bo(), Ad = Et();\n    function qr(t, e) {\n        let r = new Ad(t, e), n = new Cd(r);\n        try {\n            n.parse();\n        } catch (i) {\n            throw i;\n        }\n        return n.root;\n    }\n    Go.exports = qr;\n    qr.default = qr;\n    Ed.registerParse(qr);\n});\nvar vi = S((Gb, Jo)=>{\n    \"use strict\";\n    var { isClean: me, my: _d } = xr(), Td = li(), Pd = yt(), Id = _e(), Rd = Ar(), Bb = ci(), Yo = _r(), Dd = $r(), Md = Qe(), Fd = {\n        atrule: \"AtRule\",\n        comment: \"Comment\",\n        decl: \"Declaration\",\n        document: \"Document\",\n        root: \"Root\",\n        rule: \"Rule\"\n    }, Ld = {\n        AtRule: !0,\n        AtRuleExit: !0,\n        Comment: !0,\n        CommentExit: !0,\n        Declaration: !0,\n        DeclarationExit: !0,\n        Document: !0,\n        DocumentExit: !0,\n        Once: !0,\n        OnceExit: !0,\n        postcssPlugin: !0,\n        prepare: !0,\n        Root: !0,\n        RootExit: !0,\n        Rule: !0,\n        RuleExit: !0\n    }, Nd = {\n        Once: !0,\n        postcssPlugin: !0,\n        prepare: !0\n    }, Xe = 0;\n    function Rt(t) {\n        return typeof t == \"object\" && typeof t.then == \"function\";\n    }\n    function Qo(t) {\n        let e = !1, r = Fd[t.type];\n        return t.type === \"decl\" ? e = t.prop.toLowerCase() : t.type === \"atrule\" && (e = t.name.toLowerCase()), e && t.append ? [\n            r,\n            r + \"-\" + e,\n            Xe,\n            r + \"Exit\",\n            r + \"Exit-\" + e\n        ] : e ? [\n            r,\n            r + \"-\" + e,\n            r + \"Exit\",\n            r + \"Exit-\" + e\n        ] : t.append ? [\n            r,\n            Xe,\n            r + \"Exit\"\n        ] : [\n            r,\n            r + \"Exit\"\n        ];\n    }\n    function Ho(t) {\n        let e;\n        return t.type === \"document\" ? e = [\n            \"Document\",\n            Xe,\n            \"DocumentExit\"\n        ] : t.type === \"root\" ? e = [\n            \"Root\",\n            Xe,\n            \"RootExit\"\n        ] : e = Qo(t), {\n            eventIndex: 0,\n            events: e,\n            iterator: 0,\n            node: t,\n            visitorIndex: 0,\n            visitors: []\n        };\n    }\n    function gi(t) {\n        return t[me] = !1, t.nodes && t.nodes.forEach((e)=>gi(e)), t;\n    }\n    var yi = {}, ge = class {\n        constructor(e, r, n){\n            this.stringified = !1, this.processed = !1;\n            let i;\n            if (typeof r == \"object\" && r !== null && (r.type === \"root\" || r.type === \"document\")) i = gi(r);\n            else if (r instanceof ge || r instanceof Yo) i = gi(r.root), r.map && (typeof n.map > \"u\" && (n.map = {}), n.map.inline || (n.map.inline = !1), n.map.prev = r.map);\n            else {\n                let a = Dd;\n                n.syntax && (a = n.syntax.parse), n.parser && (a = n.parser), a.parse && (a = a.parse);\n                try {\n                    i = a(r, n);\n                } catch (s) {\n                    this.processed = !0, this.error = s;\n                }\n                i && !i[_d] && Id.rebuild(i);\n            }\n            this.result = new Yo(e, i, n), this.helpers = {\n                ...yi,\n                postcss: yi,\n                result: this.result\n            }, this.plugins = this.processor.plugins.map((a)=>typeof a == \"object\" && a.prepare ? {\n                    ...a,\n                    ...a.prepare(this.result)\n                } : a);\n        }\n        async() {\n            return this.error ? Promise.reject(this.error) : this.processed ? Promise.resolve(this.result) : (this.processing || (this.processing = this.runAsync()), this.processing);\n        }\n        catch(e) {\n            return this.async().catch(e);\n        }\n        finally(e) {\n            return this.async().then(e, e);\n        }\n        getAsyncError() {\n            throw new Error(\"Use process(css).then(cb) to work with async plugins\");\n        }\n        handleError(e, r) {\n            let n = this.result.lastPlugin;\n            try {\n                r && r.addToError(e), this.error = e, e.name === \"CssSyntaxError\" && !e.plugin ? (e.plugin = n.postcssPlugin, e.setMessage()) : n.postcssVersion;\n            } catch (i) {\n                console && console.error && console.error(i);\n            }\n            return e;\n        }\n        prepareVisitors() {\n            this.listeners = {};\n            let e = (r, n, i)=>{\n                this.listeners[n] || (this.listeners[n] = []), this.listeners[n].push([\n                    r,\n                    i\n                ]);\n            };\n            for (let r of this.plugins)if (typeof r == \"object\") for(let n in r){\n                if (!Ld[n] && /^[A-Z]/.test(n)) throw new Error(`Unknown event ${n} in ${r.postcssPlugin}. Try to update PostCSS (${this.processor.version} now).`);\n                if (!Nd[n]) if (typeof r[n] == \"object\") for(let i in r[n])i === \"*\" ? e(r, n, r[n][i]) : e(r, n + \"-\" + i.toLowerCase(), r[n][i]);\n                else typeof r[n] == \"function\" && e(r, n, r[n]);\n            }\n            this.hasListener = Object.keys(this.listeners).length > 0;\n        }\n        async runAsync() {\n            this.plugin = 0;\n            for(let e = 0; e < this.plugins.length; e++){\n                let r = this.plugins[e], n = this.runOnRoot(r);\n                if (Rt(n)) try {\n                    await n;\n                } catch (i) {\n                    throw this.handleError(i);\n                }\n            }\n            if (this.prepareVisitors(), this.hasListener) {\n                let e = this.result.root;\n                for(; !e[me];){\n                    e[me] = !0;\n                    let r = [\n                        Ho(e)\n                    ];\n                    for(; r.length > 0;){\n                        let n = this.visitTick(r);\n                        if (Rt(n)) try {\n                            await n;\n                        } catch (i) {\n                            let a = r[r.length - 1].node;\n                            throw this.handleError(i, a);\n                        }\n                    }\n                }\n                if (this.listeners.OnceExit) for (let [r, n] of this.listeners.OnceExit){\n                    this.result.lastPlugin = r;\n                    try {\n                        if (e.type === \"document\") {\n                            let i = e.nodes.map((a)=>n(a, this.helpers));\n                            await Promise.all(i);\n                        } else await n(e, this.helpers);\n                    } catch (i) {\n                        throw this.handleError(i);\n                    }\n                }\n            }\n            return this.processed = !0, this.stringify();\n        }\n        runOnRoot(e) {\n            this.result.lastPlugin = e;\n            try {\n                if (typeof e == \"object\" && e.Once) {\n                    if (this.result.root.type === \"document\") {\n                        let r = this.result.root.nodes.map((n)=>e.Once(n, this.helpers));\n                        return Rt(r[0]) ? Promise.all(r) : r;\n                    }\n                    return e.Once(this.result.root, this.helpers);\n                } else if (typeof e == \"function\") return e(this.result.root, this.result);\n            } catch (r) {\n                throw this.handleError(r);\n            }\n        }\n        stringify() {\n            if (this.error) throw this.error;\n            if (this.stringified) return this.result;\n            this.stringified = !0, this.sync();\n            let e = this.result.opts, r = Pd;\n            e.syntax && (r = e.syntax.stringify), e.stringifier && (r = e.stringifier), r.stringify && (r = r.stringify);\n            let i = new Td(r, this.result.root, this.result.opts).generate();\n            return this.result.css = i[0], this.result.map = i[1], this.result;\n        }\n        sync() {\n            if (this.error) throw this.error;\n            if (this.processed) return this.result;\n            if (this.processed = !0, this.processing) throw this.getAsyncError();\n            for (let e of this.plugins){\n                let r = this.runOnRoot(e);\n                if (Rt(r)) throw this.getAsyncError();\n            }\n            if (this.prepareVisitors(), this.hasListener) {\n                let e = this.result.root;\n                for(; !e[me];)e[me] = !0, this.walkSync(e);\n                if (this.listeners.OnceExit) if (e.type === \"document\") for (let r of e.nodes)this.visitSync(this.listeners.OnceExit, r);\n                else this.visitSync(this.listeners.OnceExit, e);\n            }\n            return this.result;\n        }\n        then(e, r) {\n            return this.async().then(e, r);\n        }\n        toString() {\n            return this.css;\n        }\n        visitSync(e, r) {\n            for (let [n, i] of e){\n                this.result.lastPlugin = n;\n                let a;\n                try {\n                    a = i(r, this.helpers);\n                } catch (s) {\n                    throw this.handleError(s, r.proxyOf);\n                }\n                if (r.type !== \"root\" && r.type !== \"document\" && !r.parent) return !0;\n                if (Rt(a)) throw this.getAsyncError();\n            }\n        }\n        visitTick(e) {\n            let r = e[e.length - 1], { node: n, visitors: i } = r;\n            if (n.type !== \"root\" && n.type !== \"document\" && !n.parent) {\n                e.pop();\n                return;\n            }\n            if (i.length > 0 && r.visitorIndex < i.length) {\n                let [s, o] = i[r.visitorIndex];\n                r.visitorIndex += 1, r.visitorIndex === i.length && (r.visitors = [], r.visitorIndex = 0), this.result.lastPlugin = s;\n                try {\n                    return o(n.toProxy(), this.helpers);\n                } catch (l) {\n                    throw this.handleError(l, n);\n                }\n            }\n            if (r.iterator !== 0) {\n                let s = r.iterator, o;\n                for(; o = n.nodes[n.indexes[s]];)if (n.indexes[s] += 1, !o[me]) {\n                    o[me] = !0, e.push(Ho(o));\n                    return;\n                }\n                r.iterator = 0, delete n.indexes[s];\n            }\n            let a = r.events;\n            for(; r.eventIndex < a.length;){\n                let s = a[r.eventIndex];\n                if (r.eventIndex += 1, s === Xe) {\n                    n.nodes && n.nodes.length && (n[me] = !0, r.iterator = n.getIterator());\n                    return;\n                } else if (this.listeners[s]) {\n                    r.visitors = this.listeners[s];\n                    return;\n                }\n            }\n            e.pop();\n        }\n        walkSync(e) {\n            e[me] = !0;\n            let r = Qo(e);\n            for (let n of r)if (n === Xe) e.nodes && e.each((i)=>{\n                i[me] || this.walkSync(i);\n            });\n            else {\n                let i = this.listeners[n];\n                if (i && this.visitSync(i, e.toProxy())) return;\n            }\n        }\n        warnings() {\n            return this.sync().warnings();\n        }\n        get content() {\n            return this.stringify().content;\n        }\n        get css() {\n            return this.stringify().css;\n        }\n        get map() {\n            return this.stringify().map;\n        }\n        get messages() {\n            return this.sync().messages;\n        }\n        get opts() {\n            return this.result.opts;\n        }\n        get processor() {\n            return this.result.processor;\n        }\n        get root() {\n            return this.sync().root;\n        }\n        get [Symbol.toStringTag]() {\n            return \"LazyResult\";\n        }\n    };\n    ge.registerPostcss = (t)=>{\n        yi = t;\n    };\n    Jo.exports = ge;\n    ge.default = ge;\n    Md.registerLazyResult(ge);\n    Rd.registerLazyResult(ge);\n});\nvar Ko = S((Hb, Xo)=>{\n    \"use strict\";\n    var qd = li(), $d = yt(), Yb = ci(), Ud = $r(), jd = _r(), Dt = class {\n        constructor(e, r, n){\n            r = r.toString(), this.stringified = !1, this._processor = e, this._css = r, this._opts = n, this._map = void 0;\n            let i, a = $d;\n            this.result = new jd(this._processor, i, this._opts), this.result.css = r;\n            let s = this;\n            Object.defineProperty(this.result, \"root\", {\n                get () {\n                    return s.root;\n                }\n            });\n            let o = new qd(a, i, this._opts, r);\n            if (o.isMap()) {\n                let [l, u] = o.generate();\n                l && (this.result.css = l), u && (this.result.map = u);\n            }\n        }\n        async() {\n            return this.error ? Promise.reject(this.error) : Promise.resolve(this.result);\n        }\n        catch(e) {\n            return this.async().catch(e);\n        }\n        finally(e) {\n            return this.async().then(e, e);\n        }\n        sync() {\n            if (this.error) throw this.error;\n            return this.result;\n        }\n        then(e, r) {\n            return this.async().then(e, r);\n        }\n        toString() {\n            return this._css;\n        }\n        warnings() {\n            return [];\n        }\n        get content() {\n            return this.result.css;\n        }\n        get css() {\n            return this.result.css;\n        }\n        get map() {\n            return this.result.map;\n        }\n        get messages() {\n            return [];\n        }\n        get opts() {\n            return this.result.opts;\n        }\n        get processor() {\n            return this.result.processor;\n        }\n        get root() {\n            if (this._root) return this._root;\n            let e, r = Ud;\n            try {\n                e = r(this._css, this._opts);\n            } catch (n) {\n                this.error = n;\n            }\n            if (this.error) throw this.error;\n            return this._root = e, e;\n        }\n        get [Symbol.toStringTag]() {\n            return \"NoWorkResult\";\n        }\n    };\n    Xo.exports = Dt;\n    Dt.default = Dt;\n});\nvar el = S((Qb, Zo)=>{\n    \"use strict\";\n    var zd = Ko(), Vd = vi(), Wd = Ar(), Bd = Qe(), ze = class {\n        constructor(e = []){\n            this.version = \"8.4.31\", this.plugins = this.normalize(e);\n        }\n        normalize(e) {\n            let r = [];\n            for (let n of e)if (n.postcss === !0 ? n = n() : n.postcss && (n = n.postcss), typeof n == \"object\" && Array.isArray(n.plugins)) r = r.concat(n.plugins);\n            else if (typeof n == \"object\" && n.postcssPlugin) r.push(n);\n            else if (typeof n == \"function\") r.push(n);\n            else if (!(typeof n == \"object\" && (n.parse || n.stringify))) throw new Error(n + \" is not a PostCSS plugin\");\n            return r;\n        }\n        process(e, r = {}) {\n            return this.plugins.length === 0 && typeof r.parser > \"u\" && typeof r.stringifier > \"u\" && typeof r.syntax > \"u\" ? new zd(this, e, r) : new Vd(this, e, r);\n        }\n        use(e) {\n            return this.plugins = this.plugins.concat(this.normalize([\n                e\n            ])), this;\n        }\n    };\n    Zo.exports = ze;\n    ze.default = ze;\n    Bd.registerProcessor(ze);\n    Wd.registerProcessor(ze);\n});\nvar rl = S((Jb, tl)=>{\n    \"use strict\";\n    var Gd = xt(), Yd = ri(), Hd = At(), Qd = Lr(), Jd = Et(), Xd = Qe(), Kd = Nr();\n    function Mt(t, e) {\n        if (Array.isArray(t)) return t.map((i)=>Mt(i));\n        let { inputs: r, ...n } = t;\n        if (r) {\n            e = [];\n            for (let i of r){\n                let a = {\n                    ...i,\n                    __proto__: Jd.prototype\n                };\n                a.map && (a.map = {\n                    ...a.map,\n                    __proto__: Yd.prototype\n                }), e.push(a);\n            }\n        }\n        if (n.nodes && (n.nodes = t.nodes.map((i)=>Mt(i, e))), n.source) {\n            let { inputId: i, ...a } = n.source;\n            n.source = a, i != null && (n.source.input = e[i]);\n        }\n        if (n.type === \"root\") return new Xd(n);\n        if (n.type === \"decl\") return new Gd(n);\n        if (n.type === \"rule\") return new Kd(n);\n        if (n.type === \"comment\") return new Hd(n);\n        if (n.type === \"atrule\") return new Qd(n);\n        throw new Error(\"Unknown node type: \" + t.type);\n    }\n    tl.exports = Mt;\n    Mt.default = Mt;\n});\nvar Ke = S((Xb, ul)=>{\n    \"use strict\";\n    var Zd = br(), nl = xt(), eh = vi(), th = _e(), wi = el(), rh = yt(), nh = rl(), il = Ar(), ih = pi(), sl = At(), al = Lr(), sh = _r(), ah = Et(), oh = $r(), lh = hi(), ol = Nr(), ll = Qe(), uh = wt();\n    function N(...t) {\n        return t.length === 1 && Array.isArray(t[0]) && (t = t[0]), new wi(t);\n    }\n    N.plugin = function(e, r) {\n        let n = !1;\n        function i(...s) {\n            console && console.warn && !n && (n = !0, console.warn(e + `: postcss.plugin was deprecated. Migration guide:\nhttps://evilmartians.com/chronicles/postcss-8-plugin-migration`), process.env.LANG && process.env.LANG.startsWith(\"cn\") && console.warn(e + `: \\u91CC\\u9762 postcss.plugin \\u88AB\\u5F03\\u7528. \\u8FC1\\u79FB\\u6307\\u5357:\nhttps://www.w3ctech.com/topic/2226`));\n            let o = r(...s);\n            return o.postcssPlugin = e, o.postcssVersion = new wi().version, o;\n        }\n        let a;\n        return Object.defineProperty(i, \"postcss\", {\n            get () {\n                return a || (a = i()), a;\n            }\n        }), i.process = function(s, o, l) {\n            return N([\n                i(l)\n            ]).process(s, o);\n        }, i;\n    };\n    N.stringify = rh;\n    N.parse = oh;\n    N.fromJSON = nh;\n    N.list = lh;\n    N.comment = (t)=>new sl(t);\n    N.atRule = (t)=>new al(t);\n    N.decl = (t)=>new nl(t);\n    N.rule = (t)=>new ol(t);\n    N.root = (t)=>new ll(t);\n    N.document = (t)=>new il(t);\n    N.CssSyntaxError = Zd;\n    N.Declaration = nl;\n    N.Container = th;\n    N.Processor = wi;\n    N.Document = il;\n    N.Comment = sl;\n    N.Warning = ih;\n    N.AtRule = al;\n    N.Result = sh;\n    N.Input = ah;\n    N.Rule = ol;\n    N.Root = ll;\n    N.Node = uh;\n    eh.registerPostcss(N);\n    ul.exports = N;\n    N.default = N;\n});\nvar jr = S((Ur, fl)=>{\n    \"use strict\";\n    Ur.__esModule = !0;\n    Ur.default = ph;\n    function fh(t) {\n        for(var e = t.toLowerCase(), r = \"\", n = !1, i = 0; i < 6 && e[i] !== void 0; i++){\n            var a = e.charCodeAt(i), s = a >= 97 && a <= 102 || a >= 48 && a <= 57;\n            if (n = a === 32, !s) break;\n            r += e[i];\n        }\n        if (r.length !== 0) {\n            var o = parseInt(r, 16), l = o >= 55296 && o <= 57343;\n            return l || o === 0 || o > 1114111 ? [\n                \"�\",\n                r.length + (n ? 1 : 0)\n            ] : [\n                String.fromCodePoint(o),\n                r.length + (n ? 1 : 0)\n            ];\n        }\n    }\n    var ch = /\\\\/;\n    function ph(t) {\n        var e = ch.test(t);\n        if (!e) return t;\n        for(var r = \"\", n = 0; n < t.length; n++){\n            if (t[n] === \"\\\\\") {\n                var i = fh(t.slice(n + 1, n + 7));\n                if (i !== void 0) {\n                    r += i[0], n += i[1];\n                    continue;\n                }\n                if (t[n + 1] === \"\\\\\") {\n                    r += \"\\\\\", n++;\n                    continue;\n                }\n                t.length === n + 1 && (r += t[n]);\n                continue;\n            }\n            r += t[n];\n        }\n        return r;\n    }\n    fl.exports = Ur.default;\n});\nvar pl = S((zr, cl)=>{\n    \"use strict\";\n    zr.__esModule = !0;\n    zr.default = dh;\n    function dh(t) {\n        for(var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), n = 1; n < e; n++)r[n - 1] = arguments[n];\n        for(; r.length > 0;){\n            var i = r.shift();\n            if (!t[i]) return;\n            t = t[i];\n        }\n        return t;\n    }\n    cl.exports = zr.default;\n});\nvar hl = S((Vr, dl)=>{\n    \"use strict\";\n    Vr.__esModule = !0;\n    Vr.default = hh;\n    function hh(t) {\n        for(var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), n = 1; n < e; n++)r[n - 1] = arguments[n];\n        for(; r.length > 0;){\n            var i = r.shift();\n            t[i] || (t[i] = {}), t = t[i];\n        }\n    }\n    dl.exports = Vr.default;\n});\nvar gl = S((Wr, ml)=>{\n    \"use strict\";\n    Wr.__esModule = !0;\n    Wr.default = mh;\n    function mh(t) {\n        for(var e = \"\", r = t.indexOf(\"/*\"), n = 0; r >= 0;){\n            e = e + t.slice(n, r);\n            var i = t.indexOf(\"*/\", r + 2);\n            if (i < 0) return e;\n            n = i + 2, r = t.indexOf(\"/*\", n);\n        }\n        return e = e + t.slice(n), e;\n    }\n    ml.exports = Wr.default;\n});\nvar Ft = S((ye)=>{\n    \"use strict\";\n    ye.__esModule = !0;\n    ye.unesc = ye.stripComments = ye.getProp = ye.ensureObject = void 0;\n    var gh = Br(jr());\n    ye.unesc = gh.default;\n    var yh = Br(pl());\n    ye.getProp = yh.default;\n    var vh = Br(hl());\n    ye.ensureObject = vh.default;\n    var wh = Br(gl());\n    ye.stripComments = wh.default;\n    function Br(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n});\nvar Oe = S((Lt, wl)=>{\n    \"use strict\";\n    Lt.__esModule = !0;\n    Lt.default = void 0;\n    var yl = Ft();\n    function vl(t, e) {\n        for(var r = 0; r < e.length; r++){\n            var n = e[r];\n            n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);\n        }\n    }\n    function bh(t, e, r) {\n        return e && vl(t.prototype, e), r && vl(t, r), Object.defineProperty(t, \"prototype\", {\n            writable: !1\n        }), t;\n    }\n    var xh = function t(e, r) {\n        if (typeof e != \"object\" || e === null) return e;\n        var n = new e.constructor;\n        for(var i in e)if (!!e.hasOwnProperty(i)) {\n            var a = e[i], s = typeof a;\n            i === \"parent\" && s === \"object\" ? r && (n[i] = r) : a instanceof Array ? n[i] = a.map(function(o) {\n                return t(o, n);\n            }) : n[i] = t(a, n);\n        }\n        return n;\n    }, Sh = function() {\n        function t(r) {\n            r === void 0 && (r = {}), Object.assign(this, r), this.spaces = this.spaces || {}, this.spaces.before = this.spaces.before || \"\", this.spaces.after = this.spaces.after || \"\";\n        }\n        var e = t.prototype;\n        return e.remove = function() {\n            return this.parent && this.parent.removeChild(this), this.parent = void 0, this;\n        }, e.replaceWith = function() {\n            if (this.parent) {\n                for(var n in arguments)this.parent.insertBefore(this, arguments[n]);\n                this.remove();\n            }\n            return this;\n        }, e.next = function() {\n            return this.parent.at(this.parent.index(this) + 1);\n        }, e.prev = function() {\n            return this.parent.at(this.parent.index(this) - 1);\n        }, e.clone = function(n) {\n            n === void 0 && (n = {});\n            var i = xh(this);\n            for(var a in n)i[a] = n[a];\n            return i;\n        }, e.appendToPropertyAndEscape = function(n, i, a) {\n            this.raws || (this.raws = {});\n            var s = this[n], o = this.raws[n];\n            this[n] = s + i, o || a !== i ? this.raws[n] = (o || s) + a : delete this.raws[n];\n        }, e.setPropertyAndEscape = function(n, i, a) {\n            this.raws || (this.raws = {}), this[n] = i, this.raws[n] = a;\n        }, e.setPropertyWithoutEscape = function(n, i) {\n            this[n] = i, this.raws && delete this.raws[n];\n        }, e.isAtPosition = function(n, i) {\n            if (this.source && this.source.start && this.source.end) return !(this.source.start.line > n || this.source.end.line < n || this.source.start.line === n && this.source.start.column > i || this.source.end.line === n && this.source.end.column < i);\n        }, e.stringifyProperty = function(n) {\n            return this.raws && this.raws[n] || this[n];\n        }, e.valueToString = function() {\n            return String(this.stringifyProperty(\"value\"));\n        }, e.toString = function() {\n            return [\n                this.rawSpaceBefore,\n                this.valueToString(),\n                this.rawSpaceAfter\n            ].join(\"\");\n        }, bh(t, [\n            {\n                key: \"rawSpaceBefore\",\n                get: function() {\n                    var n = this.raws && this.raws.spaces && this.raws.spaces.before;\n                    return n === void 0 && (n = this.spaces && this.spaces.before), n || \"\";\n                },\n                set: function(n) {\n                    (0, yl.ensureObject)(this, \"raws\", \"spaces\"), this.raws.spaces.before = n;\n                }\n            },\n            {\n                key: \"rawSpaceAfter\",\n                get: function() {\n                    var n = this.raws && this.raws.spaces && this.raws.spaces.after;\n                    return n === void 0 && (n = this.spaces.after), n || \"\";\n                },\n                set: function(n) {\n                    (0, yl.ensureObject)(this, \"raws\", \"spaces\"), this.raws.spaces.after = n;\n                }\n            }\n        ]), t;\n    }();\n    Lt.default = Sh;\n    wl.exports = Lt.default;\n});\nvar J = S((U)=>{\n    \"use strict\";\n    U.__esModule = !0;\n    U.UNIVERSAL = U.TAG = U.STRING = U.SELECTOR = U.ROOT = U.PSEUDO = U.NESTING = U.ID = U.COMMENT = U.COMBINATOR = U.CLASS = U.ATTRIBUTE = void 0;\n    var kh = \"tag\";\n    U.TAG = kh;\n    var Oh = \"string\";\n    U.STRING = Oh;\n    var Eh = \"selector\";\n    U.SELECTOR = Eh;\n    var Ch = \"root\";\n    U.ROOT = Ch;\n    var Ah = \"pseudo\";\n    U.PSEUDO = Ah;\n    var _h = \"nesting\";\n    U.NESTING = _h;\n    var Th = \"id\";\n    U.ID = Th;\n    var Ph = \"comment\";\n    U.COMMENT = Ph;\n    var Ih = \"combinator\";\n    U.COMBINATOR = Ih;\n    var Rh = \"class\";\n    U.CLASS = Rh;\n    var Dh = \"attribute\";\n    U.ATTRIBUTE = Dh;\n    var Mh = \"universal\";\n    U.UNIVERSAL = Mh;\n});\nvar Gr = S((Nt, kl)=>{\n    \"use strict\";\n    Nt.__esModule = !0;\n    Nt.default = void 0;\n    var Fh = Nh(Oe()), Ee = Lh(J());\n    function Sl(t) {\n        if (typeof WeakMap != \"function\") return null;\n        var e = new WeakMap, r = new WeakMap;\n        return (Sl = function(i) {\n            return i ? r : e;\n        })(t);\n    }\n    function Lh(t, e) {\n        if (!e && t && t.__esModule) return t;\n        if (t === null || typeof t != \"object\" && typeof t != \"function\") return {\n            default: t\n        };\n        var r = Sl(e);\n        if (r && r.has(t)) return r.get(t);\n        var n = {}, i = Object.defineProperty && Object.getOwnPropertyDescriptor;\n        for(var a in t)if (a !== \"default\" && Object.prototype.hasOwnProperty.call(t, a)) {\n            var s = i ? Object.getOwnPropertyDescriptor(t, a) : null;\n            s && (s.get || s.set) ? Object.defineProperty(n, a, s) : n[a] = t[a];\n        }\n        return n.default = t, r && r.set(t, n), n;\n    }\n    function Nh(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    function qh(t, e) {\n        var r = typeof Symbol < \"u\" && t[Symbol.iterator] || t[\"@@iterator\"];\n        if (r) return (r = r.call(t)).next.bind(r);\n        if (Array.isArray(t) || (r = $h(t)) || e && t && typeof t.length == \"number\") {\n            r && (t = r);\n            var n = 0;\n            return function() {\n                return n >= t.length ? {\n                    done: !0\n                } : {\n                    done: !1,\n                    value: t[n++]\n                };\n            };\n        }\n        throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n    }\n    function $h(t, e) {\n        if (!!t) {\n            if (typeof t == \"string\") return bl(t, e);\n            var r = Object.prototype.toString.call(t).slice(8, -1);\n            if (r === \"Object\" && t.constructor && (r = t.constructor.name), r === \"Map\" || r === \"Set\") return Array.from(t);\n            if (r === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return bl(t, e);\n        }\n    }\n    function bl(t, e) {\n        (e == null || e > t.length) && (e = t.length);\n        for(var r = 0, n = new Array(e); r < e; r++)n[r] = t[r];\n        return n;\n    }\n    function xl(t, e) {\n        for(var r = 0; r < e.length; r++){\n            var n = e[r];\n            n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);\n        }\n    }\n    function Uh(t, e, r) {\n        return e && xl(t.prototype, e), r && xl(t, r), Object.defineProperty(t, \"prototype\", {\n            writable: !1\n        }), t;\n    }\n    function jh(t, e) {\n        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, bi(t, e);\n    }\n    function bi(t, e) {\n        return bi = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {\n            return n.__proto__ = i, n;\n        }, bi(t, e);\n    }\n    var zh = function(t) {\n        jh(e, t);\n        function e(n) {\n            var i;\n            return i = t.call(this, n) || this, i.nodes || (i.nodes = []), i;\n        }\n        var r = e.prototype;\n        return r.append = function(i) {\n            return i.parent = this, this.nodes.push(i), this;\n        }, r.prepend = function(i) {\n            return i.parent = this, this.nodes.unshift(i), this;\n        }, r.at = function(i) {\n            return this.nodes[i];\n        }, r.index = function(i) {\n            return typeof i == \"number\" ? i : this.nodes.indexOf(i);\n        }, r.removeChild = function(i) {\n            i = this.index(i), this.at(i).parent = void 0, this.nodes.splice(i, 1);\n            var a;\n            for(var s in this.indexes)a = this.indexes[s], a >= i && (this.indexes[s] = a - 1);\n            return this;\n        }, r.removeAll = function() {\n            for(var i = qh(this.nodes), a; !(a = i()).done;){\n                var s = a.value;\n                s.parent = void 0;\n            }\n            return this.nodes = [], this;\n        }, r.empty = function() {\n            return this.removeAll();\n        }, r.insertAfter = function(i, a) {\n            a.parent = this;\n            var s = this.index(i);\n            this.nodes.splice(s + 1, 0, a), a.parent = this;\n            var o;\n            for(var l in this.indexes)o = this.indexes[l], s <= o && (this.indexes[l] = o + 1);\n            return this;\n        }, r.insertBefore = function(i, a) {\n            a.parent = this;\n            var s = this.index(i);\n            this.nodes.splice(s, 0, a), a.parent = this;\n            var o;\n            for(var l in this.indexes)o = this.indexes[l], o <= s && (this.indexes[l] = o + 1);\n            return this;\n        }, r._findChildAtPosition = function(i, a) {\n            var s = void 0;\n            return this.each(function(o) {\n                if (o.atPosition) {\n                    var l = o.atPosition(i, a);\n                    if (l) return s = l, !1;\n                } else if (o.isAtPosition(i, a)) return s = o, !1;\n            }), s;\n        }, r.atPosition = function(i, a) {\n            if (this.isAtPosition(i, a)) return this._findChildAtPosition(i, a) || this;\n        }, r._inferEndPosition = function() {\n            this.last && this.last.source && this.last.source.end && (this.source = this.source || {}, this.source.end = this.source.end || {}, Object.assign(this.source.end, this.last.source.end));\n        }, r.each = function(i) {\n            this.lastEach || (this.lastEach = 0), this.indexes || (this.indexes = {}), this.lastEach++;\n            var a = this.lastEach;\n            if (this.indexes[a] = 0, !!this.length) {\n                for(var s, o; this.indexes[a] < this.length && (s = this.indexes[a], o = i(this.at(s), s), o !== !1);)this.indexes[a] += 1;\n                if (delete this.indexes[a], o === !1) return !1;\n            }\n        }, r.walk = function(i) {\n            return this.each(function(a, s) {\n                var o = i(a, s);\n                if (o !== !1 && a.length && (o = a.walk(i)), o === !1) return !1;\n            });\n        }, r.walkAttributes = function(i) {\n            var a = this;\n            return this.walk(function(s) {\n                if (s.type === Ee.ATTRIBUTE) return i.call(a, s);\n            });\n        }, r.walkClasses = function(i) {\n            var a = this;\n            return this.walk(function(s) {\n                if (s.type === Ee.CLASS) return i.call(a, s);\n            });\n        }, r.walkCombinators = function(i) {\n            var a = this;\n            return this.walk(function(s) {\n                if (s.type === Ee.COMBINATOR) return i.call(a, s);\n            });\n        }, r.walkComments = function(i) {\n            var a = this;\n            return this.walk(function(s) {\n                if (s.type === Ee.COMMENT) return i.call(a, s);\n            });\n        }, r.walkIds = function(i) {\n            var a = this;\n            return this.walk(function(s) {\n                if (s.type === Ee.ID) return i.call(a, s);\n            });\n        }, r.walkNesting = function(i) {\n            var a = this;\n            return this.walk(function(s) {\n                if (s.type === Ee.NESTING) return i.call(a, s);\n            });\n        }, r.walkPseudos = function(i) {\n            var a = this;\n            return this.walk(function(s) {\n                if (s.type === Ee.PSEUDO) return i.call(a, s);\n            });\n        }, r.walkTags = function(i) {\n            var a = this;\n            return this.walk(function(s) {\n                if (s.type === Ee.TAG) return i.call(a, s);\n            });\n        }, r.walkUniversals = function(i) {\n            var a = this;\n            return this.walk(function(s) {\n                if (s.type === Ee.UNIVERSAL) return i.call(a, s);\n            });\n        }, r.split = function(i) {\n            var a = this, s = [];\n            return this.reduce(function(o, l, u) {\n                var f = i.call(a, l);\n                return s.push(l), f ? (o.push(s), s = []) : u === a.length - 1 && o.push(s), o;\n            }, []);\n        }, r.map = function(i) {\n            return this.nodes.map(i);\n        }, r.reduce = function(i, a) {\n            return this.nodes.reduce(i, a);\n        }, r.every = function(i) {\n            return this.nodes.every(i);\n        }, r.some = function(i) {\n            return this.nodes.some(i);\n        }, r.filter = function(i) {\n            return this.nodes.filter(i);\n        }, r.sort = function(i) {\n            return this.nodes.sort(i);\n        }, r.toString = function() {\n            return this.map(String).join(\"\");\n        }, Uh(e, [\n            {\n                key: \"first\",\n                get: function() {\n                    return this.at(0);\n                }\n            },\n            {\n                key: \"last\",\n                get: function() {\n                    return this.at(this.length - 1);\n                }\n            },\n            {\n                key: \"length\",\n                get: function() {\n                    return this.nodes.length;\n                }\n            }\n        ]), e;\n    }(Fh.default);\n    Nt.default = zh;\n    kl.exports = Nt.default;\n});\nvar Si = S((qt, El)=>{\n    \"use strict\";\n    qt.__esModule = !0;\n    qt.default = void 0;\n    var Vh = Bh(Gr()), Wh = J();\n    function Bh(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    function Ol(t, e) {\n        for(var r = 0; r < e.length; r++){\n            var n = e[r];\n            n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);\n        }\n    }\n    function Gh(t, e, r) {\n        return e && Ol(t.prototype, e), r && Ol(t, r), Object.defineProperty(t, \"prototype\", {\n            writable: !1\n        }), t;\n    }\n    function Yh(t, e) {\n        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, xi(t, e);\n    }\n    function xi(t, e) {\n        return xi = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {\n            return n.__proto__ = i, n;\n        }, xi(t, e);\n    }\n    var Hh = function(t) {\n        Yh(e, t);\n        function e(n) {\n            var i;\n            return i = t.call(this, n) || this, i.type = Wh.ROOT, i;\n        }\n        var r = e.prototype;\n        return r.toString = function() {\n            var i = this.reduce(function(a, s) {\n                return a.push(String(s)), a;\n            }, []).join(\",\");\n            return this.trailingComma ? i + \",\" : i;\n        }, r.error = function(i, a) {\n            return this._error ? this._error(i, a) : new Error(i);\n        }, Gh(e, [\n            {\n                key: \"errorGenerator\",\n                set: function(i) {\n                    this._error = i;\n                }\n            }\n        ]), e;\n    }(Vh.default);\n    qt.default = Hh;\n    El.exports = qt.default;\n});\nvar Oi = S(($t, Cl)=>{\n    \"use strict\";\n    $t.__esModule = !0;\n    $t.default = void 0;\n    var Qh = Xh(Gr()), Jh = J();\n    function Xh(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    function Kh(t, e) {\n        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, ki(t, e);\n    }\n    function ki(t, e) {\n        return ki = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {\n            return n.__proto__ = i, n;\n        }, ki(t, e);\n    }\n    var Zh = function(t) {\n        Kh(e, t);\n        function e(r) {\n            var n;\n            return n = t.call(this, r) || this, n.type = Jh.SELECTOR, n;\n        }\n        return e;\n    }(Qh.default);\n    $t.default = Zh;\n    Cl.exports = $t.default;\n});\nvar Yr = S((Ex, Al)=>{\n    \"use strict\";\n    var em = {}, tm = em.hasOwnProperty, rm = function(e, r) {\n        if (!e) return r;\n        var n = {};\n        for(var i in r)n[i] = tm.call(e, i) ? e[i] : r[i];\n        return n;\n    }, nm = /[ -,\\.\\/:-@\\[-\\^`\\{-~]/, im = /[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/, sm = /(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g, Ei = function t(e, r) {\n        r = rm(r, t.options), r.quotes != \"single\" && r.quotes != \"double\" && (r.quotes = \"single\");\n        for(var n = r.quotes == \"double\" ? '\"' : \"'\", i = r.isIdentifier, a = e.charAt(0), s = \"\", o = 0, l = e.length; o < l;){\n            var u = e.charAt(o++), f = u.charCodeAt(), p = void 0;\n            if (f < 32 || f > 126) {\n                if (f >= 55296 && f <= 56319 && o < l) {\n                    var c = e.charCodeAt(o++);\n                    (c & 64512) == 56320 ? f = ((f & 1023) << 10) + (c & 1023) + 65536 : o--;\n                }\n                p = \"\\\\\" + f.toString(16).toUpperCase() + \" \";\n            } else r.escapeEverything ? nm.test(u) ? p = \"\\\\\" + u : p = \"\\\\\" + f.toString(16).toUpperCase() + \" \" : /[\\t\\n\\f\\r\\x0B]/.test(u) ? p = \"\\\\\" + f.toString(16).toUpperCase() + \" \" : u == \"\\\\\" || !i && (u == '\"' && n == u || u == \"'\" && n == u) || i && im.test(u) ? p = \"\\\\\" + u : p = u;\n            s += p;\n        }\n        return i && (/^-[-\\d]/.test(s) ? s = \"\\\\-\" + s.slice(1) : /\\d/.test(a) && (s = \"\\\\3\" + a + \" \" + s.slice(1))), s = s.replace(sm, function(d, h, y) {\n            return h && h.length % 2 ? d : (h || \"\") + y;\n        }), !i && r.wrap ? n + s + n : s;\n    };\n    Ei.options = {\n        escapeEverything: !1,\n        isIdentifier: !1,\n        quotes: \"single\",\n        wrap: !1\n    };\n    Ei.version = \"3.0.0\";\n    Al.exports = Ei;\n});\nvar Ai = S((Ut, Pl)=>{\n    \"use strict\";\n    Ut.__esModule = !0;\n    Ut.default = void 0;\n    var am = Tl(Yr()), om = Ft(), lm = Tl(Oe()), um = J();\n    function Tl(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    function _l(t, e) {\n        for(var r = 0; r < e.length; r++){\n            var n = e[r];\n            n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);\n        }\n    }\n    function fm(t, e, r) {\n        return e && _l(t.prototype, e), r && _l(t, r), Object.defineProperty(t, \"prototype\", {\n            writable: !1\n        }), t;\n    }\n    function cm(t, e) {\n        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, Ci(t, e);\n    }\n    function Ci(t, e) {\n        return Ci = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {\n            return n.__proto__ = i, n;\n        }, Ci(t, e);\n    }\n    var pm = function(t) {\n        cm(e, t);\n        function e(n) {\n            var i;\n            return i = t.call(this, n) || this, i.type = um.CLASS, i._constructed = !0, i;\n        }\n        var r = e.prototype;\n        return r.valueToString = function() {\n            return \".\" + t.prototype.valueToString.call(this);\n        }, fm(e, [\n            {\n                key: \"value\",\n                get: function() {\n                    return this._value;\n                },\n                set: function(i) {\n                    if (this._constructed) {\n                        var a = (0, am.default)(i, {\n                            isIdentifier: !0\n                        });\n                        a !== i ? ((0, om.ensureObject)(this, \"raws\"), this.raws.value = a) : this.raws && delete this.raws.value;\n                    }\n                    this._value = i;\n                }\n            }\n        ]), e;\n    }(lm.default);\n    Ut.default = pm;\n    Pl.exports = Ut.default;\n});\nvar Ti = S((jt, Il)=>{\n    \"use strict\";\n    jt.__esModule = !0;\n    jt.default = void 0;\n    var dm = mm(Oe()), hm = J();\n    function mm(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    function gm(t, e) {\n        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, _i(t, e);\n    }\n    function _i(t, e) {\n        return _i = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {\n            return n.__proto__ = i, n;\n        }, _i(t, e);\n    }\n    var ym = function(t) {\n        gm(e, t);\n        function e(r) {\n            var n;\n            return n = t.call(this, r) || this, n.type = hm.COMMENT, n;\n        }\n        return e;\n    }(dm.default);\n    jt.default = ym;\n    Il.exports = jt.default;\n});\nvar Ii = S((zt, Rl)=>{\n    \"use strict\";\n    zt.__esModule = !0;\n    zt.default = void 0;\n    var vm = bm(Oe()), wm = J();\n    function bm(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    function xm(t, e) {\n        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, Pi(t, e);\n    }\n    function Pi(t, e) {\n        return Pi = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {\n            return n.__proto__ = i, n;\n        }, Pi(t, e);\n    }\n    var Sm = function(t) {\n        xm(e, t);\n        function e(n) {\n            var i;\n            return i = t.call(this, n) || this, i.type = wm.ID, i;\n        }\n        var r = e.prototype;\n        return r.valueToString = function() {\n            return \"#\" + t.prototype.valueToString.call(this);\n        }, e;\n    }(vm.default);\n    zt.default = Sm;\n    Rl.exports = zt.default;\n});\nvar Hr = S((Vt, Fl)=>{\n    \"use strict\";\n    Vt.__esModule = !0;\n    Vt.default = void 0;\n    var km = Ml(Yr()), Om = Ft(), Em = Ml(Oe());\n    function Ml(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    function Dl(t, e) {\n        for(var r = 0; r < e.length; r++){\n            var n = e[r];\n            n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);\n        }\n    }\n    function Cm(t, e, r) {\n        return e && Dl(t.prototype, e), r && Dl(t, r), Object.defineProperty(t, \"prototype\", {\n            writable: !1\n        }), t;\n    }\n    function Am(t, e) {\n        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, Ri(t, e);\n    }\n    function Ri(t, e) {\n        return Ri = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {\n            return n.__proto__ = i, n;\n        }, Ri(t, e);\n    }\n    var _m = function(t) {\n        Am(e, t);\n        function e() {\n            return t.apply(this, arguments) || this;\n        }\n        var r = e.prototype;\n        return r.qualifiedName = function(i) {\n            return this.namespace ? this.namespaceString + \"|\" + i : i;\n        }, r.valueToString = function() {\n            return this.qualifiedName(t.prototype.valueToString.call(this));\n        }, Cm(e, [\n            {\n                key: \"namespace\",\n                get: function() {\n                    return this._namespace;\n                },\n                set: function(i) {\n                    if (i === !0 || i === \"*\" || i === \"&\") {\n                        this._namespace = i, this.raws && delete this.raws.namespace;\n                        return;\n                    }\n                    var a = (0, km.default)(i, {\n                        isIdentifier: !0\n                    });\n                    this._namespace = i, a !== i ? ((0, Om.ensureObject)(this, \"raws\"), this.raws.namespace = a) : this.raws && delete this.raws.namespace;\n                }\n            },\n            {\n                key: \"ns\",\n                get: function() {\n                    return this._namespace;\n                },\n                set: function(i) {\n                    this.namespace = i;\n                }\n            },\n            {\n                key: \"namespaceString\",\n                get: function() {\n                    if (this.namespace) {\n                        var i = this.stringifyProperty(\"namespace\");\n                        return i === !0 ? \"\" : i;\n                    } else return \"\";\n                }\n            }\n        ]), e;\n    }(Em.default);\n    Vt.default = _m;\n    Fl.exports = Vt.default;\n});\nvar Mi = S((Wt, Ll)=>{\n    \"use strict\";\n    Wt.__esModule = !0;\n    Wt.default = void 0;\n    var Tm = Im(Hr()), Pm = J();\n    function Im(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    function Rm(t, e) {\n        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, Di(t, e);\n    }\n    function Di(t, e) {\n        return Di = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {\n            return n.__proto__ = i, n;\n        }, Di(t, e);\n    }\n    var Dm = function(t) {\n        Rm(e, t);\n        function e(r) {\n            var n;\n            return n = t.call(this, r) || this, n.type = Pm.TAG, n;\n        }\n        return e;\n    }(Tm.default);\n    Wt.default = Dm;\n    Ll.exports = Wt.default;\n});\nvar Li = S((Bt, Nl)=>{\n    \"use strict\";\n    Bt.__esModule = !0;\n    Bt.default = void 0;\n    var Mm = Lm(Oe()), Fm = J();\n    function Lm(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    function Nm(t, e) {\n        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, Fi(t, e);\n    }\n    function Fi(t, e) {\n        return Fi = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {\n            return n.__proto__ = i, n;\n        }, Fi(t, e);\n    }\n    var qm = function(t) {\n        Nm(e, t);\n        function e(r) {\n            var n;\n            return n = t.call(this, r) || this, n.type = Fm.STRING, n;\n        }\n        return e;\n    }(Mm.default);\n    Bt.default = qm;\n    Nl.exports = Bt.default;\n});\nvar qi = S((Gt, ql)=>{\n    \"use strict\";\n    Gt.__esModule = !0;\n    Gt.default = void 0;\n    var $m = jm(Gr()), Um = J();\n    function jm(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    function zm(t, e) {\n        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, Ni(t, e);\n    }\n    function Ni(t, e) {\n        return Ni = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {\n            return n.__proto__ = i, n;\n        }, Ni(t, e);\n    }\n    var Vm = function(t) {\n        zm(e, t);\n        function e(n) {\n            var i;\n            return i = t.call(this, n) || this, i.type = Um.PSEUDO, i;\n        }\n        var r = e.prototype;\n        return r.toString = function() {\n            var i = this.length ? \"(\" + this.map(String).join(\",\") + \")\" : \"\";\n            return [\n                this.rawSpaceBefore,\n                this.stringifyProperty(\"value\"),\n                i,\n                this.rawSpaceAfter\n            ].join(\"\");\n        }, e;\n    }($m.default);\n    Gt.default = Vm;\n    ql.exports = Gt.default;\n});\nvar Ul = S((Cx, $l)=>{\n    $l.exports = Wm;\n    function Wm(t, e) {\n        if ($i(\"noDeprecation\")) return t;\n        var r = !1;\n        function n() {\n            if (!r) {\n                if ($i(\"throwDeprecation\")) throw new Error(e);\n                $i(\"traceDeprecation\") ? console.trace(e) : console.warn(e), r = !0;\n            }\n            return t.apply(this, arguments);\n        }\n        return n;\n    }\n    function $i(t) {\n        try {\n            if (!global.localStorage) return !1;\n        } catch  {\n            return !1;\n        }\n        var e = global.localStorage[t];\n        return e == null ? !1 : String(e).toLowerCase() === \"true\";\n    }\n});\nvar Bi = S((Qt)=>{\n    \"use strict\";\n    Qt.__esModule = !0;\n    Qt.default = void 0;\n    Qt.unescapeValue = Wi;\n    var Yt = Vi(Yr()), Bm = Vi(jr()), Gm = Vi(Hr()), Ym = J(), Ui;\n    function Vi(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    function jl(t, e) {\n        for(var r = 0; r < e.length; r++){\n            var n = e[r];\n            n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);\n        }\n    }\n    function Hm(t, e, r) {\n        return e && jl(t.prototype, e), r && jl(t, r), Object.defineProperty(t, \"prototype\", {\n            writable: !1\n        }), t;\n    }\n    function Qm(t, e) {\n        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, zi(t, e);\n    }\n    function zi(t, e) {\n        return zi = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {\n            return n.__proto__ = i, n;\n        }, zi(t, e);\n    }\n    var Ht = Ul(), Jm = /^('|\")([^]*)\\1$/, Xm = Ht(function() {}, \"Assigning an attribute a value containing characters that might need to be escaped is deprecated. Call attribute.setValue() instead.\"), Km = Ht(function() {}, \"Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.\"), Zm = Ht(function() {}, \"Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.\");\n    function Wi(t) {\n        var e = !1, r = null, n = t, i = n.match(Jm);\n        return i && (r = i[1], n = i[2]), n = (0, Bm.default)(n), n !== t && (e = !0), {\n            deprecatedUsage: e,\n            unescaped: n,\n            quoteMark: r\n        };\n    }\n    function eg(t) {\n        if (t.quoteMark !== void 0 || t.value === void 0) return t;\n        Zm();\n        var e = Wi(t.value), r = e.quoteMark, n = e.unescaped;\n        return t.raws || (t.raws = {}), t.raws.value === void 0 && (t.raws.value = t.value), t.value = n, t.quoteMark = r, t;\n    }\n    var Qr = function(t) {\n        Qm(e, t);\n        function e(n) {\n            var i;\n            return n === void 0 && (n = {}), i = t.call(this, eg(n)) || this, i.type = Ym.ATTRIBUTE, i.raws = i.raws || {}, Object.defineProperty(i.raws, \"unquoted\", {\n                get: Ht(function() {\n                    return i.value;\n                }, \"attr.raws.unquoted is deprecated. Call attr.value instead.\"),\n                set: Ht(function() {\n                    return i.value;\n                }, \"Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.\")\n            }), i._constructed = !0, i;\n        }\n        var r = e.prototype;\n        return r.getQuotedValue = function(i) {\n            i === void 0 && (i = {});\n            var a = this._determineQuoteMark(i), s = ji[a], o = (0, Yt.default)(this._value, s);\n            return o;\n        }, r._determineQuoteMark = function(i) {\n            return i.smart ? this.smartQuoteMark(i) : this.preferredQuoteMark(i);\n        }, r.setValue = function(i, a) {\n            a === void 0 && (a = {}), this._value = i, this._quoteMark = this._determineQuoteMark(a), this._syncRawValue();\n        }, r.smartQuoteMark = function(i) {\n            var a = this.value, s = a.replace(/[^']/g, \"\").length, o = a.replace(/[^\"]/g, \"\").length;\n            if (s + o === 0) {\n                var l = (0, Yt.default)(a, {\n                    isIdentifier: !0\n                });\n                if (l === a) return e.NO_QUOTE;\n                var u = this.preferredQuoteMark(i);\n                if (u === e.NO_QUOTE) {\n                    var f = this.quoteMark || i.quoteMark || e.DOUBLE_QUOTE, p = ji[f], c = (0, Yt.default)(a, p);\n                    if (c.length < l.length) return f;\n                }\n                return u;\n            } else return o === s ? this.preferredQuoteMark(i) : o < s ? e.DOUBLE_QUOTE : e.SINGLE_QUOTE;\n        }, r.preferredQuoteMark = function(i) {\n            var a = i.preferCurrentQuoteMark ? this.quoteMark : i.quoteMark;\n            return a === void 0 && (a = i.preferCurrentQuoteMark ? i.quoteMark : this.quoteMark), a === void 0 && (a = e.DOUBLE_QUOTE), a;\n        }, r._syncRawValue = function() {\n            var i = (0, Yt.default)(this._value, ji[this.quoteMark]);\n            i === this._value ? this.raws && delete this.raws.value : this.raws.value = i;\n        }, r._handleEscapes = function(i, a) {\n            if (this._constructed) {\n                var s = (0, Yt.default)(a, {\n                    isIdentifier: !0\n                });\n                s !== a ? this.raws[i] = s : delete this.raws[i];\n            }\n        }, r._spacesFor = function(i) {\n            var a = {\n                before: \"\",\n                after: \"\"\n            }, s = this.spaces[i] || {}, o = this.raws.spaces && this.raws.spaces[i] || {};\n            return Object.assign(a, s, o);\n        }, r._stringFor = function(i, a, s) {\n            a === void 0 && (a = i), s === void 0 && (s = zl);\n            var o = this._spacesFor(a);\n            return s(this.stringifyProperty(i), o);\n        }, r.offsetOf = function(i) {\n            var a = 1, s = this._spacesFor(\"attribute\");\n            if (a += s.before.length, i === \"namespace\" || i === \"ns\") return this.namespace ? a : -1;\n            if (i === \"attributeNS\" || (a += this.namespaceString.length, this.namespace && (a += 1), i === \"attribute\")) return a;\n            a += this.stringifyProperty(\"attribute\").length, a += s.after.length;\n            var o = this._spacesFor(\"operator\");\n            a += o.before.length;\n            var l = this.stringifyProperty(\"operator\");\n            if (i === \"operator\") return l ? a : -1;\n            a += l.length, a += o.after.length;\n            var u = this._spacesFor(\"value\");\n            a += u.before.length;\n            var f = this.stringifyProperty(\"value\");\n            if (i === \"value\") return f ? a : -1;\n            a += f.length, a += u.after.length;\n            var p = this._spacesFor(\"insensitive\");\n            return a += p.before.length, i === \"insensitive\" && this.insensitive ? a : -1;\n        }, r.toString = function() {\n            var i = this, a = [\n                this.rawSpaceBefore,\n                \"[\"\n            ];\n            return a.push(this._stringFor(\"qualifiedAttribute\", \"attribute\")), this.operator && (this.value || this.value === \"\") && (a.push(this._stringFor(\"operator\")), a.push(this._stringFor(\"value\")), a.push(this._stringFor(\"insensitiveFlag\", \"insensitive\", function(s, o) {\n                return s.length > 0 && !i.quoted && o.before.length === 0 && !(i.spaces.value && i.spaces.value.after) && (o.before = \" \"), zl(s, o);\n            }))), a.push(\"]\"), a.push(this.rawSpaceAfter), a.join(\"\");\n        }, Hm(e, [\n            {\n                key: \"quoted\",\n                get: function() {\n                    var i = this.quoteMark;\n                    return i === \"'\" || i === '\"';\n                },\n                set: function(i) {\n                    Km();\n                }\n            },\n            {\n                key: \"quoteMark\",\n                get: function() {\n                    return this._quoteMark;\n                },\n                set: function(i) {\n                    if (!this._constructed) {\n                        this._quoteMark = i;\n                        return;\n                    }\n                    this._quoteMark !== i && (this._quoteMark = i, this._syncRawValue());\n                }\n            },\n            {\n                key: \"qualifiedAttribute\",\n                get: function() {\n                    return this.qualifiedName(this.raws.attribute || this.attribute);\n                }\n            },\n            {\n                key: \"insensitiveFlag\",\n                get: function() {\n                    return this.insensitive ? \"i\" : \"\";\n                }\n            },\n            {\n                key: \"value\",\n                get: function() {\n                    return this._value;\n                },\n                set: function(i) {\n                    if (this._constructed) {\n                        var a = Wi(i), s = a.deprecatedUsage, o = a.unescaped, l = a.quoteMark;\n                        if (s && Xm(), o === this._value && l === this._quoteMark) return;\n                        this._value = o, this._quoteMark = l, this._syncRawValue();\n                    } else this._value = i;\n                }\n            },\n            {\n                key: \"insensitive\",\n                get: function() {\n                    return this._insensitive;\n                },\n                set: function(i) {\n                    i || (this._insensitive = !1, this.raws && (this.raws.insensitiveFlag === \"I\" || this.raws.insensitiveFlag === \"i\") && (this.raws.insensitiveFlag = void 0)), this._insensitive = i;\n                }\n            },\n            {\n                key: \"attribute\",\n                get: function() {\n                    return this._attribute;\n                },\n                set: function(i) {\n                    this._handleEscapes(\"attribute\", i), this._attribute = i;\n                }\n            }\n        ]), e;\n    }(Gm.default);\n    Qt.default = Qr;\n    Qr.NO_QUOTE = null;\n    Qr.SINGLE_QUOTE = \"'\";\n    Qr.DOUBLE_QUOTE = '\"';\n    var ji = (Ui = {\n        \"'\": {\n            quotes: \"single\",\n            wrap: !0\n        },\n        '\"': {\n            quotes: \"double\",\n            wrap: !0\n        }\n    }, Ui[null] = {\n        isIdentifier: !0\n    }, Ui);\n    function zl(t, e) {\n        return \"\" + e.before + t + e.after;\n    }\n});\nvar Yi = S((Jt, Vl)=>{\n    \"use strict\";\n    Jt.__esModule = !0;\n    Jt.default = void 0;\n    var tg = ng(Hr()), rg = J();\n    function ng(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    function ig(t, e) {\n        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, Gi(t, e);\n    }\n    function Gi(t, e) {\n        return Gi = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {\n            return n.__proto__ = i, n;\n        }, Gi(t, e);\n    }\n    var sg = function(t) {\n        ig(e, t);\n        function e(r) {\n            var n;\n            return n = t.call(this, r) || this, n.type = rg.UNIVERSAL, n.value = \"*\", n;\n        }\n        return e;\n    }(tg.default);\n    Jt.default = sg;\n    Vl.exports = Jt.default;\n});\nvar Qi = S((Xt, Wl)=>{\n    \"use strict\";\n    Xt.__esModule = !0;\n    Xt.default = void 0;\n    var ag = lg(Oe()), og = J();\n    function lg(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    function ug(t, e) {\n        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, Hi(t, e);\n    }\n    function Hi(t, e) {\n        return Hi = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {\n            return n.__proto__ = i, n;\n        }, Hi(t, e);\n    }\n    var fg = function(t) {\n        ug(e, t);\n        function e(r) {\n            var n;\n            return n = t.call(this, r) || this, n.type = og.COMBINATOR, n;\n        }\n        return e;\n    }(ag.default);\n    Xt.default = fg;\n    Wl.exports = Xt.default;\n});\nvar Xi = S((Kt, Bl)=>{\n    \"use strict\";\n    Kt.__esModule = !0;\n    Kt.default = void 0;\n    var cg = dg(Oe()), pg = J();\n    function dg(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    function hg(t, e) {\n        t.prototype = Object.create(e.prototype), t.prototype.constructor = t, Ji(t, e);\n    }\n    function Ji(t, e) {\n        return Ji = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, i) {\n            return n.__proto__ = i, n;\n        }, Ji(t, e);\n    }\n    var mg = function(t) {\n        hg(e, t);\n        function e(r) {\n            var n;\n            return n = t.call(this, r) || this, n.type = pg.NESTING, n.value = \"&\", n;\n        }\n        return e;\n    }(cg.default);\n    Kt.default = mg;\n    Bl.exports = Kt.default;\n});\nvar Yl = S((Jr, Gl)=>{\n    \"use strict\";\n    Jr.__esModule = !0;\n    Jr.default = gg;\n    function gg(t) {\n        return t.sort(function(e, r) {\n            return e - r;\n        });\n    }\n    Gl.exports = Jr.default;\n});\nvar Ki = S((P)=>{\n    \"use strict\";\n    P.__esModule = !0;\n    P.word = P.tilde = P.tab = P.str = P.space = P.slash = P.singleQuote = P.semicolon = P.plus = P.pipe = P.openSquare = P.openParenthesis = P.newline = P.greaterThan = P.feed = P.equals = P.doubleQuote = P.dollar = P.cr = P.comment = P.comma = P.combinator = P.colon = P.closeSquare = P.closeParenthesis = P.caret = P.bang = P.backslash = P.at = P.asterisk = P.ampersand = void 0;\n    var yg = 38;\n    P.ampersand = yg;\n    var vg = 42;\n    P.asterisk = vg;\n    var wg = 64;\n    P.at = wg;\n    var bg = 44;\n    P.comma = bg;\n    var xg = 58;\n    P.colon = xg;\n    var Sg = 59;\n    P.semicolon = Sg;\n    var kg = 40;\n    P.openParenthesis = kg;\n    var Og = 41;\n    P.closeParenthesis = Og;\n    var Eg = 91;\n    P.openSquare = Eg;\n    var Cg = 93;\n    P.closeSquare = Cg;\n    var Ag = 36;\n    P.dollar = Ag;\n    var _g = 126;\n    P.tilde = _g;\n    var Tg = 94;\n    P.caret = Tg;\n    var Pg = 43;\n    P.plus = Pg;\n    var Ig = 61;\n    P.equals = Ig;\n    var Rg = 124;\n    P.pipe = Rg;\n    var Dg = 62;\n    P.greaterThan = Dg;\n    var Mg = 32;\n    P.space = Mg;\n    var Hl = 39;\n    P.singleQuote = Hl;\n    var Fg = 34;\n    P.doubleQuote = Fg;\n    var Lg = 47;\n    P.slash = Lg;\n    var Ng = 33;\n    P.bang = Ng;\n    var qg = 92;\n    P.backslash = qg;\n    var $g = 13;\n    P.cr = $g;\n    var Ug = 12;\n    P.feed = Ug;\n    var jg = 10;\n    P.newline = jg;\n    var zg = 9;\n    P.tab = zg;\n    var Vg = Hl;\n    P.str = Vg;\n    var Wg = -1;\n    P.comment = Wg;\n    var Bg = -2;\n    P.word = Bg;\n    var Gg = -3;\n    P.combinator = Gg;\n});\nvar Xl = S((Zt)=>{\n    \"use strict\";\n    Zt.__esModule = !0;\n    Zt.FIELDS = void 0;\n    Zt.default = Zg;\n    var C = Yg(Ki()), Ze, q;\n    function Jl(t) {\n        if (typeof WeakMap != \"function\") return null;\n        var e = new WeakMap, r = new WeakMap;\n        return (Jl = function(i) {\n            return i ? r : e;\n        })(t);\n    }\n    function Yg(t, e) {\n        if (!e && t && t.__esModule) return t;\n        if (t === null || typeof t != \"object\" && typeof t != \"function\") return {\n            default: t\n        };\n        var r = Jl(e);\n        if (r && r.has(t)) return r.get(t);\n        var n = {}, i = Object.defineProperty && Object.getOwnPropertyDescriptor;\n        for(var a in t)if (a !== \"default\" && Object.prototype.hasOwnProperty.call(t, a)) {\n            var s = i ? Object.getOwnPropertyDescriptor(t, a) : null;\n            s && (s.get || s.set) ? Object.defineProperty(n, a, s) : n[a] = t[a];\n        }\n        return n.default = t, r && r.set(t, n), n;\n    }\n    var Hg = (Ze = {}, Ze[C.tab] = !0, Ze[C.newline] = !0, Ze[C.cr] = !0, Ze[C.feed] = !0, Ze), Qg = (q = {}, q[C.space] = !0, q[C.tab] = !0, q[C.newline] = !0, q[C.cr] = !0, q[C.feed] = !0, q[C.ampersand] = !0, q[C.asterisk] = !0, q[C.bang] = !0, q[C.comma] = !0, q[C.colon] = !0, q[C.semicolon] = !0, q[C.openParenthesis] = !0, q[C.closeParenthesis] = !0, q[C.openSquare] = !0, q[C.closeSquare] = !0, q[C.singleQuote] = !0, q[C.doubleQuote] = !0, q[C.plus] = !0, q[C.pipe] = !0, q[C.tilde] = !0, q[C.greaterThan] = !0, q[C.equals] = !0, q[C.dollar] = !0, q[C.caret] = !0, q[C.slash] = !0, q), Zi = {}, Ql = \"0123456789abcdefABCDEF\";\n    for(Xr = 0; Xr < Ql.length; Xr++)Zi[Ql.charCodeAt(Xr)] = !0;\n    var Xr;\n    function Jg(t, e) {\n        var r = e, n;\n        do {\n            if (n = t.charCodeAt(r), Qg[n]) return r - 1;\n            n === C.backslash ? r = Xg(t, r) + 1 : r++;\n        }while (r < t.length);\n        return r - 1;\n    }\n    function Xg(t, e) {\n        var r = e, n = t.charCodeAt(r + 1);\n        if (!Hg[n]) if (Zi[n]) {\n            var i = 0;\n            do r++, i++, n = t.charCodeAt(r + 1);\n            while (Zi[n] && i < 6);\n            i < 6 && n === C.space && r++;\n        } else r++;\n        return r;\n    }\n    var Kg = {\n        TYPE: 0,\n        START_LINE: 1,\n        START_COL: 2,\n        END_LINE: 3,\n        END_COL: 4,\n        START_POS: 5,\n        END_POS: 6\n    };\n    Zt.FIELDS = Kg;\n    function Zg(t) {\n        var e = [], r = t.css.valueOf(), n = r, i = n.length, a = -1, s = 1, o = 0, l = 0, u, f, p, c, d, h, y, m, g, w, b, v, O;\n        function x(A, E) {\n            if (t.safe) r += E, g = r.length - 1;\n            else throw t.error(\"Unclosed \" + A, s, o - a, o);\n        }\n        for(; o < i;){\n            switch(u = r.charCodeAt(o), u === C.newline && (a = o, s += 1), u){\n                case C.space:\n                case C.tab:\n                case C.newline:\n                case C.cr:\n                case C.feed:\n                    g = o;\n                    do g += 1, u = r.charCodeAt(g), u === C.newline && (a = g, s += 1);\n                    while (u === C.space || u === C.newline || u === C.tab || u === C.cr || u === C.feed);\n                    O = C.space, c = s, p = g - a - 1, l = g;\n                    break;\n                case C.plus:\n                case C.greaterThan:\n                case C.tilde:\n                case C.pipe:\n                    g = o;\n                    do g += 1, u = r.charCodeAt(g);\n                    while (u === C.plus || u === C.greaterThan || u === C.tilde || u === C.pipe);\n                    O = C.combinator, c = s, p = o - a, l = g;\n                    break;\n                case C.asterisk:\n                case C.ampersand:\n                case C.bang:\n                case C.comma:\n                case C.equals:\n                case C.dollar:\n                case C.caret:\n                case C.openSquare:\n                case C.closeSquare:\n                case C.colon:\n                case C.semicolon:\n                case C.openParenthesis:\n                case C.closeParenthesis:\n                    g = o, O = u, c = s, p = o - a, l = g + 1;\n                    break;\n                case C.singleQuote:\n                case C.doubleQuote:\n                    v = u === C.singleQuote ? \"'\" : '\"', g = o;\n                    do for(d = !1, g = r.indexOf(v, g + 1), g === -1 && x(\"quote\", v), h = g; r.charCodeAt(h - 1) === C.backslash;)h -= 1, d = !d;\n                    while (d);\n                    O = C.str, c = s, p = o - a, l = g + 1;\n                    break;\n                default:\n                    u === C.slash && r.charCodeAt(o + 1) === C.asterisk ? (g = r.indexOf(\"*/\", o + 2) + 1, g === 0 && x(\"comment\", \"*/\"), f = r.slice(o, g + 1), m = f.split(`\n`), y = m.length - 1, y > 0 ? (w = s + y, b = g - m[y].length) : (w = s, b = a), O = C.comment, s = w, c = w, p = g - b) : u === C.slash ? (g = o, O = u, c = s, p = o - a, l = g + 1) : (g = Jg(r, o), O = C.word, c = s, p = g - a), l = g + 1;\n                    break;\n            }\n            e.push([\n                O,\n                s,\n                o - a,\n                c,\n                p,\n                o,\n                l\n            ]), b && (a = b, b = null), o = l;\n        }\n        return e;\n    }\n});\nvar su = S((er, iu)=>{\n    \"use strict\";\n    er.__esModule = !0;\n    er.default = void 0;\n    var ey = le(Si()), es = le(Oi()), ty = le(Ai()), Kl = le(Ti()), ry = le(Ii()), ny = le(Mi()), ts = le(Li()), iy = le(qi()), Zl = Kr(Bi()), sy = le(Yi()), rs = le(Qi()), ay = le(Xi()), oy = le(Yl()), k = Kr(Xl()), _ = Kr(Ki()), ly = Kr(J()), V = Ft(), Ve, ns;\n    function nu(t) {\n        if (typeof WeakMap != \"function\") return null;\n        var e = new WeakMap, r = new WeakMap;\n        return (nu = function(i) {\n            return i ? r : e;\n        })(t);\n    }\n    function Kr(t, e) {\n        if (!e && t && t.__esModule) return t;\n        if (t === null || typeof t != \"object\" && typeof t != \"function\") return {\n            default: t\n        };\n        var r = nu(e);\n        if (r && r.has(t)) return r.get(t);\n        var n = {}, i = Object.defineProperty && Object.getOwnPropertyDescriptor;\n        for(var a in t)if (a !== \"default\" && Object.prototype.hasOwnProperty.call(t, a)) {\n            var s = i ? Object.getOwnPropertyDescriptor(t, a) : null;\n            s && (s.get || s.set) ? Object.defineProperty(n, a, s) : n[a] = t[a];\n        }\n        return n.default = t, r && r.set(t, n), n;\n    }\n    function le(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    function eu(t, e) {\n        for(var r = 0; r < e.length; r++){\n            var n = e[r];\n            n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);\n        }\n    }\n    function uy(t, e, r) {\n        return e && eu(t.prototype, e), r && eu(t, r), Object.defineProperty(t, \"prototype\", {\n            writable: !1\n        }), t;\n    }\n    var as = (Ve = {}, Ve[_.space] = !0, Ve[_.cr] = !0, Ve[_.feed] = !0, Ve[_.newline] = !0, Ve[_.tab] = !0, Ve), fy = Object.assign({}, as, (ns = {}, ns[_.comment] = !0, ns));\n    function tu(t) {\n        return {\n            line: t[k.FIELDS.START_LINE],\n            column: t[k.FIELDS.START_COL]\n        };\n    }\n    function ru(t) {\n        return {\n            line: t[k.FIELDS.END_LINE],\n            column: t[k.FIELDS.END_COL]\n        };\n    }\n    function We(t, e, r, n) {\n        return {\n            start: {\n                line: t,\n                column: e\n            },\n            end: {\n                line: r,\n                column: n\n            }\n        };\n    }\n    function et(t) {\n        return We(t[k.FIELDS.START_LINE], t[k.FIELDS.START_COL], t[k.FIELDS.END_LINE], t[k.FIELDS.END_COL]);\n    }\n    function is(t, e) {\n        if (!!t) return We(t[k.FIELDS.START_LINE], t[k.FIELDS.START_COL], e[k.FIELDS.END_LINE], e[k.FIELDS.END_COL]);\n    }\n    function tt(t, e) {\n        var r = t[e];\n        if (typeof r == \"string\") return r.indexOf(\"\\\\\") !== -1 && ((0, V.ensureObject)(t, \"raws\"), t[e] = (0, V.unesc)(r), t.raws[e] === void 0 && (t.raws[e] = r)), t;\n    }\n    function ss(t, e) {\n        for(var r = -1, n = []; (r = t.indexOf(e, r + 1)) !== -1;)n.push(r);\n        return n;\n    }\n    function cy() {\n        var t = Array.prototype.concat.apply([], arguments);\n        return t.filter(function(e, r) {\n            return r === t.indexOf(e);\n        });\n    }\n    var py = function() {\n        function t(r, n) {\n            n === void 0 && (n = {}), this.rule = r, this.options = Object.assign({\n                lossy: !1,\n                safe: !1\n            }, n), this.position = 0, this.css = typeof this.rule == \"string\" ? this.rule : this.rule.selector, this.tokens = (0, k.default)({\n                css: this.css,\n                error: this._errorGenerator(),\n                safe: this.options.safe\n            });\n            var i = is(this.tokens[0], this.tokens[this.tokens.length - 1]);\n            this.root = new ey.default({\n                source: i\n            }), this.root.errorGenerator = this._errorGenerator();\n            var a = new es.default({\n                source: {\n                    start: {\n                        line: 1,\n                        column: 1\n                    }\n                }\n            });\n            this.root.append(a), this.current = a, this.loop();\n        }\n        var e = t.prototype;\n        return e._errorGenerator = function() {\n            var n = this;\n            return function(i, a) {\n                return typeof n.rule == \"string\" ? new Error(i) : n.rule.error(i, a);\n            };\n        }, e.attribute = function() {\n            var n = [], i = this.currToken;\n            for(this.position++; this.position < this.tokens.length && this.currToken[k.FIELDS.TYPE] !== _.closeSquare;)n.push(this.currToken), this.position++;\n            if (this.currToken[k.FIELDS.TYPE] !== _.closeSquare) return this.expected(\"closing square bracket\", this.currToken[k.FIELDS.START_POS]);\n            var a = n.length, s = {\n                source: We(i[1], i[2], this.currToken[3], this.currToken[4]),\n                sourceIndex: i[k.FIELDS.START_POS]\n            };\n            if (a === 1 && !~[\n                _.word\n            ].indexOf(n[0][k.FIELDS.TYPE])) return this.expected(\"attribute\", n[0][k.FIELDS.START_POS]);\n            for(var o = 0, l = \"\", u = \"\", f = null, p = !1; o < a;){\n                var c = n[o], d = this.content(c), h = n[o + 1];\n                switch(c[k.FIELDS.TYPE]){\n                    case _.space:\n                        if (p = !0, this.options.lossy) break;\n                        if (f) {\n                            (0, V.ensureObject)(s, \"spaces\", f);\n                            var y = s.spaces[f].after || \"\";\n                            s.spaces[f].after = y + d;\n                            var m = (0, V.getProp)(s, \"raws\", \"spaces\", f, \"after\") || null;\n                            m && (s.raws.spaces[f].after = m + d);\n                        } else l = l + d, u = u + d;\n                        break;\n                    case _.asterisk:\n                        if (h[k.FIELDS.TYPE] === _.equals) s.operator = d, f = \"operator\";\n                        else if ((!s.namespace || f === \"namespace\" && !p) && h) {\n                            l && ((0, V.ensureObject)(s, \"spaces\", \"attribute\"), s.spaces.attribute.before = l, l = \"\"), u && ((0, V.ensureObject)(s, \"raws\", \"spaces\", \"attribute\"), s.raws.spaces.attribute.before = l, u = \"\"), s.namespace = (s.namespace || \"\") + d;\n                            var g = (0, V.getProp)(s, \"raws\", \"namespace\") || null;\n                            g && (s.raws.namespace += d), f = \"namespace\";\n                        }\n                        p = !1;\n                        break;\n                    case _.dollar:\n                        if (f === \"value\") {\n                            var w = (0, V.getProp)(s, \"raws\", \"value\");\n                            s.value += \"$\", w && (s.raws.value = w + \"$\");\n                            break;\n                        }\n                    case _.caret:\n                        h[k.FIELDS.TYPE] === _.equals && (s.operator = d, f = \"operator\"), p = !1;\n                        break;\n                    case _.combinator:\n                        if (d === \"~\" && h[k.FIELDS.TYPE] === _.equals && (s.operator = d, f = \"operator\"), d !== \"|\") {\n                            p = !1;\n                            break;\n                        }\n                        h[k.FIELDS.TYPE] === _.equals ? (s.operator = d, f = \"operator\") : !s.namespace && !s.attribute && (s.namespace = !0), p = !1;\n                        break;\n                    case _.word:\n                        if (h && this.content(h) === \"|\" && n[o + 2] && n[o + 2][k.FIELDS.TYPE] !== _.equals && !s.operator && !s.namespace) s.namespace = d, f = \"namespace\";\n                        else if (!s.attribute || f === \"attribute\" && !p) {\n                            l && ((0, V.ensureObject)(s, \"spaces\", \"attribute\"), s.spaces.attribute.before = l, l = \"\"), u && ((0, V.ensureObject)(s, \"raws\", \"spaces\", \"attribute\"), s.raws.spaces.attribute.before = u, u = \"\"), s.attribute = (s.attribute || \"\") + d;\n                            var b = (0, V.getProp)(s, \"raws\", \"attribute\") || null;\n                            b && (s.raws.attribute += d), f = \"attribute\";\n                        } else if (!s.value && s.value !== \"\" || f === \"value\" && !(p || s.quoteMark)) {\n                            var v = (0, V.unesc)(d), O = (0, V.getProp)(s, \"raws\", \"value\") || \"\", x = s.value || \"\";\n                            s.value = x + v, s.quoteMark = null, (v !== d || O) && ((0, V.ensureObject)(s, \"raws\"), s.raws.value = (O || x) + d), f = \"value\";\n                        } else {\n                            var A = d === \"i\" || d === \"I\";\n                            (s.value || s.value === \"\") && (s.quoteMark || p) ? (s.insensitive = A, (!A || d === \"I\") && ((0, V.ensureObject)(s, \"raws\"), s.raws.insensitiveFlag = d), f = \"insensitive\", l && ((0, V.ensureObject)(s, \"spaces\", \"insensitive\"), s.spaces.insensitive.before = l, l = \"\"), u && ((0, V.ensureObject)(s, \"raws\", \"spaces\", \"insensitive\"), s.raws.spaces.insensitive.before = u, u = \"\")) : (s.value || s.value === \"\") && (f = \"value\", s.value += d, s.raws.value && (s.raws.value += d));\n                        }\n                        p = !1;\n                        break;\n                    case _.str:\n                        if (!s.attribute || !s.operator) return this.error(\"Expected an attribute followed by an operator preceding the string.\", {\n                            index: c[k.FIELDS.START_POS]\n                        });\n                        var E = (0, Zl.unescapeValue)(d), I = E.unescaped, F = E.quoteMark;\n                        s.value = I, s.quoteMark = F, f = \"value\", (0, V.ensureObject)(s, \"raws\"), s.raws.value = d, p = !1;\n                        break;\n                    case _.equals:\n                        if (!s.attribute) return this.expected(\"attribute\", c[k.FIELDS.START_POS], d);\n                        if (s.value) return this.error('Unexpected \"=\" found; an operator was already defined.', {\n                            index: c[k.FIELDS.START_POS]\n                        });\n                        s.operator = s.operator ? s.operator + d : d, f = \"operator\", p = !1;\n                        break;\n                    case _.comment:\n                        if (f) if (p || h && h[k.FIELDS.TYPE] === _.space || f === \"insensitive\") {\n                            var Y = (0, V.getProp)(s, \"spaces\", f, \"after\") || \"\", K = (0, V.getProp)(s, \"raws\", \"spaces\", f, \"after\") || Y;\n                            (0, V.ensureObject)(s, \"raws\", \"spaces\", f), s.raws.spaces[f].after = K + d;\n                        } else {\n                            var B = s[f] || \"\", qe = (0, V.getProp)(s, \"raws\", f) || B;\n                            (0, V.ensureObject)(s, \"raws\"), s.raws[f] = qe + d;\n                        }\n                        else u = u + d;\n                        break;\n                    default:\n                        return this.error('Unexpected \"' + d + '\" found.', {\n                            index: c[k.FIELDS.START_POS]\n                        });\n                }\n                o++;\n            }\n            tt(s, \"attribute\"), tt(s, \"namespace\"), this.newNode(new Zl.default(s)), this.position++;\n        }, e.parseWhitespaceEquivalentTokens = function(n) {\n            n < 0 && (n = this.tokens.length);\n            var i = this.position, a = [], s = \"\", o = void 0;\n            do if (as[this.currToken[k.FIELDS.TYPE]]) this.options.lossy || (s += this.content());\n            else if (this.currToken[k.FIELDS.TYPE] === _.comment) {\n                var l = {};\n                s && (l.before = s, s = \"\"), o = new Kl.default({\n                    value: this.content(),\n                    source: et(this.currToken),\n                    sourceIndex: this.currToken[k.FIELDS.START_POS],\n                    spaces: l\n                }), a.push(o);\n            }\n            while (++this.position < n);\n            if (s) {\n                if (o) o.spaces.after = s;\n                else if (!this.options.lossy) {\n                    var u = this.tokens[i], f = this.tokens[this.position - 1];\n                    a.push(new ts.default({\n                        value: \"\",\n                        source: We(u[k.FIELDS.START_LINE], u[k.FIELDS.START_COL], f[k.FIELDS.END_LINE], f[k.FIELDS.END_COL]),\n                        sourceIndex: u[k.FIELDS.START_POS],\n                        spaces: {\n                            before: s,\n                            after: \"\"\n                        }\n                    }));\n                }\n            }\n            return a;\n        }, e.convertWhitespaceNodesToSpace = function(n, i) {\n            var a = this;\n            i === void 0 && (i = !1);\n            var s = \"\", o = \"\";\n            n.forEach(function(u) {\n                var f = a.lossySpace(u.spaces.before, i), p = a.lossySpace(u.rawSpaceBefore, i);\n                s += f + a.lossySpace(u.spaces.after, i && f.length === 0), o += f + u.value + a.lossySpace(u.rawSpaceAfter, i && p.length === 0);\n            }), o === s && (o = void 0);\n            var l = {\n                space: s,\n                rawSpace: o\n            };\n            return l;\n        }, e.isNamedCombinator = function(n) {\n            return n === void 0 && (n = this.position), this.tokens[n + 0] && this.tokens[n + 0][k.FIELDS.TYPE] === _.slash && this.tokens[n + 1] && this.tokens[n + 1][k.FIELDS.TYPE] === _.word && this.tokens[n + 2] && this.tokens[n + 2][k.FIELDS.TYPE] === _.slash;\n        }, e.namedCombinator = function() {\n            if (this.isNamedCombinator()) {\n                var n = this.content(this.tokens[this.position + 1]), i = (0, V.unesc)(n).toLowerCase(), a = {};\n                i !== n && (a.value = \"/\" + n + \"/\");\n                var s = new rs.default({\n                    value: \"/\" + i + \"/\",\n                    source: We(this.currToken[k.FIELDS.START_LINE], this.currToken[k.FIELDS.START_COL], this.tokens[this.position + 2][k.FIELDS.END_LINE], this.tokens[this.position + 2][k.FIELDS.END_COL]),\n                    sourceIndex: this.currToken[k.FIELDS.START_POS],\n                    raws: a\n                });\n                return this.position = this.position + 3, s;\n            } else this.unexpected();\n        }, e.combinator = function() {\n            var n = this;\n            if (this.content() === \"|\") return this.namespace();\n            var i = this.locateNextMeaningfulToken(this.position);\n            if (i < 0 || this.tokens[i][k.FIELDS.TYPE] === _.comma) {\n                var a = this.parseWhitespaceEquivalentTokens(i);\n                if (a.length > 0) {\n                    var s = this.current.last;\n                    if (s) {\n                        var o = this.convertWhitespaceNodesToSpace(a), l = o.space, u = o.rawSpace;\n                        u !== void 0 && (s.rawSpaceAfter += u), s.spaces.after += l;\n                    } else a.forEach(function(O) {\n                        return n.newNode(O);\n                    });\n                }\n                return;\n            }\n            var f = this.currToken, p = void 0;\n            i > this.position && (p = this.parseWhitespaceEquivalentTokens(i));\n            var c;\n            if (this.isNamedCombinator() ? c = this.namedCombinator() : this.currToken[k.FIELDS.TYPE] === _.combinator ? (c = new rs.default({\n                value: this.content(),\n                source: et(this.currToken),\n                sourceIndex: this.currToken[k.FIELDS.START_POS]\n            }), this.position++) : as[this.currToken[k.FIELDS.TYPE]] || p || this.unexpected(), c) {\n                if (p) {\n                    var d = this.convertWhitespaceNodesToSpace(p), h = d.space, y = d.rawSpace;\n                    c.spaces.before = h, c.rawSpaceBefore = y;\n                }\n            } else {\n                var m = this.convertWhitespaceNodesToSpace(p, !0), g = m.space, w = m.rawSpace;\n                w || (w = g);\n                var b = {}, v = {\n                    spaces: {}\n                };\n                g.endsWith(\" \") && w.endsWith(\" \") ? (b.before = g.slice(0, g.length - 1), v.spaces.before = w.slice(0, w.length - 1)) : g.startsWith(\" \") && w.startsWith(\" \") ? (b.after = g.slice(1), v.spaces.after = w.slice(1)) : v.value = w, c = new rs.default({\n                    value: \" \",\n                    source: is(f, this.tokens[this.position - 1]),\n                    sourceIndex: f[k.FIELDS.START_POS],\n                    spaces: b,\n                    raws: v\n                });\n            }\n            return this.currToken && this.currToken[k.FIELDS.TYPE] === _.space && (c.spaces.after = this.optionalSpace(this.content()), this.position++), this.newNode(c);\n        }, e.comma = function() {\n            if (this.position === this.tokens.length - 1) {\n                this.root.trailingComma = !0, this.position++;\n                return;\n            }\n            this.current._inferEndPosition();\n            var n = new es.default({\n                source: {\n                    start: tu(this.tokens[this.position + 1])\n                }\n            });\n            this.current.parent.append(n), this.current = n, this.position++;\n        }, e.comment = function() {\n            var n = this.currToken;\n            this.newNode(new Kl.default({\n                value: this.content(),\n                source: et(n),\n                sourceIndex: n[k.FIELDS.START_POS]\n            })), this.position++;\n        }, e.error = function(n, i) {\n            throw this.root.error(n, i);\n        }, e.missingBackslash = function() {\n            return this.error(\"Expected a backslash preceding the semicolon.\", {\n                index: this.currToken[k.FIELDS.START_POS]\n            });\n        }, e.missingParenthesis = function() {\n            return this.expected(\"opening parenthesis\", this.currToken[k.FIELDS.START_POS]);\n        }, e.missingSquareBracket = function() {\n            return this.expected(\"opening square bracket\", this.currToken[k.FIELDS.START_POS]);\n        }, e.unexpected = function() {\n            return this.error(\"Unexpected '\" + this.content() + \"'. Escaping special characters with \\\\ may help.\", this.currToken[k.FIELDS.START_POS]);\n        }, e.unexpectedPipe = function() {\n            return this.error(\"Unexpected '|'.\", this.currToken[k.FIELDS.START_POS]);\n        }, e.namespace = function() {\n            var n = this.prevToken && this.content(this.prevToken) || !0;\n            if (this.nextToken[k.FIELDS.TYPE] === _.word) return this.position++, this.word(n);\n            if (this.nextToken[k.FIELDS.TYPE] === _.asterisk) return this.position++, this.universal(n);\n            this.unexpectedPipe();\n        }, e.nesting = function() {\n            if (this.nextToken) {\n                var n = this.content(this.nextToken);\n                if (n === \"|\") {\n                    this.position++;\n                    return;\n                }\n            }\n            var i = this.currToken;\n            this.newNode(new ay.default({\n                value: this.content(),\n                source: et(i),\n                sourceIndex: i[k.FIELDS.START_POS]\n            })), this.position++;\n        }, e.parentheses = function() {\n            var n = this.current.last, i = 1;\n            if (this.position++, n && n.type === ly.PSEUDO) {\n                var a = new es.default({\n                    source: {\n                        start: tu(this.tokens[this.position - 1])\n                    }\n                }), s = this.current;\n                for(n.append(a), this.current = a; this.position < this.tokens.length && i;)this.currToken[k.FIELDS.TYPE] === _.openParenthesis && i++, this.currToken[k.FIELDS.TYPE] === _.closeParenthesis && i--, i ? this.parse() : (this.current.source.end = ru(this.currToken), this.current.parent.source.end = ru(this.currToken), this.position++);\n                this.current = s;\n            } else {\n                for(var o = this.currToken, l = \"(\", u; this.position < this.tokens.length && i;)this.currToken[k.FIELDS.TYPE] === _.openParenthesis && i++, this.currToken[k.FIELDS.TYPE] === _.closeParenthesis && i--, u = this.currToken, l += this.parseParenthesisToken(this.currToken), this.position++;\n                n ? n.appendToPropertyAndEscape(\"value\", l, l) : this.newNode(new ts.default({\n                    value: l,\n                    source: We(o[k.FIELDS.START_LINE], o[k.FIELDS.START_COL], u[k.FIELDS.END_LINE], u[k.FIELDS.END_COL]),\n                    sourceIndex: o[k.FIELDS.START_POS]\n                }));\n            }\n            if (i) return this.expected(\"closing parenthesis\", this.currToken[k.FIELDS.START_POS]);\n        }, e.pseudo = function() {\n            for(var n = this, i = \"\", a = this.currToken; this.currToken && this.currToken[k.FIELDS.TYPE] === _.colon;)i += this.content(), this.position++;\n            if (!this.currToken) return this.expected([\n                \"pseudo-class\",\n                \"pseudo-element\"\n            ], this.position - 1);\n            if (this.currToken[k.FIELDS.TYPE] === _.word) this.splitWord(!1, function(s, o) {\n                i += s, n.newNode(new iy.default({\n                    value: i,\n                    source: is(a, n.currToken),\n                    sourceIndex: a[k.FIELDS.START_POS]\n                })), o > 1 && n.nextToken && n.nextToken[k.FIELDS.TYPE] === _.openParenthesis && n.error(\"Misplaced parenthesis.\", {\n                    index: n.nextToken[k.FIELDS.START_POS]\n                });\n            });\n            else return this.expected([\n                \"pseudo-class\",\n                \"pseudo-element\"\n            ], this.currToken[k.FIELDS.START_POS]);\n        }, e.space = function() {\n            var n = this.content();\n            this.position === 0 || this.prevToken[k.FIELDS.TYPE] === _.comma || this.prevToken[k.FIELDS.TYPE] === _.openParenthesis || this.current.nodes.every(function(i) {\n                return i.type === \"comment\";\n            }) ? (this.spaces = this.optionalSpace(n), this.position++) : this.position === this.tokens.length - 1 || this.nextToken[k.FIELDS.TYPE] === _.comma || this.nextToken[k.FIELDS.TYPE] === _.closeParenthesis ? (this.current.last.spaces.after = this.optionalSpace(n), this.position++) : this.combinator();\n        }, e.string = function() {\n            var n = this.currToken;\n            this.newNode(new ts.default({\n                value: this.content(),\n                source: et(n),\n                sourceIndex: n[k.FIELDS.START_POS]\n            })), this.position++;\n        }, e.universal = function(n) {\n            var i = this.nextToken;\n            if (i && this.content(i) === \"|\") return this.position++, this.namespace();\n            var a = this.currToken;\n            this.newNode(new sy.default({\n                value: this.content(),\n                source: et(a),\n                sourceIndex: a[k.FIELDS.START_POS]\n            }), n), this.position++;\n        }, e.splitWord = function(n, i) {\n            for(var a = this, s = this.nextToken, o = this.content(); s && ~[\n                _.dollar,\n                _.caret,\n                _.equals,\n                _.word\n            ].indexOf(s[k.FIELDS.TYPE]);){\n                this.position++;\n                var l = this.content();\n                if (o += l, l.lastIndexOf(\"\\\\\") === l.length - 1) {\n                    var u = this.nextToken;\n                    u && u[k.FIELDS.TYPE] === _.space && (o += this.requiredSpace(this.content(u)), this.position++);\n                }\n                s = this.nextToken;\n            }\n            var f = ss(o, \".\").filter(function(h) {\n                var y = o[h - 1] === \"\\\\\", m = /^\\d+\\.\\d+%$/.test(o);\n                return !y && !m;\n            }), p = ss(o, \"#\").filter(function(h) {\n                return o[h - 1] !== \"\\\\\";\n            }), c = ss(o, \"#{\");\n            c.length && (p = p.filter(function(h) {\n                return !~c.indexOf(h);\n            }));\n            var d = (0, oy.default)(cy([\n                0\n            ].concat(f, p)));\n            d.forEach(function(h, y) {\n                var m = d[y + 1] || o.length, g = o.slice(h, m);\n                if (y === 0 && i) return i.call(a, g, d.length);\n                var w, b = a.currToken, v = b[k.FIELDS.START_POS] + d[y], O = We(b[1], b[2] + h, b[3], b[2] + (m - 1));\n                if (~f.indexOf(h)) {\n                    var x = {\n                        value: g.slice(1),\n                        source: O,\n                        sourceIndex: v\n                    };\n                    w = new ty.default(tt(x, \"value\"));\n                } else if (~p.indexOf(h)) {\n                    var A = {\n                        value: g.slice(1),\n                        source: O,\n                        sourceIndex: v\n                    };\n                    w = new ry.default(tt(A, \"value\"));\n                } else {\n                    var E = {\n                        value: g,\n                        source: O,\n                        sourceIndex: v\n                    };\n                    tt(E, \"value\"), w = new ny.default(E);\n                }\n                a.newNode(w, n), n = null;\n            }), this.position++;\n        }, e.word = function(n) {\n            var i = this.nextToken;\n            return i && this.content(i) === \"|\" ? (this.position++, this.namespace()) : this.splitWord(n);\n        }, e.loop = function() {\n            for(; this.position < this.tokens.length;)this.parse(!0);\n            return this.current._inferEndPosition(), this.root;\n        }, e.parse = function(n) {\n            switch(this.currToken[k.FIELDS.TYPE]){\n                case _.space:\n                    this.space();\n                    break;\n                case _.comment:\n                    this.comment();\n                    break;\n                case _.openParenthesis:\n                    this.parentheses();\n                    break;\n                case _.closeParenthesis:\n                    n && this.missingParenthesis();\n                    break;\n                case _.openSquare:\n                    this.attribute();\n                    break;\n                case _.dollar:\n                case _.caret:\n                case _.equals:\n                case _.word:\n                    this.word();\n                    break;\n                case _.colon:\n                    this.pseudo();\n                    break;\n                case _.comma:\n                    this.comma();\n                    break;\n                case _.asterisk:\n                    this.universal();\n                    break;\n                case _.ampersand:\n                    this.nesting();\n                    break;\n                case _.slash:\n                case _.combinator:\n                    this.combinator();\n                    break;\n                case _.str:\n                    this.string();\n                    break;\n                case _.closeSquare:\n                    this.missingSquareBracket();\n                case _.semicolon:\n                    this.missingBackslash();\n                default:\n                    this.unexpected();\n            }\n        }, e.expected = function(n, i, a) {\n            if (Array.isArray(n)) {\n                var s = n.pop();\n                n = n.join(\", \") + \" or \" + s;\n            }\n            var o = /^[aeiou]/.test(n[0]) ? \"an\" : \"a\";\n            return a ? this.error(\"Expected \" + o + \" \" + n + ', found \"' + a + '\" instead.', {\n                index: i\n            }) : this.error(\"Expected \" + o + \" \" + n + \".\", {\n                index: i\n            });\n        }, e.requiredSpace = function(n) {\n            return this.options.lossy ? \" \" : n;\n        }, e.optionalSpace = function(n) {\n            return this.options.lossy ? \"\" : n;\n        }, e.lossySpace = function(n, i) {\n            return this.options.lossy ? i ? \" \" : \"\" : n;\n        }, e.parseParenthesisToken = function(n) {\n            var i = this.content(n);\n            return n[k.FIELDS.TYPE] === _.space ? this.requiredSpace(i) : i;\n        }, e.newNode = function(n, i) {\n            return i && (/^ +$/.test(i) && (this.options.lossy || (this.spaces = (this.spaces || \"\") + i), i = !0), n.namespace = i, tt(n, \"namespace\")), this.spaces && (n.spaces.before = this.spaces, this.spaces = \"\"), this.current.append(n);\n        }, e.content = function(n) {\n            return n === void 0 && (n = this.currToken), this.css.slice(n[k.FIELDS.START_POS], n[k.FIELDS.END_POS]);\n        }, e.locateNextMeaningfulToken = function(n) {\n            n === void 0 && (n = this.position + 1);\n            for(var i = n; i < this.tokens.length;)if (fy[this.tokens[i][k.FIELDS.TYPE]]) {\n                i++;\n                continue;\n            } else return i;\n            return -1;\n        }, uy(t, [\n            {\n                key: \"currToken\",\n                get: function() {\n                    return this.tokens[this.position];\n                }\n            },\n            {\n                key: \"nextToken\",\n                get: function() {\n                    return this.tokens[this.position + 1];\n                }\n            },\n            {\n                key: \"prevToken\",\n                get: function() {\n                    return this.tokens[this.position - 1];\n                }\n            }\n        ]), t;\n    }();\n    er.default = py;\n    iu.exports = er.default;\n});\nvar ou = S((tr, au)=>{\n    \"use strict\";\n    tr.__esModule = !0;\n    tr.default = void 0;\n    var dy = hy(su());\n    function hy(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    var my = function() {\n        function t(r, n) {\n            this.func = r || function() {}, this.funcRes = null, this.options = n;\n        }\n        var e = t.prototype;\n        return e._shouldUpdateSelector = function(n, i) {\n            i === void 0 && (i = {});\n            var a = Object.assign({}, this.options, i);\n            return a.updateSelector === !1 ? !1 : typeof n != \"string\";\n        }, e._isLossy = function(n) {\n            n === void 0 && (n = {});\n            var i = Object.assign({}, this.options, n);\n            return i.lossless === !1;\n        }, e._root = function(n, i) {\n            i === void 0 && (i = {});\n            var a = new dy.default(n, this._parseOptions(i));\n            return a.root;\n        }, e._parseOptions = function(n) {\n            return {\n                lossy: this._isLossy(n)\n            };\n        }, e._run = function(n, i) {\n            var a = this;\n            return i === void 0 && (i = {}), new Promise(function(s, o) {\n                try {\n                    var l = a._root(n, i);\n                    Promise.resolve(a.func(l)).then(function(u) {\n                        var f = void 0;\n                        return a._shouldUpdateSelector(n, i) && (f = l.toString(), n.selector = f), {\n                            transform: u,\n                            root: l,\n                            string: f\n                        };\n                    }).then(s, o);\n                } catch (u) {\n                    o(u);\n                    return;\n                }\n            });\n        }, e._runSync = function(n, i) {\n            i === void 0 && (i = {});\n            var a = this._root(n, i), s = this.func(a);\n            if (s && typeof s.then == \"function\") throw new Error(\"Selector processor returned a promise to a synchronous call.\");\n            var o = void 0;\n            return i.updateSelector && typeof n != \"string\" && (o = a.toString(), n.selector = o), {\n                transform: s,\n                root: a,\n                string: o\n            };\n        }, e.ast = function(n, i) {\n            return this._run(n, i).then(function(a) {\n                return a.root;\n            });\n        }, e.astSync = function(n, i) {\n            return this._runSync(n, i).root;\n        }, e.transform = function(n, i) {\n            return this._run(n, i).then(function(a) {\n                return a.transform;\n            });\n        }, e.transformSync = function(n, i) {\n            return this._runSync(n, i).transform;\n        }, e.process = function(n, i) {\n            return this._run(n, i).then(function(a) {\n                return a.string || a.root.toString();\n            });\n        }, e.processSync = function(n, i) {\n            var a = this._runSync(n, i);\n            return a.string || a.root.toString();\n        }, t;\n    }();\n    tr.default = my;\n    au.exports = tr.default;\n});\nvar lu = S((j)=>{\n    \"use strict\";\n    j.__esModule = !0;\n    j.universal = j.tag = j.string = j.selector = j.root = j.pseudo = j.nesting = j.id = j.comment = j.combinator = j.className = j.attribute = void 0;\n    var gy = ue(Bi()), yy = ue(Ai()), vy = ue(Qi()), wy = ue(Ti()), by = ue(Ii()), xy = ue(Xi()), Sy = ue(qi()), ky = ue(Si()), Oy = ue(Oi()), Ey = ue(Li()), Cy = ue(Mi()), Ay = ue(Yi());\n    function ue(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    var _y = function(e) {\n        return new gy.default(e);\n    };\n    j.attribute = _y;\n    var Ty = function(e) {\n        return new yy.default(e);\n    };\n    j.className = Ty;\n    var Py = function(e) {\n        return new vy.default(e);\n    };\n    j.combinator = Py;\n    var Iy = function(e) {\n        return new wy.default(e);\n    };\n    j.comment = Iy;\n    var Ry = function(e) {\n        return new by.default(e);\n    };\n    j.id = Ry;\n    var Dy = function(e) {\n        return new xy.default(e);\n    };\n    j.nesting = Dy;\n    var My = function(e) {\n        return new Sy.default(e);\n    };\n    j.pseudo = My;\n    var Fy = function(e) {\n        return new ky.default(e);\n    };\n    j.root = Fy;\n    var Ly = function(e) {\n        return new Oy.default(e);\n    };\n    j.selector = Ly;\n    var Ny = function(e) {\n        return new Ey.default(e);\n    };\n    j.string = Ny;\n    var qy = function(e) {\n        return new Cy.default(e);\n    };\n    j.tag = qy;\n    var $y = function(e) {\n        return new Ay.default(e);\n    };\n    j.universal = $y;\n});\nvar pu = S((D)=>{\n    \"use strict\";\n    D.__esModule = !0;\n    D.isComment = D.isCombinator = D.isClassName = D.isAttribute = void 0;\n    D.isContainer = Xy;\n    D.isIdentifier = void 0;\n    D.isNamespace = Ky;\n    D.isNesting = void 0;\n    D.isNode = os;\n    D.isPseudo = void 0;\n    D.isPseudoClass = Jy;\n    D.isPseudoElement = cu;\n    D.isUniversal = D.isTag = D.isString = D.isSelector = D.isRoot = void 0;\n    var W = J(), te, Uy = (te = {}, te[W.ATTRIBUTE] = !0, te[W.CLASS] = !0, te[W.COMBINATOR] = !0, te[W.COMMENT] = !0, te[W.ID] = !0, te[W.NESTING] = !0, te[W.PSEUDO] = !0, te[W.ROOT] = !0, te[W.SELECTOR] = !0, te[W.STRING] = !0, te[W.TAG] = !0, te[W.UNIVERSAL] = !0, te);\n    function os(t) {\n        return typeof t == \"object\" && Uy[t.type];\n    }\n    function fe(t, e) {\n        return os(e) && e.type === t;\n    }\n    var uu = fe.bind(null, W.ATTRIBUTE);\n    D.isAttribute = uu;\n    var jy = fe.bind(null, W.CLASS);\n    D.isClassName = jy;\n    var zy = fe.bind(null, W.COMBINATOR);\n    D.isCombinator = zy;\n    var Vy = fe.bind(null, W.COMMENT);\n    D.isComment = Vy;\n    var Wy = fe.bind(null, W.ID);\n    D.isIdentifier = Wy;\n    var By = fe.bind(null, W.NESTING);\n    D.isNesting = By;\n    var ls = fe.bind(null, W.PSEUDO);\n    D.isPseudo = ls;\n    var Gy = fe.bind(null, W.ROOT);\n    D.isRoot = Gy;\n    var Yy = fe.bind(null, W.SELECTOR);\n    D.isSelector = Yy;\n    var Hy = fe.bind(null, W.STRING);\n    D.isString = Hy;\n    var fu = fe.bind(null, W.TAG);\n    D.isTag = fu;\n    var Qy = fe.bind(null, W.UNIVERSAL);\n    D.isUniversal = Qy;\n    function cu(t) {\n        return ls(t) && t.value && (t.value.startsWith(\"::\") || t.value.toLowerCase() === \":before\" || t.value.toLowerCase() === \":after\" || t.value.toLowerCase() === \":first-letter\" || t.value.toLowerCase() === \":first-line\");\n    }\n    function Jy(t) {\n        return ls(t) && !cu(t);\n    }\n    function Xy(t) {\n        return !!(os(t) && t.walk);\n    }\n    function Ky(t) {\n        return uu(t) || fu(t);\n    }\n});\nvar du = S((de)=>{\n    \"use strict\";\n    de.__esModule = !0;\n    var us = J();\n    Object.keys(us).forEach(function(t) {\n        t === \"default\" || t === \"__esModule\" || t in de && de[t] === us[t] || (de[t] = us[t]);\n    });\n    var fs = lu();\n    Object.keys(fs).forEach(function(t) {\n        t === \"default\" || t === \"__esModule\" || t in de && de[t] === fs[t] || (de[t] = fs[t]);\n    });\n    var cs = pu();\n    Object.keys(cs).forEach(function(t) {\n        t === \"default\" || t === \"__esModule\" || t in de && de[t] === cs[t] || (de[t] = cs[t]);\n    });\n});\nvar ve = S((rr, mu)=>{\n    \"use strict\";\n    rr.__esModule = !0;\n    rr.default = void 0;\n    var Zy = r0(ou()), e0 = t0(du());\n    function hu(t) {\n        if (typeof WeakMap != \"function\") return null;\n        var e = new WeakMap, r = new WeakMap;\n        return (hu = function(i) {\n            return i ? r : e;\n        })(t);\n    }\n    function t0(t, e) {\n        if (!e && t && t.__esModule) return t;\n        if (t === null || typeof t != \"object\" && typeof t != \"function\") return {\n            default: t\n        };\n        var r = hu(e);\n        if (r && r.has(t)) return r.get(t);\n        var n = {}, i = Object.defineProperty && Object.getOwnPropertyDescriptor;\n        for(var a in t)if (a !== \"default\" && Object.prototype.hasOwnProperty.call(t, a)) {\n            var s = i ? Object.getOwnPropertyDescriptor(t, a) : null;\n            s && (s.get || s.set) ? Object.defineProperty(n, a, s) : n[a] = t[a];\n        }\n        return n.default = t, r && r.set(t, n), n;\n    }\n    function r0(t) {\n        return t && t.__esModule ? t : {\n            default: t\n        };\n    }\n    var ps = function(e) {\n        return new Zy.default(e);\n    };\n    Object.assign(ps, e0);\n    delete ps.__esModule;\n    var n0 = ps;\n    rr.default = n0;\n    mu.exports = rr.default;\n});\nvar Su = S((Dx, ys)=>{\n    var { Rule: yu, AtRule: i0 } = Ke(), vu = ve();\n    function ms(t, e) {\n        let r;\n        try {\n            vu((n)=>{\n                r = n;\n            }).processSync(t);\n        } catch (n) {\n            throw t.includes(\":\") ? e ? e.error(\"Missed semicolon\") : n : e ? e.error(n.message) : n;\n        }\n        return r.at(0);\n    }\n    function wu(t, e) {\n        let r = !1;\n        return t.each((n)=>{\n            if (n.type === \"nesting\") {\n                let i = e.clone({});\n                n.value !== \"&\" ? n.replaceWith(ms(n.value.replace(\"&\", i.toString()))) : n.replaceWith(i), r = !0;\n            } else \"nodes\" in n && n.nodes && wu(n, e) && (r = !0);\n        }), r;\n    }\n    function bu(t, e) {\n        let r = [];\n        return t.selectors.forEach((n)=>{\n            let i = ms(n, t);\n            e.selectors.forEach((a)=>{\n                if (!a) return;\n                let s = ms(a, e);\n                wu(s, i) || (s.prepend(vu.combinator({\n                    value: \" \"\n                })), s.prepend(i.clone({}))), r.push(s.toString());\n            });\n        }), r;\n    }\n    function Zr(t, e) {\n        let r = t.prev();\n        for(e.after(t); r && r.type === \"comment\";){\n            let n = r.prev();\n            e.after(r), r = n;\n        }\n        return t;\n    }\n    function s0(t) {\n        return function e(r, n, i, a = i) {\n            let s = [];\n            if (n.each((o)=>{\n                o.type === \"rule\" && i ? a && (o.selectors = bu(r, o)) : o.type === \"atrule\" && o.nodes ? t[o.name] ? e(r, o, a) : n[gs] !== !1 && s.push(o) : s.push(o);\n            }), i && s.length) {\n                let o = r.clone({\n                    nodes: []\n                });\n                for (let l of s)o.append(l);\n                n.prepend(o);\n            }\n        };\n    }\n    function ds(t, e, r) {\n        let n = new yu({\n            selector: t,\n            nodes: []\n        });\n        return n.append(e), r.after(n), n;\n    }\n    function gu(t, e) {\n        let r = {};\n        for (let n of t)r[n] = !0;\n        if (e) for (let n of e)r[n.replace(/^@/, \"\")] = !0;\n        return r;\n    }\n    function a0(t) {\n        t = t.trim();\n        let e = t.match(/^\\((.*)\\)$/);\n        if (!e) return {\n            type: \"basic\",\n            selector: t\n        };\n        let r = e[1].match(/^(with(?:out)?):(.+)$/);\n        if (r) {\n            let n = r[1] === \"with\", i = Object.fromEntries(r[2].trim().split(/\\s+/).map((s)=>[\n                    s,\n                    !0\n                ]));\n            if (n && i.all) return {\n                type: \"noop\"\n            };\n            let a = (s)=>!!i[s];\n            return i.all ? a = ()=>!0 : n && (a = (s)=>s === \"all\" ? !1 : !i[s]), {\n                type: \"withrules\",\n                escapes: a\n            };\n        }\n        return {\n            type: \"unknown\"\n        };\n    }\n    function o0(t) {\n        let e = [], r = t.parent;\n        for(; r && r instanceof i0;)e.push(r), r = r.parent;\n        return e;\n    }\n    function l0(t) {\n        let e = t[xu];\n        if (!e) t.after(t.nodes);\n        else {\n            let r = t.nodes, n, i = -1, a, s, o, l = o0(t);\n            if (l.forEach((u, f)=>{\n                if (e(u.name)) n = u, i = f, s = o;\n                else {\n                    let p = o;\n                    o = u.clone({\n                        nodes: []\n                    }), p && o.append(p), a = a || o;\n                }\n            }), n ? s ? (a.append(r), n.after(s)) : n.after(r) : t.after(r), t.next() && n) {\n                let u;\n                l.slice(0, i + 1).forEach((f, p, c)=>{\n                    let d = u;\n                    u = f.clone({\n                        nodes: []\n                    }), d && u.append(d);\n                    let h = [], m = (c[p - 1] || t).next();\n                    for(; m;)h.push(m), m = m.next();\n                    u.append(h);\n                }), u && (s || r[r.length - 1]).after(u);\n            }\n        }\n        t.remove();\n    }\n    var gs = Symbol(\"rootRuleMergeSel\"), xu = Symbol(\"rootRuleEscapes\");\n    function u0(t) {\n        let { params: e } = t, { type: r, selector: n, escapes: i } = a0(e);\n        if (r === \"unknown\") throw t.error(`Unknown @${t.name} parameter ${JSON.stringify(e)}`);\n        if (r === \"basic\" && n) {\n            let a = new yu({\n                selector: n,\n                nodes: t.nodes\n            });\n            t.removeAll(), t.append(a);\n        }\n        t[xu] = i, t[gs] = i ? !i(\"all\") : r === \"noop\";\n    }\n    var hs = Symbol(\"hasRootRule\");\n    ys.exports = (t = {})=>{\n        let e = gu([\n            \"media\",\n            \"supports\",\n            \"layer\",\n            \"container\"\n        ], t.bubble), r = s0(e), n = gu([\n            \"document\",\n            \"font-face\",\n            \"keyframes\",\n            \"-webkit-keyframes\",\n            \"-moz-keyframes\"\n        ], t.unwrap), i = (t.rootRuleName || \"at-root\").replace(/^@/, \"\"), a = t.preserveEmpty;\n        return {\n            postcssPlugin: \"postcss-nested\",\n            Once (s) {\n                s.walkAtRules(i, (o)=>{\n                    u0(o), s[hs] = !0;\n                });\n            },\n            Rule (s) {\n                let o = !1, l = s, u = !1, f = [];\n                s.each((p)=>{\n                    p.type === \"rule\" ? (f.length && (l = ds(s.selector, f, l), f = []), u = !0, o = !0, p.selectors = bu(s, p), l = Zr(p, l)) : p.type === \"atrule\" ? (f.length && (l = ds(s.selector, f, l), f = []), p.name === i ? (o = !0, r(s, p, !0, p[gs]), l = Zr(p, l)) : e[p.name] ? (u = !0, o = !0, r(s, p, !0), l = Zr(p, l)) : n[p.name] ? (u = !0, o = !0, r(s, p, !1), l = Zr(p, l)) : u && f.push(p)) : p.type === \"decl\" && u && f.push(p);\n                }), f.length && (l = ds(s.selector, f, l)), o && a !== !0 && (s.raws.semicolon = !0, s.nodes.length === 0 && s.remove());\n            },\n            RootExit (s) {\n                s[hs] && (s.walkAtRules(i, l0), s[hs] = !1);\n            }\n        };\n    };\n    ys.exports.postcss = !0;\n});\nvar Cu = S((Mx, Eu)=>{\n    \"use strict\";\n    var ku = /-(\\w|$)/g, Ou = function(e, r) {\n        return r.toUpperCase();\n    }, f0 = function(e) {\n        return e = e.toLowerCase(), e === \"float\" ? \"cssFloat\" : e.charCodeAt(0) === 45 && e.charCodeAt(1) === 109 && e.charCodeAt(2) === 115 && e.charCodeAt(3) === 45 ? e.substr(1).replace(ku, Ou) : e.replace(ku, Ou);\n    };\n    Eu.exports = f0;\n});\nvar bs = S((Fx, Au)=>{\n    var c0 = Cu(), p0 = {\n        boxFlex: !0,\n        boxFlexGroup: !0,\n        columnCount: !0,\n        flex: !0,\n        flexGrow: !0,\n        flexPositive: !0,\n        flexShrink: !0,\n        flexNegative: !0,\n        fontWeight: !0,\n        lineClamp: !0,\n        lineHeight: !0,\n        opacity: !0,\n        order: !0,\n        orphans: !0,\n        tabSize: !0,\n        widows: !0,\n        zIndex: !0,\n        zoom: !0,\n        fillOpacity: !0,\n        strokeDashoffset: !0,\n        strokeOpacity: !0,\n        strokeWidth: !0\n    };\n    function vs(t) {\n        return typeof t.nodes > \"u\" ? !0 : ws(t);\n    }\n    function ws(t) {\n        let e, r = {};\n        return t.each((n)=>{\n            if (n.type === \"atrule\") e = \"@\" + n.name, n.params && (e += \" \" + n.params), typeof r[e] > \"u\" ? r[e] = vs(n) : Array.isArray(r[e]) ? r[e].push(vs(n)) : r[e] = [\n                r[e],\n                vs(n)\n            ];\n            else if (n.type === \"rule\") {\n                let i = ws(n);\n                if (r[n.selector]) for(let a in i)r[n.selector][a] = i[a];\n                else r[n.selector] = i;\n            } else if (n.type === \"decl\") {\n                n.prop[0] === \"-\" && n.prop[1] === \"-\" || n.parent && n.parent.selector === \":export\" ? e = n.prop : e = c0(n.prop);\n                let i = n.value;\n                !isNaN(n.value) && p0[e] && (i = parseFloat(n.value)), n.important && (i += \" !important\"), typeof r[e] > \"u\" ? r[e] = i : Array.isArray(r[e]) ? r[e].push(i) : r[e] = [\n                    r[e],\n                    i\n                ];\n            }\n        }), r;\n    }\n    Au.exports = ws;\n});\nvar en = S((Lx, Iu)=>{\n    var nr = Ke(), _u = /\\s*!important\\s*$/i, d0 = {\n        \"box-flex\": !0,\n        \"box-flex-group\": !0,\n        \"column-count\": !0,\n        flex: !0,\n        \"flex-grow\": !0,\n        \"flex-positive\": !0,\n        \"flex-shrink\": !0,\n        \"flex-negative\": !0,\n        \"font-weight\": !0,\n        \"line-clamp\": !0,\n        \"line-height\": !0,\n        opacity: !0,\n        order: !0,\n        orphans: !0,\n        \"tab-size\": !0,\n        widows: !0,\n        \"z-index\": !0,\n        zoom: !0,\n        \"fill-opacity\": !0,\n        \"stroke-dashoffset\": !0,\n        \"stroke-opacity\": !0,\n        \"stroke-width\": !0\n    };\n    function h0(t) {\n        return t.replace(/([A-Z])/g, \"-$1\").replace(/^ms-/, \"-ms-\").toLowerCase();\n    }\n    function Tu(t, e, r) {\n        r === !1 || r === null || (e.startsWith(\"--\") || (e = h0(e)), typeof r == \"number\" && (r === 0 || d0[e] ? r = r.toString() : r += \"px\"), e === \"css-float\" && (e = \"float\"), _u.test(r) ? (r = r.replace(_u, \"\"), t.push(nr.decl({\n            prop: e,\n            value: r,\n            important: !0\n        }))) : t.push(nr.decl({\n            prop: e,\n            value: r\n        })));\n    }\n    function Pu(t, e, r) {\n        let n = nr.atRule({\n            name: e[1],\n            params: e[3] || \"\"\n        });\n        typeof r == \"object\" && (n.nodes = [], xs(r, n)), t.push(n);\n    }\n    function xs(t, e) {\n        let r, n, i;\n        for(r in t)if (n = t[r], !(n === null || typeof n > \"u\")) if (r[0] === \"@\") {\n            let a = r.match(/@(\\S+)(\\s+([\\W\\w]*)\\s*)?/);\n            if (Array.isArray(n)) for (let s of n)Pu(e, a, s);\n            else Pu(e, a, n);\n        } else if (Array.isArray(n)) for (let a of n)Tu(e, r, a);\n        else typeof n == \"object\" ? (i = nr.rule({\n            selector: r\n        }), xs(n, i), e.push(i)) : Tu(e, r, n);\n    }\n    Iu.exports = function(t) {\n        let e = nr.root();\n        return xs(t, e), e;\n    };\n});\nvar Ss = S((Nx, Ru)=>{\n    var m0 = bs();\n    Ru.exports = function(e) {\n        return console && console.warn && e.warnings().forEach((r)=>{\n            let n = r.plugin || \"PostCSS\";\n            console.warn(n + \": \" + r.text);\n        }), m0(e.root);\n    };\n});\nvar Mu = S((qx, Du)=>{\n    var g0 = Ke(), y0 = Ss(), v0 = en();\n    Du.exports = function(e) {\n        let r = g0(e);\n        return async (n)=>{\n            let i = await r.process(n, {\n                parser: v0,\n                from: void 0\n            });\n            return y0(i);\n        };\n    };\n});\nvar Lu = S(($x, Fu)=>{\n    var w0 = Ke(), b0 = Ss(), x0 = en();\n    Fu.exports = function(t) {\n        let e = w0(t);\n        return (r)=>{\n            let n = e.process(r, {\n                parser: x0,\n                from: void 0\n            });\n            return b0(n);\n        };\n    };\n});\nvar qu = S((Ux, Nu)=>{\n    var S0 = bs(), k0 = en(), O0 = Mu(), E0 = Lu();\n    Nu.exports = {\n        objectify: S0,\n        parse: k0,\n        async: O0,\n        sync: E0\n    };\n});\nvar qs = S((Ls, Ns)=>{\n    (function(t, e) {\n        typeof Ls == \"object\" && typeof Ns < \"u\" ? Ns.exports = function(r, n, i, a, s) {\n            for(n = n.split ? n.split(\".\") : n, a = 0; a < n.length; a++)r = r ? r[n[a]] : s;\n            return r === s ? i : r;\n        } : typeof define == \"function\" && define.amd ? define(function() {\n            return function(r, n, i, a, s) {\n                for(n = n.split ? n.split(\".\") : n, a = 0; a < n.length; a++)r = r ? r[n[a]] : s;\n                return r === s ? i : r;\n            };\n        }) : t.dlv = function(r, n, i, a, s) {\n            for(n = n.split ? n.split(\".\") : n, a = 0; a < n.length; a++)r = r ? r[n[a]] : s;\n            return r === s ? i : r;\n        };\n    })(Ls);\n});\nvar Bf = S((bk, On)=>{\n    (function() {\n        \"use strict\";\n        function t(n, i, a) {\n            if (!n) return null;\n            t.caseSensitive || (n = n.toLowerCase());\n            var s = t.threshold === null ? null : t.threshold * n.length, o = t.thresholdAbsolute, l;\n            s !== null && o !== null ? l = Math.min(s, o) : s !== null ? l = s : o !== null ? l = o : l = null;\n            var u, f, p, c, d, h = i.length;\n            for(d = 0; d < h; d++)if (f = i[d], a && (f = f[a]), !!f && (t.caseSensitive ? p = f : p = f.toLowerCase(), c = r(n, p, l), (l === null || c < l) && (l = c, a && t.returnWinningObject ? u = i[d] : u = f, t.returnFirstMatch))) return u;\n            return u || t.nullResultValue;\n        }\n        t.threshold = .4, t.thresholdAbsolute = 20, t.caseSensitive = !1, t.nullResultValue = null, t.returnWinningObject = null, t.returnFirstMatch = !1, typeof On < \"u\" && On.exports ? On.exports = t : window.didYouMean = t;\n        var e = Math.pow(2, 32) - 1;\n        function r(n, i, a) {\n            a = a || a === 0 ? a : e;\n            var s = n.length, o = i.length;\n            if (s === 0) return Math.min(a + 1, o);\n            if (o === 0) return Math.min(a + 1, s);\n            if (Math.abs(s - o) > a) return a + 1;\n            var l = [], u, f, p, c, d;\n            for(u = 0; u <= o; u++)l[u] = [\n                u\n            ];\n            for(f = 0; f <= s; f++)l[0][f] = f;\n            for(u = 1; u <= o; u++){\n                for(p = e, c = 1, u > a && (c = u - a), d = o + 1, d > a + u && (d = a + u), f = 1; f <= s; f++)f < c || f > d ? l[u][f] = a + 1 : i.charAt(u - 1) === n.charAt(f - 1) ? l[u][f] = l[u - 1][f - 1] : l[u][f] = Math.min(l[u - 1][f - 1] + 1, Math.min(l[u][f - 1] + 1, l[u - 1][f] + 1)), l[u][f] < p && (p = l[u][f]);\n                if (p > a) return a + 1;\n            }\n            return l[o][s];\n        }\n    })();\n});\nvar Yf = S((xk, Gf)=>{\n    var Ks = \"(\".charCodeAt(0), Zs = \")\".charCodeAt(0), En = \"'\".charCodeAt(0), ea = '\"'.charCodeAt(0), ta = \"\\\\\".charCodeAt(0), ft = \"/\".charCodeAt(0), ra = \",\".charCodeAt(0), na = \":\".charCodeAt(0), Cn = \"*\".charCodeAt(0), Yv = \"u\".charCodeAt(0), Hv = \"U\".charCodeAt(0), Qv = \"+\".charCodeAt(0), Jv = /^[a-f0-9?-]+$/i;\n    Gf.exports = function(t) {\n        for(var e = [], r = t, n, i, a, s, o, l, u, f, p = 0, c = r.charCodeAt(p), d = r.length, h = [\n            {\n                nodes: e\n            }\n        ], y = 0, m, g = \"\", w = \"\", b = \"\"; p < d;)if (c <= 32) {\n            n = p;\n            do n += 1, c = r.charCodeAt(n);\n            while (c <= 32);\n            s = r.slice(p, n), a = e[e.length - 1], c === Zs && y ? b = s : a && a.type === \"div\" ? (a.after = s, a.sourceEndIndex += s.length) : c === ra || c === na || c === ft && r.charCodeAt(n + 1) !== Cn && (!m || m && m.type === \"function\" && m.value !== \"calc\") ? w = s : e.push({\n                type: \"space\",\n                sourceIndex: p,\n                sourceEndIndex: n,\n                value: s\n            }), p = n;\n        } else if (c === En || c === ea) {\n            n = p, i = c === En ? \"'\" : '\"', s = {\n                type: \"string\",\n                sourceIndex: p,\n                quote: i\n            };\n            do if (o = !1, n = r.indexOf(i, n + 1), ~n) for(l = n; r.charCodeAt(l - 1) === ta;)l -= 1, o = !o;\n            else r += i, n = r.length - 1, s.unclosed = !0;\n            while (o);\n            s.value = r.slice(p + 1, n), s.sourceEndIndex = s.unclosed ? n : n + 1, e.push(s), p = n + 1, c = r.charCodeAt(p);\n        } else if (c === ft && r.charCodeAt(p + 1) === Cn) n = r.indexOf(\"*/\", p), s = {\n            type: \"comment\",\n            sourceIndex: p,\n            sourceEndIndex: n + 2\n        }, n === -1 && (s.unclosed = !0, n = r.length, s.sourceEndIndex = n), s.value = r.slice(p + 2, n), e.push(s), p = n + 2, c = r.charCodeAt(p);\n        else if ((c === ft || c === Cn) && m && m.type === \"function\" && m.value === \"calc\") s = r[p], e.push({\n            type: \"word\",\n            sourceIndex: p - w.length,\n            sourceEndIndex: p + s.length,\n            value: s\n        }), p += 1, c = r.charCodeAt(p);\n        else if (c === ft || c === ra || c === na) s = r[p], e.push({\n            type: \"div\",\n            sourceIndex: p - w.length,\n            sourceEndIndex: p + s.length,\n            value: s,\n            before: w,\n            after: \"\"\n        }), w = \"\", p += 1, c = r.charCodeAt(p);\n        else if (Ks === c) {\n            n = p;\n            do n += 1, c = r.charCodeAt(n);\n            while (c <= 32);\n            if (f = p, s = {\n                type: \"function\",\n                sourceIndex: p - g.length,\n                value: g,\n                before: r.slice(f + 1, n)\n            }, p = n, g === \"url\" && c !== En && c !== ea) {\n                n -= 1;\n                do if (o = !1, n = r.indexOf(\")\", n + 1), ~n) for(l = n; r.charCodeAt(l - 1) === ta;)l -= 1, o = !o;\n                else r += \")\", n = r.length - 1, s.unclosed = !0;\n                while (o);\n                u = n;\n                do u -= 1, c = r.charCodeAt(u);\n                while (c <= 32);\n                f < u ? (p !== u + 1 ? s.nodes = [\n                    {\n                        type: \"word\",\n                        sourceIndex: p,\n                        sourceEndIndex: u + 1,\n                        value: r.slice(p, u + 1)\n                    }\n                ] : s.nodes = [], s.unclosed && u + 1 !== n ? (s.after = \"\", s.nodes.push({\n                    type: \"space\",\n                    sourceIndex: u + 1,\n                    sourceEndIndex: n,\n                    value: r.slice(u + 1, n)\n                })) : (s.after = r.slice(u + 1, n), s.sourceEndIndex = n)) : (s.after = \"\", s.nodes = []), p = n + 1, s.sourceEndIndex = s.unclosed ? n : p, c = r.charCodeAt(p), e.push(s);\n            } else y += 1, s.after = \"\", s.sourceEndIndex = p + 1, e.push(s), h.push(s), e = s.nodes = [], m = s;\n            g = \"\";\n        } else if (Zs === c && y) p += 1, c = r.charCodeAt(p), m.after = b, m.sourceEndIndex += b.length, b = \"\", y -= 1, h[h.length - 1].sourceEndIndex = p, h.pop(), m = h[y], e = m.nodes;\n        else {\n            n = p;\n            do c === ta && (n += 1), n += 1, c = r.charCodeAt(n);\n            while (n < d && !(c <= 32 || c === En || c === ea || c === ra || c === na || c === ft || c === Ks || c === Cn && m && m.type === \"function\" && m.value === \"calc\" || c === ft && m.type === \"function\" && m.value === \"calc\" || c === Zs && y));\n            s = r.slice(p, n), Ks === c ? g = s : (Yv === s.charCodeAt(0) || Hv === s.charCodeAt(0)) && Qv === s.charCodeAt(1) && Jv.test(s.slice(2)) ? e.push({\n                type: \"unicode-range\",\n                sourceIndex: p,\n                sourceEndIndex: n,\n                value: s\n            }) : e.push({\n                type: \"word\",\n                sourceIndex: p,\n                sourceEndIndex: n,\n                value: s\n            }), p = n;\n        }\n        for(p = h.length - 1; p; p -= 1)h[p].unclosed = !0, h[p].sourceEndIndex = r.length;\n        return h[0].nodes;\n    };\n});\nvar Qf = S((Sk, Hf)=>{\n    Hf.exports = function t(e, r, n) {\n        var i, a, s, o;\n        for(i = 0, a = e.length; i < a; i += 1)s = e[i], n || (o = r(s, i, e)), o !== !1 && s.type === \"function\" && Array.isArray(s.nodes) && t(s.nodes, r, n), n && r(s, i, e);\n    };\n});\nvar Zf = S((kk, Kf)=>{\n    function Jf(t, e) {\n        var r = t.type, n = t.value, i, a;\n        return e && (a = e(t)) !== void 0 ? a : r === \"word\" || r === \"space\" ? n : r === \"string\" ? (i = t.quote || \"\", i + n + (t.unclosed ? \"\" : i)) : r === \"comment\" ? \"/*\" + n + (t.unclosed ? \"\" : \"*/\") : r === \"div\" ? (t.before || \"\") + n + (t.after || \"\") : Array.isArray(t.nodes) ? (i = Xf(t.nodes, e), r !== \"function\" ? i : n + \"(\" + (t.before || \"\") + i + (t.after || \"\") + (t.unclosed ? \"\" : \")\")) : n;\n    }\n    function Xf(t, e) {\n        var r, n;\n        if (Array.isArray(t)) {\n            for(r = \"\", n = t.length - 1; ~n; n -= 1)r = Jf(t[n], e) + r;\n            return r;\n        }\n        return Jf(t, e);\n    }\n    Kf.exports = Xf;\n});\nvar tc = S((Ok, ec)=>{\n    var An = \"-\".charCodeAt(0), _n = \"+\".charCodeAt(0), ia = \".\".charCodeAt(0), Xv = \"e\".charCodeAt(0), Kv = \"E\".charCodeAt(0);\n    function Zv(t) {\n        var e = t.charCodeAt(0), r;\n        if (e === _n || e === An) {\n            if (r = t.charCodeAt(1), r >= 48 && r <= 57) return !0;\n            var n = t.charCodeAt(2);\n            return r === ia && n >= 48 && n <= 57;\n        }\n        return e === ia ? (r = t.charCodeAt(1), r >= 48 && r <= 57) : e >= 48 && e <= 57;\n    }\n    ec.exports = function(t) {\n        var e = 0, r = t.length, n, i, a;\n        if (r === 0 || !Zv(t)) return !1;\n        for(n = t.charCodeAt(e), (n === _n || n === An) && e++; e < r && (n = t.charCodeAt(e), !(n < 48 || n > 57));)e += 1;\n        if (n = t.charCodeAt(e), i = t.charCodeAt(e + 1), n === ia && i >= 48 && i <= 57) for(e += 2; e < r && (n = t.charCodeAt(e), !(n < 48 || n > 57));)e += 1;\n        if (n = t.charCodeAt(e), i = t.charCodeAt(e + 1), a = t.charCodeAt(e + 2), (n === Xv || n === Kv) && (i >= 48 && i <= 57 || (i === _n || i === An) && a >= 48 && a <= 57)) for(e += i === _n || i === An ? 3 : 2; e < r && (n = t.charCodeAt(e), !(n < 48 || n > 57));)e += 1;\n        return {\n            number: t.slice(0, e),\n            unit: t.slice(e)\n        };\n    };\n});\nvar sc = S((Ek, ic)=>{\n    var ew = Yf(), rc = Qf(), nc = Zf();\n    function Ne(t) {\n        return this instanceof Ne ? (this.nodes = ew(t), this) : new Ne(t);\n    }\n    Ne.prototype.toString = function() {\n        return Array.isArray(this.nodes) ? nc(this.nodes) : \"\";\n    };\n    Ne.prototype.walk = function(t, e) {\n        return rc(this.nodes, t, e), this;\n    };\n    Ne.unit = tc();\n    Ne.walk = rc;\n    Ne.stringify = nc;\n    ic.exports = Ne;\n});\nvar Sc = S((CO, xc)=>{\n    xc.exports = {\n        content: [],\n        presets: [],\n        darkMode: \"media\",\n        theme: {\n            accentColor: ({ theme: t })=>({\n                    ...t(\"colors\"),\n                    auto: \"auto\"\n                }),\n            animation: {\n                none: \"none\",\n                spin: \"spin 1s linear infinite\",\n                ping: \"ping 1s cubic-bezier(0, 0, 0.2, 1) infinite\",\n                pulse: \"pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite\",\n                bounce: \"bounce 1s infinite\"\n            },\n            aria: {\n                checked: 'checked=\"true\"',\n                disabled: 'disabled=\"true\"',\n                expanded: 'expanded=\"true\"',\n                hidden: 'hidden=\"true\"',\n                pressed: 'pressed=\"true\"',\n                readonly: 'readonly=\"true\"',\n                required: 'required=\"true\"',\n                selected: 'selected=\"true\"'\n            },\n            aspectRatio: {\n                auto: \"auto\",\n                square: \"1 / 1\",\n                video: \"16 / 9\"\n            },\n            backdropBlur: ({ theme: t })=>t(\"blur\"),\n            backdropBrightness: ({ theme: t })=>t(\"brightness\"),\n            backdropContrast: ({ theme: t })=>t(\"contrast\"),\n            backdropGrayscale: ({ theme: t })=>t(\"grayscale\"),\n            backdropHueRotate: ({ theme: t })=>t(\"hueRotate\"),\n            backdropInvert: ({ theme: t })=>t(\"invert\"),\n            backdropOpacity: ({ theme: t })=>t(\"opacity\"),\n            backdropSaturate: ({ theme: t })=>t(\"saturate\"),\n            backdropSepia: ({ theme: t })=>t(\"sepia\"),\n            backgroundColor: ({ theme: t })=>t(\"colors\"),\n            backgroundImage: {\n                none: \"none\",\n                \"gradient-to-t\": \"linear-gradient(to top, var(--tw-gradient-stops))\",\n                \"gradient-to-tr\": \"linear-gradient(to top right, var(--tw-gradient-stops))\",\n                \"gradient-to-r\": \"linear-gradient(to right, var(--tw-gradient-stops))\",\n                \"gradient-to-br\": \"linear-gradient(to bottom right, var(--tw-gradient-stops))\",\n                \"gradient-to-b\": \"linear-gradient(to bottom, var(--tw-gradient-stops))\",\n                \"gradient-to-bl\": \"linear-gradient(to bottom left, var(--tw-gradient-stops))\",\n                \"gradient-to-l\": \"linear-gradient(to left, var(--tw-gradient-stops))\",\n                \"gradient-to-tl\": \"linear-gradient(to top left, var(--tw-gradient-stops))\"\n            },\n            backgroundOpacity: ({ theme: t })=>t(\"opacity\"),\n            backgroundPosition: {\n                bottom: \"bottom\",\n                center: \"center\",\n                left: \"left\",\n                \"left-bottom\": \"left bottom\",\n                \"left-top\": \"left top\",\n                right: \"right\",\n                \"right-bottom\": \"right bottom\",\n                \"right-top\": \"right top\",\n                top: \"top\"\n            },\n            backgroundSize: {\n                auto: \"auto\",\n                cover: \"cover\",\n                contain: \"contain\"\n            },\n            blur: {\n                0: \"0\",\n                none: \"0\",\n                sm: \"4px\",\n                DEFAULT: \"8px\",\n                md: \"12px\",\n                lg: \"16px\",\n                xl: \"24px\",\n                \"2xl\": \"40px\",\n                \"3xl\": \"64px\"\n            },\n            borderColor: ({ theme: t })=>({\n                    ...t(\"colors\"),\n                    DEFAULT: t(\"colors.gray.200\", \"currentColor\")\n                }),\n            borderOpacity: ({ theme: t })=>t(\"opacity\"),\n            borderRadius: {\n                none: \"0px\",\n                sm: \"0.125rem\",\n                DEFAULT: \"0.25rem\",\n                md: \"0.375rem\",\n                lg: \"0.5rem\",\n                xl: \"0.75rem\",\n                \"2xl\": \"1rem\",\n                \"3xl\": \"1.5rem\",\n                full: \"9999px\"\n            },\n            borderSpacing: ({ theme: t })=>({\n                    ...t(\"spacing\")\n                }),\n            borderWidth: {\n                DEFAULT: \"1px\",\n                0: \"0px\",\n                2: \"2px\",\n                4: \"4px\",\n                8: \"8px\"\n            },\n            boxShadow: {\n                sm: \"0 1px 2px 0 rgb(0 0 0 / 0.05)\",\n                DEFAULT: \"0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)\",\n                md: \"0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)\",\n                lg: \"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",\n                xl: \"0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)\",\n                \"2xl\": \"0 25px 50px -12px rgb(0 0 0 / 0.25)\",\n                inner: \"inset 0 2px 4px 0 rgb(0 0 0 / 0.05)\",\n                none: \"none\"\n            },\n            boxShadowColor: ({ theme: t })=>t(\"colors\"),\n            brightness: {\n                0: \"0\",\n                50: \".5\",\n                75: \".75\",\n                90: \".9\",\n                95: \".95\",\n                100: \"1\",\n                105: \"1.05\",\n                110: \"1.1\",\n                125: \"1.25\",\n                150: \"1.5\",\n                200: \"2\"\n            },\n            caretColor: ({ theme: t })=>t(\"colors\"),\n            colors: ({ colors: t })=>({\n                    inherit: t.inherit,\n                    current: t.current,\n                    transparent: t.transparent,\n                    black: t.black,\n                    white: t.white,\n                    slate: t.slate,\n                    gray: t.gray,\n                    zinc: t.zinc,\n                    neutral: t.neutral,\n                    stone: t.stone,\n                    red: t.red,\n                    orange: t.orange,\n                    amber: t.amber,\n                    yellow: t.yellow,\n                    lime: t.lime,\n                    green: t.green,\n                    emerald: t.emerald,\n                    teal: t.teal,\n                    cyan: t.cyan,\n                    sky: t.sky,\n                    blue: t.blue,\n                    indigo: t.indigo,\n                    violet: t.violet,\n                    purple: t.purple,\n                    fuchsia: t.fuchsia,\n                    pink: t.pink,\n                    rose: t.rose\n                }),\n            columns: {\n                auto: \"auto\",\n                1: \"1\",\n                2: \"2\",\n                3: \"3\",\n                4: \"4\",\n                5: \"5\",\n                6: \"6\",\n                7: \"7\",\n                8: \"8\",\n                9: \"9\",\n                10: \"10\",\n                11: \"11\",\n                12: \"12\",\n                \"3xs\": \"16rem\",\n                \"2xs\": \"18rem\",\n                xs: \"20rem\",\n                sm: \"24rem\",\n                md: \"28rem\",\n                lg: \"32rem\",\n                xl: \"36rem\",\n                \"2xl\": \"42rem\",\n                \"3xl\": \"48rem\",\n                \"4xl\": \"56rem\",\n                \"5xl\": \"64rem\",\n                \"6xl\": \"72rem\",\n                \"7xl\": \"80rem\"\n            },\n            container: {},\n            content: {\n                none: \"none\"\n            },\n            contrast: {\n                0: \"0\",\n                50: \".5\",\n                75: \".75\",\n                100: \"1\",\n                125: \"1.25\",\n                150: \"1.5\",\n                200: \"2\"\n            },\n            cursor: {\n                auto: \"auto\",\n                default: \"default\",\n                pointer: \"pointer\",\n                wait: \"wait\",\n                text: \"text\",\n                move: \"move\",\n                help: \"help\",\n                \"not-allowed\": \"not-allowed\",\n                none: \"none\",\n                \"context-menu\": \"context-menu\",\n                progress: \"progress\",\n                cell: \"cell\",\n                crosshair: \"crosshair\",\n                \"vertical-text\": \"vertical-text\",\n                alias: \"alias\",\n                copy: \"copy\",\n                \"no-drop\": \"no-drop\",\n                grab: \"grab\",\n                grabbing: \"grabbing\",\n                \"all-scroll\": \"all-scroll\",\n                \"col-resize\": \"col-resize\",\n                \"row-resize\": \"row-resize\",\n                \"n-resize\": \"n-resize\",\n                \"e-resize\": \"e-resize\",\n                \"s-resize\": \"s-resize\",\n                \"w-resize\": \"w-resize\",\n                \"ne-resize\": \"ne-resize\",\n                \"nw-resize\": \"nw-resize\",\n                \"se-resize\": \"se-resize\",\n                \"sw-resize\": \"sw-resize\",\n                \"ew-resize\": \"ew-resize\",\n                \"ns-resize\": \"ns-resize\",\n                \"nesw-resize\": \"nesw-resize\",\n                \"nwse-resize\": \"nwse-resize\",\n                \"zoom-in\": \"zoom-in\",\n                \"zoom-out\": \"zoom-out\"\n            },\n            divideColor: ({ theme: t })=>t(\"borderColor\"),\n            divideOpacity: ({ theme: t })=>t(\"borderOpacity\"),\n            divideWidth: ({ theme: t })=>t(\"borderWidth\"),\n            dropShadow: {\n                sm: \"0 1px 1px rgb(0 0 0 / 0.05)\",\n                DEFAULT: [\n                    \"0 1px 2px rgb(0 0 0 / 0.1)\",\n                    \"0 1px 1px rgb(0 0 0 / 0.06)\"\n                ],\n                md: [\n                    \"0 4px 3px rgb(0 0 0 / 0.07)\",\n                    \"0 2px 2px rgb(0 0 0 / 0.06)\"\n                ],\n                lg: [\n                    \"0 10px 8px rgb(0 0 0 / 0.04)\",\n                    \"0 4px 3px rgb(0 0 0 / 0.1)\"\n                ],\n                xl: [\n                    \"0 20px 13px rgb(0 0 0 / 0.03)\",\n                    \"0 8px 5px rgb(0 0 0 / 0.08)\"\n                ],\n                \"2xl\": \"0 25px 25px rgb(0 0 0 / 0.15)\",\n                none: \"0 0 #0000\"\n            },\n            fill: ({ theme: t })=>({\n                    none: \"none\",\n                    ...t(\"colors\")\n                }),\n            flex: {\n                1: \"1 1 0%\",\n                auto: \"1 1 auto\",\n                initial: \"0 1 auto\",\n                none: \"none\"\n            },\n            flexBasis: ({ theme: t })=>({\n                    auto: \"auto\",\n                    ...t(\"spacing\"),\n                    \"1/2\": \"50%\",\n                    \"1/3\": \"33.333333%\",\n                    \"2/3\": \"66.666667%\",\n                    \"1/4\": \"25%\",\n                    \"2/4\": \"50%\",\n                    \"3/4\": \"75%\",\n                    \"1/5\": \"20%\",\n                    \"2/5\": \"40%\",\n                    \"3/5\": \"60%\",\n                    \"4/5\": \"80%\",\n                    \"1/6\": \"16.666667%\",\n                    \"2/6\": \"33.333333%\",\n                    \"3/6\": \"50%\",\n                    \"4/6\": \"66.666667%\",\n                    \"5/6\": \"83.333333%\",\n                    \"1/12\": \"8.333333%\",\n                    \"2/12\": \"16.666667%\",\n                    \"3/12\": \"25%\",\n                    \"4/12\": \"33.333333%\",\n                    \"5/12\": \"41.666667%\",\n                    \"6/12\": \"50%\",\n                    \"7/12\": \"58.333333%\",\n                    \"8/12\": \"66.666667%\",\n                    \"9/12\": \"75%\",\n                    \"10/12\": \"83.333333%\",\n                    \"11/12\": \"91.666667%\",\n                    full: \"100%\"\n                }),\n            flexGrow: {\n                0: \"0\",\n                DEFAULT: \"1\"\n            },\n            flexShrink: {\n                0: \"0\",\n                DEFAULT: \"1\"\n            },\n            fontFamily: {\n                sans: [\n                    \"ui-sans-serif\",\n                    \"system-ui\",\n                    \"-apple-system\",\n                    \"BlinkMacSystemFont\",\n                    '\"Segoe UI\"',\n                    \"Roboto\",\n                    '\"Helvetica Neue\"',\n                    \"Arial\",\n                    '\"Noto Sans\"',\n                    \"sans-serif\",\n                    '\"Apple Color Emoji\"',\n                    '\"Segoe UI Emoji\"',\n                    '\"Segoe UI Symbol\"',\n                    '\"Noto Color Emoji\"'\n                ],\n                serif: [\n                    \"ui-serif\",\n                    \"Georgia\",\n                    \"Cambria\",\n                    '\"Times New Roman\"',\n                    \"Times\",\n                    \"serif\"\n                ],\n                mono: [\n                    \"ui-monospace\",\n                    \"SFMono-Regular\",\n                    \"Menlo\",\n                    \"Monaco\",\n                    \"Consolas\",\n                    '\"Liberation Mono\"',\n                    '\"Courier New\"',\n                    \"monospace\"\n                ]\n            },\n            fontSize: {\n                xs: [\n                    \"0.75rem\",\n                    {\n                        lineHeight: \"1rem\"\n                    }\n                ],\n                sm: [\n                    \"0.875rem\",\n                    {\n                        lineHeight: \"1.25rem\"\n                    }\n                ],\n                base: [\n                    \"1rem\",\n                    {\n                        lineHeight: \"1.5rem\"\n                    }\n                ],\n                lg: [\n                    \"1.125rem\",\n                    {\n                        lineHeight: \"1.75rem\"\n                    }\n                ],\n                xl: [\n                    \"1.25rem\",\n                    {\n                        lineHeight: \"1.75rem\"\n                    }\n                ],\n                \"2xl\": [\n                    \"1.5rem\",\n                    {\n                        lineHeight: \"2rem\"\n                    }\n                ],\n                \"3xl\": [\n                    \"1.875rem\",\n                    {\n                        lineHeight: \"2.25rem\"\n                    }\n                ],\n                \"4xl\": [\n                    \"2.25rem\",\n                    {\n                        lineHeight: \"2.5rem\"\n                    }\n                ],\n                \"5xl\": [\n                    \"3rem\",\n                    {\n                        lineHeight: \"1\"\n                    }\n                ],\n                \"6xl\": [\n                    \"3.75rem\",\n                    {\n                        lineHeight: \"1\"\n                    }\n                ],\n                \"7xl\": [\n                    \"4.5rem\",\n                    {\n                        lineHeight: \"1\"\n                    }\n                ],\n                \"8xl\": [\n                    \"6rem\",\n                    {\n                        lineHeight: \"1\"\n                    }\n                ],\n                \"9xl\": [\n                    \"8rem\",\n                    {\n                        lineHeight: \"1\"\n                    }\n                ]\n            },\n            fontWeight: {\n                thin: \"100\",\n                extralight: \"200\",\n                light: \"300\",\n                normal: \"400\",\n                medium: \"500\",\n                semibold: \"600\",\n                bold: \"700\",\n                extrabold: \"800\",\n                black: \"900\"\n            },\n            gap: ({ theme: t })=>t(\"spacing\"),\n            gradientColorStops: ({ theme: t })=>t(\"colors\"),\n            gradientColorStopPositions: {\n                \"0%\": \"0%\",\n                \"5%\": \"5%\",\n                \"10%\": \"10%\",\n                \"15%\": \"15%\",\n                \"20%\": \"20%\",\n                \"25%\": \"25%\",\n                \"30%\": \"30%\",\n                \"35%\": \"35%\",\n                \"40%\": \"40%\",\n                \"45%\": \"45%\",\n                \"50%\": \"50%\",\n                \"55%\": \"55%\",\n                \"60%\": \"60%\",\n                \"65%\": \"65%\",\n                \"70%\": \"70%\",\n                \"75%\": \"75%\",\n                \"80%\": \"80%\",\n                \"85%\": \"85%\",\n                \"90%\": \"90%\",\n                \"95%\": \"95%\",\n                \"100%\": \"100%\"\n            },\n            grayscale: {\n                0: \"0\",\n                DEFAULT: \"100%\"\n            },\n            gridAutoColumns: {\n                auto: \"auto\",\n                min: \"min-content\",\n                max: \"max-content\",\n                fr: \"minmax(0, 1fr)\"\n            },\n            gridAutoRows: {\n                auto: \"auto\",\n                min: \"min-content\",\n                max: \"max-content\",\n                fr: \"minmax(0, 1fr)\"\n            },\n            gridColumn: {\n                auto: \"auto\",\n                \"span-1\": \"span 1 / span 1\",\n                \"span-2\": \"span 2 / span 2\",\n                \"span-3\": \"span 3 / span 3\",\n                \"span-4\": \"span 4 / span 4\",\n                \"span-5\": \"span 5 / span 5\",\n                \"span-6\": \"span 6 / span 6\",\n                \"span-7\": \"span 7 / span 7\",\n                \"span-8\": \"span 8 / span 8\",\n                \"span-9\": \"span 9 / span 9\",\n                \"span-10\": \"span 10 / span 10\",\n                \"span-11\": \"span 11 / span 11\",\n                \"span-12\": \"span 12 / span 12\",\n                \"span-full\": \"1 / -1\"\n            },\n            gridColumnEnd: {\n                auto: \"auto\",\n                1: \"1\",\n                2: \"2\",\n                3: \"3\",\n                4: \"4\",\n                5: \"5\",\n                6: \"6\",\n                7: \"7\",\n                8: \"8\",\n                9: \"9\",\n                10: \"10\",\n                11: \"11\",\n                12: \"12\",\n                13: \"13\"\n            },\n            gridColumnStart: {\n                auto: \"auto\",\n                1: \"1\",\n                2: \"2\",\n                3: \"3\",\n                4: \"4\",\n                5: \"5\",\n                6: \"6\",\n                7: \"7\",\n                8: \"8\",\n                9: \"9\",\n                10: \"10\",\n                11: \"11\",\n                12: \"12\",\n                13: \"13\"\n            },\n            gridRow: {\n                auto: \"auto\",\n                \"span-1\": \"span 1 / span 1\",\n                \"span-2\": \"span 2 / span 2\",\n                \"span-3\": \"span 3 / span 3\",\n                \"span-4\": \"span 4 / span 4\",\n                \"span-5\": \"span 5 / span 5\",\n                \"span-6\": \"span 6 / span 6\",\n                \"span-full\": \"1 / -1\"\n            },\n            gridRowEnd: {\n                auto: \"auto\",\n                1: \"1\",\n                2: \"2\",\n                3: \"3\",\n                4: \"4\",\n                5: \"5\",\n                6: \"6\",\n                7: \"7\"\n            },\n            gridRowStart: {\n                auto: \"auto\",\n                1: \"1\",\n                2: \"2\",\n                3: \"3\",\n                4: \"4\",\n                5: \"5\",\n                6: \"6\",\n                7: \"7\"\n            },\n            gridTemplateColumns: {\n                none: \"none\",\n                1: \"repeat(1, minmax(0, 1fr))\",\n                2: \"repeat(2, minmax(0, 1fr))\",\n                3: \"repeat(3, minmax(0, 1fr))\",\n                4: \"repeat(4, minmax(0, 1fr))\",\n                5: \"repeat(5, minmax(0, 1fr))\",\n                6: \"repeat(6, minmax(0, 1fr))\",\n                7: \"repeat(7, minmax(0, 1fr))\",\n                8: \"repeat(8, minmax(0, 1fr))\",\n                9: \"repeat(9, minmax(0, 1fr))\",\n                10: \"repeat(10, minmax(0, 1fr))\",\n                11: \"repeat(11, minmax(0, 1fr))\",\n                12: \"repeat(12, minmax(0, 1fr))\"\n            },\n            gridTemplateRows: {\n                none: \"none\",\n                1: \"repeat(1, minmax(0, 1fr))\",\n                2: \"repeat(2, minmax(0, 1fr))\",\n                3: \"repeat(3, minmax(0, 1fr))\",\n                4: \"repeat(4, minmax(0, 1fr))\",\n                5: \"repeat(5, minmax(0, 1fr))\",\n                6: \"repeat(6, minmax(0, 1fr))\"\n            },\n            height: ({ theme: t })=>({\n                    auto: \"auto\",\n                    ...t(\"spacing\"),\n                    \"1/2\": \"50%\",\n                    \"1/3\": \"33.333333%\",\n                    \"2/3\": \"66.666667%\",\n                    \"1/4\": \"25%\",\n                    \"2/4\": \"50%\",\n                    \"3/4\": \"75%\",\n                    \"1/5\": \"20%\",\n                    \"2/5\": \"40%\",\n                    \"3/5\": \"60%\",\n                    \"4/5\": \"80%\",\n                    \"1/6\": \"16.666667%\",\n                    \"2/6\": \"33.333333%\",\n                    \"3/6\": \"50%\",\n                    \"4/6\": \"66.666667%\",\n                    \"5/6\": \"83.333333%\",\n                    full: \"100%\",\n                    screen: \"100vh\",\n                    min: \"min-content\",\n                    max: \"max-content\",\n                    fit: \"fit-content\"\n                }),\n            hueRotate: {\n                0: \"0deg\",\n                15: \"15deg\",\n                30: \"30deg\",\n                60: \"60deg\",\n                90: \"90deg\",\n                180: \"180deg\"\n            },\n            inset: ({ theme: t })=>({\n                    auto: \"auto\",\n                    ...t(\"spacing\"),\n                    \"1/2\": \"50%\",\n                    \"1/3\": \"33.333333%\",\n                    \"2/3\": \"66.666667%\",\n                    \"1/4\": \"25%\",\n                    \"2/4\": \"50%\",\n                    \"3/4\": \"75%\",\n                    full: \"100%\"\n                }),\n            invert: {\n                0: \"0\",\n                DEFAULT: \"100%\"\n            },\n            keyframes: {\n                spin: {\n                    to: {\n                        transform: \"rotate(360deg)\"\n                    }\n                },\n                ping: {\n                    \"75%, 100%\": {\n                        transform: \"scale(2)\",\n                        opacity: \"0\"\n                    }\n                },\n                pulse: {\n                    \"50%\": {\n                        opacity: \".5\"\n                    }\n                },\n                bounce: {\n                    \"0%, 100%\": {\n                        transform: \"translateY(-25%)\",\n                        animationTimingFunction: \"cubic-bezier(0.8,0,1,1)\"\n                    },\n                    \"50%\": {\n                        transform: \"none\",\n                        animationTimingFunction: \"cubic-bezier(0,0,0.2,1)\"\n                    }\n                }\n            },\n            letterSpacing: {\n                tighter: \"-0.05em\",\n                tight: \"-0.025em\",\n                normal: \"0em\",\n                wide: \"0.025em\",\n                wider: \"0.05em\",\n                widest: \"0.1em\"\n            },\n            lineHeight: {\n                none: \"1\",\n                tight: \"1.25\",\n                snug: \"1.375\",\n                normal: \"1.5\",\n                relaxed: \"1.625\",\n                loose: \"2\",\n                3: \".75rem\",\n                4: \"1rem\",\n                5: \"1.25rem\",\n                6: \"1.5rem\",\n                7: \"1.75rem\",\n                8: \"2rem\",\n                9: \"2.25rem\",\n                10: \"2.5rem\"\n            },\n            listStyleType: {\n                none: \"none\",\n                disc: \"disc\",\n                decimal: \"decimal\"\n            },\n            listStyleImage: {\n                none: \"none\"\n            },\n            margin: ({ theme: t })=>({\n                    auto: \"auto\",\n                    ...t(\"spacing\")\n                }),\n            lineClamp: {\n                1: \"1\",\n                2: \"2\",\n                3: \"3\",\n                4: \"4\",\n                5: \"5\",\n                6: \"6\"\n            },\n            maxHeight: ({ theme: t })=>({\n                    ...t(\"spacing\"),\n                    none: \"none\",\n                    full: \"100%\",\n                    screen: \"100vh\",\n                    min: \"min-content\",\n                    max: \"max-content\",\n                    fit: \"fit-content\"\n                }),\n            maxWidth: ({ theme: t, breakpoints: e })=>({\n                    none: \"none\",\n                    0: \"0rem\",\n                    xs: \"20rem\",\n                    sm: \"24rem\",\n                    md: \"28rem\",\n                    lg: \"32rem\",\n                    xl: \"36rem\",\n                    \"2xl\": \"42rem\",\n                    \"3xl\": \"48rem\",\n                    \"4xl\": \"56rem\",\n                    \"5xl\": \"64rem\",\n                    \"6xl\": \"72rem\",\n                    \"7xl\": \"80rem\",\n                    full: \"100%\",\n                    min: \"min-content\",\n                    max: \"max-content\",\n                    fit: \"fit-content\",\n                    prose: \"65ch\",\n                    ...e(t(\"screens\"))\n                }),\n            minHeight: {\n                0: \"0px\",\n                full: \"100%\",\n                screen: \"100vh\",\n                min: \"min-content\",\n                max: \"max-content\",\n                fit: \"fit-content\"\n            },\n            minWidth: {\n                0: \"0px\",\n                full: \"100%\",\n                min: \"min-content\",\n                max: \"max-content\",\n                fit: \"fit-content\"\n            },\n            objectPosition: {\n                bottom: \"bottom\",\n                center: \"center\",\n                left: \"left\",\n                \"left-bottom\": \"left bottom\",\n                \"left-top\": \"left top\",\n                right: \"right\",\n                \"right-bottom\": \"right bottom\",\n                \"right-top\": \"right top\",\n                top: \"top\"\n            },\n            opacity: {\n                0: \"0\",\n                5: \"0.05\",\n                10: \"0.1\",\n                20: \"0.2\",\n                25: \"0.25\",\n                30: \"0.3\",\n                40: \"0.4\",\n                50: \"0.5\",\n                60: \"0.6\",\n                70: \"0.7\",\n                75: \"0.75\",\n                80: \"0.8\",\n                90: \"0.9\",\n                95: \"0.95\",\n                100: \"1\"\n            },\n            order: {\n                first: \"-9999\",\n                last: \"9999\",\n                none: \"0\",\n                1: \"1\",\n                2: \"2\",\n                3: \"3\",\n                4: \"4\",\n                5: \"5\",\n                6: \"6\",\n                7: \"7\",\n                8: \"8\",\n                9: \"9\",\n                10: \"10\",\n                11: \"11\",\n                12: \"12\"\n            },\n            outlineColor: ({ theme: t })=>t(\"colors\"),\n            outlineOffset: {\n                0: \"0px\",\n                1: \"1px\",\n                2: \"2px\",\n                4: \"4px\",\n                8: \"8px\"\n            },\n            outlineWidth: {\n                0: \"0px\",\n                1: \"1px\",\n                2: \"2px\",\n                4: \"4px\",\n                8: \"8px\"\n            },\n            padding: ({ theme: t })=>t(\"spacing\"),\n            placeholderColor: ({ theme: t })=>t(\"colors\"),\n            placeholderOpacity: ({ theme: t })=>t(\"opacity\"),\n            ringColor: ({ theme: t })=>({\n                    DEFAULT: t(\"colors.blue.500\", \"#3b82f6\"),\n                    ...t(\"colors\")\n                }),\n            ringOffsetColor: ({ theme: t })=>t(\"colors\"),\n            ringOffsetWidth: {\n                0: \"0px\",\n                1: \"1px\",\n                2: \"2px\",\n                4: \"4px\",\n                8: \"8px\"\n            },\n            ringOpacity: ({ theme: t })=>({\n                    DEFAULT: \"0.5\",\n                    ...t(\"opacity\")\n                }),\n            ringWidth: {\n                DEFAULT: \"3px\",\n                0: \"0px\",\n                1: \"1px\",\n                2: \"2px\",\n                4: \"4px\",\n                8: \"8px\"\n            },\n            rotate: {\n                0: \"0deg\",\n                1: \"1deg\",\n                2: \"2deg\",\n                3: \"3deg\",\n                6: \"6deg\",\n                12: \"12deg\",\n                45: \"45deg\",\n                90: \"90deg\",\n                180: \"180deg\"\n            },\n            saturate: {\n                0: \"0\",\n                50: \".5\",\n                100: \"1\",\n                150: \"1.5\",\n                200: \"2\"\n            },\n            scale: {\n                0: \"0\",\n                50: \".5\",\n                75: \".75\",\n                90: \".9\",\n                95: \".95\",\n                100: \"1\",\n                105: \"1.05\",\n                110: \"1.1\",\n                125: \"1.25\",\n                150: \"1.5\"\n            },\n            screens: {\n                sm: \"640px\",\n                md: \"768px\",\n                lg: \"1024px\",\n                xl: \"1280px\",\n                \"2xl\": \"1536px\"\n            },\n            scrollMargin: ({ theme: t })=>({\n                    ...t(\"spacing\")\n                }),\n            scrollPadding: ({ theme: t })=>t(\"spacing\"),\n            sepia: {\n                0: \"0\",\n                DEFAULT: \"100%\"\n            },\n            skew: {\n                0: \"0deg\",\n                1: \"1deg\",\n                2: \"2deg\",\n                3: \"3deg\",\n                6: \"6deg\",\n                12: \"12deg\"\n            },\n            space: ({ theme: t })=>({\n                    ...t(\"spacing\")\n                }),\n            spacing: {\n                px: \"1px\",\n                0: \"0px\",\n                .5: \"0.125rem\",\n                1: \"0.25rem\",\n                1.5: \"0.375rem\",\n                2: \"0.5rem\",\n                2.5: \"0.625rem\",\n                3: \"0.75rem\",\n                3.5: \"0.875rem\",\n                4: \"1rem\",\n                5: \"1.25rem\",\n                6: \"1.5rem\",\n                7: \"1.75rem\",\n                8: \"2rem\",\n                9: \"2.25rem\",\n                10: \"2.5rem\",\n                11: \"2.75rem\",\n                12: \"3rem\",\n                14: \"3.5rem\",\n                16: \"4rem\",\n                20: \"5rem\",\n                24: \"6rem\",\n                28: \"7rem\",\n                32: \"8rem\",\n                36: \"9rem\",\n                40: \"10rem\",\n                44: \"11rem\",\n                48: \"12rem\",\n                52: \"13rem\",\n                56: \"14rem\",\n                60: \"15rem\",\n                64: \"16rem\",\n                72: \"18rem\",\n                80: \"20rem\",\n                96: \"24rem\"\n            },\n            stroke: ({ theme: t })=>({\n                    none: \"none\",\n                    ...t(\"colors\")\n                }),\n            strokeWidth: {\n                0: \"0\",\n                1: \"1\",\n                2: \"2\"\n            },\n            supports: {},\n            data: {},\n            textColor: ({ theme: t })=>t(\"colors\"),\n            textDecorationColor: ({ theme: t })=>t(\"colors\"),\n            textDecorationThickness: {\n                auto: \"auto\",\n                \"from-font\": \"from-font\",\n                0: \"0px\",\n                1: \"1px\",\n                2: \"2px\",\n                4: \"4px\",\n                8: \"8px\"\n            },\n            textIndent: ({ theme: t })=>({\n                    ...t(\"spacing\")\n                }),\n            textOpacity: ({ theme: t })=>t(\"opacity\"),\n            textUnderlineOffset: {\n                auto: \"auto\",\n                0: \"0px\",\n                1: \"1px\",\n                2: \"2px\",\n                4: \"4px\",\n                8: \"8px\"\n            },\n            transformOrigin: {\n                center: \"center\",\n                top: \"top\",\n                \"top-right\": \"top right\",\n                right: \"right\",\n                \"bottom-right\": \"bottom right\",\n                bottom: \"bottom\",\n                \"bottom-left\": \"bottom left\",\n                left: \"left\",\n                \"top-left\": \"top left\"\n            },\n            transitionDelay: {\n                0: \"0s\",\n                75: \"75ms\",\n                100: \"100ms\",\n                150: \"150ms\",\n                200: \"200ms\",\n                300: \"300ms\",\n                500: \"500ms\",\n                700: \"700ms\",\n                1e3: \"1000ms\"\n            },\n            transitionDuration: {\n                DEFAULT: \"150ms\",\n                0: \"0s\",\n                75: \"75ms\",\n                100: \"100ms\",\n                150: \"150ms\",\n                200: \"200ms\",\n                300: \"300ms\",\n                500: \"500ms\",\n                700: \"700ms\",\n                1e3: \"1000ms\"\n            },\n            transitionProperty: {\n                none: \"none\",\n                all: \"all\",\n                DEFAULT: \"color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter\",\n                colors: \"color, background-color, border-color, text-decoration-color, fill, stroke\",\n                opacity: \"opacity\",\n                shadow: \"box-shadow\",\n                transform: \"transform\"\n            },\n            transitionTimingFunction: {\n                DEFAULT: \"cubic-bezier(0.4, 0, 0.2, 1)\",\n                linear: \"linear\",\n                in: \"cubic-bezier(0.4, 0, 1, 1)\",\n                out: \"cubic-bezier(0, 0, 0.2, 1)\",\n                \"in-out\": \"cubic-bezier(0.4, 0, 0.2, 1)\"\n            },\n            translate: ({ theme: t })=>({\n                    ...t(\"spacing\"),\n                    \"1/2\": \"50%\",\n                    \"1/3\": \"33.333333%\",\n                    \"2/3\": \"66.666667%\",\n                    \"1/4\": \"25%\",\n                    \"2/4\": \"50%\",\n                    \"3/4\": \"75%\",\n                    full: \"100%\"\n                }),\n            width: ({ theme: t })=>({\n                    auto: \"auto\",\n                    ...t(\"spacing\"),\n                    \"1/2\": \"50%\",\n                    \"1/3\": \"33.333333%\",\n                    \"2/3\": \"66.666667%\",\n                    \"1/4\": \"25%\",\n                    \"2/4\": \"50%\",\n                    \"3/4\": \"75%\",\n                    \"1/5\": \"20%\",\n                    \"2/5\": \"40%\",\n                    \"3/5\": \"60%\",\n                    \"4/5\": \"80%\",\n                    \"1/6\": \"16.666667%\",\n                    \"2/6\": \"33.333333%\",\n                    \"3/6\": \"50%\",\n                    \"4/6\": \"66.666667%\",\n                    \"5/6\": \"83.333333%\",\n                    \"1/12\": \"8.333333%\",\n                    \"2/12\": \"16.666667%\",\n                    \"3/12\": \"25%\",\n                    \"4/12\": \"33.333333%\",\n                    \"5/12\": \"41.666667%\",\n                    \"6/12\": \"50%\",\n                    \"7/12\": \"58.333333%\",\n                    \"8/12\": \"66.666667%\",\n                    \"9/12\": \"75%\",\n                    \"10/12\": \"83.333333%\",\n                    \"11/12\": \"91.666667%\",\n                    full: \"100%\",\n                    screen: \"100vw\",\n                    min: \"min-content\",\n                    max: \"max-content\",\n                    fit: \"fit-content\"\n                }),\n            willChange: {\n                auto: \"auto\",\n                scroll: \"scroll-position\",\n                contents: \"contents\",\n                transform: \"transform\"\n            },\n            zIndex: {\n                auto: \"auto\",\n                0: \"0\",\n                10: \"10\",\n                20: \"20\",\n                30: \"30\",\n                40: \"40\",\n                50: \"50\"\n            }\n        },\n        plugins: []\n    };\n});\nvar Dc = S((FO, Rc)=>{\n    \"use strict\";\n    var Dn = Object.prototype.hasOwnProperty, Ic = Object.prototype.toString, Ec = Object.defineProperty, Cc = Object.getOwnPropertyDescriptor, Ac = function(e) {\n        return typeof Array.isArray == \"function\" ? Array.isArray(e) : Ic.call(e) === \"[object Array]\";\n    }, _c = function(e) {\n        if (!e || Ic.call(e) !== \"[object Object]\") return !1;\n        var r = Dn.call(e, \"constructor\"), n = e.constructor && e.constructor.prototype && Dn.call(e.constructor.prototype, \"isPrototypeOf\");\n        if (e.constructor && !r && !n) return !1;\n        var i;\n        for(i in e);\n        return typeof i > \"u\" || Dn.call(e, i);\n    }, Tc = function(e, r) {\n        Ec && r.name === \"__proto__\" ? Ec(e, r.name, {\n            enumerable: !0,\n            configurable: !0,\n            value: r.newValue,\n            writable: !0\n        }) : e[r.name] = r.newValue;\n    }, Pc = function(e, r) {\n        if (r === \"__proto__\") if (Dn.call(e, r)) {\n            if (Cc) return Cc(e, r).value;\n        } else return;\n        return e[r];\n    };\n    Rc.exports = function t() {\n        var e, r, n, i, a, s, o = arguments[0], l = 1, u = arguments.length, f = !1;\n        for(typeof o == \"boolean\" && (f = o, o = arguments[1] || {}, l = 2), (o == null || typeof o != \"object\" && typeof o != \"function\") && (o = {}); l < u; ++l)if (e = arguments[l], e != null) for(r in e)n = Pc(o, r), i = Pc(e, r), o !== i && (f && i && (_c(i) || (a = Ac(i))) ? (a ? (a = !1, s = n && Ac(n) ? n : []) : s = n && _c(n) ? n : {}, Tc(o, {\n            name: r,\n            newValue: t(f, s, i)\n        })) : typeof i < \"u\" && Tc(o, {\n            name: r,\n            newValue: i\n        }));\n        return o;\n    };\n});\nvar Mn = S((LO, Mc)=>{\n    var ya = function(t, e) {\n        var r = new t.constructor;\n        return Object.keys(t).forEach(function(n) {\n            if (!!t.hasOwnProperty(n)) {\n                var i = t[n], a = typeof i;\n                n === \"parent\" && a === \"object\" ? e && (r[n] = e) : n === \"source\" ? r[n] = i : i instanceof Array ? n === \"nodes\" ? r[n] = [] : r[n] = i.map(function(s) {\n                    ya(s, r);\n                }) : n !== \"before\" && n !== \"after\" && n !== \"between\" && n !== \"semicolon\" && (a === \"object\" && (i = ya(i)), r[n] = i);\n            }\n        }), r;\n    };\n    Mc.exports = ya;\n});\nvar $c = S((NO, qc)=>{\n    \"use strict\";\n    qc.exports = Lc;\n    function Lc(t, e, r) {\n        t instanceof RegExp && (t = Fc(t, r)), e instanceof RegExp && (e = Fc(e, r));\n        var n = Nc(t, e, r);\n        return n && {\n            start: n[0],\n            end: n[1],\n            pre: r.slice(0, n[0]),\n            body: r.slice(n[0] + t.length, n[1]),\n            post: r.slice(n[1] + e.length)\n        };\n    }\n    function Fc(t, e) {\n        var r = e.match(t);\n        return r ? r[0] : null;\n    }\n    Lc.range = Nc;\n    function Nc(t, e, r) {\n        var n, i, a, s, o, l = r.indexOf(t), u = r.indexOf(e, l + 1), f = l;\n        if (l >= 0 && u > 0) {\n            if (t === e) return [\n                l,\n                u\n            ];\n            for(n = [], a = r.length; f >= 0 && !o;)f == l ? (n.push(f), l = r.indexOf(t, f + 1)) : n.length == 1 ? o = [\n                n.pop(),\n                u\n            ] : (i = n.pop(), i < a && (a = i, s = u), u = r.indexOf(e, f + 1)), f = l < u && l >= 0 ? l : u;\n            n.length && (o = [\n                a,\n                s\n            ]);\n        }\n        return o;\n    }\n});\nvar jc = S((qO, Uc)=>{\n    var Ow = /(.*?(?:(?:\\([^\\)]+\\)|\\[[^\\]]+\\]|(?![><+~\\s]).)+)(?:(?:(?:\\s(?!>>))|(?:\\t(?!>>))|(?:\\s?>>\\s?))(?!\\s+))(?![><+~][\\s]+?))/, Ew = function(t) {\n        return t.split(Ow).filter(function(e) {\n            return e.length > 0;\n        }).map(function(e) {\n            return e.trim().replace(/\\s*?>>\\s*?/g, \"\");\n        });\n    };\n    Uc.exports = Ew;\n});\nvar dr = S(($O, zc)=>{\n    var Cw = jc(), Aw = function(t, e) {\n        e = e || !1;\n        for(var r = [\n            []\n        ], n = e ? t : t.parent; n;){\n            var i = (n.selectors || []).map(function(s) {\n                return {\n                    value: s,\n                    type: \"selector\"\n                };\n            });\n            n.type === \"atrule\" && (i = [].concat(n.params).map(function(s) {\n                return {\n                    value: \"@\" + n.name + \" \" + s,\n                    type: \"atrule\"\n                };\n            }));\n            var a = (i.length > 0 ? i : [\n                1\n            ]).map(function() {\n                return r.map(function(s) {\n                    return s.slice(0);\n                });\n            });\n            i.forEach(function(s, o) {\n                a[o] = a[o].map(function(l) {\n                    var u = [\n                        s.value\n                    ];\n                    return s.type === \"selector\" && (u = Cw(s.value)), l.unshift.apply(l, u), l;\n                });\n            }), r = [], a.forEach(function(s) {\n                r = r.concat(s);\n            }), n = n.parent;\n        }\n        return r;\n    };\n    zc.exports = Aw;\n});\nvar Wc = S((UO, Vc)=>{\n    \"use strict\";\n    var _w = /[|\\\\{}()[\\]^$+*?.]/g;\n    Vc.exports = function(t) {\n        if (typeof t != \"string\") throw new TypeError(\"Expected a string\");\n        return t.replace(_w, \"\\\\$&\");\n    };\n});\nvar Gc = S((jO, Bc)=>{\n    var Tw = {\n        \"*\": !0,\n        \":root\": !0,\n        html: !0\n    }, Pw = function(t) {\n        return !!Tw[t];\n    };\n    Bc.exports = Pw;\n});\nvar Hc = S((zO, Yc)=>{\n    var Iw = /(.*?(?:(?:\\([^\\)]+\\)|\\[[^\\]]+\\]|(?!>>|<|\\+|~|\\s).)+)(?:(?:(?:>(?!>))|(?:\\s?>(?!>)\\s?))(?!\\s+))(?!(?:>>|<|\\+|~)[\\s]+?))/, Rw = function(t) {\n        return t.split(Iw).filter(function(e) {\n            return e.length > 0;\n        }).map(function(e) {\n            return e.trim().replace(/\\s*?>\\s*?/g, \"\");\n        });\n    };\n    Yc.exports = Rw;\n});\nvar va = S((VO, tp)=>{\n    var Dw = Wc(), Qc = Gc(), Jc = Hc(), Mw = /^@.*/, Kc = /([^\\s:]+)((?::|::)[^\\s]*?)(\\s+|$)/;\n    function Zc(t, e) {\n        var r, n, i = e.some(function(a) {\n            return t.some(function(s) {\n                r = null;\n                var o = !0;\n                for(n = 0; n < a.length; n++){\n                    for(var l = a[n], u = r || 0, f = -1, p = s.slice(u), c = 0; c < p.length; c++){\n                        var d = p[c], h = u + c;\n                        if (new RegExp(Dw(l) + \"$\").test(d)) {\n                            f = h;\n                            break;\n                        }\n                        if (Qc(l) || Qc(d)) {\n                            f = h;\n                            break;\n                        }\n                        var y = Jc(d);\n                        if (y.length > 1) {\n                            var m = [].concat([\n                                y\n                            ]), g = [].concat([\n                                a.slice(n).reduce(function(v, O) {\n                                    return v.concat(Jc(O));\n                                }, [])\n                            ]), w = Zc(m, g);\n                            (w.doesMatchScope || n + 1 < a.length) && (f = h, n += w.scopePieceIndex - 1);\n                            break;\n                        }\n                    }\n                    var b = f >= u;\n                    if (r = f + 1, o = o && b, !o) break;\n                }\n                return o;\n            });\n        });\n        return {\n            doesMatchScope: i,\n            nodeScopePieceIndex: r - 1,\n            scopePieceIndex: n\n        };\n    }\n    var Xc = function(t) {\n        return t.map(function(e) {\n            return e.map(function(r) {\n                return Mw.test(r) ? r : r.replace(new RegExp(Kc.source, \"g\"), function(n, i, a, s) {\n                    return i + s;\n                });\n            });\n        });\n    }, ep = function(t, e, r) {\n        return t = Xc(t), r && (e = Xc(e)), Zc(t, e).doesMatchScope;\n    };\n    ep.RE_PSEUDO_SELECTOR = Kc;\n    tp.exports = ep;\n});\nvar wa = S((WO, np)=>{\n    var Fw = va(), rp = dr(), Lw = function(t, e, r) {\n        var n = rp(t, !0), i = rp(e, !0);\n        return Fw(n, i, r);\n    };\n    np.exports = Lw;\n});\nvar ba = S((BO, sp)=>{\n    var ip = function(t, e, r) {\n        r = r || [];\n        var n = !1;\n        return t && (r = t.reduce(function(i, a) {\n            var s = !!e[a], o = s ? i.some(function(l) {\n                return e[a].some(function(u) {\n                    return l === u;\n                });\n            }) : !1;\n            return n = n || o, s && !n && (i = i.concat(e[a]), (e[a] || []).forEach(function(l) {\n                var u = ip(l.variablesUsed, e, i);\n                i = u.deps, n = n || u.hasCircularOrSelfReference;\n            })), i;\n        }, r)), {\n            deps: r,\n            hasCircularOrSelfReference: n\n        };\n    };\n    sp.exports = ip;\n});\nvar xa = S((GO, ap)=>{\n    var Nw = dr(), qw = function(t, e) {\n        for(var r, n = e; n.parent && !r;){\n            var i = Nw(n.clone(), !0);\n            i.some(function(a) {\n                return a.some(function(s) {\n                    return s === t ? (r = n, !0) : !1;\n                });\n            }), n = n.parent;\n        }\n        return r;\n    };\n    ap.exports = qw;\n});\nvar Sa = S((YO, lp)=>{\n    var op = Mn(), $w = function(t, e, r) {\n        r = r || function() {\n            return !0;\n        };\n        for(var n = [], i = t, a = !1; i && !a;)i.type === \"decl\" ? n.push(i.clone()) : n.push(op(i)), a = r(i), i = i.parent;\n        for(var s = [], o = e; o;)s.push(op(o)), o = o.parent;\n        return s.forEach(function(l, u, f) {\n            u + 1 < f.length && (l.parent = f[u + 1]);\n        }), n.forEach(function(l, u, f) {\n            u + 1 < f.length ? l.parent = f[u + 1] : (s.slice(-1)[0].parent = i, l.parent = s[0]);\n        }), n[0];\n    };\n    lp.exports = $w;\n});\nvar ka = S((HO, fp)=>{\n    var Uw = $c(), jw = dr(), up = wa(), zw = ba(), Vw = xa(), Ww = Sa(), Bw = /var\\(\\s*(--[^,\\s)]+)/;\n    function Gw(t) {\n        return String(t);\n    }\n    function Fn(t) {\n        var e = Uw(\"(\", \")\", t);\n        if (e) {\n            if (/(?:^|[^\\w-])var$/.test(e.pre)) return {\n                pre: e.pre.slice(0, -3),\n                body: e.body,\n                post: e.post\n            };\n            var r = Fn(e.body);\n            if (r) return {\n                pre: e.pre + \"(\" + r.pre,\n                body: r.body,\n                post: r.post + \")\" + e.post\n            };\n            var n = Fn(e.post);\n            if (n) return {\n                pre: e.pre + \"(\" + e.body + \")\" + n.pre,\n                body: n.body,\n                post: n.post\n            };\n        }\n    }\n    var Ln = function(t, e, r, n) {\n        for(var i = n ? \"\t\" : \"\", a = void 0, s = Gw(t.value), o = [], l = {}, u = s; a = Fn(u);){\n            var f = a.body.split(\",\"), p = f[0].trim();\n            l[p] = !0, u = (a.pre || \"\") + a.body.replace(p, \"\") + (a.post || \"\");\n        }\n        u = void 0;\n        for(var c = Object.keys(l), d = !1; a = Fn(s);){\n            var h = void 0, f = a.body.split(\",\"), p = f[0].trim(), y = f.length > 1 ? f.slice(1).join(\",\").trim() : void 0;\n            (e[p] || []).forEach(function(A) {\n                var E = A.parent.type === \"root\" || A.parent.selectors[0] === \":root\", I = up(t.parent, A.parent), F = up(t.parent, A.parent, r);\n                F && (!(h || {}).isImportant || A.isImportant) && (h = A);\n            });\n            var m = (h || {}).calculatedInPlaceValue || function() {\n                var A = y;\n                if (y) {\n                    var E = t.clone({\n                        parent: t.parent,\n                        value: y\n                    });\n                    A = Ln(E, e, !1, !0).value;\n                }\n                return A;\n            }();\n            if (h !== void 0 && !zw(c, e).hasCircularOrSelfReference) {\n                var g = jw(t.parent.parent, !0), w = g[0].slice(-1)[0], b = Vw(w, h.decl.parent), v = Ww(h.decl, t.parent.parent, function(A) {\n                    return A === b;\n                });\n                m = Ln(v, e, !1, !0).value;\n            }\n            d = m === void 0, d && o.push([\n                \"variable \" + p + \" is undefined and used without a fallback\",\n                {\n                    node: t\n                }\n            ]), s = (a.pre || \"\") + m + (a.post || \"\");\n        }\n        return {\n            value: d ? void 0 : s,\n            variablesUsed: c,\n            warnings: o\n        };\n    };\n    Ln.RE_VAR_FUNC = Bw;\n    fp.exports = Ln;\n});\nvar hp = S((QO, dp)=>{\n    var cp = ka(), Yw = dr(), Hw = ba(), pp = va(), Qw = wa(), Nn = Mn(), Jw = xa(), Xw = Sa();\n    function Kw(t, e, r, n) {\n        t.forEach(function(i) {\n            Hw(t, e).deps.forEach(function(a) {\n                var s;\n                if (a.isUnderAtRule) {\n                    var o = Yw(a.parent, !0), l = o[0].slice(-1)[0], u = Jw(l, r.parent), f = a.parent.parent;\n                    s = Xw(r, f, function(h) {\n                        return h === u;\n                    });\n                } else if (pp.RE_PSEUDO_SELECTOR.test(a.parent.selector)) {\n                    var p = Nn(r.parent);\n                    p.parent = r.parent.parent, s = r.clone(), p.append(s);\n                    var c = a.parent.selector.match(new RegExp(pp.RE_PSEUDO_SELECTOR.source + \"$\")), d = c ? c[2] : \"\";\n                    p.selector += d;\n                }\n                s && Qw(s, a.parent, !0) && n(s, a);\n            });\n        });\n    }\n    function Zw(t, e, r, n, i) {\n        r = (typeof r == \"function\" ? r(t) : r) || !1, n = n || !1;\n        var a = function(l) {\n            return i && i(l), l;\n        }, s = a(cp(t, e)), o;\n        Kw(s.variablesUsed, e, t, function(l, u) {\n            var f = Nn(t.parent), p = t.clone();\n            f.append(p);\n            let c;\n            if (typeof r == \"function\" ? c = r(t) : c = r, c === !0 && p.cloneAfter(), p.value = a(cp(l, e, !0)).value, u.isUnderAtRule) {\n                var d = Nn(u.parent.parent);\n                d.append(f);\n                for(var h = d, y = u.parent.parent; y.parent.type === \"atrule\";){\n                    var m = Nn(y.parent);\n                    m.append(h), h = m, y = y.parent;\n                }\n                t.parent.parent.insertAfter(n && o || t.parent, h), o = h;\n            } else f.selector = l.parent.selector, t.parent.parent.insertAfter(n && o || t.parent, f);\n        }), r === !0 && t.value !== s.value && t.cloneAfter(), s.value === void 0 && (s.value = \"undefined\"), t.value = s.value;\n    }\n    dp.exports = Zw;\n});\nvar vp = S((JO, Oa)=>{\n    var mp = Dc(), eb = Mn(), gp = ka(), tb = hp(), yp = /(--(.+))/;\n    function rb(t, e) {\n        t.walkDecls(function(r) {\n            yp.test(r.prop) && e(r);\n        });\n    }\n    function nb(t) {\n        for(var e = t; e && e.nodes.length <= 0;){\n            var r = e.type !== \"root\" ? e : null;\n            r ? (e = r.parent, r.remove()) : e = null;\n        }\n    }\n    var ib = {\n        preserve: !1,\n        variables: {},\n        preserveInjectedVariables: !0,\n        preserveAtRulesOrder: !1\n    };\n    Oa.exports = (t = {})=>{\n        var e = mp({}, ib, t);\n        return {\n            postcssPlugin: \"postcss-css-variables\",\n            Once (r, { decl: n, result: i, rule: a }) {\n                var s = [], o = [], l = {};\n                l = mp(l, Object.keys(e.variables).reduce(function(p, c) {\n                    var d = e.variables[c];\n                    c = c.slice(0, 2) === \"--\" ? c : \"--\" + c;\n                    var h = (d || {}).value || d, y = (d || {}).isImportant || !1, m = a({\n                        selector: \":root\"\n                    });\n                    r.root().prepend(m);\n                    var g = n({\n                        prop: c,\n                        value: h,\n                        important: y\n                    });\n                    return m.append(g), e.preserveInjectedVariables || o.push(g), p[c] = (p[c] || []).concat({\n                        decl: g,\n                        prop: c,\n                        calculatedInPlaceValue: h,\n                        isImportant: y,\n                        variablesUsed: [],\n                        parent: m,\n                        isUnderAtRule: !1\n                    }), p;\n                }, {}));\n                var u = function(p) {\n                    var c = [].concat(p.warnings);\n                    return c.forEach(function(d) {\n                        d = [].concat(d), i.warn.apply(i, d);\n                    }), p;\n                };\n                rb(r, function(p) {\n                    var c = p.parent, d = u(gp(p, l));\n                    p.parent.selectors.forEach(function(y) {\n                        var m = eb(p.parent);\n                        m.selector = y, m.parent = p.parent.parent;\n                        var g = p.clone();\n                        m.append(g);\n                        var w = p.prop;\n                        l[w] = (l[w] || []).concat({\n                            decl: g,\n                            prop: w,\n                            calculatedInPlaceValue: d.value,\n                            isImportant: p.important || !1,\n                            variablesUsed: d.variablesUsed,\n                            parent: m,\n                            isUnderAtRule: m.parent.type === \"atrule\"\n                        });\n                    });\n                    let h;\n                    typeof e.preserve == \"function\" ? h = e.preserve(p) : h = e.preserve, h ? h === \"computed\" && (p.value = d.value) : p.remove(), c.nodes.length <= 0 && s.push(c);\n                });\n                var f = [];\n                r.walk(function(p) {\n                    if (p.nodes !== void 0) {\n                        var c = p.nodes.some(function(d) {\n                            if (d.type === \"decl\") {\n                                var h = d;\n                                if (gp.RE_VAR_FUNC.test(h.value) && !yp.test(h.prop)) return !0;\n                            }\n                            return !1;\n                        });\n                        c && f.push(p);\n                    }\n                }), f.forEach(function(p) {\n                    var c = [].concat(p);\n                    p.type === \"rule\" && p.selectors.length > 1 && (c = p.selectors.reverse().map(function(d) {\n                        var h = p.cloneAfter();\n                        return h.selector = d, h;\n                    }), p.remove()), c.forEach(function(d) {\n                        d.nodes.slice(0).forEach(function(h) {\n                            if (h.type === \"decl\") {\n                                var y = h;\n                                tb(y, l, e.preserve, e.preserveAtRulesOrder, u);\n                            }\n                        });\n                    });\n                }), s.forEach(nb), o.forEach(function(p) {\n                    p.remove();\n                });\n            }\n        };\n    };\n    Oa.exports.postcss = !0;\n});\nvar Ra = (t)=>({\n        extractCSS (e, r = !1) {\n            let n = /(?:[\\s\\r\\n]*)?(?<prop>[\\w-]+)\\s*:\\s*(?<value>[^;\\r\\n]+)/gm, i, a = {};\n            for(; (i = n.exec(e)) !== null;){\n                let { prop: s, value: o } = i.groups;\n                a[s] = o;\n            }\n            return Object.entries(a).reduce((s, [o, l])=>s + `${r ? \"\t\" : \"\"}${o}: ${l}; \n\\r`, \"\");\n        },\n        merge () {\n            let e = /(?<=\\.)[^{]+\\s*\\{(?<content>[^{}]*(?:(?<=;)\\s*\\n\\r?[^{}]*)*)\\s*\\}/gm, r, n = \"\";\n            for(; (r = e.exec(t)) !== null;){\n                let { content: o } = r.groups;\n                n += o;\n            }\n            let i = this.extractCSS(n), a = /(?<media>@media\\s*\\([^\\)]*\\))\\s*\\{(?<content>[^\\}]*)\\}/gm, s;\n            for(; (s = a.exec(t)) !== null;){\n                let { media: o, content: l } = s.groups;\n                i += `\n\\r${o} {\n\\r${this.extractCSS(l, !0)}}\n\\r`;\n            }\n            return t = i, this;\n        },\n        removeUndefined () {\n            let e = /^[^{}]*(?:[.#][a-zA-Z0-9_-]+)[^{]*{[^}]*\\b(?:[a-z-]+):\\s*undefined\\s*;?[^}]*}/gm;\n            return t = t.replace(e, \"\"), this;\n        },\n        combineMediaQueries () {\n            let e = new RegExp(\"@media\\\\s*(?<conditions>\\\\([^)]+\\\\))\\\\s*{(?<content>(?:[^{}]+|{(?:[^{}]+|{[^{}]*})*})+)}\", \"gs\"), r = new Map, n = (a)=>a.replace(e, (s, o, l)=>{\n                    var f;\n                    let u = (f = r.get(o)) != null ? f : \"\";\n                    return r.set(o, u + n(l.trim())), n(l), \"\";\n                }), i = [];\n            return i.push(n(t)), i.push(...Array.from(r, ([a, s])=>`@media${a}{${s}}`)), t = i.join(\"\"), this;\n        },\n        minify () {\n            return t = t.replace(/\\/\\*[\\s\\S]*?\\*\\//gm, \"\").replace(/;\\s+/gm, \";\").replace(/:\\s+/gm, \":\").replace(/\\)\\s*{/gm, \"){\").replace(/\\s+\\(/gm, \"(\").replace(/{\\s+/gm, \"{\").replace(/}\\s+/gm, \"}\").replace(/\\s*{/gm, \"{\").replace(/;?\\s*}/gm, \"}\"), this;\n        },\n        fixRGB () {\n            let e = /rgb\\(\\s*(?<red>\\d+)\\s*(?<green>\\d+)\\s*(?<blue>\\d+)(?:\\s*\\/\\s*(?<alpha>[\\d%.]+))?\\s*\\)/gm, r;\n            for(; (r = e.exec(t)) !== null;){\n                let [n] = r, { red: i, green: a, blue: s, alpha: o = 1 } = r.groups;\n                t = t.replace(n, `rgb(${i},${a},${s}${o === \"1\" ? \"\" : `,${o}`})`);\n            }\n            return this;\n        },\n        removeMediaQueries () {\n            return t = t.replace(/@media[^\\{]+\\{[^@]+\\}/g, \"\"), this;\n        },\n        get () {\n            return t;\n        }\n    });\nfunction $n() {}\nvar L = {\n    info: $n,\n    warn: $n,\n    risk: $n\n};\nfunction Un(t) {\n    let e = new Set, r = new Set, n = new Set;\n    if (t.walkAtRules((i)=>{\n        i.name === \"apply\" && n.add(i), i.name === \"import\" && (i.params === '\"tailwindcss/base\"' || i.params === \"'tailwindcss/base'\" ? (i.name = \"tailwind\", i.params = \"base\") : i.params === '\"tailwindcss/components\"' || i.params === \"'tailwindcss/components'\" ? (i.name = \"tailwind\", i.params = \"components\") : i.params === '\"tailwindcss/utilities\"' || i.params === \"'tailwindcss/utilities'\" ? (i.name = \"tailwind\", i.params = \"utilities\") : (i.params === '\"tailwindcss/screens\"' || i.params === \"'tailwindcss/screens'\" || i.params === '\"tailwindcss/variants\"' || i.params === \"'tailwindcss/variants'\") && (i.name = \"tailwind\", i.params = \"variants\")), i.name === \"tailwind\" && (i.params === \"screens\" && (i.params = \"variants\"), e.add(i.params)), [\n            \"layer\",\n            \"responsive\",\n            \"variants\"\n        ].includes(i.name) && ([\n            \"responsive\",\n            \"variants\"\n        ].includes(i.name) && L.warn(`${i.name}-at-rule-deprecated`, [\n            `The \\`@${i.name}\\` directive has been deprecated in Tailwind CSS v3.0.`,\n            \"Use `@layer utilities` or `@layer components` instead.\",\n            \"https://tailwindcss.com/docs/upgrade-guide#replace-variants-with-layer\"\n        ]), r.add(i));\n    }), !e.has(\"base\") || !e.has(\"components\") || !e.has(\"utilities\")) {\n        for (let i of r)if (i.name === \"layer\" && [\n            \"base\",\n            \"components\",\n            \"utilities\"\n        ].includes(i.params)) {\n            if (!e.has(i.params)) throw i.error(`\\`@layer ${i.params}\\` is used but no matching \\`@tailwind ${i.params}\\` directive is present.`);\n        } else if (i.name === \"responsive\") {\n            if (!e.has(\"utilities\")) throw i.error(\"`@responsive` is used but `@tailwind utilities` is missing.\");\n        } else if (i.name === \"variants\" && !e.has(\"utilities\")) throw i.error(\"`@variants` is used but `@tailwind utilities` is missing.\");\n    }\n    return {\n        tailwindDirectives: e,\n        applyDirectives: n\n    };\n}\nvr();\nvar $f = H(Na());\nvar $a = \"3.3.2\";\nvar zn = {\n    name: \"tailwindcss\",\n    version: $a,\n    description: \"A utility-first CSS framework for rapidly building custom user interfaces.\",\n    license: \"MIT\",\n    main: \"lib/index.js\",\n    types: \"types/index.d.ts\",\n    repository: \"https://github.com/tailwindlabs/tailwindcss.git\",\n    bugs: \"https://github.com/tailwindlabs/tailwindcss/issues\",\n    homepage: \"https://tailwindcss.com\",\n    bin: {\n        tailwind: \"lib/cli.js\",\n        tailwindcss: \"lib/cli.js\"\n    },\n    tailwindcss: {\n        engine: \"stable\"\n    },\n    scripts: {\n        prebuild: \"npm run generate && rimraf lib\",\n        build: `swc src --out-dir lib --copy-files --config jsc.transform.optimizer.globals.vars.__OXIDE__='\"false\"'`,\n        postbuild: \"esbuild lib/cli-peer-dependencies.js --bundle --platform=node --outfile=peers/index.js --define:process.env.CSS_TRANSFORMER_WASM=false\",\n        \"rebuild-fixtures\": \"npm run build && node -r @swc/register scripts/rebuildFixtures.js\",\n        style: \"eslint .\",\n        pretest: \"npm run generate\",\n        test: \"jest\",\n        \"test:integrations\": \"npm run test --prefix ./integrations\",\n        \"install:integrations\": \"node scripts/install-integrations.js\",\n        \"generate:plugin-list\": \"node -r @swc/register scripts/create-plugin-list.js\",\n        \"generate:types\": \"node -r @swc/register scripts/generate-types.js\",\n        generate: \"npm run generate:plugin-list && npm run generate:types\",\n        \"release-channel\": \"node ./scripts/release-channel.js\",\n        \"release-notes\": \"node ./scripts/release-notes.js\",\n        prepublishOnly: \"npm install --force && npm run build\"\n    },\n    files: [\n        \"src/*\",\n        \"cli/*\",\n        \"lib/*\",\n        \"peers/*\",\n        \"scripts/*.js\",\n        \"stubs/*\",\n        \"nesting/*\",\n        \"types/**/*\",\n        \"*.d.ts\",\n        \"*.css\",\n        \"*.js\"\n    ],\n    devDependencies: {\n        \"@swc/cli\": \"^0.1.62\",\n        \"@swc/core\": \"^1.3.55\",\n        \"@swc/jest\": \"^0.2.26\",\n        \"@swc/register\": \"^0.1.10\",\n        autoprefixer: \"^10.4.14\",\n        browserslist: \"^4.21.5\",\n        concurrently: \"^8.0.1\",\n        cssnano: \"^6.0.0\",\n        esbuild: \"^0.17.18\",\n        eslint: \"^8.39.0\",\n        \"eslint-config-prettier\": \"^8.8.0\",\n        \"eslint-plugin-prettier\": \"^4.2.1\",\n        jest: \"^29.5.0\",\n        \"jest-diff\": \"^29.5.0\",\n        lightningcss: \"1.18.0\",\n        prettier: \"^2.8.8\",\n        rimraf: \"^5.0.0\",\n        \"source-map-js\": \"^1.0.2\",\n        turbo: \"^1.9.3\"\n    },\n    dependencies: {\n        \"@alloc/quick-lru\": \"^5.2.0\",\n        arg: \"^5.0.2\",\n        chokidar: \"^3.5.3\",\n        didyoumean: \"^1.2.2\",\n        dlv: \"^1.1.3\",\n        \"fast-glob\": \"^3.2.12\",\n        \"glob-parent\": \"^6.0.2\",\n        \"is-glob\": \"^4.0.3\",\n        jiti: \"^1.18.2\",\n        lilconfig: \"^2.1.0\",\n        micromatch: \"^4.0.5\",\n        \"normalize-path\": \"^3.0.0\",\n        \"object-hash\": \"^3.0.0\",\n        picocolors: \"^1.0.0\",\n        postcss: \"^8.4.23\",\n        \"postcss-import\": \"^15.1.0\",\n        \"postcss-js\": \"^4.0.1\",\n        \"postcss-load-config\": \"^4.0.1\",\n        \"postcss-nested\": \"^6.0.1\",\n        \"postcss-selector-parser\": \"^6.0.11\",\n        \"postcss-value-parser\": \"^4.2.0\",\n        resolve: \"^1.22.2\",\n        sucrase: \"^3.32.0\"\n    },\n    browserslist: [\n        \"> 1%\",\n        \"not edge <= 18\",\n        \"not ie 11\",\n        \"not op_mini all\"\n    ],\n    jest: {\n        testTimeout: 3e4,\n        setupFilesAfterEnv: [\n            \"<rootDir>/jest/customMatchers.js\"\n        ],\n        testPathIgnorePatterns: [\n            \"/node_modules/\",\n            \"/integrations/\",\n            \"/standalone-cli/\",\n            \"\\\\.test\\\\.skip\\\\.js$\"\n        ],\n        transformIgnorePatterns: [\n            \"node_modules/(?!lightningcss)\"\n        ],\n        transform: {\n            \"\\\\.js$\": \"@swc/jest\",\n            \"\\\\.ts$\": \"@swc/jest\"\n        }\n    },\n    engines: {\n        node: \">=14.0.0\"\n    }\n};\nvar Vn = typeof process < \"u\" ? {\n    NODE_ENV: \"production\",\n    DEBUG: Dp(void 0),\n    ENGINE: zn.tailwindcss.engine\n} : {\n    NODE_ENV: \"production\",\n    DEBUG: !1,\n    ENGINE: zn.tailwindcss.engine\n};\nvar Wn = new Map;\nvar ke = new String(\"*\"), mt = Symbol(\"__NONE__\");\nfunction Dp(t) {\n    if (t === void 0) return !1;\n    if (t === \"true\" || t === \"1\") return !0;\n    if (t === \"false\" || t === \"0\") return !1;\n    if (t === \"*\") return !0;\n    let e = t.split(\",\").map((r)=>r.split(\":\")[0]);\n    return e.includes(\"-tailwindcss\") ? !1 : !!e.includes(\"tailwindcss\");\n}\nvar $ = H(Ke(), 1), R = $.default, Kb = $.default.stringify, Zb = $.default.fromJSON, ex = $.default.plugin, tx = $.default.parse, rx = $.default.list, nx = $.default.document, ix = $.default.comment, sx = $.default.atRule, ax = $.default.rule, ox = $.default.decl, lx = $.default.root, ux = $.default.CssSyntaxError, fx = $.default.Declaration, cx = $.default.Container, px = $.default.Processor, dx = $.default.Document, hx = $.default.Comment, mx = $.default.Warning, gx = $.default.AtRule, yx = $.default.Result, vx = $.default.Input, wx = $.default.Rule, bx = $.default.Root, xx = $.default.Node;\nvar wn = H(ve());\nvar $u = H(Su());\nvar rt = H(qu(), 1), tn = rt.default, jx = rt.default.objectify, zx = rt.default.parse, Vx = rt.default.async, Wx = rt.default.sync;\nfunction nt(t) {\n    return Array.isArray(t) ? t.flatMap((e)=>R([\n            (0, $u.default)({\n                bubble: [\n                    \"screen\"\n                ]\n            })\n        ]).process(e, {\n            parser: tn\n        }).root.nodes) : nt([\n        t\n    ]);\n}\nfunction X(t) {\n    if (Object.prototype.toString.call(t) !== \"[object Object]\") return !1;\n    let e = Object.getPrototypeOf(t);\n    return e === null || e === Object.prototype;\n}\nvar Uu = H(ve());\nfunction it(t, e, r = !1) {\n    if (t === \"\") return e;\n    let n = typeof e == \"string\" ? (0, Uu.default)().astSync(e) : e;\n    return n.walkClasses((i)=>{\n        let a = i.value, s = r && a.startsWith(\"-\");\n        i.value = s ? `-${t}${a.slice(1)}` : `${t}${a}`;\n    }), typeof e == \"string\" ? n.toString() : n;\n}\nfunction Be(t) {\n    return t.replace(/\\\\,/g, \"\\\\2c \");\n}\nvar ks = {\n    aliceblue: [\n        240,\n        248,\n        255\n    ],\n    antiquewhite: [\n        250,\n        235,\n        215\n    ],\n    aqua: [\n        0,\n        255,\n        255\n    ],\n    aquamarine: [\n        127,\n        255,\n        212\n    ],\n    azure: [\n        240,\n        255,\n        255\n    ],\n    beige: [\n        245,\n        245,\n        220\n    ],\n    bisque: [\n        255,\n        228,\n        196\n    ],\n    black: [\n        0,\n        0,\n        0\n    ],\n    blanchedalmond: [\n        255,\n        235,\n        205\n    ],\n    blue: [\n        0,\n        0,\n        255\n    ],\n    blueviolet: [\n        138,\n        43,\n        226\n    ],\n    brown: [\n        165,\n        42,\n        42\n    ],\n    burlywood: [\n        222,\n        184,\n        135\n    ],\n    cadetblue: [\n        95,\n        158,\n        160\n    ],\n    chartreuse: [\n        127,\n        255,\n        0\n    ],\n    chocolate: [\n        210,\n        105,\n        30\n    ],\n    coral: [\n        255,\n        127,\n        80\n    ],\n    cornflowerblue: [\n        100,\n        149,\n        237\n    ],\n    cornsilk: [\n        255,\n        248,\n        220\n    ],\n    crimson: [\n        220,\n        20,\n        60\n    ],\n    cyan: [\n        0,\n        255,\n        255\n    ],\n    darkblue: [\n        0,\n        0,\n        139\n    ],\n    darkcyan: [\n        0,\n        139,\n        139\n    ],\n    darkgoldenrod: [\n        184,\n        134,\n        11\n    ],\n    darkgray: [\n        169,\n        169,\n        169\n    ],\n    darkgreen: [\n        0,\n        100,\n        0\n    ],\n    darkgrey: [\n        169,\n        169,\n        169\n    ],\n    darkkhaki: [\n        189,\n        183,\n        107\n    ],\n    darkmagenta: [\n        139,\n        0,\n        139\n    ],\n    darkolivegreen: [\n        85,\n        107,\n        47\n    ],\n    darkorange: [\n        255,\n        140,\n        0\n    ],\n    darkorchid: [\n        153,\n        50,\n        204\n    ],\n    darkred: [\n        139,\n        0,\n        0\n    ],\n    darksalmon: [\n        233,\n        150,\n        122\n    ],\n    darkseagreen: [\n        143,\n        188,\n        143\n    ],\n    darkslateblue: [\n        72,\n        61,\n        139\n    ],\n    darkslategray: [\n        47,\n        79,\n        79\n    ],\n    darkslategrey: [\n        47,\n        79,\n        79\n    ],\n    darkturquoise: [\n        0,\n        206,\n        209\n    ],\n    darkviolet: [\n        148,\n        0,\n        211\n    ],\n    deeppink: [\n        255,\n        20,\n        147\n    ],\n    deepskyblue: [\n        0,\n        191,\n        255\n    ],\n    dimgray: [\n        105,\n        105,\n        105\n    ],\n    dimgrey: [\n        105,\n        105,\n        105\n    ],\n    dodgerblue: [\n        30,\n        144,\n        255\n    ],\n    firebrick: [\n        178,\n        34,\n        34\n    ],\n    floralwhite: [\n        255,\n        250,\n        240\n    ],\n    forestgreen: [\n        34,\n        139,\n        34\n    ],\n    fuchsia: [\n        255,\n        0,\n        255\n    ],\n    gainsboro: [\n        220,\n        220,\n        220\n    ],\n    ghostwhite: [\n        248,\n        248,\n        255\n    ],\n    gold: [\n        255,\n        215,\n        0\n    ],\n    goldenrod: [\n        218,\n        165,\n        32\n    ],\n    gray: [\n        128,\n        128,\n        128\n    ],\n    green: [\n        0,\n        128,\n        0\n    ],\n    greenyellow: [\n        173,\n        255,\n        47\n    ],\n    grey: [\n        128,\n        128,\n        128\n    ],\n    honeydew: [\n        240,\n        255,\n        240\n    ],\n    hotpink: [\n        255,\n        105,\n        180\n    ],\n    indianred: [\n        205,\n        92,\n        92\n    ],\n    indigo: [\n        75,\n        0,\n        130\n    ],\n    ivory: [\n        255,\n        255,\n        240\n    ],\n    khaki: [\n        240,\n        230,\n        140\n    ],\n    lavender: [\n        230,\n        230,\n        250\n    ],\n    lavenderblush: [\n        255,\n        240,\n        245\n    ],\n    lawngreen: [\n        124,\n        252,\n        0\n    ],\n    lemonchiffon: [\n        255,\n        250,\n        205\n    ],\n    lightblue: [\n        173,\n        216,\n        230\n    ],\n    lightcoral: [\n        240,\n        128,\n        128\n    ],\n    lightcyan: [\n        224,\n        255,\n        255\n    ],\n    lightgoldenrodyellow: [\n        250,\n        250,\n        210\n    ],\n    lightgray: [\n        211,\n        211,\n        211\n    ],\n    lightgreen: [\n        144,\n        238,\n        144\n    ],\n    lightgrey: [\n        211,\n        211,\n        211\n    ],\n    lightpink: [\n        255,\n        182,\n        193\n    ],\n    lightsalmon: [\n        255,\n        160,\n        122\n    ],\n    lightseagreen: [\n        32,\n        178,\n        170\n    ],\n    lightskyblue: [\n        135,\n        206,\n        250\n    ],\n    lightslategray: [\n        119,\n        136,\n        153\n    ],\n    lightslategrey: [\n        119,\n        136,\n        153\n    ],\n    lightsteelblue: [\n        176,\n        196,\n        222\n    ],\n    lightyellow: [\n        255,\n        255,\n        224\n    ],\n    lime: [\n        0,\n        255,\n        0\n    ],\n    limegreen: [\n        50,\n        205,\n        50\n    ],\n    linen: [\n        250,\n        240,\n        230\n    ],\n    magenta: [\n        255,\n        0,\n        255\n    ],\n    maroon: [\n        128,\n        0,\n        0\n    ],\n    mediumaquamarine: [\n        102,\n        205,\n        170\n    ],\n    mediumblue: [\n        0,\n        0,\n        205\n    ],\n    mediumorchid: [\n        186,\n        85,\n        211\n    ],\n    mediumpurple: [\n        147,\n        112,\n        219\n    ],\n    mediumseagreen: [\n        60,\n        179,\n        113\n    ],\n    mediumslateblue: [\n        123,\n        104,\n        238\n    ],\n    mediumspringgreen: [\n        0,\n        250,\n        154\n    ],\n    mediumturquoise: [\n        72,\n        209,\n        204\n    ],\n    mediumvioletred: [\n        199,\n        21,\n        133\n    ],\n    midnightblue: [\n        25,\n        25,\n        112\n    ],\n    mintcream: [\n        245,\n        255,\n        250\n    ],\n    mistyrose: [\n        255,\n        228,\n        225\n    ],\n    moccasin: [\n        255,\n        228,\n        181\n    ],\n    navajowhite: [\n        255,\n        222,\n        173\n    ],\n    navy: [\n        0,\n        0,\n        128\n    ],\n    oldlace: [\n        253,\n        245,\n        230\n    ],\n    olive: [\n        128,\n        128,\n        0\n    ],\n    olivedrab: [\n        107,\n        142,\n        35\n    ],\n    orange: [\n        255,\n        165,\n        0\n    ],\n    orangered: [\n        255,\n        69,\n        0\n    ],\n    orchid: [\n        218,\n        112,\n        214\n    ],\n    palegoldenrod: [\n        238,\n        232,\n        170\n    ],\n    palegreen: [\n        152,\n        251,\n        152\n    ],\n    paleturquoise: [\n        175,\n        238,\n        238\n    ],\n    palevioletred: [\n        219,\n        112,\n        147\n    ],\n    papayawhip: [\n        255,\n        239,\n        213\n    ],\n    peachpuff: [\n        255,\n        218,\n        185\n    ],\n    peru: [\n        205,\n        133,\n        63\n    ],\n    pink: [\n        255,\n        192,\n        203\n    ],\n    plum: [\n        221,\n        160,\n        221\n    ],\n    powderblue: [\n        176,\n        224,\n        230\n    ],\n    purple: [\n        128,\n        0,\n        128\n    ],\n    rebeccapurple: [\n        102,\n        51,\n        153\n    ],\n    red: [\n        255,\n        0,\n        0\n    ],\n    rosybrown: [\n        188,\n        143,\n        143\n    ],\n    royalblue: [\n        65,\n        105,\n        225\n    ],\n    saddlebrown: [\n        139,\n        69,\n        19\n    ],\n    salmon: [\n        250,\n        128,\n        114\n    ],\n    sandybrown: [\n        244,\n        164,\n        96\n    ],\n    seagreen: [\n        46,\n        139,\n        87\n    ],\n    seashell: [\n        255,\n        245,\n        238\n    ],\n    sienna: [\n        160,\n        82,\n        45\n    ],\n    silver: [\n        192,\n        192,\n        192\n    ],\n    skyblue: [\n        135,\n        206,\n        235\n    ],\n    slateblue: [\n        106,\n        90,\n        205\n    ],\n    slategray: [\n        112,\n        128,\n        144\n    ],\n    slategrey: [\n        112,\n        128,\n        144\n    ],\n    snow: [\n        255,\n        250,\n        250\n    ],\n    springgreen: [\n        0,\n        255,\n        127\n    ],\n    steelblue: [\n        70,\n        130,\n        180\n    ],\n    tan: [\n        210,\n        180,\n        140\n    ],\n    teal: [\n        0,\n        128,\n        128\n    ],\n    thistle: [\n        216,\n        191,\n        216\n    ],\n    tomato: [\n        255,\n        99,\n        71\n    ],\n    turquoise: [\n        64,\n        224,\n        208\n    ],\n    violet: [\n        238,\n        130,\n        238\n    ],\n    wheat: [\n        245,\n        222,\n        179\n    ],\n    white: [\n        255,\n        255,\n        255\n    ],\n    whitesmoke: [\n        245,\n        245,\n        245\n    ],\n    yellow: [\n        255,\n        255,\n        0\n    ],\n    yellowgreen: [\n        154,\n        205,\n        50\n    ]\n};\nvar C0 = /^#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, A0 = /^#([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, Pe = /(?:\\d+|\\d*\\.\\d+)%?/, rn = /(?:\\s*,\\s*|\\s+)/, ju = /\\s*[,/]\\s*/, Ie = /var\\(--(?:[^ )]*?)\\)/, _0 = new RegExp(`^(rgba?)\\\\(\\\\s*(${Pe.source}|${Ie.source})(?:${rn.source}(${Pe.source}|${Ie.source}))?(?:${rn.source}(${Pe.source}|${Ie.source}))?(?:${ju.source}(${Pe.source}|${Ie.source}))?\\\\s*\\\\)$`), T0 = new RegExp(`^(hsla?)\\\\(\\\\s*((?:${Pe.source})(?:deg|rad|grad|turn)?|${Ie.source})(?:${rn.source}(${Pe.source}|${Ie.source}))?(?:${rn.source}(${Pe.source}|${Ie.source}))?(?:${ju.source}(${Pe.source}|${Ie.source}))?\\\\s*\\\\)$`);\nfunction ir(t, { loose: e = !1 } = {}) {\n    var a, s, o;\n    if (typeof t != \"string\") return null;\n    if (t = t.trim(), t === \"transparent\") return {\n        mode: \"rgb\",\n        color: [\n            \"0\",\n            \"0\",\n            \"0\"\n        ],\n        alpha: \"0\"\n    };\n    if (t in ks) return {\n        mode: \"rgb\",\n        color: ks[t].map((l)=>l.toString())\n    };\n    let r = t.replace(A0, (l, u, f, p, c)=>[\n            \"#\",\n            u,\n            u,\n            f,\n            f,\n            p,\n            p,\n            c ? c + c : \"\"\n        ].join(\"\")).match(C0);\n    if (r !== null) return {\n        mode: \"rgb\",\n        color: [\n            parseInt(r[1], 16),\n            parseInt(r[2], 16),\n            parseInt(r[3], 16)\n        ].map((l)=>l.toString()),\n        alpha: r[4] ? (parseInt(r[4], 16) / 255).toString() : void 0\n    };\n    let n = (a = t.match(_0)) != null ? a : t.match(T0);\n    if (n === null) return null;\n    let i = [\n        n[2],\n        n[3],\n        n[4]\n    ].filter(Boolean).map((l)=>l.toString());\n    return i.length === 2 && i[0].startsWith(\"var(\") ? {\n        mode: n[1],\n        color: [\n            i[0]\n        ],\n        alpha: i[1]\n    } : !e && i.length !== 3 || i.length < 3 && !i.some((l)=>/^var\\(.*?\\)$/.test(l)) ? null : {\n        mode: n[1],\n        color: i,\n        alpha: (o = (s = n[5]) == null ? void 0 : s.toString) == null ? void 0 : o.call(s)\n    };\n}\nfunction Os({ mode: t, color: e, alpha: r }) {\n    let n = r !== void 0;\n    return t === \"rgba\" || t === \"hsla\" ? `${t}(${e.join(\", \")}${n ? `, ${r}` : \"\"})` : `${t}(${e.join(\" \")}${n ? ` / ${r}` : \"\"})`;\n}\nfunction we(t, e, r) {\n    if (typeof t == \"function\") return t({\n        opacityValue: e\n    });\n    let n = ir(t, {\n        loose: !0\n    });\n    return n === null ? r : Os({\n        ...n,\n        alpha: e\n    });\n}\nfunction Z({ color: t, property: e, variable: r }) {\n    let n = [].concat(e);\n    if (typeof t == \"function\") return {\n        [r]: \"1\",\n        ...Object.fromEntries(n.map((a)=>[\n                a,\n                t({\n                    opacityVariable: r,\n                    opacityValue: `var(${r})`\n                })\n            ]))\n    };\n    let i = ir(t);\n    return i === null ? Object.fromEntries(n.map((a)=>[\n            a,\n            t\n        ])) : i.alpha !== void 0 ? Object.fromEntries(n.map((a)=>[\n            a,\n            t\n        ])) : {\n        [r]: \"1\",\n        ...Object.fromEntries(n.map((a)=>[\n                a,\n                Os({\n                    ...i,\n                    alpha: `var(${r})`\n                })\n            ]))\n    };\n}\nfunction ee(t, e) {\n    let r = [], n = [], i = 0, a = !1;\n    for(let s = 0; s < t.length; s++){\n        let o = t[s];\n        r.length === 0 && o === e[0] && !a && (e.length === 1 || t.slice(s, s + e.length) === e) && (n.push(t.slice(i, s)), i = s + e.length), a ? a = !1 : o === \"\\\\\" && (a = !0), o === \"(\" || o === \"[\" || o === \"{\" ? r.push(o) : (o === \")\" && r[r.length - 1] === \"(\" || o === \"]\" && r[r.length - 1] === \"[\" || o === \"}\" && r[r.length - 1] === \"{\") && r.pop();\n    }\n    return n.push(t.slice(i)), n;\n}\nvar P0 = new Set([\n    \"inset\",\n    \"inherit\",\n    \"initial\",\n    \"revert\",\n    \"unset\"\n]), I0 = /\\ +(?![^(]*\\))/g, zu = /^-?(\\d+|\\.\\d+)(.*?)$/g;\nfunction nn(t) {\n    return ee(t, \",\").map((r)=>{\n        let n = r.trim(), i = {\n            raw: n\n        }, a = n.split(I0), s = new Set;\n        for (let o of a)zu.lastIndex = 0, !s.has(\"KEYWORD\") && P0.has(o) ? (i.keyword = o, s.add(\"KEYWORD\")) : zu.test(o) ? s.has(\"X\") ? s.has(\"Y\") ? s.has(\"BLUR\") ? s.has(\"SPREAD\") || (i.spread = o, s.add(\"SPREAD\")) : (i.blur = o, s.add(\"BLUR\")) : (i.y = o, s.add(\"Y\")) : (i.x = o, s.add(\"X\")) : i.color ? (i.unknown || (i.unknown = []), i.unknown.push(o)) : i.color = o;\n        return i.valid = i.x !== void 0 && i.y !== void 0, i;\n    });\n}\nfunction Vu(t) {\n    return t.map((e)=>e.valid ? [\n            e.keyword,\n            e.x,\n            e.y,\n            e.blur,\n            e.spread,\n            e.color\n        ].filter(Boolean).join(\" \") : e.raw).join(\", \");\n}\nvar R0 = [\n    \"min\",\n    \"max\",\n    \"clamp\",\n    \"calc\"\n];\nfunction Es(t) {\n    return R0.some((e)=>new RegExp(`^${e}\\\\(.*\\\\)`).test(t));\n}\nvar Wu = \"--tw-placeholder\", D0 = new RegExp(Wu, \"g\");\nfunction z(t, e = !0) {\n    return t.startsWith(\"--\") ? `var(${t})` : t.includes(\"url(\") ? t.split(/(url\\(.*?\\))/g).filter(Boolean).map((r)=>/^url\\(.*?\\)$/.test(r) ? r : z(r, !1)).join(\"\") : (t = t.replace(/([^\\\\])_+/g, (r, n)=>n + \" \".repeat(r.length - 1)).replace(/^_/g, \" \").replace(/\\\\_/g, \"_\"), e && (t = t.trim()), t = t.replace(/(calc|min|max|clamp)\\(.+\\)/g, (r)=>{\n        let n = [];\n        return r.replace(/var\\((--.+?)[,)]/g, (i, a)=>(n.push(a), i.replace(a, Wu))).replace(/(-?\\d*\\.?\\d(?!\\b-\\d.+[,)](?![^+\\-/*])\\D)(?:%|[a-z]+)?|\\))([+\\-/*])/g, \"$1 $2 \").replace(D0, ()=>n.shift());\n    }), t);\n}\nfunction Cs(t) {\n    return t.startsWith(\"url(\");\n}\nfunction As(t) {\n    return !isNaN(Number(t)) || Es(t);\n}\nfunction sr(t) {\n    return t.endsWith(\"%\") && As(t.slice(0, -1)) || Es(t);\n}\nvar M0 = [\n    \"cm\",\n    \"mm\",\n    \"Q\",\n    \"in\",\n    \"pc\",\n    \"pt\",\n    \"px\",\n    \"em\",\n    \"ex\",\n    \"ch\",\n    \"rem\",\n    \"lh\",\n    \"rlh\",\n    \"vw\",\n    \"vh\",\n    \"vmin\",\n    \"vmax\",\n    \"vb\",\n    \"vi\",\n    \"svw\",\n    \"svh\",\n    \"lvw\",\n    \"lvh\",\n    \"dvw\",\n    \"dvh\",\n    \"cqw\",\n    \"cqh\",\n    \"cqi\",\n    \"cqb\",\n    \"cqmin\",\n    \"cqmax\"\n], F0 = `(?:${M0.join(\"|\")})`;\nfunction ar(t) {\n    return t === \"0\" || new RegExp(`^[+-]?[0-9]*.?[0-9]+(?:[eE][+-]?[0-9]+)?${F0}$`).test(t) || Es(t);\n}\nvar L0 = new Set([\n    \"thin\",\n    \"medium\",\n    \"thick\"\n]);\nfunction Bu(t) {\n    return L0.has(t);\n}\nfunction Gu(t) {\n    let e = nn(z(t));\n    for (let r of e)if (!r.valid) return !1;\n    return !0;\n}\nfunction Yu(t) {\n    let e = 0;\n    return ee(t, \"_\").every((n)=>(n = z(n), n.startsWith(\"var(\") ? !0 : ir(n, {\n            loose: !0\n        }) !== null ? (e++, !0) : !1)) ? e > 0 : !1;\n}\nfunction Hu(t) {\n    let e = 0;\n    return ee(t, \",\").every((n)=>(n = z(n), n.startsWith(\"var(\") ? !0 : Cs(n) || q0(n) || [\n            \"element(\",\n            \"image(\",\n            \"cross-fade(\",\n            \"image-set(\"\n        ].some((i)=>n.startsWith(i)) ? (e++, !0) : !1)) ? e > 0 : !1;\n}\nvar N0 = new Set([\n    \"linear-gradient\",\n    \"radial-gradient\",\n    \"repeating-linear-gradient\",\n    \"repeating-radial-gradient\",\n    \"conic-gradient\"\n]);\nfunction q0(t) {\n    t = z(t);\n    for (let e of N0)if (t.startsWith(`${e}(`)) return !0;\n    return !1;\n}\nvar $0 = new Set([\n    \"center\",\n    \"top\",\n    \"right\",\n    \"bottom\",\n    \"left\"\n]);\nfunction Qu(t) {\n    let e = 0;\n    return ee(t, \"_\").every((n)=>(n = z(n), n.startsWith(\"var(\") ? !0 : $0.has(n) || ar(n) || sr(n) ? (e++, !0) : !1)) ? e > 0 : !1;\n}\nfunction Ju(t) {\n    let e = 0;\n    return ee(t, \",\").every((n)=>(n = z(n), n.startsWith(\"var(\") ? !0 : n.includes(\" \") && !/(['\"])([^\"']+)\\1/g.test(n) || /^\\d/g.test(n) ? !1 : (e++, !0))) ? e > 0 : !1;\n}\nvar U0 = new Set([\n    \"serif\",\n    \"sans-serif\",\n    \"monospace\",\n    \"cursive\",\n    \"fantasy\",\n    \"system-ui\",\n    \"ui-serif\",\n    \"ui-sans-serif\",\n    \"ui-monospace\",\n    \"ui-rounded\",\n    \"math\",\n    \"emoji\",\n    \"fangsong\"\n]);\nfunction Xu(t) {\n    return U0.has(t);\n}\nvar j0 = new Set([\n    \"xx-small\",\n    \"x-small\",\n    \"small\",\n    \"medium\",\n    \"large\",\n    \"x-large\",\n    \"x-large\",\n    \"xxx-large\"\n]);\nfunction Ku(t) {\n    return j0.has(t);\n}\nvar z0 = new Set([\n    \"larger\",\n    \"smaller\"\n]);\nfunction Zu(t) {\n    return z0.has(t);\n}\nfunction Re(t) {\n    if (t = `${t}`, t === \"0\") return \"0\";\n    if (/^[+-]?(\\d+|\\d*\\.\\d+)(e[+-]?\\d+)?(%|\\w+)?$/.test(t)) return t.replace(/^[+-]?/, (r)=>r === \"-\" ? \"\" : \"-\");\n    let e = [\n        \"var\",\n        \"calc\",\n        \"min\",\n        \"max\",\n        \"clamp\"\n    ];\n    for (let r of e)if (t.includes(`${r}(`)) return `calc(${t} * -1)`;\n}\nfunction ef(t) {\n    let e = [\n        \"cover\",\n        \"contain\"\n    ];\n    return ee(t, \",\").every((r)=>{\n        let n = ee(r, \"_\").filter(Boolean);\n        return n.length === 1 && e.includes(n[0]) ? !0 : n.length !== 1 && n.length !== 2 ? !1 : n.every((i)=>ar(i) || sr(i) || i === \"auto\");\n    });\n}\nGn();\nvar tf = {\n    optimizeUniversalDefaults: !1,\n    generalizedModifiers: !0,\n    get disableColorOpacityUtilitiesByDefault () {},\n    get relativeContentPathsByDefault () {}\n}, sn = {\n    future: [\n        \"hoverOnlyWhenSupported\",\n        \"respectDefaultRingColorOpacity\",\n        \"disableColorOpacityUtilitiesByDefault\",\n        \"relativeContentPathsByDefault\"\n    ],\n    experimental: [\n        \"optimizeUniversalDefaults\",\n        \"generalizedModifiers\"\n    ]\n};\nfunction G(t, e) {\n    var r, n, i, a, s, o;\n    return sn.future.includes(e) ? t.future === \"all\" || ((i = (n = (r = t == null ? void 0 : t.future) == null ? void 0 : r[e]) != null ? n : tf[e]) != null ? i : !1) : sn.experimental.includes(e) ? t.experimental === \"all\" || ((o = (s = (a = t == null ? void 0 : t.experimental) == null ? void 0 : a[e]) != null ? s : tf[e]) != null ? o : !1) : !1;\n}\nfunction rf(t) {\n    var e;\n    return t.experimental === \"all\" ? sn.experimental : Object.keys((e = t == null ? void 0 : t.experimental) != null ? e : {}).filter((r)=>sn.experimental.includes(r) && t.experimental[r]);\n}\nfunction nf(t) {\n    if (1 === void 0 && rf(t).length > 0) {\n        let e = rf(t).map((r)=>Bn.yellow(r)).join(\", \");\n        L.warn(\"experimental-flags-enabled\", [\n            `You have enabled experimental features: ${e}`,\n            \"Experimental features in Tailwind CSS are not covered by semver, may introduce breaking changes, and can change at any time.\"\n        ]);\n    }\n}\nfunction af(t, e) {\n    t.walkClasses((r)=>{\n        r.value = e(r.value), r.raws && r.raws.value && (r.raws.value = Be(r.raws.value));\n    });\n}\nfunction of(t, e) {\n    if (!De(t)) return;\n    let r = t.slice(1, -1);\n    if (!!e(r)) return z(r);\n}\nfunction V0(t, e = {}, r) {\n    let n = e[t];\n    if (n !== void 0) return Re(n);\n    if (De(t)) {\n        let i = of(t, r);\n        return i === void 0 ? void 0 : Re(i);\n    }\n}\nfunction an(t, e = {}, { validate: r = ()=>!0 } = {}) {\n    var i;\n    let n = (i = e.values) == null ? void 0 : i[t];\n    return n !== void 0 ? n : e.supportsNegativeValues && t.startsWith(\"-\") ? V0(t.slice(1), e.values, r) : of(t, r);\n}\nfunction De(t) {\n    return t.startsWith(\"[\") && t.endsWith(\"]\");\n}\nfunction lf(t) {\n    let e = t.lastIndexOf(\"/\");\n    return e === -1 || e === t.length - 1 ? [\n        t,\n        void 0\n    ] : De(t) && !t.includes(\"]/[\") ? [\n        t,\n        void 0\n    ] : [\n        t.slice(0, e),\n        t.slice(e + 1)\n    ];\n}\nfunction st(t) {\n    if (typeof t == \"string\" && t.includes(\"<alpha-value>\")) {\n        let e = t;\n        return ({ opacityValue: r = 1 })=>e.replace(\"<alpha-value>\", r);\n    }\n    return t;\n}\nfunction uf(t) {\n    return z(t.slice(1, -1));\n}\nfunction W0(t, e = {}, { tailwindConfig: r = {} } = {}) {\n    var a, s, o, l, u, f;\n    if (((a = e.values) == null ? void 0 : a[t]) !== void 0) return st((s = e.values) == null ? void 0 : s[t]);\n    let [n, i] = lf(t);\n    if (i !== void 0) {\n        let p = (l = (o = e.values) == null ? void 0 : o[n]) != null ? l : De(n) ? n.slice(1, -1) : void 0;\n        return p === void 0 ? void 0 : (p = st(p), De(i) ? we(p, uf(i)) : ((f = (u = r.theme) == null ? void 0 : u.opacity) == null ? void 0 : f[i]) === void 0 ? void 0 : we(p, r.theme.opacity[i]));\n    }\n    return an(t, e, {\n        validate: Yu\n    });\n}\nfunction B0(t, e = {}) {\n    var r;\n    return (r = e.values) == null ? void 0 : r[t];\n}\nfunction oe(t) {\n    return (e, r)=>an(e, r, {\n            validate: t\n        });\n}\nvar _s = {\n    any: an,\n    color: W0,\n    url: oe(Cs),\n    image: oe(Hu),\n    length: oe(ar),\n    percentage: oe(sr),\n    position: oe(Qu),\n    lookup: B0,\n    \"generic-name\": oe(Xu),\n    \"family-name\": oe(Ju),\n    number: oe(As),\n    \"line-width\": oe(Bu),\n    \"absolute-size\": oe(Ku),\n    \"relative-size\": oe(Zu),\n    shadow: oe(Gu),\n    size: oe(ef)\n}, sf = Object.keys(_s);\nfunction G0(t, e) {\n    let r = t.indexOf(e);\n    return r === -1 ? [\n        void 0,\n        t\n    ] : [\n        t.slice(0, r),\n        t.slice(r + 1)\n    ];\n}\nfunction Ts(t, e, r, n) {\n    if (r.values && e in r.values) for (let { type: a } of t != null ? t : []){\n        let s = _s[a](e, r, {\n            tailwindConfig: n\n        });\n        if (s !== void 0) return [\n            s,\n            a,\n            null\n        ];\n    }\n    if (De(e)) {\n        let a = e.slice(1, -1), [s, o] = G0(a, \":\");\n        if (!/^[\\w-_]+$/g.test(s)) o = a;\n        else if (s !== void 0 && !sf.includes(s)) return [];\n        if (o.length > 0 && sf.includes(s)) return [\n            an(`[${o}]`, r),\n            s,\n            null\n        ];\n    }\n    let i = Ps(t, e, r, n);\n    for (let a of i)return a;\n    return [];\n}\nfunction* Ps(t, e, r, n) {\n    var l, u;\n    let i = G(n, \"generalizedModifiers\"), [a, s] = lf(e);\n    if (i && r.modifiers != null && (r.modifiers === \"any\" || typeof r.modifiers == \"object\" && (s && De(s) || s in r.modifiers)) || (a = e, s = void 0), s !== void 0 && a === \"\" && (a = \"DEFAULT\"), s !== void 0 && typeof r.modifiers == \"object\") {\n        let f = (u = (l = r.modifiers) == null ? void 0 : l[s]) != null ? u : null;\n        f !== null ? s = f : De(s) && (s = uf(s));\n    }\n    for (let { type: f } of t != null ? t : []){\n        let p = _s[f](a, r, {\n            tailwindConfig: n\n        });\n        p !== void 0 && (yield [\n            p,\n            f,\n            s != null ? s : null\n        ]);\n    }\n}\nvar be = H(ve()), hf = H(jr());\nvar ff = H(ve());\nfunction re(t) {\n    var r, n;\n    let e = ff.default.className();\n    return e.value = t, Be((n = (r = e == null ? void 0 : e.raws) == null ? void 0 : r.value) != null ? n : e.value);\n}\nvar Is = {\n    \"::after\": [\n        \"terminal\",\n        \"jumpable\"\n    ],\n    \"::backdrop\": [\n        \"terminal\"\n    ],\n    \"::before\": [\n        \"terminal\",\n        \"jumpable\"\n    ],\n    \"::cue\": [\n        \"terminal\"\n    ],\n    \"::cue-region\": [\n        \"terminal\"\n    ],\n    \"::first-letter\": [\n        \"terminal\",\n        \"jumpable\"\n    ],\n    \"::first-line\": [\n        \"terminal\",\n        \"jumpable\"\n    ],\n    \"::grammar-error\": [\n        \"terminal\"\n    ],\n    \"::marker\": [\n        \"terminal\"\n    ],\n    \"::part\": [\n        \"terminal\",\n        \"actionable\"\n    ],\n    \"::placeholder\": [\n        \"terminal\"\n    ],\n    \"::selection\": [\n        \"terminal\"\n    ],\n    \"::slotted\": [\n        \"terminal\"\n    ],\n    \"::spelling-error\": [\n        \"terminal\"\n    ],\n    \"::target-text\": [\n        \"terminal\"\n    ],\n    \"::file-selector-button\": [\n        \"terminal\",\n        \"actionable\"\n    ],\n    \"::-webkit-progress-bar\": [\n        \"terminal\",\n        \"actionable\"\n    ],\n    \"::-webkit-scrollbar\": [\n        \"terminal\",\n        \"actionable\"\n    ],\n    \"::-webkit-scrollbar-button\": [\n        \"terminal\",\n        \"actionable\"\n    ],\n    \"::-webkit-scrollbar-thumb\": [\n        \"terminal\",\n        \"actionable\"\n    ],\n    \"::-webkit-scrollbar-track\": [\n        \"terminal\",\n        \"actionable\"\n    ],\n    \"::-webkit-scrollbar-track-piece\": [\n        \"terminal\",\n        \"actionable\"\n    ],\n    \"::-webkit-scrollbar-corner\": [\n        \"terminal\",\n        \"actionable\"\n    ],\n    \"::-webkit-resizer\": [\n        \"terminal\",\n        \"actionable\"\n    ],\n    \":after\": [\n        \"terminal\",\n        \"jumpable\"\n    ],\n    \":before\": [\n        \"terminal\",\n        \"jumpable\"\n    ],\n    \":first-letter\": [\n        \"terminal\",\n        \"jumpable\"\n    ],\n    \":first-line\": [\n        \"terminal\",\n        \"jumpable\"\n    ],\n    __default__: [\n        \"actionable\"\n    ]\n};\nfunction at(t) {\n    let [e] = cf(t);\n    return e.forEach(([r, n])=>r.removeChild(n)), t.nodes.push(...e.map(([, r])=>r)), t;\n}\nfunction cf(t) {\n    var n;\n    let e = [], r = null;\n    for (let i of t.nodes)if (i.type === \"combinator\") e = e.filter(([, a])=>Rs(a).includes(\"jumpable\")), r = null;\n    else if (i.type === \"pseudo\") {\n        Y0(i) ? (r = i, e.push([\n            t,\n            i,\n            null\n        ])) : r && H0(i, r) ? e.push([\n            t,\n            i,\n            r\n        ]) : r = null;\n        for (let a of (n = i.nodes) != null ? n : []){\n            let [s, o] = cf(a);\n            r = o || r, e.push(...s);\n        }\n    }\n    return [\n        e,\n        r\n    ];\n}\nfunction pf(t) {\n    return t.value.startsWith(\"::\") || Is[t.value] !== void 0;\n}\nfunction Y0(t) {\n    return pf(t) && Rs(t).includes(\"terminal\");\n}\nfunction H0(t, e) {\n    return t.type !== \"pseudo\" || pf(t) ? !1 : Rs(e).includes(\"actionable\");\n}\nfunction Rs(t) {\n    var e;\n    return (e = Is[t.value]) != null ? e : Is.__default__;\n}\nvar Ds = \":merge\";\nfunction ot(t, { context: e, candidate: r }) {\n    var s;\n    let n = (s = e == null ? void 0 : e.tailwindConfig.prefix) != null ? s : \"\", i = t.map((o)=>{\n        let l = (0, be.default)().astSync(o.format);\n        return {\n            ...o,\n            ast: o.isArbitraryVariant ? l : it(n, l)\n        };\n    }), a = be.default.root({\n        nodes: [\n            be.default.selector({\n                nodes: [\n                    be.default.className({\n                        value: re(r)\n                    })\n                ]\n            })\n        ]\n    });\n    for (let { ast: o } of i)[a, o] = J0(a, o), o.walkNesting((l)=>l.replaceWith(...a.nodes[0].nodes)), a = o;\n    return a;\n}\nfunction df(t) {\n    let e = [];\n    for(; t.prev() && t.prev().type !== \"combinator\";)t = t.prev();\n    for(; t && t.type !== \"combinator\";)e.push(t), t = t.next();\n    return e;\n}\nfunction Q0(t) {\n    return t.sort((e, r)=>e.type === \"tag\" && r.type === \"class\" ? -1 : e.type === \"class\" && r.type === \"tag\" ? 1 : e.type === \"class\" && r.type === \"pseudo\" && r.value.startsWith(\"::\") ? -1 : e.type === \"pseudo\" && e.value.startsWith(\"::\") && r.type === \"class\" ? 1 : t.index(e) - t.index(r)), t;\n}\nfunction Ms(t, e) {\n    let r = !1;\n    t.walk((n)=>{\n        if (n.type === \"class\" && n.value === e) return r = !0, !1;\n    }), r || t.remove();\n}\nfunction on(t, e, { context: r, candidate: n, base: i }) {\n    var f, p;\n    let a = (p = (f = r == null ? void 0 : r.tailwindConfig) == null ? void 0 : f.separator) != null ? p : \":\";\n    i = i != null ? i : n.split(new RegExp(`\\\\${a}(?![^[]*\\\\])`)).pop();\n    let s = (0, be.default)().astSync(t);\n    s.walkClasses((c)=>{\n        c.raws && c.value.includes(i) && (c.raws.value = re((0, hf.default)(c.raws.value)));\n    }), s.each((c)=>Ms(c, i));\n    let o = Array.isArray(e) ? ot(e, {\n        context: r,\n        candidate: n\n    }) : e;\n    if (o === null) return s.toString();\n    let l = be.default.comment({\n        value: \"/*__simple__*/\"\n    }), u = be.default.comment({\n        value: \"/*__simple__*/\"\n    });\n    return s.walkClasses((c)=>{\n        if (c.value !== i) return;\n        let d = c.parent, h = o.nodes[0].nodes;\n        if (d.nodes.length === 1) {\n            c.replaceWith(...h);\n            return;\n        }\n        let y = df(c);\n        d.insertBefore(y[0], l), d.insertAfter(y[y.length - 1], u);\n        for (let g of h)d.insertBefore(y[0], g.clone());\n        c.remove(), y = df(l);\n        let m = d.index(l);\n        d.nodes.splice(m, y.length, ...Q0(be.default.selector({\n            nodes: y\n        })).nodes), l.remove(), u.remove();\n    }), s.walkPseudos((c)=>{\n        c.value === Ds && c.replaceWith(c.nodes);\n    }), s.each((c)=>at(c)), s.toString();\n}\nfunction J0(t, e) {\n    let r = [];\n    return t.walkPseudos((n)=>{\n        n.value === Ds && r.push({\n            pseudo: n,\n            value: n.nodes[0].toString()\n        });\n    }), e.walkPseudos((n)=>{\n        if (n.value !== Ds) return;\n        let i = n.nodes[0].toString(), a = r.find((u)=>u.value === i);\n        if (!a) return;\n        let s = [], o = n.next();\n        for(; o && o.type !== \"combinator\";)s.push(o), o = o.next();\n        let l = o;\n        a.pseudo.parent.insertAfter(a.pseudo, be.default.selector({\n            nodes: s.map((u)=>u.clone())\n        })), n.remove(), s.forEach((u)=>u.remove()), l && l.type === \"combinator\" && l.remove();\n    }), [\n        t,\n        e\n    ];\n}\nfunction Fs(t) {\n    return Be(`.${re(t)}`);\n}\nfunction ln(t, e) {\n    return Fs(or(t, e));\n}\nfunction or(t, e) {\n    return e === \"DEFAULT\" ? t : e === \"-\" || e === \"-DEFAULT\" ? `-${t}` : e.startsWith(\"-\") ? `-${t}${e}` : e.startsWith(\"/\") ? `${t}${e}` : `${t}-${e}`;\n}\nvar Cf = H(qs()), Vs = H(ve());\nfunction Ce(t) {\n    return [\n        \"fontSize\",\n        \"outline\"\n    ].includes(t) ? (e)=>(typeof e == \"function\" && (e = e({})), Array.isArray(e) && (e = e[0]), e) : t === \"fontFamily\" ? (e)=>{\n        typeof e == \"function\" && (e = e({}));\n        let r = Array.isArray(e) && X(e[1]) ? e[0] : e;\n        return Array.isArray(r) ? r.join(\", \") : r;\n    } : [\n        \"boxShadow\",\n        \"transitionProperty\",\n        \"transitionDuration\",\n        \"transitionDelay\",\n        \"transitionTimingFunction\",\n        \"backgroundImage\",\n        \"backgroundSize\",\n        \"backgroundColor\",\n        \"cursor\",\n        \"animation\"\n    ].includes(t) ? (e)=>(typeof e == \"function\" && (e = e({})), Array.isArray(e) && (e = e.join(\", \")), e) : [\n        \"gridTemplateColumns\",\n        \"gridTemplateRows\",\n        \"objectPosition\"\n    ].includes(t) ? (e)=>(typeof e == \"function\" && (e = e({})), typeof e == \"string\" && (e = R.list.comma(e).join(\" \")), e) : (e, r = {})=>(typeof e == \"function\" && (e = e(r)), e);\n}\nvr();\nkt();\nfunction T(t, e = [\n    [\n        t,\n        [\n            t\n        ]\n    ]\n], { filterDefault: r = !1, ...n } = {}) {\n    let i = Ce(t);\n    return function({ matchUtilities: a, theme: s }) {\n        var o;\n        for (let l of e){\n            let u = Array.isArray(l[0]) ? l : [\n                l\n            ];\n            a(u.reduce((f, [p, c])=>Object.assign(f, {\n                    [p]: (d)=>c.reduce((h, y)=>Array.isArray(y) ? Object.assign(h, {\n                                [y[0]]: y[1]\n                            }) : Object.assign(h, {\n                                [y]: i(d)\n                            }), {})\n                }), {}), {\n                ...n,\n                values: r ? Object.fromEntries(Object.entries((o = s(t)) != null ? o : {}).filter(([f])=>f !== \"DEFAULT\")) : s(t)\n            });\n        }\n    };\n}\nfunction Me(t) {\n    return t = Array.isArray(t) ? t : [\n        t\n    ], t.map((e)=>{\n        let r = e.values.map((n)=>n.raw !== void 0 ? n.raw : [\n                n.min && `(min-width: ${n.min})`,\n                n.max && `(max-width: ${n.max})`\n            ].filter(Boolean).join(\" and \"));\n        return e.not ? `not all and ${r}` : r;\n    }).join(\", \");\n}\nvar X0 = new Set([\n    \"normal\",\n    \"reverse\",\n    \"alternate\",\n    \"alternate-reverse\"\n]), K0 = new Set([\n    \"running\",\n    \"paused\"\n]), Z0 = new Set([\n    \"none\",\n    \"forwards\",\n    \"backwards\",\n    \"both\"\n]), ev = new Set([\n    \"infinite\"\n]), tv = new Set([\n    \"linear\",\n    \"ease\",\n    \"ease-in\",\n    \"ease-out\",\n    \"ease-in-out\",\n    \"step-start\",\n    \"step-end\"\n]), rv = [\n    \"cubic-bezier\",\n    \"steps\"\n], nv = /\\,(?![^(]*\\))/g, iv = /\\ +(?![^(]*\\))/g, mf = /^(-?[\\d.]+m?s)$/, sv = /^(\\d+)$/;\nfunction $s(t) {\n    return t.split(nv).map((r)=>{\n        let n = r.trim(), i = {\n            value: n\n        }, a = n.split(iv), s = new Set;\n        for (let o of a)!s.has(\"DIRECTIONS\") && X0.has(o) ? (i.direction = o, s.add(\"DIRECTIONS\")) : !s.has(\"PLAY_STATES\") && K0.has(o) ? (i.playState = o, s.add(\"PLAY_STATES\")) : !s.has(\"FILL_MODES\") && Z0.has(o) ? (i.fillMode = o, s.add(\"FILL_MODES\")) : !s.has(\"ITERATION_COUNTS\") && (ev.has(o) || sv.test(o)) ? (i.iterationCount = o, s.add(\"ITERATION_COUNTS\")) : !s.has(\"TIMING_FUNCTION\") && tv.has(o) || !s.has(\"TIMING_FUNCTION\") && rv.some((l)=>o.startsWith(`${l}(`)) ? (i.timingFunction = o, s.add(\"TIMING_FUNCTION\")) : !s.has(\"DURATION\") && mf.test(o) ? (i.duration = o, s.add(\"DURATION\")) : !s.has(\"DELAY\") && mf.test(o) ? (i.delay = o, s.add(\"DELAY\")) : s.has(\"NAME\") ? (i.unknown || (i.unknown = []), i.unknown.push(o)) : (i.name = o, s.add(\"NAME\"));\n        return i;\n    });\n}\nvar gf = (t)=>Object.assign({}, ...Object.entries(t != null ? t : {}).flatMap(([e, r])=>typeof r == \"object\" ? Object.entries(gf(r)).map(([n, i])=>({\n                [e + (n === \"DEFAULT\" ? \"\" : `-${n}`)]: i\n            })) : [\n            {\n                [`${e}`]: r\n            }\n        ])), Q = gf;\nfunction M(t) {\n    return typeof t == \"function\" ? t({}) : t;\n}\nfunction Fe(t, e = !0) {\n    return Array.isArray(t) ? t.map((r)=>{\n        if (e && Array.isArray(r)) throw new Error(\"The tuple syntax is not supported for `screens`.\");\n        if (typeof r == \"string\") return {\n            name: r.toString(),\n            not: !1,\n            values: [\n                {\n                    min: r,\n                    max: void 0\n                }\n            ]\n        };\n        let [n, i] = r;\n        return n = n.toString(), typeof i == \"string\" ? {\n            name: n,\n            not: !1,\n            values: [\n                {\n                    min: i,\n                    max: void 0\n                }\n            ]\n        } : Array.isArray(i) ? {\n            name: n,\n            not: !1,\n            values: i.map((a)=>yf(a))\n        } : {\n            name: n,\n            not: !1,\n            values: [\n                yf(i)\n            ]\n        };\n    }) : Fe(Object.entries(t != null ? t : {}), !1);\n}\nfunction un(t) {\n    return t.values.length !== 1 ? {\n        result: !1,\n        reason: \"multiple-values\"\n    } : t.values[0].raw !== void 0 ? {\n        result: !1,\n        reason: \"raw-values\"\n    } : t.values[0].min !== void 0 && t.values[0].max !== void 0 ? {\n        result: !1,\n        reason: \"min-and-max\"\n    } : {\n        result: !0,\n        reason: null\n    };\n}\nfunction vf(t, e, r) {\n    let n = fn(e, t), i = fn(r, t), a = un(n), s = un(i);\n    if (a.reason === \"multiple-values\" || s.reason === \"multiple-values\") throw new Error(\"Attempted to sort a screen with multiple values. This should never happen. Please open a bug report.\");\n    if (a.reason === \"raw-values\" || s.reason === \"raw-values\") throw new Error(\"Attempted to sort a screen with raw values. This should never happen. Please open a bug report.\");\n    if (a.reason === \"min-and-max\" || s.reason === \"min-and-max\") throw new Error(\"Attempted to sort a screen with both min and max values. This should never happen. Please open a bug report.\");\n    let { min: o, max: l } = n.values[0], { min: u, max: f } = i.values[0];\n    e.not && ([o, l] = [\n        l,\n        o\n    ]), r.not && ([u, f] = [\n        f,\n        u\n    ]), o = o === void 0 ? o : parseFloat(o), l = l === void 0 ? l : parseFloat(l), u = u === void 0 ? u : parseFloat(u), f = f === void 0 ? f : parseFloat(f);\n    let [p, c] = t === \"min\" ? [\n        o,\n        u\n    ] : [\n        f,\n        l\n    ];\n    return p - c;\n}\nfunction fn(t, e) {\n    return typeof t == \"object\" ? t : {\n        name: \"arbitrary-screen\",\n        values: [\n            {\n                [e]: t\n            }\n        ]\n    };\n}\nfunction yf({ \"min-width\": t, min: e = t, max: r, raw: n } = {}) {\n    return {\n        min: e,\n        max: r,\n        raw: n\n    };\n}\nfunction cn(t, e) {\n    t.walkDecls((r)=>{\n        if (e.includes(r.prop)) {\n            r.remove();\n            return;\n        }\n        for (let n of e)r.value.includes(`/ var(${n})`) && (r.value = r.value.replace(`/ var(${n})`, \"\"));\n    });\n}\nvar ne = {\n    pseudoElementVariants: ({ addVariant: t })=>{\n        t(\"first-letter\", \"&::first-letter\"), t(\"first-line\", \"&::first-line\"), t(\"marker\", [\n            ({ container: e })=>(cn(e, [\n                    \"--tw-text-opacity\"\n                ]), \"& *::marker\"),\n            ({ container: e })=>(cn(e, [\n                    \"--tw-text-opacity\"\n                ]), \"&::marker\")\n        ]), t(\"selection\", [\n            \"& *::selection\",\n            \"&::selection\"\n        ]), t(\"file\", \"&::file-selector-button\"), t(\"placeholder\", \"&::placeholder\"), t(\"backdrop\", \"&::backdrop\"), t(\"before\", ({ container: e })=>(e.walkRules((r)=>{\n                let n = !1;\n                r.walkDecls(\"content\", ()=>{\n                    n = !0;\n                }), n || r.prepend(R.decl({\n                    prop: \"content\",\n                    value: \"var(--tw-content)\"\n                }));\n            }), \"&::before\")), t(\"after\", ({ container: e })=>(e.walkRules((r)=>{\n                let n = !1;\n                r.walkDecls(\"content\", ()=>{\n                    n = !0;\n                }), n || r.prepend(R.decl({\n                    prop: \"content\",\n                    value: \"var(--tw-content)\"\n                }));\n            }), \"&::after\"));\n    },\n    pseudoClassVariants: ({ addVariant: t, matchVariant: e, config: r })=>{\n        let n = [\n            [\n                \"first\",\n                \"&:first-child\"\n            ],\n            [\n                \"last\",\n                \"&:last-child\"\n            ],\n            [\n                \"only\",\n                \"&:only-child\"\n            ],\n            [\n                \"odd\",\n                \"&:nth-child(odd)\"\n            ],\n            [\n                \"even\",\n                \"&:nth-child(even)\"\n            ],\n            \"first-of-type\",\n            \"last-of-type\",\n            \"only-of-type\",\n            [\n                \"visited\",\n                ({ container: a })=>(cn(a, [\n                        \"--tw-text-opacity\",\n                        \"--tw-border-opacity\",\n                        \"--tw-bg-opacity\"\n                    ]), \"&:visited\")\n            ],\n            \"target\",\n            [\n                \"open\",\n                \"&[open]\"\n            ],\n            \"default\",\n            \"checked\",\n            \"indeterminate\",\n            \"placeholder-shown\",\n            \"autofill\",\n            \"optional\",\n            \"required\",\n            \"valid\",\n            \"invalid\",\n            \"in-range\",\n            \"out-of-range\",\n            \"read-only\",\n            \"empty\",\n            \"focus-within\",\n            [\n                \"hover\",\n                G(r(), \"hoverOnlyWhenSupported\") ? \"@media (hover: hover) and (pointer: fine) { &:hover }\" : \"&:hover\"\n            ],\n            \"focus\",\n            \"focus-visible\",\n            \"active\",\n            \"enabled\",\n            \"disabled\"\n        ].map((a)=>Array.isArray(a) ? a : [\n                a,\n                `&:${a}`\n            ]);\n        for (let [a, s] of n)t(a, (o)=>typeof s == \"function\" ? s(o) : s);\n        let i = {\n            group: (a, { modifier: s })=>s ? [\n                    `:merge(.group\\\\/${re(s)})`,\n                    \" &\"\n                ] : [\n                    \":merge(.group)\",\n                    \" &\"\n                ],\n            peer: (a, { modifier: s })=>s ? [\n                    `:merge(.peer\\\\/${re(s)})`,\n                    \" ~ &\"\n                ] : [\n                    \":merge(.peer)\",\n                    \" ~ &\"\n                ]\n        };\n        for (let [a, s] of Object.entries(i))e(a, (o = \"\", l)=>{\n            let u = z(typeof o == \"function\" ? o(l) : o);\n            u.includes(\"&\") || (u = \"&\" + u);\n            let [f, p] = s(\"\", l), c = null, d = null, h = 0;\n            for(let y = 0; y < u.length; ++y){\n                let m = u[y];\n                m === \"&\" ? c = y : m === \"'\" || m === '\"' ? h += 1 : c !== null && m === \" \" && !h && (d = y);\n            }\n            return c !== null && d === null && (d = u.length), u.slice(0, c) + f + u.slice(c + 1, d) + p + u.slice(d);\n        }, {\n            values: Object.fromEntries(n)\n        });\n    },\n    directionVariants: ({ addVariant: t })=>{\n        t(\"ltr\", ':is([dir=\"ltr\"] &)'), t(\"rtl\", ':is([dir=\"rtl\"] &)');\n    },\n    reducedMotionVariants: ({ addVariant: t })=>{\n        t(\"motion-safe\", \"@media (prefers-reduced-motion: no-preference)\"), t(\"motion-reduce\", \"@media (prefers-reduced-motion: reduce)\");\n    },\n    darkVariants: ({ config: t, addVariant: e })=>{\n        let [r, n = \".dark\"] = [].concat(t(\"darkMode\", \"media\"));\n        r === !1 && (r = \"media\", L.warn(\"darkmode-false\", [\n            \"The `darkMode` option in your Tailwind CSS configuration is set to `false`, which now behaves the same as `media`.\",\n            \"Change `darkMode` to `media` or remove it entirely.\",\n            \"https://tailwindcss.com/docs/upgrade-guide#remove-dark-mode-configuration\"\n        ])), r === \"class\" ? e(\"dark\", `:is(${n} &)`) : r === \"media\" && e(\"dark\", \"@media (prefers-color-scheme: dark)\");\n    },\n    printVariant: ({ addVariant: t })=>{\n        t(\"print\", \"@media print\");\n    },\n    screenVariants: ({ theme: t, addVariant: e, matchVariant: r })=>{\n        var g;\n        let n = (g = t(\"screens\")) != null ? g : {}, i = Object.values(n).every((w)=>typeof w == \"string\"), a = Fe(t(\"screens\")), s = new Set([]);\n        function o(w) {\n            var b, v;\n            return (v = (b = w.match(/(\\D+)$/)) == null ? void 0 : b[1]) != null ? v : \"(none)\";\n        }\n        function l(w) {\n            w !== void 0 && s.add(o(w));\n        }\n        function u(w) {\n            return l(w), s.size === 1;\n        }\n        for (let w of a)for (let b of w.values)l(b.min), l(b.max);\n        let f = s.size <= 1;\n        function p(w) {\n            return Object.fromEntries(a.filter((b)=>un(b).result).map((b)=>{\n                let { min: v, max: O } = b.values[0];\n                if (w === \"min\" && v !== void 0) return b;\n                if (w === \"min\" && O !== void 0) return {\n                    ...b,\n                    not: !b.not\n                };\n                if (w === \"max\" && O !== void 0) return b;\n                if (w === \"max\" && v !== void 0) return {\n                    ...b,\n                    not: !b.not\n                };\n            }).map((b)=>[\n                    b.name,\n                    b\n                ]));\n        }\n        function c(w) {\n            return (b, v)=>vf(w, b.value, v.value);\n        }\n        let d = c(\"max\"), h = c(\"min\");\n        function y(w) {\n            return (b)=>{\n                if (i) if (f) {\n                    if (typeof b == \"string\" && !u(b)) return L.warn(\"minmax-have-mixed-units\", [\n                        \"The `min-*` and `max-*` variants are not supported with a `screens` configuration containing mixed units.\"\n                    ]), [];\n                } else return L.warn(\"mixed-screen-units\", [\n                    \"The `min-*` and `max-*` variants are not supported with a `screens` configuration containing mixed units.\"\n                ]), [];\n                else return L.warn(\"complex-screen-config\", [\n                    \"The `min-*` and `max-*` variants are not supported with a `screens` configuration containing objects.\"\n                ]), [];\n                return [\n                    `@media ${Me(fn(b, w))}`\n                ];\n            };\n        }\n        r(\"max\", y(\"max\"), {\n            sort: d,\n            values: i ? p(\"max\") : {}\n        });\n        let m = \"min-screens\";\n        for (let w of a)e(w.name, `@media ${Me(w)}`, {\n            id: m,\n            sort: i && f ? h : void 0,\n            value: w\n        });\n        r(\"min\", y(\"min\"), {\n            id: m,\n            sort: h\n        });\n    },\n    supportsVariants: ({ matchVariant: t, theme: e })=>{\n        var r;\n        t(\"supports\", (n = \"\")=>{\n            let i = z(n), a = /^\\w*\\s*\\(/.test(i);\n            return i = a ? i.replace(/\\b(and|or|not)\\b/g, \" $1 \") : i, a ? `@supports ${i}` : (i.includes(\":\") || (i = `${i}: var(--tw)`), i.startsWith(\"(\") && i.endsWith(\")\") || (i = `(${i})`), `@supports ${i}`);\n        }, {\n            values: (r = e(\"supports\")) != null ? r : {}\n        });\n    },\n    ariaVariants: ({ matchVariant: t, theme: e })=>{\n        var r, n, i;\n        t(\"aria\", (a)=>`&[aria-${z(a)}]`, {\n            values: (r = e(\"aria\")) != null ? r : {}\n        }), t(\"group-aria\", (a, { modifier: s })=>s ? `:merge(.group\\\\/${s})[aria-${z(a)}] &` : `:merge(.group)[aria-${z(a)}] &`, {\n            values: (n = e(\"aria\")) != null ? n : {}\n        }), t(\"peer-aria\", (a, { modifier: s })=>s ? `:merge(.peer\\\\/${s})[aria-${z(a)}] ~ &` : `:merge(.peer)[aria-${z(a)}] ~ &`, {\n            values: (i = e(\"aria\")) != null ? i : {}\n        });\n    },\n    dataVariants: ({ matchVariant: t, theme: e })=>{\n        var r, n, i;\n        t(\"data\", (a)=>`&[data-${z(a)}]`, {\n            values: (r = e(\"data\")) != null ? r : {}\n        }), t(\"group-data\", (a, { modifier: s })=>s ? `:merge(.group\\\\/${s})[data-${z(a)}] &` : `:merge(.group)[data-${z(a)}] &`, {\n            values: (n = e(\"data\")) != null ? n : {}\n        }), t(\"peer-data\", (a, { modifier: s })=>s ? `:merge(.peer\\\\/${s})[data-${z(a)}] ~ &` : `:merge(.peer)[data-${z(a)}] ~ &`, {\n            values: (i = e(\"data\")) != null ? i : {}\n        });\n    },\n    orientationVariants: ({ addVariant: t })=>{\n        t(\"portrait\", \"@media (orientation: portrait)\"), t(\"landscape\", \"@media (orientation: landscape)\");\n    },\n    prefersContrastVariants: ({ addVariant: t })=>{\n        t(\"contrast-more\", \"@media (prefers-contrast: more)\"), t(\"contrast-less\", \"@media (prefers-contrast: less)\");\n    }\n}, he = [\n    \"translate(var(--tw-translate-x), var(--tw-translate-y))\",\n    \"rotate(var(--tw-rotate))\",\n    \"skewX(var(--tw-skew-x))\",\n    \"skewY(var(--tw-skew-y))\",\n    \"scaleX(var(--tw-scale-x))\",\n    \"scaleY(var(--tw-scale-y))\"\n].join(\" \"), xe = [\n    \"var(--tw-blur)\",\n    \"var(--tw-brightness)\",\n    \"var(--tw-contrast)\",\n    \"var(--tw-grayscale)\",\n    \"var(--tw-hue-rotate)\",\n    \"var(--tw-invert)\",\n    \"var(--tw-saturate)\",\n    \"var(--tw-sepia)\",\n    \"var(--tw-drop-shadow)\"\n].join(\" \"), Se = [\n    \"var(--tw-backdrop-blur)\",\n    \"var(--tw-backdrop-brightness)\",\n    \"var(--tw-backdrop-contrast)\",\n    \"var(--tw-backdrop-grayscale)\",\n    \"var(--tw-backdrop-hue-rotate)\",\n    \"var(--tw-backdrop-invert)\",\n    \"var(--tw-backdrop-opacity)\",\n    \"var(--tw-backdrop-saturate)\",\n    \"var(--tw-backdrop-sepia)\"\n].join(\" \"), wf = {\n    preflight: ({ addBase: t })=>{\n        let e = R.parse(ht.readFileSync(Kn(\"/\", \"./css/preflight.css\"), \"utf8\"));\n        t([\n            R.comment({\n                text: `! tailwindcss v${$a} | MIT License | https://tailwindcss.com`\n            }),\n            ...e.nodes\n        ]);\n    },\n    container: (()=>{\n        function t(r = []) {\n            return r.flatMap((n)=>n.values.map((i)=>i.min)).filter((n)=>n !== void 0);\n        }\n        function e(r, n, i) {\n            if (typeof i > \"u\") return [];\n            if (!(typeof i == \"object\" && i !== null)) return [\n                {\n                    screen: \"DEFAULT\",\n                    minWidth: 0,\n                    padding: i\n                }\n            ];\n            let a = [];\n            i.DEFAULT && a.push({\n                screen: \"DEFAULT\",\n                minWidth: 0,\n                padding: i.DEFAULT\n            });\n            for (let s of r)for (let o of n)for (let { min: l } of o.values)l === s && a.push({\n                minWidth: s,\n                padding: i[o.name]\n            });\n            return a;\n        }\n        return function({ addComponents: r, theme: n }) {\n            let i = Fe(n(\"container.screens\", n(\"screens\"))), a = t(i), s = e(a, i, n(\"container.padding\")), o = (u)=>{\n                let f = s.find((p)=>p.minWidth === u);\n                return f ? {\n                    paddingRight: f.padding,\n                    paddingLeft: f.padding\n                } : {};\n            }, l = Array.from(new Set(a.slice().sort((u, f)=>parseInt(u) - parseInt(f)))).map((u)=>({\n                    [`@media (min-width: ${u})`]: {\n                        \".container\": {\n                            \"max-width\": u,\n                            ...o(u)\n                        }\n                    }\n                }));\n            r([\n                {\n                    \".container\": Object.assign({\n                        width: \"100%\"\n                    }, n(\"container.center\", !1) ? {\n                        marginRight: \"auto\",\n                        marginLeft: \"auto\"\n                    } : {}, o(0))\n                },\n                ...l\n            ]);\n        };\n    })(),\n    accessibility: ({ addUtilities: t })=>{\n        t({\n            \".sr-only\": {\n                position: \"absolute\",\n                width: \"1px\",\n                height: \"1px\",\n                padding: \"0\",\n                margin: \"-1px\",\n                overflow: \"hidden\",\n                clip: \"rect(0, 0, 0, 0)\",\n                whiteSpace: \"nowrap\",\n                borderWidth: \"0\"\n            },\n            \".not-sr-only\": {\n                position: \"static\",\n                width: \"auto\",\n                height: \"auto\",\n                padding: \"0\",\n                margin: \"0\",\n                overflow: \"visible\",\n                clip: \"auto\",\n                whiteSpace: \"normal\"\n            }\n        });\n    },\n    pointerEvents: ({ addUtilities: t })=>{\n        t({\n            \".pointer-events-none\": {\n                \"pointer-events\": \"none\"\n            },\n            \".pointer-events-auto\": {\n                \"pointer-events\": \"auto\"\n            }\n        });\n    },\n    visibility: ({ addUtilities: t })=>{\n        t({\n            \".visible\": {\n                visibility: \"visible\"\n            },\n            \".invisible\": {\n                visibility: \"hidden\"\n            },\n            \".collapse\": {\n                visibility: \"collapse\"\n            }\n        });\n    },\n    position: ({ addUtilities: t })=>{\n        t({\n            \".static\": {\n                position: \"static\"\n            },\n            \".fixed\": {\n                position: \"fixed\"\n            },\n            \".absolute\": {\n                position: \"absolute\"\n            },\n            \".relative\": {\n                position: \"relative\"\n            },\n            \".sticky\": {\n                position: \"sticky\"\n            }\n        });\n    },\n    inset: T(\"inset\", [\n        [\n            \"inset\",\n            [\n                \"inset\"\n            ]\n        ],\n        [\n            [\n                \"inset-x\",\n                [\n                    \"left\",\n                    \"right\"\n                ]\n            ],\n            [\n                \"inset-y\",\n                [\n                    \"top\",\n                    \"bottom\"\n                ]\n            ]\n        ],\n        [\n            [\n                \"start\",\n                [\n                    \"inset-inline-start\"\n                ]\n            ],\n            [\n                \"end\",\n                [\n                    \"inset-inline-end\"\n                ]\n            ],\n            [\n                \"top\",\n                [\n                    \"top\"\n                ]\n            ],\n            [\n                \"right\",\n                [\n                    \"right\"\n                ]\n            ],\n            [\n                \"bottom\",\n                [\n                    \"bottom\"\n                ]\n            ],\n            [\n                \"left\",\n                [\n                    \"left\"\n                ]\n            ]\n        ]\n    ], {\n        supportsNegativeValues: !0\n    }),\n    isolation: ({ addUtilities: t })=>{\n        t({\n            \".isolate\": {\n                isolation: \"isolate\"\n            },\n            \".isolation-auto\": {\n                isolation: \"auto\"\n            }\n        });\n    },\n    zIndex: T(\"zIndex\", [\n        [\n            \"z\",\n            [\n                \"zIndex\"\n            ]\n        ]\n    ], {\n        supportsNegativeValues: !0\n    }),\n    order: T(\"order\", void 0, {\n        supportsNegativeValues: !0\n    }),\n    gridColumn: T(\"gridColumn\", [\n        [\n            \"col\",\n            [\n                \"gridColumn\"\n            ]\n        ]\n    ]),\n    gridColumnStart: T(\"gridColumnStart\", [\n        [\n            \"col-start\",\n            [\n                \"gridColumnStart\"\n            ]\n        ]\n    ]),\n    gridColumnEnd: T(\"gridColumnEnd\", [\n        [\n            \"col-end\",\n            [\n                \"gridColumnEnd\"\n            ]\n        ]\n    ]),\n    gridRow: T(\"gridRow\", [\n        [\n            \"row\",\n            [\n                \"gridRow\"\n            ]\n        ]\n    ]),\n    gridRowStart: T(\"gridRowStart\", [\n        [\n            \"row-start\",\n            [\n                \"gridRowStart\"\n            ]\n        ]\n    ]),\n    gridRowEnd: T(\"gridRowEnd\", [\n        [\n            \"row-end\",\n            [\n                \"gridRowEnd\"\n            ]\n        ]\n    ]),\n    float: ({ addUtilities: t })=>{\n        t({\n            \".float-right\": {\n                float: \"right\"\n            },\n            \".float-left\": {\n                float: \"left\"\n            },\n            \".float-none\": {\n                float: \"none\"\n            }\n        });\n    },\n    clear: ({ addUtilities: t })=>{\n        t({\n            \".clear-left\": {\n                clear: \"left\"\n            },\n            \".clear-right\": {\n                clear: \"right\"\n            },\n            \".clear-both\": {\n                clear: \"both\"\n            },\n            \".clear-none\": {\n                clear: \"none\"\n            }\n        });\n    },\n    margin: T(\"margin\", [\n        [\n            \"m\",\n            [\n                \"margin\"\n            ]\n        ],\n        [\n            [\n                \"mx\",\n                [\n                    \"margin-left\",\n                    \"margin-right\"\n                ]\n            ],\n            [\n                \"my\",\n                [\n                    \"margin-top\",\n                    \"margin-bottom\"\n                ]\n            ]\n        ],\n        [\n            [\n                \"ms\",\n                [\n                    \"margin-inline-start\"\n                ]\n            ],\n            [\n                \"me\",\n                [\n                    \"margin-inline-end\"\n                ]\n            ],\n            [\n                \"mt\",\n                [\n                    \"margin-top\"\n                ]\n            ],\n            [\n                \"mr\",\n                [\n                    \"margin-right\"\n                ]\n            ],\n            [\n                \"mb\",\n                [\n                    \"margin-bottom\"\n                ]\n            ],\n            [\n                \"ml\",\n                [\n                    \"margin-left\"\n                ]\n            ]\n        ]\n    ], {\n        supportsNegativeValues: !0\n    }),\n    boxSizing: ({ addUtilities: t })=>{\n        t({\n            \".box-border\": {\n                \"box-sizing\": \"border-box\"\n            },\n            \".box-content\": {\n                \"box-sizing\": \"content-box\"\n            }\n        });\n    },\n    lineClamp: ({ matchUtilities: t, addUtilities: e, theme: r })=>{\n        t({\n            \"line-clamp\": (n)=>({\n                    overflow: \"hidden\",\n                    display: \"-webkit-box\",\n                    \"-webkit-box-orient\": \"vertical\",\n                    \"-webkit-line-clamp\": `${n}`\n                })\n        }, {\n            values: r(\"lineClamp\")\n        }), e({\n            \".line-clamp-none\": {\n                overflow: \"visible\",\n                display: \"block\",\n                \"-webkit-box-orient\": \"horizontal\",\n                \"-webkit-line-clamp\": \"none\"\n            }\n        });\n    },\n    display: ({ addUtilities: t })=>{\n        t({\n            \".block\": {\n                display: \"block\"\n            },\n            \".inline-block\": {\n                display: \"inline-block\"\n            },\n            \".inline\": {\n                display: \"inline\"\n            },\n            \".flex\": {\n                display: \"flex\"\n            },\n            \".inline-flex\": {\n                display: \"inline-flex\"\n            },\n            \".table\": {\n                display: \"table\"\n            },\n            \".inline-table\": {\n                display: \"inline-table\"\n            },\n            \".table-caption\": {\n                display: \"table-caption\"\n            },\n            \".table-cell\": {\n                display: \"table-cell\"\n            },\n            \".table-column\": {\n                display: \"table-column\"\n            },\n            \".table-column-group\": {\n                display: \"table-column-group\"\n            },\n            \".table-footer-group\": {\n                display: \"table-footer-group\"\n            },\n            \".table-header-group\": {\n                display: \"table-header-group\"\n            },\n            \".table-row-group\": {\n                display: \"table-row-group\"\n            },\n            \".table-row\": {\n                display: \"table-row\"\n            },\n            \".flow-root\": {\n                display: \"flow-root\"\n            },\n            \".grid\": {\n                display: \"grid\"\n            },\n            \".inline-grid\": {\n                display: \"inline-grid\"\n            },\n            \".contents\": {\n                display: \"contents\"\n            },\n            \".list-item\": {\n                display: \"list-item\"\n            },\n            \".hidden\": {\n                display: \"none\"\n            }\n        });\n    },\n    aspectRatio: T(\"aspectRatio\", [\n        [\n            \"aspect\",\n            [\n                \"aspect-ratio\"\n            ]\n        ]\n    ]),\n    height: T(\"height\", [\n        [\n            \"h\",\n            [\n                \"height\"\n            ]\n        ]\n    ]),\n    maxHeight: T(\"maxHeight\", [\n        [\n            \"max-h\",\n            [\n                \"maxHeight\"\n            ]\n        ]\n    ]),\n    minHeight: T(\"minHeight\", [\n        [\n            \"min-h\",\n            [\n                \"minHeight\"\n            ]\n        ]\n    ]),\n    width: T(\"width\", [\n        [\n            \"w\",\n            [\n                \"width\"\n            ]\n        ]\n    ]),\n    minWidth: T(\"minWidth\", [\n        [\n            \"min-w\",\n            [\n                \"minWidth\"\n            ]\n        ]\n    ]),\n    maxWidth: T(\"maxWidth\", [\n        [\n            \"max-w\",\n            [\n                \"maxWidth\"\n            ]\n        ]\n    ]),\n    flex: T(\"flex\"),\n    flexShrink: T(\"flexShrink\", [\n        [\n            \"flex-shrink\",\n            [\n                \"flex-shrink\"\n            ]\n        ],\n        [\n            \"shrink\",\n            [\n                \"flex-shrink\"\n            ]\n        ]\n    ]),\n    flexGrow: T(\"flexGrow\", [\n        [\n            \"flex-grow\",\n            [\n                \"flex-grow\"\n            ]\n        ],\n        [\n            \"grow\",\n            [\n                \"flex-grow\"\n            ]\n        ]\n    ]),\n    flexBasis: T(\"flexBasis\", [\n        [\n            \"basis\",\n            [\n                \"flex-basis\"\n            ]\n        ]\n    ]),\n    tableLayout: ({ addUtilities: t })=>{\n        t({\n            \".table-auto\": {\n                \"table-layout\": \"auto\"\n            },\n            \".table-fixed\": {\n                \"table-layout\": \"fixed\"\n            }\n        });\n    },\n    captionSide: ({ addUtilities: t })=>{\n        t({\n            \".caption-top\": {\n                \"caption-side\": \"top\"\n            },\n            \".caption-bottom\": {\n                \"caption-side\": \"bottom\"\n            }\n        });\n    },\n    borderCollapse: ({ addUtilities: t })=>{\n        t({\n            \".border-collapse\": {\n                \"border-collapse\": \"collapse\"\n            },\n            \".border-separate\": {\n                \"border-collapse\": \"separate\"\n            }\n        });\n    },\n    borderSpacing: ({ addDefaults: t, matchUtilities: e, theme: r })=>{\n        t(\"border-spacing\", {\n            \"--tw-border-spacing-x\": 0,\n            \"--tw-border-spacing-y\": 0\n        }), e({\n            \"border-spacing\": (n)=>({\n                    \"--tw-border-spacing-x\": n,\n                    \"--tw-border-spacing-y\": n,\n                    \"@defaults border-spacing\": {},\n                    \"border-spacing\": \"var(--tw-border-spacing-x) var(--tw-border-spacing-y)\"\n                }),\n            \"border-spacing-x\": (n)=>({\n                    \"--tw-border-spacing-x\": n,\n                    \"@defaults border-spacing\": {},\n                    \"border-spacing\": \"var(--tw-border-spacing-x) var(--tw-border-spacing-y)\"\n                }),\n            \"border-spacing-y\": (n)=>({\n                    \"--tw-border-spacing-y\": n,\n                    \"@defaults border-spacing\": {},\n                    \"border-spacing\": \"var(--tw-border-spacing-x) var(--tw-border-spacing-y)\"\n                })\n        }, {\n            values: r(\"borderSpacing\")\n        });\n    },\n    transformOrigin: T(\"transformOrigin\", [\n        [\n            \"origin\",\n            [\n                \"transformOrigin\"\n            ]\n        ]\n    ]),\n    translate: T(\"translate\", [\n        [\n            [\n                \"translate-x\",\n                [\n                    [\n                        \"@defaults transform\",\n                        {}\n                    ],\n                    \"--tw-translate-x\",\n                    [\n                        \"transform\",\n                        he\n                    ]\n                ]\n            ],\n            [\n                \"translate-y\",\n                [\n                    [\n                        \"@defaults transform\",\n                        {}\n                    ],\n                    \"--tw-translate-y\",\n                    [\n                        \"transform\",\n                        he\n                    ]\n                ]\n            ]\n        ]\n    ], {\n        supportsNegativeValues: !0\n    }),\n    rotate: T(\"rotate\", [\n        [\n            \"rotate\",\n            [\n                [\n                    \"@defaults transform\",\n                    {}\n                ],\n                \"--tw-rotate\",\n                [\n                    \"transform\",\n                    he\n                ]\n            ]\n        ]\n    ], {\n        supportsNegativeValues: !0\n    }),\n    skew: T(\"skew\", [\n        [\n            [\n                \"skew-x\",\n                [\n                    [\n                        \"@defaults transform\",\n                        {}\n                    ],\n                    \"--tw-skew-x\",\n                    [\n                        \"transform\",\n                        he\n                    ]\n                ]\n            ],\n            [\n                \"skew-y\",\n                [\n                    [\n                        \"@defaults transform\",\n                        {}\n                    ],\n                    \"--tw-skew-y\",\n                    [\n                        \"transform\",\n                        he\n                    ]\n                ]\n            ]\n        ]\n    ], {\n        supportsNegativeValues: !0\n    }),\n    scale: T(\"scale\", [\n        [\n            \"scale\",\n            [\n                [\n                    \"@defaults transform\",\n                    {}\n                ],\n                \"--tw-scale-x\",\n                \"--tw-scale-y\",\n                [\n                    \"transform\",\n                    he\n                ]\n            ]\n        ],\n        [\n            [\n                \"scale-x\",\n                [\n                    [\n                        \"@defaults transform\",\n                        {}\n                    ],\n                    \"--tw-scale-x\",\n                    [\n                        \"transform\",\n                        he\n                    ]\n                ]\n            ],\n            [\n                \"scale-y\",\n                [\n                    [\n                        \"@defaults transform\",\n                        {}\n                    ],\n                    \"--tw-scale-y\",\n                    [\n                        \"transform\",\n                        he\n                    ]\n                ]\n            ]\n        ]\n    ], {\n        supportsNegativeValues: !0\n    }),\n    transform: ({ addDefaults: t, addUtilities: e })=>{\n        t(\"transform\", {\n            \"--tw-translate-x\": \"0\",\n            \"--tw-translate-y\": \"0\",\n            \"--tw-rotate\": \"0\",\n            \"--tw-skew-x\": \"0\",\n            \"--tw-skew-y\": \"0\",\n            \"--tw-scale-x\": \"1\",\n            \"--tw-scale-y\": \"1\"\n        }), e({\n            \".transform\": {\n                \"@defaults transform\": {},\n                transform: he\n            },\n            \".transform-cpu\": {\n                transform: he\n            },\n            \".transform-gpu\": {\n                transform: he.replace(\"translate(var(--tw-translate-x), var(--tw-translate-y))\", \"translate3d(var(--tw-translate-x), var(--tw-translate-y), 0)\")\n            },\n            \".transform-none\": {\n                transform: \"none\"\n            }\n        });\n    },\n    animation: ({ matchUtilities: t, theme: e, config: r })=>{\n        var a;\n        let n = (s)=>`${r(\"prefix\")}${re(s)}`, i = Object.fromEntries(Object.entries((a = e(\"keyframes\")) != null ? a : {}).map(([s, o])=>[\n                s,\n                {\n                    [`@keyframes ${n(s)}`]: o\n                }\n            ]));\n        t({\n            animate: (s)=>{\n                let o = $s(s);\n                return [\n                    ...o.flatMap((l)=>i[l.name]),\n                    {\n                        animation: o.map(({ name: l, value: u })=>l === void 0 || i[l] === void 0 ? u : u.replace(l, n(l))).join(\", \")\n                    }\n                ];\n            }\n        }, {\n            values: e(\"animation\")\n        });\n    },\n    cursor: T(\"cursor\"),\n    touchAction: ({ addDefaults: t, addUtilities: e })=>{\n        t(\"touch-action\", {\n            \"--tw-pan-x\": \" \",\n            \"--tw-pan-y\": \" \",\n            \"--tw-pinch-zoom\": \" \"\n        });\n        let r = \"var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom)\";\n        e({\n            \".touch-auto\": {\n                \"touch-action\": \"auto\"\n            },\n            \".touch-none\": {\n                \"touch-action\": \"none\"\n            },\n            \".touch-pan-x\": {\n                \"@defaults touch-action\": {},\n                \"--tw-pan-x\": \"pan-x\",\n                \"touch-action\": r\n            },\n            \".touch-pan-left\": {\n                \"@defaults touch-action\": {},\n                \"--tw-pan-x\": \"pan-left\",\n                \"touch-action\": r\n            },\n            \".touch-pan-right\": {\n                \"@defaults touch-action\": {},\n                \"--tw-pan-x\": \"pan-right\",\n                \"touch-action\": r\n            },\n            \".touch-pan-y\": {\n                \"@defaults touch-action\": {},\n                \"--tw-pan-y\": \"pan-y\",\n                \"touch-action\": r\n            },\n            \".touch-pan-up\": {\n                \"@defaults touch-action\": {},\n                \"--tw-pan-y\": \"pan-up\",\n                \"touch-action\": r\n            },\n            \".touch-pan-down\": {\n                \"@defaults touch-action\": {},\n                \"--tw-pan-y\": \"pan-down\",\n                \"touch-action\": r\n            },\n            \".touch-pinch-zoom\": {\n                \"@defaults touch-action\": {},\n                \"--tw-pinch-zoom\": \"pinch-zoom\",\n                \"touch-action\": r\n            },\n            \".touch-manipulation\": {\n                \"touch-action\": \"manipulation\"\n            }\n        });\n    },\n    userSelect: ({ addUtilities: t })=>{\n        t({\n            \".select-none\": {\n                \"user-select\": \"none\"\n            },\n            \".select-text\": {\n                \"user-select\": \"text\"\n            },\n            \".select-all\": {\n                \"user-select\": \"all\"\n            },\n            \".select-auto\": {\n                \"user-select\": \"auto\"\n            }\n        });\n    },\n    resize: ({ addUtilities: t })=>{\n        t({\n            \".resize-none\": {\n                resize: \"none\"\n            },\n            \".resize-y\": {\n                resize: \"vertical\"\n            },\n            \".resize-x\": {\n                resize: \"horizontal\"\n            },\n            \".resize\": {\n                resize: \"both\"\n            }\n        });\n    },\n    scrollSnapType: ({ addDefaults: t, addUtilities: e })=>{\n        t(\"scroll-snap-type\", {\n            \"--tw-scroll-snap-strictness\": \"proximity\"\n        }), e({\n            \".snap-none\": {\n                \"scroll-snap-type\": \"none\"\n            },\n            \".snap-x\": {\n                \"@defaults scroll-snap-type\": {},\n                \"scroll-snap-type\": \"x var(--tw-scroll-snap-strictness)\"\n            },\n            \".snap-y\": {\n                \"@defaults scroll-snap-type\": {},\n                \"scroll-snap-type\": \"y var(--tw-scroll-snap-strictness)\"\n            },\n            \".snap-both\": {\n                \"@defaults scroll-snap-type\": {},\n                \"scroll-snap-type\": \"both var(--tw-scroll-snap-strictness)\"\n            },\n            \".snap-mandatory\": {\n                \"--tw-scroll-snap-strictness\": \"mandatory\"\n            },\n            \".snap-proximity\": {\n                \"--tw-scroll-snap-strictness\": \"proximity\"\n            }\n        });\n    },\n    scrollSnapAlign: ({ addUtilities: t })=>{\n        t({\n            \".snap-start\": {\n                \"scroll-snap-align\": \"start\"\n            },\n            \".snap-end\": {\n                \"scroll-snap-align\": \"end\"\n            },\n            \".snap-center\": {\n                \"scroll-snap-align\": \"center\"\n            },\n            \".snap-align-none\": {\n                \"scroll-snap-align\": \"none\"\n            }\n        });\n    },\n    scrollSnapStop: ({ addUtilities: t })=>{\n        t({\n            \".snap-normal\": {\n                \"scroll-snap-stop\": \"normal\"\n            },\n            \".snap-always\": {\n                \"scroll-snap-stop\": \"always\"\n            }\n        });\n    },\n    scrollMargin: T(\"scrollMargin\", [\n        [\n            \"scroll-m\",\n            [\n                \"scroll-margin\"\n            ]\n        ],\n        [\n            [\n                \"scroll-mx\",\n                [\n                    \"scroll-margin-left\",\n                    \"scroll-margin-right\"\n                ]\n            ],\n            [\n                \"scroll-my\",\n                [\n                    \"scroll-margin-top\",\n                    \"scroll-margin-bottom\"\n                ]\n            ]\n        ],\n        [\n            [\n                \"scroll-ms\",\n                [\n                    \"scroll-margin-inline-start\"\n                ]\n            ],\n            [\n                \"scroll-me\",\n                [\n                    \"scroll-margin-inline-end\"\n                ]\n            ],\n            [\n                \"scroll-mt\",\n                [\n                    \"scroll-margin-top\"\n                ]\n            ],\n            [\n                \"scroll-mr\",\n                [\n                    \"scroll-margin-right\"\n                ]\n            ],\n            [\n                \"scroll-mb\",\n                [\n                    \"scroll-margin-bottom\"\n                ]\n            ],\n            [\n                \"scroll-ml\",\n                [\n                    \"scroll-margin-left\"\n                ]\n            ]\n        ]\n    ], {\n        supportsNegativeValues: !0\n    }),\n    scrollPadding: T(\"scrollPadding\", [\n        [\n            \"scroll-p\",\n            [\n                \"scroll-padding\"\n            ]\n        ],\n        [\n            [\n                \"scroll-px\",\n                [\n                    \"scroll-padding-left\",\n                    \"scroll-padding-right\"\n                ]\n            ],\n            [\n                \"scroll-py\",\n                [\n                    \"scroll-padding-top\",\n                    \"scroll-padding-bottom\"\n                ]\n            ]\n        ],\n        [\n            [\n                \"scroll-ps\",\n                [\n                    \"scroll-padding-inline-start\"\n                ]\n            ],\n            [\n                \"scroll-pe\",\n                [\n                    \"scroll-padding-inline-end\"\n                ]\n            ],\n            [\n                \"scroll-pt\",\n                [\n                    \"scroll-padding-top\"\n                ]\n            ],\n            [\n                \"scroll-pr\",\n                [\n                    \"scroll-padding-right\"\n                ]\n            ],\n            [\n                \"scroll-pb\",\n                [\n                    \"scroll-padding-bottom\"\n                ]\n            ],\n            [\n                \"scroll-pl\",\n                [\n                    \"scroll-padding-left\"\n                ]\n            ]\n        ]\n    ]),\n    listStylePosition: ({ addUtilities: t })=>{\n        t({\n            \".list-inside\": {\n                \"list-style-position\": \"inside\"\n            },\n            \".list-outside\": {\n                \"list-style-position\": \"outside\"\n            }\n        });\n    },\n    listStyleType: T(\"listStyleType\", [\n        [\n            \"list\",\n            [\n                \"listStyleType\"\n            ]\n        ]\n    ]),\n    listStyleImage: T(\"listStyleImage\", [\n        [\n            \"list-image\",\n            [\n                \"listStyleImage\"\n            ]\n        ]\n    ]),\n    appearance: ({ addUtilities: t })=>{\n        t({\n            \".appearance-none\": {\n                appearance: \"none\"\n            }\n        });\n    },\n    columns: T(\"columns\", [\n        [\n            \"columns\",\n            [\n                \"columns\"\n            ]\n        ]\n    ]),\n    breakBefore: ({ addUtilities: t })=>{\n        t({\n            \".break-before-auto\": {\n                \"break-before\": \"auto\"\n            },\n            \".break-before-avoid\": {\n                \"break-before\": \"avoid\"\n            },\n            \".break-before-all\": {\n                \"break-before\": \"all\"\n            },\n            \".break-before-avoid-page\": {\n                \"break-before\": \"avoid-page\"\n            },\n            \".break-before-page\": {\n                \"break-before\": \"page\"\n            },\n            \".break-before-left\": {\n                \"break-before\": \"left\"\n            },\n            \".break-before-right\": {\n                \"break-before\": \"right\"\n            },\n            \".break-before-column\": {\n                \"break-before\": \"column\"\n            }\n        });\n    },\n    breakInside: ({ addUtilities: t })=>{\n        t({\n            \".break-inside-auto\": {\n                \"break-inside\": \"auto\"\n            },\n            \".break-inside-avoid\": {\n                \"break-inside\": \"avoid\"\n            },\n            \".break-inside-avoid-page\": {\n                \"break-inside\": \"avoid-page\"\n            },\n            \".break-inside-avoid-column\": {\n                \"break-inside\": \"avoid-column\"\n            }\n        });\n    },\n    breakAfter: ({ addUtilities: t })=>{\n        t({\n            \".break-after-auto\": {\n                \"break-after\": \"auto\"\n            },\n            \".break-after-avoid\": {\n                \"break-after\": \"avoid\"\n            },\n            \".break-after-all\": {\n                \"break-after\": \"all\"\n            },\n            \".break-after-avoid-page\": {\n                \"break-after\": \"avoid-page\"\n            },\n            \".break-after-page\": {\n                \"break-after\": \"page\"\n            },\n            \".break-after-left\": {\n                \"break-after\": \"left\"\n            },\n            \".break-after-right\": {\n                \"break-after\": \"right\"\n            },\n            \".break-after-column\": {\n                \"break-after\": \"column\"\n            }\n        });\n    },\n    gridAutoColumns: T(\"gridAutoColumns\", [\n        [\n            \"auto-cols\",\n            [\n                \"gridAutoColumns\"\n            ]\n        ]\n    ]),\n    gridAutoFlow: ({ addUtilities: t })=>{\n        t({\n            \".grid-flow-row\": {\n                gridAutoFlow: \"row\"\n            },\n            \".grid-flow-col\": {\n                gridAutoFlow: \"column\"\n            },\n            \".grid-flow-dense\": {\n                gridAutoFlow: \"dense\"\n            },\n            \".grid-flow-row-dense\": {\n                gridAutoFlow: \"row dense\"\n            },\n            \".grid-flow-col-dense\": {\n                gridAutoFlow: \"column dense\"\n            }\n        });\n    },\n    gridAutoRows: T(\"gridAutoRows\", [\n        [\n            \"auto-rows\",\n            [\n                \"gridAutoRows\"\n            ]\n        ]\n    ]),\n    gridTemplateColumns: T(\"gridTemplateColumns\", [\n        [\n            \"grid-cols\",\n            [\n                \"gridTemplateColumns\"\n            ]\n        ]\n    ]),\n    gridTemplateRows: T(\"gridTemplateRows\", [\n        [\n            \"grid-rows\",\n            [\n                \"gridTemplateRows\"\n            ]\n        ]\n    ]),\n    flexDirection: ({ addUtilities: t })=>{\n        t({\n            \".flex-row\": {\n                \"flex-direction\": \"row\"\n            },\n            \".flex-row-reverse\": {\n                \"flex-direction\": \"row-reverse\"\n            },\n            \".flex-col\": {\n                \"flex-direction\": \"column\"\n            },\n            \".flex-col-reverse\": {\n                \"flex-direction\": \"column-reverse\"\n            }\n        });\n    },\n    flexWrap: ({ addUtilities: t })=>{\n        t({\n            \".flex-wrap\": {\n                \"flex-wrap\": \"wrap\"\n            },\n            \".flex-wrap-reverse\": {\n                \"flex-wrap\": \"wrap-reverse\"\n            },\n            \".flex-nowrap\": {\n                \"flex-wrap\": \"nowrap\"\n            }\n        });\n    },\n    placeContent: ({ addUtilities: t })=>{\n        t({\n            \".place-content-center\": {\n                \"place-content\": \"center\"\n            },\n            \".place-content-start\": {\n                \"place-content\": \"start\"\n            },\n            \".place-content-end\": {\n                \"place-content\": \"end\"\n            },\n            \".place-content-between\": {\n                \"place-content\": \"space-between\"\n            },\n            \".place-content-around\": {\n                \"place-content\": \"space-around\"\n            },\n            \".place-content-evenly\": {\n                \"place-content\": \"space-evenly\"\n            },\n            \".place-content-baseline\": {\n                \"place-content\": \"baseline\"\n            },\n            \".place-content-stretch\": {\n                \"place-content\": \"stretch\"\n            }\n        });\n    },\n    placeItems: ({ addUtilities: t })=>{\n        t({\n            \".place-items-start\": {\n                \"place-items\": \"start\"\n            },\n            \".place-items-end\": {\n                \"place-items\": \"end\"\n            },\n            \".place-items-center\": {\n                \"place-items\": \"center\"\n            },\n            \".place-items-baseline\": {\n                \"place-items\": \"baseline\"\n            },\n            \".place-items-stretch\": {\n                \"place-items\": \"stretch\"\n            }\n        });\n    },\n    alignContent: ({ addUtilities: t })=>{\n        t({\n            \".content-normal\": {\n                \"align-content\": \"normal\"\n            },\n            \".content-center\": {\n                \"align-content\": \"center\"\n            },\n            \".content-start\": {\n                \"align-content\": \"flex-start\"\n            },\n            \".content-end\": {\n                \"align-content\": \"flex-end\"\n            },\n            \".content-between\": {\n                \"align-content\": \"space-between\"\n            },\n            \".content-around\": {\n                \"align-content\": \"space-around\"\n            },\n            \".content-evenly\": {\n                \"align-content\": \"space-evenly\"\n            },\n            \".content-baseline\": {\n                \"align-content\": \"baseline\"\n            },\n            \".content-stretch\": {\n                \"align-content\": \"stretch\"\n            }\n        });\n    },\n    alignItems: ({ addUtilities: t })=>{\n        t({\n            \".items-start\": {\n                \"align-items\": \"flex-start\"\n            },\n            \".items-end\": {\n                \"align-items\": \"flex-end\"\n            },\n            \".items-center\": {\n                \"align-items\": \"center\"\n            },\n            \".items-baseline\": {\n                \"align-items\": \"baseline\"\n            },\n            \".items-stretch\": {\n                \"align-items\": \"stretch\"\n            }\n        });\n    },\n    justifyContent: ({ addUtilities: t })=>{\n        t({\n            \".justify-normal\": {\n                \"justify-content\": \"normal\"\n            },\n            \".justify-start\": {\n                \"justify-content\": \"flex-start\"\n            },\n            \".justify-end\": {\n                \"justify-content\": \"flex-end\"\n            },\n            \".justify-center\": {\n                \"justify-content\": \"center\"\n            },\n            \".justify-between\": {\n                \"justify-content\": \"space-between\"\n            },\n            \".justify-around\": {\n                \"justify-content\": \"space-around\"\n            },\n            \".justify-evenly\": {\n                \"justify-content\": \"space-evenly\"\n            },\n            \".justify-stretch\": {\n                \"justify-content\": \"stretch\"\n            }\n        });\n    },\n    justifyItems: ({ addUtilities: t })=>{\n        t({\n            \".justify-items-start\": {\n                \"justify-items\": \"start\"\n            },\n            \".justify-items-end\": {\n                \"justify-items\": \"end\"\n            },\n            \".justify-items-center\": {\n                \"justify-items\": \"center\"\n            },\n            \".justify-items-stretch\": {\n                \"justify-items\": \"stretch\"\n            }\n        });\n    },\n    gap: T(\"gap\", [\n        [\n            \"gap\",\n            [\n                \"gap\"\n            ]\n        ],\n        [\n            [\n                \"gap-x\",\n                [\n                    \"columnGap\"\n                ]\n            ],\n            [\n                \"gap-y\",\n                [\n                    \"rowGap\"\n                ]\n            ]\n        ]\n    ]),\n    space: ({ matchUtilities: t, addUtilities: e, theme: r })=>{\n        t({\n            \"space-x\": (n)=>(n = n === \"0\" ? \"0px\" : n, {\n                    \"& > :not([hidden]) ~ :not([hidden])\": {\n                        \"--tw-space-x-reverse\": \"0\",\n                        \"margin-right\": `calc(${n} * var(--tw-space-x-reverse))`,\n                        \"margin-left\": `calc(${n} * calc(1 - var(--tw-space-x-reverse)))`\n                    }\n                }),\n            \"space-y\": (n)=>(n = n === \"0\" ? \"0px\" : n, {\n                    \"& > :not([hidden]) ~ :not([hidden])\": {\n                        \"--tw-space-y-reverse\": \"0\",\n                        \"margin-top\": `calc(${n} * calc(1 - var(--tw-space-y-reverse)))`,\n                        \"margin-bottom\": `calc(${n} * var(--tw-space-y-reverse))`\n                    }\n                })\n        }, {\n            values: r(\"space\"),\n            supportsNegativeValues: !0\n        }), e({\n            \".space-y-reverse > :not([hidden]) ~ :not([hidden])\": {\n                \"--tw-space-y-reverse\": \"1\"\n            },\n            \".space-x-reverse > :not([hidden]) ~ :not([hidden])\": {\n                \"--tw-space-x-reverse\": \"1\"\n            }\n        });\n    },\n    divideWidth: ({ matchUtilities: t, addUtilities: e, theme: r })=>{\n        t({\n            \"divide-x\": (n)=>(n = n === \"0\" ? \"0px\" : n, {\n                    \"& > :not([hidden]) ~ :not([hidden])\": {\n                        \"@defaults border-width\": {},\n                        \"--tw-divide-x-reverse\": \"0\",\n                        \"border-right-width\": `calc(${n} * var(--tw-divide-x-reverse))`,\n                        \"border-left-width\": `calc(${n} * calc(1 - var(--tw-divide-x-reverse)))`\n                    }\n                }),\n            \"divide-y\": (n)=>(n = n === \"0\" ? \"0px\" : n, {\n                    \"& > :not([hidden]) ~ :not([hidden])\": {\n                        \"@defaults border-width\": {},\n                        \"--tw-divide-y-reverse\": \"0\",\n                        \"border-top-width\": `calc(${n} * calc(1 - var(--tw-divide-y-reverse)))`,\n                        \"border-bottom-width\": `calc(${n} * var(--tw-divide-y-reverse))`\n                    }\n                })\n        }, {\n            values: r(\"divideWidth\"),\n            type: [\n                \"line-width\",\n                \"length\",\n                \"any\"\n            ]\n        }), e({\n            \".divide-y-reverse > :not([hidden]) ~ :not([hidden])\": {\n                \"@defaults border-width\": {},\n                \"--tw-divide-y-reverse\": \"1\"\n            },\n            \".divide-x-reverse > :not([hidden]) ~ :not([hidden])\": {\n                \"@defaults border-width\": {},\n                \"--tw-divide-x-reverse\": \"1\"\n            }\n        });\n    },\n    divideStyle: ({ addUtilities: t })=>{\n        t({\n            \".divide-solid > :not([hidden]) ~ :not([hidden])\": {\n                \"border-style\": \"solid\"\n            },\n            \".divide-dashed > :not([hidden]) ~ :not([hidden])\": {\n                \"border-style\": \"dashed\"\n            },\n            \".divide-dotted > :not([hidden]) ~ :not([hidden])\": {\n                \"border-style\": \"dotted\"\n            },\n            \".divide-double > :not([hidden]) ~ :not([hidden])\": {\n                \"border-style\": \"double\"\n            },\n            \".divide-none > :not([hidden]) ~ :not([hidden])\": {\n                \"border-style\": \"none\"\n            }\n        });\n    },\n    divideColor: ({ matchUtilities: t, theme: e, corePlugins: r })=>{\n        t({\n            divide: (n)=>r(\"divideOpacity\") ? {\n                    [\"& > :not([hidden]) ~ :not([hidden])\"]: Z({\n                        color: n,\n                        property: \"border-color\",\n                        variable: \"--tw-divide-opacity\"\n                    })\n                } : {\n                    [\"& > :not([hidden]) ~ :not([hidden])\"]: {\n                        \"border-color\": M(n)\n                    }\n                }\n        }, {\n            values: (({ DEFAULT: n, ...i })=>i)(Q(e(\"divideColor\"))),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    divideOpacity: ({ matchUtilities: t, theme: e })=>{\n        t({\n            \"divide-opacity\": (r)=>({\n                    [\"& > :not([hidden]) ~ :not([hidden])\"]: {\n                        \"--tw-divide-opacity\": r\n                    }\n                })\n        }, {\n            values: e(\"divideOpacity\")\n        });\n    },\n    placeSelf: ({ addUtilities: t })=>{\n        t({\n            \".place-self-auto\": {\n                \"place-self\": \"auto\"\n            },\n            \".place-self-start\": {\n                \"place-self\": \"start\"\n            },\n            \".place-self-end\": {\n                \"place-self\": \"end\"\n            },\n            \".place-self-center\": {\n                \"place-self\": \"center\"\n            },\n            \".place-self-stretch\": {\n                \"place-self\": \"stretch\"\n            }\n        });\n    },\n    alignSelf: ({ addUtilities: t })=>{\n        t({\n            \".self-auto\": {\n                \"align-self\": \"auto\"\n            },\n            \".self-start\": {\n                \"align-self\": \"flex-start\"\n            },\n            \".self-end\": {\n                \"align-self\": \"flex-end\"\n            },\n            \".self-center\": {\n                \"align-self\": \"center\"\n            },\n            \".self-stretch\": {\n                \"align-self\": \"stretch\"\n            },\n            \".self-baseline\": {\n                \"align-self\": \"baseline\"\n            }\n        });\n    },\n    justifySelf: ({ addUtilities: t })=>{\n        t({\n            \".justify-self-auto\": {\n                \"justify-self\": \"auto\"\n            },\n            \".justify-self-start\": {\n                \"justify-self\": \"start\"\n            },\n            \".justify-self-end\": {\n                \"justify-self\": \"end\"\n            },\n            \".justify-self-center\": {\n                \"justify-self\": \"center\"\n            },\n            \".justify-self-stretch\": {\n                \"justify-self\": \"stretch\"\n            }\n        });\n    },\n    overflow: ({ addUtilities: t })=>{\n        t({\n            \".overflow-auto\": {\n                overflow: \"auto\"\n            },\n            \".overflow-hidden\": {\n                overflow: \"hidden\"\n            },\n            \".overflow-clip\": {\n                overflow: \"clip\"\n            },\n            \".overflow-visible\": {\n                overflow: \"visible\"\n            },\n            \".overflow-scroll\": {\n                overflow: \"scroll\"\n            },\n            \".overflow-x-auto\": {\n                \"overflow-x\": \"auto\"\n            },\n            \".overflow-y-auto\": {\n                \"overflow-y\": \"auto\"\n            },\n            \".overflow-x-hidden\": {\n                \"overflow-x\": \"hidden\"\n            },\n            \".overflow-y-hidden\": {\n                \"overflow-y\": \"hidden\"\n            },\n            \".overflow-x-clip\": {\n                \"overflow-x\": \"clip\"\n            },\n            \".overflow-y-clip\": {\n                \"overflow-y\": \"clip\"\n            },\n            \".overflow-x-visible\": {\n                \"overflow-x\": \"visible\"\n            },\n            \".overflow-y-visible\": {\n                \"overflow-y\": \"visible\"\n            },\n            \".overflow-x-scroll\": {\n                \"overflow-x\": \"scroll\"\n            },\n            \".overflow-y-scroll\": {\n                \"overflow-y\": \"scroll\"\n            }\n        });\n    },\n    overscrollBehavior: ({ addUtilities: t })=>{\n        t({\n            \".overscroll-auto\": {\n                \"overscroll-behavior\": \"auto\"\n            },\n            \".overscroll-contain\": {\n                \"overscroll-behavior\": \"contain\"\n            },\n            \".overscroll-none\": {\n                \"overscroll-behavior\": \"none\"\n            },\n            \".overscroll-y-auto\": {\n                \"overscroll-behavior-y\": \"auto\"\n            },\n            \".overscroll-y-contain\": {\n                \"overscroll-behavior-y\": \"contain\"\n            },\n            \".overscroll-y-none\": {\n                \"overscroll-behavior-y\": \"none\"\n            },\n            \".overscroll-x-auto\": {\n                \"overscroll-behavior-x\": \"auto\"\n            },\n            \".overscroll-x-contain\": {\n                \"overscroll-behavior-x\": \"contain\"\n            },\n            \".overscroll-x-none\": {\n                \"overscroll-behavior-x\": \"none\"\n            }\n        });\n    },\n    scrollBehavior: ({ addUtilities: t })=>{\n        t({\n            \".scroll-auto\": {\n                \"scroll-behavior\": \"auto\"\n            },\n            \".scroll-smooth\": {\n                \"scroll-behavior\": \"smooth\"\n            }\n        });\n    },\n    textOverflow: ({ addUtilities: t })=>{\n        t({\n            \".truncate\": {\n                overflow: \"hidden\",\n                \"text-overflow\": \"ellipsis\",\n                \"white-space\": \"nowrap\"\n            },\n            \".overflow-ellipsis\": {\n                \"text-overflow\": \"ellipsis\"\n            },\n            \".text-ellipsis\": {\n                \"text-overflow\": \"ellipsis\"\n            },\n            \".text-clip\": {\n                \"text-overflow\": \"clip\"\n            }\n        });\n    },\n    hyphens: ({ addUtilities: t })=>{\n        t({\n            \".hyphens-none\": {\n                hyphens: \"none\"\n            },\n            \".hyphens-manual\": {\n                hyphens: \"manual\"\n            },\n            \".hyphens-auto\": {\n                hyphens: \"auto\"\n            }\n        });\n    },\n    whitespace: ({ addUtilities: t })=>{\n        t({\n            \".whitespace-normal\": {\n                \"white-space\": \"normal\"\n            },\n            \".whitespace-nowrap\": {\n                \"white-space\": \"nowrap\"\n            },\n            \".whitespace-pre\": {\n                \"white-space\": \"pre\"\n            },\n            \".whitespace-pre-line\": {\n                \"white-space\": \"pre-line\"\n            },\n            \".whitespace-pre-wrap\": {\n                \"white-space\": \"pre-wrap\"\n            },\n            \".whitespace-break-spaces\": {\n                \"white-space\": \"break-spaces\"\n            }\n        });\n    },\n    wordBreak: ({ addUtilities: t })=>{\n        t({\n            \".break-normal\": {\n                \"overflow-wrap\": \"normal\",\n                \"word-break\": \"normal\"\n            },\n            \".break-words\": {\n                \"overflow-wrap\": \"break-word\"\n            },\n            \".break-all\": {\n                \"word-break\": \"break-all\"\n            },\n            \".break-keep\": {\n                \"word-break\": \"keep-all\"\n            }\n        });\n    },\n    borderRadius: T(\"borderRadius\", [\n        [\n            \"rounded\",\n            [\n                \"border-radius\"\n            ]\n        ],\n        [\n            [\n                \"rounded-s\",\n                [\n                    \"border-start-start-radius\",\n                    \"border-end-start-radius\"\n                ]\n            ],\n            [\n                \"rounded-e\",\n                [\n                    \"border-start-end-radius\",\n                    \"border-end-end-radius\"\n                ]\n            ],\n            [\n                \"rounded-t\",\n                [\n                    \"border-top-left-radius\",\n                    \"border-top-right-radius\"\n                ]\n            ],\n            [\n                \"rounded-r\",\n                [\n                    \"border-top-right-radius\",\n                    \"border-bottom-right-radius\"\n                ]\n            ],\n            [\n                \"rounded-b\",\n                [\n                    \"border-bottom-right-radius\",\n                    \"border-bottom-left-radius\"\n                ]\n            ],\n            [\n                \"rounded-l\",\n                [\n                    \"border-top-left-radius\",\n                    \"border-bottom-left-radius\"\n                ]\n            ]\n        ],\n        [\n            [\n                \"rounded-ss\",\n                [\n                    \"border-start-start-radius\"\n                ]\n            ],\n            [\n                \"rounded-se\",\n                [\n                    \"border-start-end-radius\"\n                ]\n            ],\n            [\n                \"rounded-ee\",\n                [\n                    \"border-end-end-radius\"\n                ]\n            ],\n            [\n                \"rounded-es\",\n                [\n                    \"border-end-start-radius\"\n                ]\n            ],\n            [\n                \"rounded-tl\",\n                [\n                    \"border-top-left-radius\"\n                ]\n            ],\n            [\n                \"rounded-tr\",\n                [\n                    \"border-top-right-radius\"\n                ]\n            ],\n            [\n                \"rounded-br\",\n                [\n                    \"border-bottom-right-radius\"\n                ]\n            ],\n            [\n                \"rounded-bl\",\n                [\n                    \"border-bottom-left-radius\"\n                ]\n            ]\n        ]\n    ]),\n    borderWidth: T(\"borderWidth\", [\n        [\n            \"border\",\n            [\n                [\n                    \"@defaults border-width\",\n                    {}\n                ],\n                \"border-width\"\n            ]\n        ],\n        [\n            [\n                \"border-x\",\n                [\n                    [\n                        \"@defaults border-width\",\n                        {}\n                    ],\n                    \"border-left-width\",\n                    \"border-right-width\"\n                ]\n            ],\n            [\n                \"border-y\",\n                [\n                    [\n                        \"@defaults border-width\",\n                        {}\n                    ],\n                    \"border-top-width\",\n                    \"border-bottom-width\"\n                ]\n            ]\n        ],\n        [\n            [\n                \"border-s\",\n                [\n                    [\n                        \"@defaults border-width\",\n                        {}\n                    ],\n                    \"border-inline-start-width\"\n                ]\n            ],\n            [\n                \"border-e\",\n                [\n                    [\n                        \"@defaults border-width\",\n                        {}\n                    ],\n                    \"border-inline-end-width\"\n                ]\n            ],\n            [\n                \"border-t\",\n                [\n                    [\n                        \"@defaults border-width\",\n                        {}\n                    ],\n                    \"border-top-width\"\n                ]\n            ],\n            [\n                \"border-r\",\n                [\n                    [\n                        \"@defaults border-width\",\n                        {}\n                    ],\n                    \"border-right-width\"\n                ]\n            ],\n            [\n                \"border-b\",\n                [\n                    [\n                        \"@defaults border-width\",\n                        {}\n                    ],\n                    \"border-bottom-width\"\n                ]\n            ],\n            [\n                \"border-l\",\n                [\n                    [\n                        \"@defaults border-width\",\n                        {}\n                    ],\n                    \"border-left-width\"\n                ]\n            ]\n        ]\n    ], {\n        type: [\n            \"line-width\",\n            \"length\"\n        ]\n    }),\n    borderStyle: ({ addUtilities: t })=>{\n        t({\n            \".border-solid\": {\n                \"border-style\": \"solid\"\n            },\n            \".border-dashed\": {\n                \"border-style\": \"dashed\"\n            },\n            \".border-dotted\": {\n                \"border-style\": \"dotted\"\n            },\n            \".border-double\": {\n                \"border-style\": \"double\"\n            },\n            \".border-hidden\": {\n                \"border-style\": \"hidden\"\n            },\n            \".border-none\": {\n                \"border-style\": \"none\"\n            }\n        });\n    },\n    borderColor: ({ matchUtilities: t, theme: e, corePlugins: r })=>{\n        t({\n            border: (n)=>r(\"borderOpacity\") ? Z({\n                    color: n,\n                    property: \"border-color\",\n                    variable: \"--tw-border-opacity\"\n                }) : {\n                    \"border-color\": M(n)\n                }\n        }, {\n            values: (({ DEFAULT: n, ...i })=>i)(Q(e(\"borderColor\"))),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        }), t({\n            \"border-x\": (n)=>r(\"borderOpacity\") ? Z({\n                    color: n,\n                    property: [\n                        \"border-left-color\",\n                        \"border-right-color\"\n                    ],\n                    variable: \"--tw-border-opacity\"\n                }) : {\n                    \"border-left-color\": M(n),\n                    \"border-right-color\": M(n)\n                },\n            \"border-y\": (n)=>r(\"borderOpacity\") ? Z({\n                    color: n,\n                    property: [\n                        \"border-top-color\",\n                        \"border-bottom-color\"\n                    ],\n                    variable: \"--tw-border-opacity\"\n                }) : {\n                    \"border-top-color\": M(n),\n                    \"border-bottom-color\": M(n)\n                }\n        }, {\n            values: (({ DEFAULT: n, ...i })=>i)(Q(e(\"borderColor\"))),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        }), t({\n            \"border-s\": (n)=>r(\"borderOpacity\") ? Z({\n                    color: n,\n                    property: \"border-inline-start-color\",\n                    variable: \"--tw-border-opacity\"\n                }) : {\n                    \"border-inline-start-color\": M(n)\n                },\n            \"border-e\": (n)=>r(\"borderOpacity\") ? Z({\n                    color: n,\n                    property: \"border-inline-end-color\",\n                    variable: \"--tw-border-opacity\"\n                }) : {\n                    \"border-inline-end-color\": M(n)\n                },\n            \"border-t\": (n)=>r(\"borderOpacity\") ? Z({\n                    color: n,\n                    property: \"border-top-color\",\n                    variable: \"--tw-border-opacity\"\n                }) : {\n                    \"border-top-color\": M(n)\n                },\n            \"border-r\": (n)=>r(\"borderOpacity\") ? Z({\n                    color: n,\n                    property: \"border-right-color\",\n                    variable: \"--tw-border-opacity\"\n                }) : {\n                    \"border-right-color\": M(n)\n                },\n            \"border-b\": (n)=>r(\"borderOpacity\") ? Z({\n                    color: n,\n                    property: \"border-bottom-color\",\n                    variable: \"--tw-border-opacity\"\n                }) : {\n                    \"border-bottom-color\": M(n)\n                },\n            \"border-l\": (n)=>r(\"borderOpacity\") ? Z({\n                    color: n,\n                    property: \"border-left-color\",\n                    variable: \"--tw-border-opacity\"\n                }) : {\n                    \"border-left-color\": M(n)\n                }\n        }, {\n            values: (({ DEFAULT: n, ...i })=>i)(Q(e(\"borderColor\"))),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    borderOpacity: T(\"borderOpacity\", [\n        [\n            \"border-opacity\",\n            [\n                \"--tw-border-opacity\"\n            ]\n        ]\n    ]),\n    backgroundColor: ({ matchUtilities: t, theme: e, corePlugins: r })=>{\n        t({\n            bg: (n)=>r(\"backgroundOpacity\") ? Z({\n                    color: n,\n                    property: \"background-color\",\n                    variable: \"--tw-bg-opacity\"\n                }) : {\n                    \"background-color\": M(n)\n                }\n        }, {\n            values: Q(e(\"backgroundColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    backgroundOpacity: T(\"backgroundOpacity\", [\n        [\n            \"bg-opacity\",\n            [\n                \"--tw-bg-opacity\"\n            ]\n        ]\n    ]),\n    backgroundImage: T(\"backgroundImage\", [\n        [\n            \"bg\",\n            [\n                \"background-image\"\n            ]\n        ]\n    ], {\n        type: [\n            \"lookup\",\n            \"image\",\n            \"url\"\n        ]\n    }),\n    gradientColorStops: (()=>{\n        function t(e) {\n            return we(e, 0, \"rgb(255 255 255 / 0)\");\n        }\n        return function({ matchUtilities: e, theme: r, addDefaults: n }) {\n            n(\"gradient-color-stops\", {\n                \"--tw-gradient-from-position\": \" \",\n                \"--tw-gradient-via-position\": \" \",\n                \"--tw-gradient-to-position\": \" \"\n            });\n            let i = {\n                values: Q(r(\"gradientColorStops\")),\n                type: [\n                    \"color\",\n                    \"any\"\n                ]\n            }, a = {\n                values: r(\"gradientColorStopPositions\"),\n                type: [\n                    \"length\",\n                    \"percentage\"\n                ]\n            };\n            e({\n                from: (s)=>{\n                    let o = t(s);\n                    return {\n                        \"@defaults gradient-color-stops\": {},\n                        \"--tw-gradient-from\": `${M(s)} var(--tw-gradient-from-position)`,\n                        \"--tw-gradient-to\": `${o} var(--tw-gradient-to-position)`,\n                        \"--tw-gradient-stops\": \"var(--tw-gradient-from), var(--tw-gradient-to)\"\n                    };\n                }\n            }, i), e({\n                from: (s)=>({\n                        \"--tw-gradient-from-position\": s\n                    })\n            }, a), e({\n                via: (s)=>{\n                    let o = t(s);\n                    return {\n                        \"@defaults gradient-color-stops\": {},\n                        \"--tw-gradient-to\": `${o}  var(--tw-gradient-to-position)`,\n                        \"--tw-gradient-stops\": `var(--tw-gradient-from), ${M(s)} var(--tw-gradient-via-position), var(--tw-gradient-to)`\n                    };\n                }\n            }, i), e({\n                via: (s)=>({\n                        \"--tw-gradient-via-position\": s\n                    })\n            }, a), e({\n                to: (s)=>({\n                        \"@defaults gradient-color-stops\": {},\n                        \"--tw-gradient-to\": `${M(s)} var(--tw-gradient-to-position)`\n                    })\n            }, i), e({\n                to: (s)=>({\n                        \"--tw-gradient-to-position\": s\n                    })\n            }, a);\n        };\n    })(),\n    boxDecorationBreak: ({ addUtilities: t })=>{\n        t({\n            \".decoration-slice\": {\n                \"box-decoration-break\": \"slice\"\n            },\n            \".decoration-clone\": {\n                \"box-decoration-break\": \"clone\"\n            },\n            \".box-decoration-slice\": {\n                \"box-decoration-break\": \"slice\"\n            },\n            \".box-decoration-clone\": {\n                \"box-decoration-break\": \"clone\"\n            }\n        });\n    },\n    backgroundSize: T(\"backgroundSize\", [\n        [\n            \"bg\",\n            [\n                \"background-size\"\n            ]\n        ]\n    ], {\n        type: [\n            \"lookup\",\n            \"length\",\n            \"percentage\",\n            \"size\"\n        ]\n    }),\n    backgroundAttachment: ({ addUtilities: t })=>{\n        t({\n            \".bg-fixed\": {\n                \"background-attachment\": \"fixed\"\n            },\n            \".bg-local\": {\n                \"background-attachment\": \"local\"\n            },\n            \".bg-scroll\": {\n                \"background-attachment\": \"scroll\"\n            }\n        });\n    },\n    backgroundClip: ({ addUtilities: t })=>{\n        t({\n            \".bg-clip-border\": {\n                \"background-clip\": \"border-box\"\n            },\n            \".bg-clip-padding\": {\n                \"background-clip\": \"padding-box\"\n            },\n            \".bg-clip-content\": {\n                \"background-clip\": \"content-box\"\n            },\n            \".bg-clip-text\": {\n                \"background-clip\": \"text\"\n            }\n        });\n    },\n    backgroundPosition: T(\"backgroundPosition\", [\n        [\n            \"bg\",\n            [\n                \"background-position\"\n            ]\n        ]\n    ], {\n        type: [\n            \"lookup\",\n            [\n                \"position\",\n                {\n                    preferOnConflict: !0\n                }\n            ]\n        ]\n    }),\n    backgroundRepeat: ({ addUtilities: t })=>{\n        t({\n            \".bg-repeat\": {\n                \"background-repeat\": \"repeat\"\n            },\n            \".bg-no-repeat\": {\n                \"background-repeat\": \"no-repeat\"\n            },\n            \".bg-repeat-x\": {\n                \"background-repeat\": \"repeat-x\"\n            },\n            \".bg-repeat-y\": {\n                \"background-repeat\": \"repeat-y\"\n            },\n            \".bg-repeat-round\": {\n                \"background-repeat\": \"round\"\n            },\n            \".bg-repeat-space\": {\n                \"background-repeat\": \"space\"\n            }\n        });\n    },\n    backgroundOrigin: ({ addUtilities: t })=>{\n        t({\n            \".bg-origin-border\": {\n                \"background-origin\": \"border-box\"\n            },\n            \".bg-origin-padding\": {\n                \"background-origin\": \"padding-box\"\n            },\n            \".bg-origin-content\": {\n                \"background-origin\": \"content-box\"\n            }\n        });\n    },\n    fill: ({ matchUtilities: t, theme: e })=>{\n        t({\n            fill: (r)=>({\n                    fill: M(r)\n                })\n        }, {\n            values: Q(e(\"fill\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    stroke: ({ matchUtilities: t, theme: e })=>{\n        t({\n            stroke: (r)=>({\n                    stroke: M(r)\n                })\n        }, {\n            values: Q(e(\"stroke\")),\n            type: [\n                \"color\",\n                \"url\",\n                \"any\"\n            ]\n        });\n    },\n    strokeWidth: T(\"strokeWidth\", [\n        [\n            \"stroke\",\n            [\n                \"stroke-width\"\n            ]\n        ]\n    ], {\n        type: [\n            \"length\",\n            \"number\",\n            \"percentage\"\n        ]\n    }),\n    objectFit: ({ addUtilities: t })=>{\n        t({\n            \".object-contain\": {\n                \"object-fit\": \"contain\"\n            },\n            \".object-cover\": {\n                \"object-fit\": \"cover\"\n            },\n            \".object-fill\": {\n                \"object-fit\": \"fill\"\n            },\n            \".object-none\": {\n                \"object-fit\": \"none\"\n            },\n            \".object-scale-down\": {\n                \"object-fit\": \"scale-down\"\n            }\n        });\n    },\n    objectPosition: T(\"objectPosition\", [\n        [\n            \"object\",\n            [\n                \"object-position\"\n            ]\n        ]\n    ]),\n    padding: T(\"padding\", [\n        [\n            \"p\",\n            [\n                \"padding\"\n            ]\n        ],\n        [\n            [\n                \"px\",\n                [\n                    \"padding-left\",\n                    \"padding-right\"\n                ]\n            ],\n            [\n                \"py\",\n                [\n                    \"padding-top\",\n                    \"padding-bottom\"\n                ]\n            ]\n        ],\n        [\n            [\n                \"ps\",\n                [\n                    \"padding-inline-start\"\n                ]\n            ],\n            [\n                \"pe\",\n                [\n                    \"padding-inline-end\"\n                ]\n            ],\n            [\n                \"pt\",\n                [\n                    \"padding-top\"\n                ]\n            ],\n            [\n                \"pr\",\n                [\n                    \"padding-right\"\n                ]\n            ],\n            [\n                \"pb\",\n                [\n                    \"padding-bottom\"\n                ]\n            ],\n            [\n                \"pl\",\n                [\n                    \"padding-left\"\n                ]\n            ]\n        ]\n    ]),\n    textAlign: ({ addUtilities: t })=>{\n        t({\n            \".text-left\": {\n                \"text-align\": \"left\"\n            },\n            \".text-center\": {\n                \"text-align\": \"center\"\n            },\n            \".text-right\": {\n                \"text-align\": \"right\"\n            },\n            \".text-justify\": {\n                \"text-align\": \"justify\"\n            },\n            \".text-start\": {\n                \"text-align\": \"start\"\n            },\n            \".text-end\": {\n                \"text-align\": \"end\"\n            }\n        });\n    },\n    textIndent: T(\"textIndent\", [\n        [\n            \"indent\",\n            [\n                \"text-indent\"\n            ]\n        ]\n    ], {\n        supportsNegativeValues: !0\n    }),\n    verticalAlign: ({ addUtilities: t, matchUtilities: e })=>{\n        t({\n            \".align-baseline\": {\n                \"vertical-align\": \"baseline\"\n            },\n            \".align-top\": {\n                \"vertical-align\": \"top\"\n            },\n            \".align-middle\": {\n                \"vertical-align\": \"middle\"\n            },\n            \".align-bottom\": {\n                \"vertical-align\": \"bottom\"\n            },\n            \".align-text-top\": {\n                \"vertical-align\": \"text-top\"\n            },\n            \".align-text-bottom\": {\n                \"vertical-align\": \"text-bottom\"\n            },\n            \".align-sub\": {\n                \"vertical-align\": \"sub\"\n            },\n            \".align-super\": {\n                \"vertical-align\": \"super\"\n            }\n        }), e({\n            align: (r)=>({\n                    \"vertical-align\": r\n                })\n        });\n    },\n    fontFamily: ({ matchUtilities: t, theme: e })=>{\n        t({\n            font: (r)=>{\n                let [n, i = {}] = Array.isArray(r) && X(r[1]) ? r : [\n                    r\n                ], { fontFeatureSettings: a, fontVariationSettings: s } = i;\n                return {\n                    \"font-family\": Array.isArray(n) ? n.join(\", \") : n,\n                    ...a === void 0 ? {} : {\n                        \"font-feature-settings\": a\n                    },\n                    ...s === void 0 ? {} : {\n                        \"font-variation-settings\": s\n                    }\n                };\n            }\n        }, {\n            values: e(\"fontFamily\"),\n            type: [\n                \"lookup\",\n                \"generic-name\",\n                \"family-name\"\n            ]\n        });\n    },\n    fontSize: ({ matchUtilities: t, theme: e })=>{\n        t({\n            text: (r, { modifier: n })=>{\n                let [i, a] = Array.isArray(r) ? r : [\n                    r\n                ];\n                if (n) return {\n                    \"font-size\": i,\n                    \"line-height\": n\n                };\n                let { lineHeight: s, letterSpacing: o, fontWeight: l } = X(a) ? a : {\n                    lineHeight: a\n                };\n                return {\n                    \"font-size\": i,\n                    ...s === void 0 ? {} : {\n                        \"line-height\": s\n                    },\n                    ...o === void 0 ? {} : {\n                        \"letter-spacing\": o\n                    },\n                    ...l === void 0 ? {} : {\n                        \"font-weight\": l\n                    }\n                };\n            }\n        }, {\n            values: e(\"fontSize\"),\n            modifiers: e(\"lineHeight\"),\n            type: [\n                \"absolute-size\",\n                \"relative-size\",\n                \"length\",\n                \"percentage\"\n            ]\n        });\n    },\n    fontWeight: T(\"fontWeight\", [\n        [\n            \"font\",\n            [\n                \"fontWeight\"\n            ]\n        ]\n    ], {\n        type: [\n            \"lookup\",\n            \"number\",\n            \"any\"\n        ]\n    }),\n    textTransform: ({ addUtilities: t })=>{\n        t({\n            \".uppercase\": {\n                \"text-transform\": \"uppercase\"\n            },\n            \".lowercase\": {\n                \"text-transform\": \"lowercase\"\n            },\n            \".capitalize\": {\n                \"text-transform\": \"capitalize\"\n            },\n            \".normal-case\": {\n                \"text-transform\": \"none\"\n            }\n        });\n    },\n    fontStyle: ({ addUtilities: t })=>{\n        t({\n            \".italic\": {\n                \"font-style\": \"italic\"\n            },\n            \".not-italic\": {\n                \"font-style\": \"normal\"\n            }\n        });\n    },\n    fontVariantNumeric: ({ addDefaults: t, addUtilities: e })=>{\n        let r = \"var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)\";\n        t(\"font-variant-numeric\", {\n            \"--tw-ordinal\": \" \",\n            \"--tw-slashed-zero\": \" \",\n            \"--tw-numeric-figure\": \" \",\n            \"--tw-numeric-spacing\": \" \",\n            \"--tw-numeric-fraction\": \" \"\n        }), e({\n            \".normal-nums\": {\n                \"font-variant-numeric\": \"normal\"\n            },\n            \".ordinal\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-ordinal\": \"ordinal\",\n                \"font-variant-numeric\": r\n            },\n            \".slashed-zero\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-slashed-zero\": \"slashed-zero\",\n                \"font-variant-numeric\": r\n            },\n            \".lining-nums\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-numeric-figure\": \"lining-nums\",\n                \"font-variant-numeric\": r\n            },\n            \".oldstyle-nums\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-numeric-figure\": \"oldstyle-nums\",\n                \"font-variant-numeric\": r\n            },\n            \".proportional-nums\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-numeric-spacing\": \"proportional-nums\",\n                \"font-variant-numeric\": r\n            },\n            \".tabular-nums\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-numeric-spacing\": \"tabular-nums\",\n                \"font-variant-numeric\": r\n            },\n            \".diagonal-fractions\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-numeric-fraction\": \"diagonal-fractions\",\n                \"font-variant-numeric\": r\n            },\n            \".stacked-fractions\": {\n                \"@defaults font-variant-numeric\": {},\n                \"--tw-numeric-fraction\": \"stacked-fractions\",\n                \"font-variant-numeric\": r\n            }\n        });\n    },\n    lineHeight: T(\"lineHeight\", [\n        [\n            \"leading\",\n            [\n                \"lineHeight\"\n            ]\n        ]\n    ]),\n    letterSpacing: T(\"letterSpacing\", [\n        [\n            \"tracking\",\n            [\n                \"letterSpacing\"\n            ]\n        ]\n    ], {\n        supportsNegativeValues: !0\n    }),\n    textColor: ({ matchUtilities: t, theme: e, corePlugins: r })=>{\n        t({\n            text: (n)=>r(\"textOpacity\") ? Z({\n                    color: n,\n                    property: \"color\",\n                    variable: \"--tw-text-opacity\"\n                }) : {\n                    color: M(n)\n                }\n        }, {\n            values: Q(e(\"textColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    textOpacity: T(\"textOpacity\", [\n        [\n            \"text-opacity\",\n            [\n                \"--tw-text-opacity\"\n            ]\n        ]\n    ]),\n    textDecoration: ({ addUtilities: t })=>{\n        t({\n            \".underline\": {\n                \"text-decoration-line\": \"underline\"\n            },\n            \".overline\": {\n                \"text-decoration-line\": \"overline\"\n            },\n            \".line-through\": {\n                \"text-decoration-line\": \"line-through\"\n            },\n            \".no-underline\": {\n                \"text-decoration-line\": \"none\"\n            }\n        });\n    },\n    textDecorationColor: ({ matchUtilities: t, theme: e })=>{\n        t({\n            decoration: (r)=>({\n                    \"text-decoration-color\": M(r)\n                })\n        }, {\n            values: Q(e(\"textDecorationColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    textDecorationStyle: ({ addUtilities: t })=>{\n        t({\n            \".decoration-solid\": {\n                \"text-decoration-style\": \"solid\"\n            },\n            \".decoration-double\": {\n                \"text-decoration-style\": \"double\"\n            },\n            \".decoration-dotted\": {\n                \"text-decoration-style\": \"dotted\"\n            },\n            \".decoration-dashed\": {\n                \"text-decoration-style\": \"dashed\"\n            },\n            \".decoration-wavy\": {\n                \"text-decoration-style\": \"wavy\"\n            }\n        });\n    },\n    textDecorationThickness: T(\"textDecorationThickness\", [\n        [\n            \"decoration\",\n            [\n                \"text-decoration-thickness\"\n            ]\n        ]\n    ], {\n        type: [\n            \"length\",\n            \"percentage\"\n        ]\n    }),\n    textUnderlineOffset: T(\"textUnderlineOffset\", [\n        [\n            \"underline-offset\",\n            [\n                \"text-underline-offset\"\n            ]\n        ]\n    ], {\n        type: [\n            \"length\",\n            \"percentage\",\n            \"any\"\n        ]\n    }),\n    fontSmoothing: ({ addUtilities: t })=>{\n        t({\n            \".antialiased\": {\n                \"-webkit-font-smoothing\": \"antialiased\",\n                \"-moz-osx-font-smoothing\": \"grayscale\"\n            },\n            \".subpixel-antialiased\": {\n                \"-webkit-font-smoothing\": \"auto\",\n                \"-moz-osx-font-smoothing\": \"auto\"\n            }\n        });\n    },\n    placeholderColor: ({ matchUtilities: t, theme: e, corePlugins: r })=>{\n        t({\n            placeholder: (n)=>r(\"placeholderOpacity\") ? {\n                    \"&::placeholder\": Z({\n                        color: n,\n                        property: \"color\",\n                        variable: \"--tw-placeholder-opacity\"\n                    })\n                } : {\n                    \"&::placeholder\": {\n                        color: M(n)\n                    }\n                }\n        }, {\n            values: Q(e(\"placeholderColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    placeholderOpacity: ({ matchUtilities: t, theme: e })=>{\n        t({\n            \"placeholder-opacity\": (r)=>({\n                    [\"&::placeholder\"]: {\n                        \"--tw-placeholder-opacity\": r\n                    }\n                })\n        }, {\n            values: e(\"placeholderOpacity\")\n        });\n    },\n    caretColor: ({ matchUtilities: t, theme: e })=>{\n        t({\n            caret: (r)=>({\n                    \"caret-color\": M(r)\n                })\n        }, {\n            values: Q(e(\"caretColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    accentColor: ({ matchUtilities: t, theme: e })=>{\n        t({\n            accent: (r)=>({\n                    \"accent-color\": M(r)\n                })\n        }, {\n            values: Q(e(\"accentColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    opacity: T(\"opacity\", [\n        [\n            \"opacity\",\n            [\n                \"opacity\"\n            ]\n        ]\n    ]),\n    backgroundBlendMode: ({ addUtilities: t })=>{\n        t({\n            \".bg-blend-normal\": {\n                \"background-blend-mode\": \"normal\"\n            },\n            \".bg-blend-multiply\": {\n                \"background-blend-mode\": \"multiply\"\n            },\n            \".bg-blend-screen\": {\n                \"background-blend-mode\": \"screen\"\n            },\n            \".bg-blend-overlay\": {\n                \"background-blend-mode\": \"overlay\"\n            },\n            \".bg-blend-darken\": {\n                \"background-blend-mode\": \"darken\"\n            },\n            \".bg-blend-lighten\": {\n                \"background-blend-mode\": \"lighten\"\n            },\n            \".bg-blend-color-dodge\": {\n                \"background-blend-mode\": \"color-dodge\"\n            },\n            \".bg-blend-color-burn\": {\n                \"background-blend-mode\": \"color-burn\"\n            },\n            \".bg-blend-hard-light\": {\n                \"background-blend-mode\": \"hard-light\"\n            },\n            \".bg-blend-soft-light\": {\n                \"background-blend-mode\": \"soft-light\"\n            },\n            \".bg-blend-difference\": {\n                \"background-blend-mode\": \"difference\"\n            },\n            \".bg-blend-exclusion\": {\n                \"background-blend-mode\": \"exclusion\"\n            },\n            \".bg-blend-hue\": {\n                \"background-blend-mode\": \"hue\"\n            },\n            \".bg-blend-saturation\": {\n                \"background-blend-mode\": \"saturation\"\n            },\n            \".bg-blend-color\": {\n                \"background-blend-mode\": \"color\"\n            },\n            \".bg-blend-luminosity\": {\n                \"background-blend-mode\": \"luminosity\"\n            }\n        });\n    },\n    mixBlendMode: ({ addUtilities: t })=>{\n        t({\n            \".mix-blend-normal\": {\n                \"mix-blend-mode\": \"normal\"\n            },\n            \".mix-blend-multiply\": {\n                \"mix-blend-mode\": \"multiply\"\n            },\n            \".mix-blend-screen\": {\n                \"mix-blend-mode\": \"screen\"\n            },\n            \".mix-blend-overlay\": {\n                \"mix-blend-mode\": \"overlay\"\n            },\n            \".mix-blend-darken\": {\n                \"mix-blend-mode\": \"darken\"\n            },\n            \".mix-blend-lighten\": {\n                \"mix-blend-mode\": \"lighten\"\n            },\n            \".mix-blend-color-dodge\": {\n                \"mix-blend-mode\": \"color-dodge\"\n            },\n            \".mix-blend-color-burn\": {\n                \"mix-blend-mode\": \"color-burn\"\n            },\n            \".mix-blend-hard-light\": {\n                \"mix-blend-mode\": \"hard-light\"\n            },\n            \".mix-blend-soft-light\": {\n                \"mix-blend-mode\": \"soft-light\"\n            },\n            \".mix-blend-difference\": {\n                \"mix-blend-mode\": \"difference\"\n            },\n            \".mix-blend-exclusion\": {\n                \"mix-blend-mode\": \"exclusion\"\n            },\n            \".mix-blend-hue\": {\n                \"mix-blend-mode\": \"hue\"\n            },\n            \".mix-blend-saturation\": {\n                \"mix-blend-mode\": \"saturation\"\n            },\n            \".mix-blend-color\": {\n                \"mix-blend-mode\": \"color\"\n            },\n            \".mix-blend-luminosity\": {\n                \"mix-blend-mode\": \"luminosity\"\n            },\n            \".mix-blend-plus-lighter\": {\n                \"mix-blend-mode\": \"plus-lighter\"\n            }\n        });\n    },\n    boxShadow: (()=>{\n        let t = Ce(\"boxShadow\"), e = [\n            \"var(--tw-ring-offset-shadow, 0 0 #0000)\",\n            \"var(--tw-ring-shadow, 0 0 #0000)\",\n            \"var(--tw-shadow)\"\n        ].join(\", \");\n        return function({ matchUtilities: r, addDefaults: n, theme: i }) {\n            n(\" box-shadow\", {\n                \"--tw-ring-offset-shadow\": \"0 0 #0000\",\n                \"--tw-ring-shadow\": \"0 0 #0000\",\n                \"--tw-shadow\": \"0 0 #0000\",\n                \"--tw-shadow-colored\": \"0 0 #0000\"\n            }), r({\n                shadow: (a)=>{\n                    a = t(a);\n                    let s = nn(a);\n                    for (let o of s)!o.valid || (o.color = \"var(--tw-shadow-color)\");\n                    return {\n                        \"@defaults box-shadow\": {},\n                        \"--tw-shadow\": a === \"none\" ? \"0 0 #0000\" : a,\n                        \"--tw-shadow-colored\": a === \"none\" ? \"0 0 #0000\" : Vu(s),\n                        \"box-shadow\": e\n                    };\n                }\n            }, {\n                values: i(\"boxShadow\"),\n                type: [\n                    \"shadow\"\n                ]\n            });\n        };\n    })(),\n    boxShadowColor: ({ matchUtilities: t, theme: e })=>{\n        t({\n            shadow: (r)=>({\n                    \"--tw-shadow-color\": M(r),\n                    \"--tw-shadow\": \"var(--tw-shadow-colored)\"\n                })\n        }, {\n            values: Q(e(\"boxShadowColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    outlineStyle: ({ addUtilities: t })=>{\n        t({\n            \".outline-none\": {\n                outline: \"2px solid transparent\",\n                \"outline-offset\": \"2px\"\n            },\n            \".outline\": {\n                \"outline-style\": \"solid\"\n            },\n            \".outline-dashed\": {\n                \"outline-style\": \"dashed\"\n            },\n            \".outline-dotted\": {\n                \"outline-style\": \"dotted\"\n            },\n            \".outline-double\": {\n                \"outline-style\": \"double\"\n            }\n        });\n    },\n    outlineWidth: T(\"outlineWidth\", [\n        [\n            \"outline\",\n            [\n                \"outline-width\"\n            ]\n        ]\n    ], {\n        type: [\n            \"length\",\n            \"number\",\n            \"percentage\"\n        ]\n    }),\n    outlineOffset: T(\"outlineOffset\", [\n        [\n            \"outline-offset\",\n            [\n                \"outline-offset\"\n            ]\n        ]\n    ], {\n        type: [\n            \"length\",\n            \"number\",\n            \"percentage\",\n            \"any\"\n        ],\n        supportsNegativeValues: !0\n    }),\n    outlineColor: ({ matchUtilities: t, theme: e })=>{\n        t({\n            outline: (r)=>({\n                    \"outline-color\": M(r)\n                })\n        }, {\n            values: Q(e(\"outlineColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    ringWidth: ({ matchUtilities: t, addDefaults: e, addUtilities: r, theme: n, config: i })=>{\n        let a = (()=>{\n            var o, l;\n            if (G(i(), \"respectDefaultRingColorOpacity\")) return n(\"ringColor.DEFAULT\");\n            let s = n(\"ringOpacity.DEFAULT\", \"0.5\");\n            return (o = n(\"ringColor\")) != null && o.DEFAULT ? we((l = n(\"ringColor\")) == null ? void 0 : l.DEFAULT, s, `rgb(147 197 253 / ${s})`) : `rgb(147 197 253 / ${s})`;\n        })();\n        e(\"ring-width\", {\n            \"--tw-ring-inset\": \" \",\n            \"--tw-ring-offset-width\": n(\"ringOffsetWidth.DEFAULT\", \"0px\"),\n            \"--tw-ring-offset-color\": n(\"ringOffsetColor.DEFAULT\", \"#fff\"),\n            \"--tw-ring-color\": a,\n            \"--tw-ring-offset-shadow\": \"0 0 #0000\",\n            \"--tw-ring-shadow\": \"0 0 #0000\",\n            \"--tw-shadow\": \"0 0 #0000\",\n            \"--tw-shadow-colored\": \"0 0 #0000\"\n        }), t({\n            ring: (s)=>({\n                    \"@defaults ring-width\": {},\n                    \"--tw-ring-offset-shadow\": \"var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)\",\n                    \"--tw-ring-shadow\": `var(--tw-ring-inset) 0 0 0 calc(${s} + var(--tw-ring-offset-width)) var(--tw-ring-color)`,\n                    \"box-shadow\": [\n                        \"var(--tw-ring-offset-shadow)\",\n                        \"var(--tw-ring-shadow)\",\n                        \"var(--tw-shadow, 0 0 #0000)\"\n                    ].join(\", \")\n                })\n        }, {\n            values: n(\"ringWidth\"),\n            type: \"length\"\n        }), r({\n            \".ring-inset\": {\n                \"@defaults ring-width\": {},\n                \"--tw-ring-inset\": \"inset\"\n            }\n        });\n    },\n    ringColor: ({ matchUtilities: t, theme: e, corePlugins: r })=>{\n        t({\n            ring: (n)=>r(\"ringOpacity\") ? Z({\n                    color: n,\n                    property: \"--tw-ring-color\",\n                    variable: \"--tw-ring-opacity\"\n                }) : {\n                    \"--tw-ring-color\": M(n)\n                }\n        }, {\n            values: Object.fromEntries(Object.entries(Q(e(\"ringColor\"))).filter(([n])=>n !== \"DEFAULT\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    ringOpacity: (t)=>{\n        let { config: e } = t;\n        return T(\"ringOpacity\", [\n            [\n                \"ring-opacity\",\n                [\n                    \"--tw-ring-opacity\"\n                ]\n            ]\n        ], {\n            filterDefault: !G(e(), \"respectDefaultRingColorOpacity\")\n        })(t);\n    },\n    ringOffsetWidth: T(\"ringOffsetWidth\", [\n        [\n            \"ring-offset\",\n            [\n                \"--tw-ring-offset-width\"\n            ]\n        ]\n    ], {\n        type: \"length\"\n    }),\n    ringOffsetColor: ({ matchUtilities: t, theme: e })=>{\n        t({\n            \"ring-offset\": (r)=>({\n                    \"--tw-ring-offset-color\": M(r)\n                })\n        }, {\n            values: Q(e(\"ringOffsetColor\")),\n            type: [\n                \"color\",\n                \"any\"\n            ]\n        });\n    },\n    blur: ({ matchUtilities: t, theme: e })=>{\n        t({\n            blur: (r)=>({\n                    \"--tw-blur\": `blur(${r})`,\n                    \"@defaults filter\": {},\n                    filter: xe\n                })\n        }, {\n            values: e(\"blur\")\n        });\n    },\n    brightness: ({ matchUtilities: t, theme: e })=>{\n        t({\n            brightness: (r)=>({\n                    \"--tw-brightness\": `brightness(${r})`,\n                    \"@defaults filter\": {},\n                    filter: xe\n                })\n        }, {\n            values: e(\"brightness\")\n        });\n    },\n    contrast: ({ matchUtilities: t, theme: e })=>{\n        t({\n            contrast: (r)=>({\n                    \"--tw-contrast\": `contrast(${r})`,\n                    \"@defaults filter\": {},\n                    filter: xe\n                })\n        }, {\n            values: e(\"contrast\")\n        });\n    },\n    dropShadow: ({ matchUtilities: t, theme: e })=>{\n        t({\n            \"drop-shadow\": (r)=>({\n                    \"--tw-drop-shadow\": Array.isArray(r) ? r.map((n)=>`drop-shadow(${n})`).join(\" \") : `drop-shadow(${r})`,\n                    \"@defaults filter\": {},\n                    filter: xe\n                })\n        }, {\n            values: e(\"dropShadow\")\n        });\n    },\n    grayscale: ({ matchUtilities: t, theme: e })=>{\n        t({\n            grayscale: (r)=>({\n                    \"--tw-grayscale\": `grayscale(${r})`,\n                    \"@defaults filter\": {},\n                    filter: xe\n                })\n        }, {\n            values: e(\"grayscale\")\n        });\n    },\n    hueRotate: ({ matchUtilities: t, theme: e })=>{\n        t({\n            \"hue-rotate\": (r)=>({\n                    \"--tw-hue-rotate\": `hue-rotate(${r})`,\n                    \"@defaults filter\": {},\n                    filter: xe\n                })\n        }, {\n            values: e(\"hueRotate\"),\n            supportsNegativeValues: !0\n        });\n    },\n    invert: ({ matchUtilities: t, theme: e })=>{\n        t({\n            invert: (r)=>({\n                    \"--tw-invert\": `invert(${r})`,\n                    \"@defaults filter\": {},\n                    filter: xe\n                })\n        }, {\n            values: e(\"invert\")\n        });\n    },\n    saturate: ({ matchUtilities: t, theme: e })=>{\n        t({\n            saturate: (r)=>({\n                    \"--tw-saturate\": `saturate(${r})`,\n                    \"@defaults filter\": {},\n                    filter: xe\n                })\n        }, {\n            values: e(\"saturate\")\n        });\n    },\n    sepia: ({ matchUtilities: t, theme: e })=>{\n        t({\n            sepia: (r)=>({\n                    \"--tw-sepia\": `sepia(${r})`,\n                    \"@defaults filter\": {},\n                    filter: xe\n                })\n        }, {\n            values: e(\"sepia\")\n        });\n    },\n    filter: ({ addDefaults: t, addUtilities: e })=>{\n        t(\"filter\", {\n            \"--tw-blur\": \" \",\n            \"--tw-brightness\": \" \",\n            \"--tw-contrast\": \" \",\n            \"--tw-grayscale\": \" \",\n            \"--tw-hue-rotate\": \" \",\n            \"--tw-invert\": \" \",\n            \"--tw-saturate\": \" \",\n            \"--tw-sepia\": \" \",\n            \"--tw-drop-shadow\": \" \"\n        }), e({\n            \".filter\": {\n                \"@defaults filter\": {},\n                filter: xe\n            },\n            \".filter-none\": {\n                filter: \"none\"\n            }\n        });\n    },\n    backdropBlur: ({ matchUtilities: t, theme: e })=>{\n        t({\n            \"backdrop-blur\": (r)=>({\n                    \"--tw-backdrop-blur\": `blur(${r})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": Se\n                })\n        }, {\n            values: e(\"backdropBlur\")\n        });\n    },\n    backdropBrightness: ({ matchUtilities: t, theme: e })=>{\n        t({\n            \"backdrop-brightness\": (r)=>({\n                    \"--tw-backdrop-brightness\": `brightness(${r})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": Se\n                })\n        }, {\n            values: e(\"backdropBrightness\")\n        });\n    },\n    backdropContrast: ({ matchUtilities: t, theme: e })=>{\n        t({\n            \"backdrop-contrast\": (r)=>({\n                    \"--tw-backdrop-contrast\": `contrast(${r})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": Se\n                })\n        }, {\n            values: e(\"backdropContrast\")\n        });\n    },\n    backdropGrayscale: ({ matchUtilities: t, theme: e })=>{\n        t({\n            \"backdrop-grayscale\": (r)=>({\n                    \"--tw-backdrop-grayscale\": `grayscale(${r})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": Se\n                })\n        }, {\n            values: e(\"backdropGrayscale\")\n        });\n    },\n    backdropHueRotate: ({ matchUtilities: t, theme: e })=>{\n        t({\n            \"backdrop-hue-rotate\": (r)=>({\n                    \"--tw-backdrop-hue-rotate\": `hue-rotate(${r})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": Se\n                })\n        }, {\n            values: e(\"backdropHueRotate\"),\n            supportsNegativeValues: !0\n        });\n    },\n    backdropInvert: ({ matchUtilities: t, theme: e })=>{\n        t({\n            \"backdrop-invert\": (r)=>({\n                    \"--tw-backdrop-invert\": `invert(${r})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": Se\n                })\n        }, {\n            values: e(\"backdropInvert\")\n        });\n    },\n    backdropOpacity: ({ matchUtilities: t, theme: e })=>{\n        t({\n            \"backdrop-opacity\": (r)=>({\n                    \"--tw-backdrop-opacity\": `opacity(${r})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": Se\n                })\n        }, {\n            values: e(\"backdropOpacity\")\n        });\n    },\n    backdropSaturate: ({ matchUtilities: t, theme: e })=>{\n        t({\n            \"backdrop-saturate\": (r)=>({\n                    \"--tw-backdrop-saturate\": `saturate(${r})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": Se\n                })\n        }, {\n            values: e(\"backdropSaturate\")\n        });\n    },\n    backdropSepia: ({ matchUtilities: t, theme: e })=>{\n        t({\n            \"backdrop-sepia\": (r)=>({\n                    \"--tw-backdrop-sepia\": `sepia(${r})`,\n                    \"@defaults backdrop-filter\": {},\n                    \"backdrop-filter\": Se\n                })\n        }, {\n            values: e(\"backdropSepia\")\n        });\n    },\n    backdropFilter: ({ addDefaults: t, addUtilities: e })=>{\n        t(\"backdrop-filter\", {\n            \"--tw-backdrop-blur\": \" \",\n            \"--tw-backdrop-brightness\": \" \",\n            \"--tw-backdrop-contrast\": \" \",\n            \"--tw-backdrop-grayscale\": \" \",\n            \"--tw-backdrop-hue-rotate\": \" \",\n            \"--tw-backdrop-invert\": \" \",\n            \"--tw-backdrop-opacity\": \" \",\n            \"--tw-backdrop-saturate\": \" \",\n            \"--tw-backdrop-sepia\": \" \"\n        }), e({\n            \".backdrop-filter\": {\n                \"@defaults backdrop-filter\": {},\n                \"backdrop-filter\": Se\n            },\n            \".backdrop-filter-none\": {\n                \"backdrop-filter\": \"none\"\n            }\n        });\n    },\n    transitionProperty: ({ matchUtilities: t, theme: e })=>{\n        let r = e(\"transitionTimingFunction.DEFAULT\"), n = e(\"transitionDuration.DEFAULT\");\n        t({\n            transition: (i)=>({\n                    \"transition-property\": i,\n                    ...i === \"none\" ? {} : {\n                        \"transition-timing-function\": r,\n                        \"transition-duration\": n\n                    }\n                })\n        }, {\n            values: e(\"transitionProperty\")\n        });\n    },\n    transitionDelay: T(\"transitionDelay\", [\n        [\n            \"delay\",\n            [\n                \"transitionDelay\"\n            ]\n        ]\n    ]),\n    transitionDuration: T(\"transitionDuration\", [\n        [\n            \"duration\",\n            [\n                \"transitionDuration\"\n            ]\n        ]\n    ], {\n        filterDefault: !0\n    }),\n    transitionTimingFunction: T(\"transitionTimingFunction\", [\n        [\n            \"ease\",\n            [\n                \"transitionTimingFunction\"\n            ]\n        ]\n    ], {\n        filterDefault: !0\n    }),\n    willChange: T(\"willChange\", [\n        [\n            \"will-change\",\n            [\n                \"will-change\"\n            ]\n        ]\n    ]),\n    content: T(\"content\", [\n        [\n            \"content\",\n            [\n                \"--tw-content\",\n                [\n                    \"content\",\n                    \"var(--tw-content)\"\n                ]\n            ]\n        ]\n    ])\n};\nfunction Le(t) {\n    if (Array.isArray(t)) return t;\n    let e = t.split(\"[\").length - 1, r = t.split(\"]\").length - 1;\n    if (e !== r) throw new Error(`Path is invalid. Has unbalanced brackets: ${t}`);\n    return t.split(/\\.(?![^\\[]*\\])|[\\[\\]]/g).filter(Boolean);\n}\nvar xf = new Map([\n    [\n        \"{\",\n        \"}\"\n    ],\n    [\n        \"[\",\n        \"]\"\n    ],\n    [\n        \"(\",\n        \")\"\n    ]\n]), bf = new Map(Array.from(xf.entries()).map(([t, e])=>[\n        e,\n        t\n    ])), av = new Set([\n    '\"',\n    \"'\",\n    \"`\"\n]);\nfunction lt(t) {\n    let e = [], r = !1;\n    for(let n = 0; n < t.length; n++){\n        let i = t[n];\n        if (i === \":\" && !r && e.length === 0) return !1;\n        if (av.has(i) && t[n - 1] !== \"\\\\\" && (r = !r), !r && t[n - 1] !== \"\\\\\") {\n            if (xf.has(i)) e.push(i);\n            else if (bf.has(i)) {\n                let a = bf.get(i);\n                if (e.length <= 0 || e.pop() !== a) return !1;\n            }\n        }\n    }\n    return !(e.length > 0);\n}\nfunction pn(t) {\n    return (t > 0n) - (t < 0n);\n}\nfunction Sf(t, e) {\n    let r = 0n, n = 0n;\n    for (let [i, a] of e)t & i && (r = r | i, n = n | a);\n    return t & ~r | n;\n}\nvar dn = class {\n    constructor(){\n        this.offsets = {\n            defaults: 0n,\n            base: 0n,\n            components: 0n,\n            utilities: 0n,\n            variants: 0n,\n            user: 0n\n        }, this.layerPositions = {\n            defaults: 0n,\n            base: 1n,\n            components: 2n,\n            utilities: 3n,\n            user: 4n,\n            variants: 5n\n        }, this.reservedVariantBits = 0n, this.variantOffsets = new Map;\n    }\n    create(e) {\n        return {\n            layer: e,\n            parentLayer: e,\n            arbitrary: 0n,\n            variants: 0n,\n            parallelIndex: 0n,\n            index: this.offsets[e]++,\n            options: []\n        };\n    }\n    arbitraryProperty() {\n        return {\n            ...this.create(\"utilities\"),\n            arbitrary: 1n\n        };\n    }\n    forVariant(e, r = 0) {\n        let n = this.variantOffsets.get(e);\n        if (n === void 0) throw new Error(`Cannot find offset for unknown variant ${e}`);\n        return {\n            ...this.create(\"variants\"),\n            variants: n << BigInt(r)\n        };\n    }\n    applyVariantOffset(e, r, n) {\n        return n.variant = r.variants, {\n            ...e,\n            layer: \"variants\",\n            parentLayer: e.layer === \"variants\" ? e.parentLayer : e.layer,\n            variants: e.variants | r.variants,\n            options: n.sort ? [].concat(n, e.options) : e.options,\n            parallelIndex: kf([\n                e.parallelIndex,\n                r.parallelIndex\n            ])\n        };\n    }\n    applyParallelOffset(e, r) {\n        return {\n            ...e,\n            parallelIndex: BigInt(r)\n        };\n    }\n    recordVariants(e, r) {\n        for (let n of e)this.recordVariant(n, r(n));\n    }\n    recordVariant(e, r = 1) {\n        return this.variantOffsets.set(e, 1n << this.reservedVariantBits), this.reservedVariantBits += BigInt(r), {\n            ...this.create(\"variants\"),\n            variants: this.variantOffsets.get(e)\n        };\n    }\n    compare(e, r) {\n        var n;\n        if (e.layer !== r.layer) return this.layerPositions[e.layer] - this.layerPositions[r.layer];\n        if (e.parentLayer !== r.parentLayer) return this.layerPositions[e.parentLayer] - this.layerPositions[r.parentLayer];\n        for (let i of e.options)for (let a of r.options){\n            if (i.id !== a.id || !i.sort || !a.sort) continue;\n            let s = (n = kf([\n                i.variant,\n                a.variant\n            ])) != null ? n : 0n, o = ~(s | s - 1n), l = e.variants & o, u = r.variants & o;\n            if (l !== u) continue;\n            let f = i.sort({\n                value: i.value,\n                modifier: i.modifier\n            }, {\n                value: a.value,\n                modifier: a.modifier\n            });\n            if (f !== 0) return f;\n        }\n        return e.variants !== r.variants ? e.variants - r.variants : e.parallelIndex !== r.parallelIndex ? e.parallelIndex - r.parallelIndex : e.arbitrary !== r.arbitrary ? e.arbitrary - r.arbitrary : e.index - r.index;\n    }\n    recalculateVariantOffsets() {\n        let e = Array.from(this.variantOffsets.entries()).filter(([i])=>i.startsWith(\"[\")).sort(([i], [a])=>ov(i, a)), r = e.map(([, i])=>i).sort((i, a)=>pn(i - a));\n        return e.map(([, i], a)=>[\n                i,\n                r[a]\n            ]).filter(([i, a])=>i !== a);\n    }\n    remapArbitraryVariantOffsets(e) {\n        let r = this.recalculateVariantOffsets();\n        return r.length === 0 ? e : e.map((n)=>{\n            let [i, a] = n;\n            return i = {\n                ...i,\n                variants: Sf(i.variants, r)\n            }, [\n                i,\n                a\n            ];\n        });\n    }\n    sort(e) {\n        return e = this.remapArbitraryVariantOffsets(e), e.sort(([r], [n])=>pn(this.compare(r, n)));\n    }\n};\nfunction kf(t) {\n    let e = null;\n    for (let r of t)e = e != null ? e : r, e = e > r ? e : r;\n    return e;\n}\nfunction ov(t, e) {\n    let r = t.length, n = e.length, i = r < n ? r : n;\n    for(let a = 0; a < i; a++){\n        let s = t.charCodeAt(a) - e.charCodeAt(a);\n        if (s !== 0) return s;\n    }\n    return r - n;\n}\nvar Us = {\n    AddVariant: Symbol.for(\"ADD_VARIANT\"),\n    MatchVariant: Symbol.for(\"MATCH_VARIANT\")\n}, zs = {\n    Base: 1 << 0,\n    Dynamic: 1 << 1\n};\nfunction js(t, e) {\n    let r = t.tailwindConfig.prefix;\n    return typeof r == \"function\" ? r(e) : r + e;\n}\nfunction Of({ type: t = \"any\", ...e }) {\n    let r = [].concat(t);\n    return {\n        ...e,\n        types: r.map((n)=>Array.isArray(n) ? {\n                type: n[0],\n                ...n[1]\n            } : {\n                type: n,\n                preferOnConflict: !1\n            })\n    };\n}\nfunction lv(t) {\n    let e = [], r = \"\", n = 0;\n    for(let i = 0; i < t.length; i++){\n        let a = t[i];\n        if (a === \"\\\\\") r += \"\\\\\" + t[++i];\n        else if (a === \"{\") ++n, e.push(r.trim()), r = \"\";\n        else if (a === \"}\") {\n            if (--n < 0) throw new Error(\"Your { and } are unbalanced.\");\n            e.push(r.trim()), r = \"\";\n        } else r += a;\n    }\n    return r.length > 0 && e.push(r.trim()), e = e.filter((i)=>i !== \"\"), e;\n}\nfunction uv(t, e, { before: r = [] } = {}) {\n    if (r = [].concat(r), r.length <= 0) {\n        t.push(e);\n        return;\n    }\n    let n = t.length - 1;\n    for (let i of r){\n        let a = t.indexOf(i);\n        a !== -1 && (n = Math.min(n, a));\n    }\n    t.splice(n, 0, e);\n}\nfunction Af(t) {\n    return Array.isArray(t) ? t.flatMap((e)=>!Array.isArray(e) && !X(e) ? e : nt(e)) : Af([\n        t\n    ]);\n}\nfunction Ef(t, e) {\n    return (0, Vs.default)((n)=>{\n        let i = [];\n        return e && e(n), n.walkClasses((a)=>{\n            i.push(a.value);\n        }), i;\n    }).transformSync(t);\n}\nfunction fv(t, e = {\n    containsNonOnDemandable: !1\n}, r = 0) {\n    let n = [];\n    if (t.type === \"rule\") {\n        let i = function(a) {\n            a.walkPseudos((s)=>{\n                s.value === \":not\" && s.remove();\n            });\n        };\n        for (let a of t.selectors){\n            let s = Ef(a, i);\n            s.length === 0 && (e.containsNonOnDemandable = !0);\n            for (let o of s)n.push(o);\n        }\n    } else t.type === \"atrule\" && t.walkRules((i)=>{\n        for (let a of i.selectors.flatMap((s)=>Ef(s)))n.push(a);\n    });\n    return r === 0 ? [\n        e.containsNonOnDemandable || n.length === 0,\n        n\n    ] : n;\n}\nfunction hn(t) {\n    return Af(t).flatMap((e)=>{\n        let r = new Map, [n, i] = fv(e);\n        return n && i.unshift(ke), i.map((a)=>(r.has(e) || r.set(e, e), [\n                a,\n                r.get(e)\n            ]));\n    });\n}\nfunction mn(t) {\n    return t.startsWith(\"@\") || t.includes(\"&\");\n}\nfunction lr(t) {\n    t = t.replace(/\\n+/g, \"\").replace(/\\s{1,}/g, \" \").trim();\n    let e = lv(t).map((r)=>{\n        if (!r.startsWith(\"@\")) return ({ format: a })=>a(r);\n        let [, n, i] = /@(.*?)( .+|[({].*)/g.exec(r);\n        return ({ wrap: a })=>a(R.atRule({\n                name: n,\n                params: i.trim()\n            }));\n    }).reverse();\n    return (r)=>{\n        for (let n of e)n(r);\n    };\n}\nfunction cv(t, e, { variantList: r, variantMap: n, offsets: i, classList: a }) {\n    function s(c, d) {\n        return c ? (0, Cf.default)(t, c, d) : t;\n    }\n    function o(c) {\n        return it(t.prefix, c);\n    }\n    function l(c, d) {\n        return c === ke ? ke : d.respectPrefix ? e.tailwindConfig.prefix + c : c;\n    }\n    function u(c, d, h = {}) {\n        let y = Le(c), m = s([\n            \"theme\",\n            ...y\n        ], d);\n        return Ce(y[0])(m, h);\n    }\n    let f = 0, p = {\n        postcss: R,\n        prefix: o,\n        e: re,\n        config: s,\n        theme: u,\n        corePlugins: (c)=>Array.isArray(t.corePlugins) ? t.corePlugins.includes(c) : s([\n                \"corePlugins\",\n                c\n            ], !0),\n        variants: ()=>[],\n        addBase (c) {\n            for (let [d, h] of hn(c)){\n                let y = l(d, {}), m = i.create(\"base\");\n                e.candidateRuleMap.has(y) || e.candidateRuleMap.set(y, []), e.candidateRuleMap.get(y).push([\n                    {\n                        sort: m,\n                        layer: \"base\"\n                    },\n                    h\n                ]);\n            }\n        },\n        addDefaults (c, d) {\n            let h = {\n                [`@defaults ${c}`]: d\n            };\n            for (let [y, m] of hn(h)){\n                let g = l(y, {});\n                e.candidateRuleMap.has(g) || e.candidateRuleMap.set(g, []), e.candidateRuleMap.get(g).push([\n                    {\n                        sort: i.create(\"defaults\"),\n                        layer: \"defaults\"\n                    },\n                    m\n                ]);\n            }\n        },\n        addComponents (c, d) {\n            d = Object.assign({}, {\n                preserveSource: !1,\n                respectPrefix: !0,\n                respectImportant: !1\n            }, Array.isArray(d) ? {} : d);\n            for (let [y, m] of hn(c)){\n                let g = l(y, d);\n                a.add(g), e.candidateRuleMap.has(g) || e.candidateRuleMap.set(g, []), e.candidateRuleMap.get(g).push([\n                    {\n                        sort: i.create(\"components\"),\n                        layer: \"components\",\n                        options: d\n                    },\n                    m\n                ]);\n            }\n        },\n        addUtilities (c, d) {\n            d = Object.assign({}, {\n                preserveSource: !1,\n                respectPrefix: !0,\n                respectImportant: !0\n            }, Array.isArray(d) ? {} : d);\n            for (let [y, m] of hn(c)){\n                let g = l(y, d);\n                a.add(g), e.candidateRuleMap.has(g) || e.candidateRuleMap.set(g, []), e.candidateRuleMap.get(g).push([\n                    {\n                        sort: i.create(\"utilities\"),\n                        layer: \"utilities\",\n                        options: d\n                    },\n                    m\n                ]);\n            }\n        },\n        matchUtilities: function(c, d) {\n            d = Of({\n                ...{\n                    respectPrefix: !0,\n                    respectImportant: !0,\n                    modifiers: !1\n                },\n                ...d\n            });\n            let y = i.create(\"utilities\");\n            for(let m in c){\n                let b = function(O, { isOnlyPlugin: x }) {\n                    let [A, E, I] = Ts(d.types, O, d, t);\n                    if (A === void 0) return [];\n                    if (!d.types.some(({ type: B })=>B === E)) if (x) L.warn([\n                        `Unnecessary typehint \\`${E}\\` in \\`${m}-${O}\\`.`,\n                        `You can safely update it to \\`${m}-${O.replace(E + \":\", \"\")}\\`.`\n                    ]);\n                    else return [];\n                    if (!lt(A)) return [];\n                    let F = {\n                        get modifier () {\n                            return d.modifiers || L.warn(`modifier-used-without-options-for-${m}`, [\n                                \"Your plugin must set `modifiers: true` in its options to support modifiers.\"\n                            ]), I;\n                        }\n                    }, Y = G(t, \"generalizedModifiers\");\n                    return [].concat(Y ? w(A, F) : w(A)).filter(Boolean).map((B)=>({\n                            [ln(m, O)]: B\n                        }));\n                }, g = l(m, d), w = c[m];\n                a.add([\n                    g,\n                    d\n                ]);\n                let v = [\n                    {\n                        sort: y,\n                        layer: \"utilities\",\n                        options: d\n                    },\n                    b\n                ];\n                e.candidateRuleMap.has(g) || e.candidateRuleMap.set(g, []), e.candidateRuleMap.get(g).push(v);\n            }\n        },\n        matchComponents: function(c, d) {\n            d = Of({\n                ...{\n                    respectPrefix: !0,\n                    respectImportant: !1,\n                    modifiers: !1\n                },\n                ...d\n            });\n            let y = i.create(\"components\");\n            for(let m in c){\n                let b = function(O, { isOnlyPlugin: x }) {\n                    let [A, E, I] = Ts(d.types, O, d, t);\n                    if (A === void 0) return [];\n                    if (!d.types.some(({ type: B })=>B === E)) if (x) L.warn([\n                        `Unnecessary typehint \\`${E}\\` in \\`${m}-${O}\\`.`,\n                        `You can safely update it to \\`${m}-${O.replace(E + \":\", \"\")}\\`.`\n                    ]);\n                    else return [];\n                    if (!lt(A)) return [];\n                    let F = {\n                        get modifier () {\n                            return d.modifiers || L.warn(`modifier-used-without-options-for-${m}`, [\n                                \"Your plugin must set `modifiers: true` in its options to support modifiers.\"\n                            ]), I;\n                        }\n                    }, Y = G(t, \"generalizedModifiers\");\n                    return [].concat(Y ? w(A, F) : w(A)).filter(Boolean).map((B)=>({\n                            [ln(m, O)]: B\n                        }));\n                }, g = l(m, d), w = c[m];\n                a.add([\n                    g,\n                    d\n                ]);\n                let v = [\n                    {\n                        sort: y,\n                        layer: \"components\",\n                        options: d\n                    },\n                    b\n                ];\n                e.candidateRuleMap.has(g) || e.candidateRuleMap.set(g, []), e.candidateRuleMap.get(g).push(v);\n            }\n        },\n        addVariant (c, d, h = {}) {\n            d = [].concat(d).map((y)=>{\n                if (typeof y != \"string\") return (m = {})=>{\n                    let { args: g, modifySelectors: w, container: b, separator: v, wrap: O, format: x } = m, A = y(Object.assign({\n                        modifySelectors: w,\n                        container: b,\n                        separator: v\n                    }, h.type === Us.MatchVariant && {\n                        args: g,\n                        wrap: O,\n                        format: x\n                    }));\n                    if (typeof A == \"string\" && !mn(A)) throw new Error(`Your custom variant \\`${c}\\` has an invalid format string. Make sure it's an at-rule or contains a \\`&\\` placeholder.`);\n                    return Array.isArray(A) ? A.filter((E)=>typeof E == \"string\").map((E)=>lr(E)) : A && typeof A == \"string\" && lr(A)(m);\n                };\n                if (!mn(y)) throw new Error(`Your custom variant \\`${c}\\` has an invalid format string. Make sure it's an at-rule or contains a \\`&\\` placeholder.`);\n                return lr(y);\n            }), uv(r, c, h), n.set(c, d), e.variantOptions.set(c, h);\n        },\n        matchVariant (c, d, h) {\n            var b, v, O;\n            let y = (b = h == null ? void 0 : h.id) != null ? b : ++f, m = c === \"@\", g = G(t, \"generalizedModifiers\");\n            for (let [x, A] of Object.entries((v = h == null ? void 0 : h.values) != null ? v : {}))x !== \"DEFAULT\" && p.addVariant(m ? `${c}${x}` : `${c}-${x}`, ({ args: E, container: I })=>d(A, g ? {\n                    modifier: E == null ? void 0 : E.modifier,\n                    container: I\n                } : {\n                    container: I\n                }), {\n                ...h,\n                value: A,\n                id: y,\n                type: Us.MatchVariant,\n                variantInfo: zs.Base\n            });\n            let w = \"DEFAULT\" in ((O = h == null ? void 0 : h.values) != null ? O : {});\n            p.addVariant(c, ({ args: x, container: A })=>{\n                var E;\n                return (x == null ? void 0 : x.value) === mt && !w ? null : d((x == null ? void 0 : x.value) === mt ? h.values.DEFAULT : (E = x == null ? void 0 : x.value) != null ? E : typeof x == \"string\" ? x : \"\", g ? {\n                    modifier: x == null ? void 0 : x.modifier,\n                    container: A\n                } : {\n                    container: A\n                });\n            }, {\n                ...h,\n                id: y,\n                type: Us.MatchVariant,\n                variantInfo: zs.Dynamic\n            });\n        }\n    };\n    return p;\n}\nfunction _f(t) {\n    t.walkAtRules((e)=>{\n        [\n            \"responsive\",\n            \"variants\"\n        ].includes(e.name) && (_f(e), e.before(e.nodes), e.remove());\n    });\n}\nfunction pv(t) {\n    let e = [];\n    return t.each((r)=>{\n        r.type === \"atrule\" && [\n            \"responsive\",\n            \"variants\"\n        ].includes(r.name) && (r.name = \"layer\", r.params = \"utilities\");\n    }), t.walkAtRules(\"layer\", (r)=>{\n        if (_f(r), r.params === \"base\") {\n            for (let n of r.nodes)e.push(function({ addBase: i }) {\n                i(n, {\n                    respectPrefix: !1\n                });\n            });\n            r.remove();\n        } else if (r.params === \"components\") {\n            for (let n of r.nodes)e.push(function({ addComponents: i }) {\n                i(n, {\n                    respectPrefix: !1,\n                    preserveSource: !0\n                });\n            });\n            r.remove();\n        } else if (r.params === \"utilities\") {\n            for (let n of r.nodes)e.push(function({ addUtilities: i }) {\n                i(n, {\n                    respectPrefix: !1,\n                    preserveSource: !0\n                });\n            });\n            r.remove();\n        }\n    }), e;\n}\nfunction dv(t, e) {\n    let r = Object.entries({\n        ...ne,\n        ...wf\n    }).map(([o, l])=>t.tailwindConfig.corePlugins.includes(o) ? l : null).filter(Boolean), n = t.tailwindConfig.plugins.map((o)=>(o.__isOptionsFunction && (o = o()), typeof o == \"function\" ? o : o.handler)), i = pv(e), a = [\n        ne.pseudoElementVariants,\n        ne.pseudoClassVariants,\n        ne.ariaVariants,\n        ne.dataVariants\n    ], s = [\n        ne.supportsVariants,\n        ne.directionVariants,\n        ne.reducedMotionVariants,\n        ne.prefersContrastVariants,\n        ne.darkVariants,\n        ne.printVariant,\n        ne.screenVariants,\n        ne.orientationVariants\n    ];\n    return [\n        ...r,\n        ...a,\n        ...n,\n        ...s,\n        ...i\n    ];\n}\nfunction hv(t, e) {\n    var f, p, c;\n    let r = [], n = new Map;\n    e.variantMap = n;\n    let i = new dn;\n    e.offsets = i;\n    let a = new Set, s = cv(e.tailwindConfig, e, {\n        variantList: r,\n        variantMap: n,\n        offsets: i,\n        classList: a\n    });\n    for (let d of t)if (Array.isArray(d)) for (let h of d)h(s);\n    else d == null || d(s);\n    i.recordVariants(r, (d)=>n.get(d).length);\n    for (let [d, h] of n.entries())e.variantMap.set(d, h.map((y, m)=>[\n            i.forVariant(d, m),\n            y\n        ]));\n    let o = ((f = e.tailwindConfig.safelist) != null ? f : []).filter(Boolean);\n    if (o.length > 0) {\n        let d = [];\n        for (let h of o){\n            if (typeof h == \"string\") {\n                e.changedContent.push({\n                    content: h,\n                    extension: \"html\"\n                });\n                continue;\n            }\n            if (h instanceof RegExp) {\n                L.warn(\"root-regex\", [\n                    \"Regular expressions in `safelist` work differently in Tailwind CSS v3.0.\",\n                    \"Update your `safelist` configuration to eliminate this warning.\",\n                    \"https://tailwindcss.com/docs/content-configuration#safelisting-classes\"\n                ]);\n                continue;\n            }\n            d.push(h);\n        }\n        if (d.length > 0) {\n            let h = new Map, y = e.tailwindConfig.prefix.length, m = d.some((g)=>g.pattern.source.includes(\"!\"));\n            for (let g of a){\n                let w = Array.isArray(g) ? (()=>{\n                    var A;\n                    let [b, v] = g, x = Object.keys((A = v == null ? void 0 : v.values) != null ? A : {}).map((E)=>or(b, E));\n                    return v != null && v.supportsNegativeValues && (x = [\n                        ...x,\n                        ...x.map((E)=>\"-\" + E)\n                    ], x = [\n                        ...x,\n                        ...x.map((E)=>E.slice(0, y) + \"-\" + E.slice(y))\n                    ]), v.types.some(({ type: E })=>E === \"color\") && (x = [\n                        ...x,\n                        ...x.flatMap((E)=>Object.keys(e.tailwindConfig.theme.opacity).map((I)=>`${E}/${I}`))\n                    ]), m && (v == null ? void 0 : v.respectImportant) && (x = [\n                        ...x,\n                        ...x.map((E)=>\"!\" + E)\n                    ]), x;\n                })() : [\n                    g\n                ];\n                for (let b of w)for (let { pattern: v, variants: O = [] } of d)if (v.lastIndex = 0, h.has(v) || h.set(v, 0), !!v.test(b)) {\n                    h.set(v, h.get(v) + 1), e.changedContent.push({\n                        content: b,\n                        extension: \"html\"\n                    });\n                    for (let x of O)e.changedContent.push({\n                        content: x + e.tailwindConfig.separator + b,\n                        extension: \"html\"\n                    });\n                }\n            }\n            for (let [g, w] of h.entries())w === 0 && L.warn([\n                `The safelist pattern \\`${g}\\` doesn't match any Tailwind CSS classes.`,\n                \"Fix this pattern or remove it from your `safelist` configuration.\",\n                \"https://tailwindcss.com/docs/content-configuration#safelisting-classes\"\n            ]);\n        }\n    }\n    let l = (c = [].concat((p = e.tailwindConfig.darkMode) != null ? p : \"media\")[1]) != null ? c : \"dark\", u = [\n        js(e, l),\n        js(e, \"group\"),\n        js(e, \"peer\")\n    ];\n    e.getClassOrder = function(h) {\n        let y = [\n            ...h\n        ].sort((b, v)=>b === v ? 0 : b < v ? -1 : 1), m = new Map(y.map((b)=>[\n                b,\n                null\n            ])), g = gn(new Set(y), e);\n        g = e.offsets.sort(g);\n        let w = BigInt(u.length);\n        for (let [, b] of g)m.set(b.raws.tailwind.candidate, w++);\n        return h.map((b)=>{\n            var x;\n            let v = (x = m.get(b)) != null ? x : null, O = u.indexOf(b);\n            return v === null && O !== -1 && (v = BigInt(O)), [\n                b,\n                v\n            ];\n        });\n    }, e.getClassList = function(h = {}) {\n        var m, g, w, b;\n        let y = [];\n        for (let v of a)if (Array.isArray(v)) {\n            let [O, x] = v, A = [], E = Object.keys((m = x == null ? void 0 : x.modifiers) != null ? m : {});\n            (g = x == null ? void 0 : x.types) != null && g.some(({ type: Y })=>Y === \"color\") && E.push(...Object.keys((w = e.tailwindConfig.theme.opacity) != null ? w : {}));\n            let I = {\n                modifiers: E\n            }, F = h.includeMetadata && E.length > 0;\n            for (let [Y, K] of Object.entries((b = x == null ? void 0 : x.values) != null ? b : {})){\n                if (K == null) continue;\n                let B = or(O, Y);\n                if (y.push(F ? [\n                    B,\n                    I\n                ] : B), (x == null ? void 0 : x.supportsNegativeValues) && Re(K)) {\n                    let qe = or(O, `-${Y}`);\n                    A.push(F ? [\n                        qe,\n                        I\n                    ] : qe);\n                }\n            }\n            y.push(...A);\n        } else y.push(v);\n        return y;\n    }, e.getVariants = function() {\n        var y;\n        let h = [];\n        for (let [m, g] of e.variantOptions.entries())g.variantInfo !== zs.Base && h.push({\n            name: m,\n            isArbitrary: g.type === Symbol.for(\"MATCH_VARIANT\"),\n            values: Object.keys((y = g.values) != null ? y : {}),\n            hasDash: m !== \"@\",\n            selectors ({ modifier: w, value: b } = {}) {\n                var Ca, Aa, _a, Ta;\n                let v = \"__TAILWIND_PLACEHOLDER__\", O = R.rule({\n                    selector: `.${v}`\n                }), x = R.root({\n                    nodes: [\n                        O.clone()\n                    ]\n                }), A = x.toString(), E = ((Ca = e.variantMap.get(m)) != null ? Ca : []).flatMap(([ie, se])=>se), I = [];\n                for (let ie of E){\n                    let se = [], hr = {\n                        args: {\n                            modifier: w,\n                            value: (_a = (Aa = g.values) == null ? void 0 : Aa[b]) != null ? _a : b\n                        },\n                        separator: e.tailwindConfig.separator,\n                        modifySelectors (pe) {\n                            return x.each((qn)=>{\n                                qn.type === \"rule\" && (qn.selectors = qn.selectors.map((Pa)=>pe({\n                                        get className () {\n                                            return Ws(Pa);\n                                        },\n                                        selector: Pa\n                                    })));\n                            }), x;\n                        },\n                        format (pe) {\n                            se.push(pe);\n                        },\n                        wrap (pe) {\n                            se.push(`@${pe.name} ${pe.params} { & }`);\n                        },\n                        container: x\n                    }, mr = ie(hr);\n                    if (se.length > 0 && I.push(se), Array.isArray(mr)) for (let pe of mr)se = [], pe(hr), I.push(se);\n                }\n                let F = [], Y = x.toString();\n                A !== Y && (x.walkRules((ie)=>{\n                    let se = ie.selector, hr = (0, Vs.default)((mr)=>{\n                        mr.walkClasses((pe)=>{\n                            pe.value = `${m}${e.tailwindConfig.separator}${pe.value}`;\n                        });\n                    }).processSync(se);\n                    F.push(se.replace(hr, \"&\").replace(v, \"&\"));\n                }), x.walkAtRules((ie)=>{\n                    F.push(`@${ie.name} (${ie.params}) { & }`);\n                }));\n                let K = !(b in ((Ta = g.values) != null ? Ta : {}));\n                I = I.map((ie)=>ie.map((se)=>({\n                            format: se,\n                            isArbitraryVariant: K\n                        }))), F = F.map((ie)=>({\n                        format: ie,\n                        isArbitraryVariant: K\n                    }));\n                let B = {\n                    candidate: v,\n                    context: e\n                }, qe = I.map((ie)=>on(`.${v}`, ot(ie, B), B).replace(`.${v}`, \"&\").replace(\"{ & }\", \"\").trim());\n                return F.length > 0 && qe.push(ot(F, B).toString().replace(`.${v}`, \"&\")), qe;\n            }\n        });\n        return h;\n    };\n}\nfunction Tf(t, e) {\n    !t.classCache.has(e) || (t.notClassCache.add(e), t.classCache.delete(e), t.applyClassCache.delete(e), t.candidateRuleMap.delete(e), t.candidateRuleCache.delete(e), t.stylesheetCache = null);\n}\nfunction mv(t, e) {\n    let r = e.raws.tailwind.candidate;\n    if (!!r) {\n        for (let n of t.ruleCache)n[1].raws.tailwind.candidate === r && t.ruleCache.delete(n);\n        Tf(t, r);\n    }\n}\nfunction Pf(t, e = [], r = R.root()) {\n    var a;\n    let n = {\n        disposables: [],\n        ruleCache: new Set,\n        candidateRuleCache: new Map,\n        classCache: new Map,\n        applyClassCache: new Map,\n        notClassCache: new Set((a = t.blocklist) != null ? a : []),\n        postCssNodeCache: new Map,\n        candidateRuleMap: new Map,\n        tailwindConfig: t,\n        changedContent: e,\n        variantMap: new Map,\n        stylesheetCache: null,\n        variantOptions: new Map,\n        markInvalidUtilityCandidate: (s)=>Tf(n, s),\n        markInvalidUtilityNode: (s)=>mv(n, s)\n    }, i = dv(n, r);\n    return hv(i, n), n;\n}\nvar Bs = H(ve());\nfunction yn(t, e) {\n    let r = (0, Bs.default)().astSync(t);\n    return r.each((n)=>{\n        n.nodes[0].type === \"pseudo\" && n.nodes[0].value === \":is\" && n.nodes.every((a)=>a.type !== \"combinator\") || (n.nodes = [\n            Bs.default.pseudo({\n                value: \":is\",\n                nodes: [\n                    n.clone()\n                ]\n            })\n        ]), at(n);\n    }), `${e} ${r.toString()}`;\n}\nvar gv = (0, wn.default)((t)=>t.first.filter(({ type: e })=>e === \"class\").pop().value);\nfunction Ws(t) {\n    return gv.transformSync(t);\n}\nfunction* yv(t) {\n    let e = 1 / 0;\n    for(; e >= 0;){\n        let r, n = !1;\n        if (e === 1 / 0 && t.endsWith(\"]\")) {\n            let s = t.indexOf(\"[\");\n            t[s - 1] === \"-\" ? r = s - 1 : t[s - 1] === \"/\" ? (r = s - 1, n = !0) : r = -1;\n        } else e === 1 / 0 && t.includes(\"/\") ? (r = t.lastIndexOf(\"/\"), n = !0) : r = t.lastIndexOf(\"-\", e);\n        if (r < 0) break;\n        let i = t.slice(0, r), a = t.slice(n ? r : r + 1);\n        e = r - 1, !(i === \"\" || a === \"/\") && (yield [\n            i,\n            a\n        ]);\n    }\n}\nfunction vv(t, e) {\n    if (t.length === 0 || e.tailwindConfig.prefix === \"\") return t;\n    for (let r of t){\n        let [n] = r;\n        if (n.options.respectPrefix) {\n            let i = R.root({\n                nodes: [\n                    r[1].clone()\n                ]\n            }), a = r[1].raws.tailwind.classCandidate;\n            i.walkRules((s)=>{\n                let o = a.startsWith(\"-\");\n                s.selector = it(e.tailwindConfig.prefix, s.selector, o);\n            }), r[1] = i.nodes[0];\n        }\n    }\n    return t;\n}\nfunction wv(t, e) {\n    if (t.length === 0) return t;\n    let r = [];\n    for (let [n, i] of t){\n        let a = R.root({\n            nodes: [\n                i.clone()\n            ]\n        });\n        a.walkRules((s)=>{\n            let o = (0, wn.default)().astSync(s.selector);\n            o.each((l)=>Ms(l, e)), af(o, (l)=>l === e ? `!${l}` : l), s.selector = o.toString(), s.walkDecls((l)=>l.important = !0);\n        }), r.push([\n            {\n                ...n,\n                important: !0\n            },\n            a.nodes[0]\n        ]);\n    }\n    return r;\n}\nfunction bv(t, e, r) {\n    var i;\n    if (e.length === 0) return e;\n    let n = {\n        modifier: null,\n        value: mt\n    };\n    {\n        let [a, ...s] = ee(t, \"/\");\n        if (s.length > 1 && (a = a + \"/\" + s.slice(0, -1).join(\"/\"), s = s.slice(-1)), s.length && !r.variantMap.has(t) && (t = a, n.modifier = s[0], !G(r.tailwindConfig, \"generalizedModifiers\"))) return [];\n    }\n    if (t.endsWith(\"]\") && !t.startsWith(\"[\")) {\n        let a = /(.)(-?)\\[(.*)\\]/g.exec(t);\n        if (a) {\n            let [, s, o, l] = a;\n            if (s === \"@\" && o === \"-\") return [];\n            if (s !== \"@\" && o === \"\") return [];\n            t = t.replace(`${o}[${l}]`, \"\"), n.value = l;\n        }\n    }\n    if (Ys(t) && !r.variantMap.has(t)) {\n        let a = r.offsets.recordVariant(t), s = z(t.slice(1, -1)), o = ee(s, \",\");\n        if (o.length > 1) return [];\n        if (!o.every(mn)) return [];\n        let l = o.map((u, f)=>[\n                r.offsets.applyParallelOffset(a, f),\n                lr(u.trim())\n            ]);\n        r.variantMap.set(t, l);\n    }\n    if (r.variantMap.has(t)) {\n        let a = Ys(t), s = r.variantMap.get(t).slice(), o = [];\n        for (let [l, u] of e){\n            if (l.layer === \"user\") continue;\n            let f = R.root({\n                nodes: [\n                    u.clone()\n                ]\n            });\n            for (let [p, c, d] of s){\n                let m = function() {\n                    h.raws.neededBackup || (h.raws.neededBackup = !0, h.walkRules((v)=>v.raws.originalSelector = v.selector));\n                }, g = function(v) {\n                    return m(), h.each((O)=>{\n                        O.type === \"rule\" && (O.selectors = O.selectors.map((x)=>v({\n                                get className () {\n                                    return Ws(x);\n                                },\n                                selector: x\n                            })));\n                    }), h;\n                }, h = (d != null ? d : f).clone(), y = [], w = c({\n                    get container () {\n                        return m(), h;\n                    },\n                    separator: r.tailwindConfig.separator,\n                    modifySelectors: g,\n                    wrap (v) {\n                        let O = h.nodes;\n                        h.removeAll(), v.append(O), h.append(v);\n                    },\n                    format (v) {\n                        y.push({\n                            format: v,\n                            isArbitraryVariant: a\n                        });\n                    },\n                    args: n\n                });\n                if (Array.isArray(w)) {\n                    for (let [v, O] of w.entries())s.push([\n                        r.offsets.applyParallelOffset(p, v),\n                        O,\n                        h.clone()\n                    ]);\n                    continue;\n                }\n                if (typeof w == \"string\" && y.push({\n                    format: w,\n                    isArbitraryVariant: a\n                }), w === null) continue;\n                h.raws.neededBackup && (delete h.raws.neededBackup, h.walkRules((v)=>{\n                    let O = v.raws.originalSelector;\n                    if (!O || (delete v.raws.originalSelector, O === v.selector)) return;\n                    let x = v.selector, A = (0, wn.default)((E)=>{\n                        E.walkClasses((I)=>{\n                            I.value = `${t}${r.tailwindConfig.separator}${I.value}`;\n                        });\n                    }).processSync(O);\n                    y.push({\n                        format: x.replace(A, \"&\"),\n                        isArbitraryVariant: a\n                    }), v.selector = O;\n                })), h.nodes[0].raws.tailwind = {\n                    ...h.nodes[0].raws.tailwind,\n                    parentLayer: l.layer\n                };\n                let b = [\n                    {\n                        ...l,\n                        sort: r.offsets.applyVariantOffset(l.sort, p, Object.assign(n, r.variantOptions.get(t))),\n                        collectedFormats: ((i = l.collectedFormats) != null ? i : []).concat(y)\n                    },\n                    h.nodes[0]\n                ];\n                o.push(b);\n            }\n        }\n        return o;\n    }\n    return [];\n}\nfunction Gs(t, e, r = {}) {\n    return !X(t) && !Array.isArray(t) ? [\n        [\n            t\n        ],\n        r\n    ] : Array.isArray(t) ? Gs(t[0], e, t[1]) : (e.has(t) || e.set(t, nt(t)), [\n        e.get(t),\n        r\n    ]);\n}\nvar xv = /^[a-z_-]/;\nfunction Sv(t) {\n    return xv.test(t);\n}\nfunction kv(t) {\n    if (!t.includes(\"://\")) return !1;\n    try {\n        let e = new URL(t);\n        return e.scheme !== \"\" && e.host !== \"\";\n    } catch  {\n        return !1;\n    }\n}\nfunction If(t) {\n    let e = !0;\n    return t.walkDecls((r)=>{\n        if (!Rf(r.prop, r.value)) return e = !1, !1;\n    }), e;\n}\nfunction Rf(t, e) {\n    if (kv(`${t}:${e}`)) return !1;\n    try {\n        return R.parse(`a{${t}:${e}}`).toResult(), !0;\n    } catch  {\n        return !1;\n    }\n}\nfunction Ov(t, e) {\n    var s;\n    let [, r, n] = (s = t.match(/^\\[([a-zA-Z0-9-_]+):(\\S+)\\]$/)) != null ? s : [];\n    if (n === void 0 || !Sv(r) || !lt(n)) return null;\n    let i = z(n);\n    return Rf(r, i) ? [\n        [\n            {\n                sort: e.offsets.arbitraryProperty(),\n                layer: \"utilities\"\n            },\n            ()=>({\n                    [Fs(t)]: {\n                        [r]: i\n                    }\n                })\n        ]\n    ] : null;\n}\nfunction* Ev(t, e) {\n    e.candidateRuleMap.has(t) && (yield [\n        e.candidateRuleMap.get(t),\n        \"DEFAULT\"\n    ]), yield* function*(o) {\n        o !== null && (yield [\n            o,\n            \"DEFAULT\"\n        ]);\n    }(Ov(t, e));\n    let r = t, n = !1, i = e.tailwindConfig.prefix, a = i.length, s = r.startsWith(i) || r.startsWith(`-${i}`);\n    r[a] === \"-\" && s && (n = !0, r = i + r.slice(a + 1)), n && e.candidateRuleMap.has(r) && (yield [\n        e.candidateRuleMap.get(r),\n        \"-DEFAULT\"\n    ]);\n    for (let [o, l] of yv(r))e.candidateRuleMap.has(o) && (yield [\n        e.candidateRuleMap.get(o),\n        n ? `-${l}` : l\n    ]);\n}\nfunction Cv(t, e) {\n    return t === ke ? [\n        ke\n    ] : ee(t, e);\n}\nfunction* Av(t, e) {\n    var r, n;\n    for (let i of t)i[1].raws.tailwind = {\n        ...i[1].raws.tailwind,\n        classCandidate: e,\n        preserveSource: (n = (r = i[0].options) == null ? void 0 : r.preserveSource) != null ? n : !1\n    }, yield i;\n}\nfunction* bn(t, e, r = t) {\n    var o, l, u, f;\n    let n = e.tailwindConfig.separator, [i, ...a] = Cv(t, n).reverse(), s = !1;\n    if (i.startsWith(\"!\") && (s = !0, i = i.slice(1)), G(e.tailwindConfig, \"variantGrouping\") && i.startsWith(\"(\") && i.endsWith(\")\")) {\n        let p = a.slice().reverse().join(n);\n        for (let c of ee(i.slice(1, -1), \",\"))yield* bn(p + n + c, e, r);\n    }\n    for (let p of Ev(i, e)){\n        let c = [], d = new Map, [h, y] = p, m = h.length === 1;\n        for (let [g, w] of h){\n            let b = [];\n            if (typeof w == \"function\") for (let v of [].concat(w(y, {\n                isOnlyPlugin: m\n            }))){\n                let [O, x] = Gs(v, e.postCssNodeCache);\n                for (let A of O)b.push([\n                    {\n                        ...g,\n                        options: {\n                            ...g.options,\n                            ...x\n                        }\n                    },\n                    A\n                ]);\n            }\n            else if (y === \"DEFAULT\" || y === \"-DEFAULT\") {\n                let v = w, [O, x] = Gs(v, e.postCssNodeCache);\n                for (let A of O)b.push([\n                    {\n                        ...g,\n                        options: {\n                            ...g.options,\n                            ...x\n                        }\n                    },\n                    A\n                ]);\n            }\n            if (b.length > 0) {\n                let v = Array.from(Ps((l = (o = g.options) == null ? void 0 : o.types) != null ? l : [], y, (u = g.options) != null ? u : {}, e.tailwindConfig)).map(([O, x])=>x);\n                v.length > 0 && d.set(b, v), c.push(b);\n            }\n        }\n        if (Ys(y)) {\n            if (c.length > 1) {\n                let b = function(O) {\n                    return O.length === 1 ? O[0] : O.find((x)=>{\n                        let A = d.get(x);\n                        return x.some(([{ options: E }, I])=>If(I) ? E.types.some(({ type: F, preferOnConflict: Y })=>A.includes(F) && Y) : !1);\n                    });\n                }, [g, w] = c.reduce((O, x)=>(x.some(([{ options: E }])=>E.types.some(({ type: I })=>I === \"any\")) ? O[0].push(x) : O[1].push(x), O), [\n                    [],\n                    []\n                ]), v = (f = b(w)) != null ? f : b(g);\n                if (v) c = [\n                    v\n                ];\n                else {\n                    let O = c.map((A)=>{\n                        var E;\n                        return new Set([\n                            ...(E = d.get(A)) != null ? E : []\n                        ]);\n                    });\n                    for (let A of O)for (let E of A){\n                        let I = !1;\n                        for (let F of O)A !== F && F.has(E) && (F.delete(E), I = !0);\n                        I && A.delete(E);\n                    }\n                    let x = [];\n                    for (let [A, E] of O.entries())for (let I of E){\n                        let F = c[A].map(([, Y])=>Y).flat().map((Y)=>Y.toString().split(`\n`).slice(1, -1).map((K)=>K.trim()).map((K)=>`      ${K}`).join(`\n`)).join(`\n\n`);\n                        x.push(`  Use \\`${t.replace(\"[\", `[${I}:`)}\\` for \\`${F.trim()}\\``);\n                        break;\n                    }\n                    L.warn([\n                        `The class \\`${t}\\` is ambiguous and matches multiple utilities.`,\n                        ...x,\n                        `If this is content and not a class, replace it with \\`${t.replace(\"[\", \"&lsqb;\").replace(\"]\", \"&rsqb;\")}\\` to silence this warning.`\n                    ]);\n                    continue;\n                }\n            }\n            c = c.map((g)=>g.filter((w)=>If(w[1])));\n        }\n        c = c.flat(), c = Array.from(Av(c, i)), c = vv(c, e), s && (c = wv(c, i));\n        for (let g of a)c = bv(g, c, e);\n        for (let g of c)g[1].raws.tailwind = {\n            ...g[1].raws.tailwind,\n            candidate: t\n        }, g = _v(g, {\n            context: e,\n            candidate: t,\n            original: r\n        }), g !== null && (yield g);\n    }\n}\nfunction _v(t, { context: e, candidate: r, original: n }) {\n    if (!t[0].collectedFormats) return t;\n    let i = !0, a;\n    try {\n        a = ot(t[0].collectedFormats, {\n            context: e,\n            candidate: r\n        });\n    } catch  {\n        return null;\n    }\n    let s = R.root({\n        nodes: [\n            t[1].clone()\n        ]\n    });\n    return s.walkRules((o)=>{\n        if (!vn(o)) try {\n            o.selector = on(o.selector, a, {\n                candidate: n,\n                context: e\n            });\n        } catch  {\n            return i = !1, !1;\n        }\n    }), i ? (t[1] = s.nodes[0], t) : null;\n}\nfunction vn(t) {\n    return t.parent && t.parent.type === \"atrule\" && t.parent.name === \"keyframes\";\n}\nfunction Tv(t) {\n    if (t === !0) return (e)=>{\n        vn(e) || e.walkDecls((r)=>{\n            r.parent.type === \"rule\" && !vn(r.parent) && (r.important = !0);\n        });\n    };\n    if (typeof t == \"string\") return (e)=>{\n        vn(e) || (e.selectors = e.selectors.map((r)=>yn(r, t)));\n    };\n}\nfunction gn(t, e) {\n    var i;\n    let r = [], n = Tv(e.tailwindConfig.important);\n    for (let a of t){\n        if (e.notClassCache.has(a)) continue;\n        if (e.candidateRuleCache.has(a)) {\n            r = r.concat(Array.from(e.candidateRuleCache.get(a)));\n            continue;\n        }\n        let s = Array.from(bn(a, e));\n        if (s.length === 0) {\n            e.notClassCache.add(a);\n            continue;\n        }\n        e.classCache.set(a, s);\n        let o = (i = e.candidateRuleCache.get(a)) != null ? i : new Set;\n        e.candidateRuleCache.set(a, o);\n        for (let l of s){\n            let [{ sort: u, options: f }, p] = l;\n            if (f.respectImportant && n) {\n                let d = R.root({\n                    nodes: [\n                        p.clone()\n                    ]\n                });\n                d.walkRules(n), p = d.nodes[0];\n            }\n            let c = [\n                u,\n                p\n            ];\n            o.add(c), e.ruleCache.add(c), r.push(c);\n        }\n    }\n    return r;\n}\nfunction Ys(t) {\n    return t.startsWith(\"[\") && t.endsWith(\"]\");\n}\nfunction Ge(t, e = void 0, r = void 0) {\n    return t.map((n)=>{\n        var s;\n        let i = n.clone(), a = ((s = n.raws.tailwind) == null ? void 0 : s.preserveSource) !== !0 || !i.source;\n        return e !== void 0 && a && (i.source = e, \"walk\" in i && i.walk((o)=>{\n            o.source = e;\n        })), r !== void 0 && (i.raws.tailwind = {\n            ...i.raws.tailwind,\n            ...r\n        }), i;\n    });\n}\nvar Df = /[\\\\^$.*+?()[\\]{}|]/g, Pv = RegExp(Df.source);\nfunction xn(t) {\n    return t = Array.isArray(t) ? t : [\n        t\n    ], t = t.map((e)=>e instanceof RegExp ? e.source : e), t.join(\"\");\n}\nfunction ce(t) {\n    return new RegExp(xn(t), \"g\");\n}\nfunction ut(t) {\n    return `(?:${t.map(xn).join(\"|\")})`;\n}\nfunction Hs(t) {\n    return `(?:${xn(t)})?`;\n}\nfunction Mf(t) {\n    return `(?:${xn(t)})*`;\n}\nfunction Ff(t) {\n    return t && Pv.test(t) ? t.replace(Df, \"\\\\$&\") : t || \"\";\n}\nfunction Lf(t) {\n    let e = Array.from(Rv(t));\n    return (r)=>{\n        var i;\n        let n = [];\n        for (let a of e)n = [\n            ...n,\n            ...(i = r.match(a)) != null ? i : []\n        ];\n        return n.filter((a)=>a !== void 0).map(Fv);\n    };\n}\nfunction* Rv(t) {\n    let e = t.tailwindConfig.separator, r = G(t.tailwindConfig, \"variantGrouping\"), n = t.tailwindConfig.prefix !== \"\" ? Hs(ce([\n        /-?/,\n        Ff(t.tailwindConfig.prefix)\n    ])) : \"\", i = ut([\n        /\\[[^\\s:'\"`]+:[^\\s\\[\\]]+\\]/,\n        /\\[[^\\s:'\"`]+:[^\\s]+?\\[[^\\s]+\\][^\\s]+?\\]/,\n        ce([\n            /-?(?:\\w+)/,\n            Hs(ut([\n                ce([\n                    /-(?:\\w+-)*\\[[^\\s:]+\\]/,\n                    /(?![{([]])/,\n                    /(?:\\/[^\\s'\"`\\\\><$]*)?/\n                ]),\n                ce([\n                    /-(?:\\w+-)*\\[[^\\s]+\\]/,\n                    /(?![{([]])/,\n                    /(?:\\/[^\\s'\"`\\\\$]*)?/\n                ]),\n                /[-\\/][^\\s'\"`\\\\$={><]*/\n            ]))\n        ])\n    ]), a = [\n        ut([\n            ce([\n                /@\\[[^\\s\"'`]+\\](\\/[^\\s\"'`]+)?/,\n                e\n            ]),\n            ce([\n                /([^\\s\"'`\\[\\\\]+-)?\\[[^\\s\"'`]+\\]/,\n                e\n            ]),\n            ce([\n                /[^\\s\"'`\\[\\\\]+/,\n                e\n            ])\n        ]),\n        ut([\n            ce([\n                /([^\\s\"'`\\[\\\\]+-)?\\[[^\\s`]+\\]/,\n                e\n            ]),\n            ce([\n                /[^\\s`\\[\\\\]+/,\n                e\n            ])\n        ])\n    ];\n    for (let s of a)yield ce([\n        \"((?=((\",\n        s,\n        \")+))\\\\2)?\",\n        /!?/,\n        n,\n        r ? ut([\n            ce([\n                /\\(/,\n                i,\n                Mf([\n                    /,/,\n                    i\n                ]),\n                /\\)/\n            ]),\n            i\n        ]) : i\n    ]);\n    yield /[^<>\"'`\\s.(){}[\\]#=%$]*[^<>\"'`\\s.(){}[\\]#=%:$]/g;\n}\nvar Dv = /([\\[\\]'\"`])([^\\[\\]'\"`])?/g, Mv = /[^\"'`\\s<>\\]]+/;\nfunction Fv(t) {\n    if (!t.includes(\"-[\")) return t;\n    let e = 0, r = [], n = t.matchAll(Dv);\n    n = Array.from(n).flatMap((i)=>{\n        let [, ...a] = i;\n        return a.map((s, o)=>Object.assign([], i, {\n                index: i.index + o,\n                0: s\n            }));\n    });\n    for (let i of n){\n        let a = i[0], s = r[r.length - 1];\n        if (a === s ? r.pop() : (a === \"'\" || a === '\"' || a === \"`\") && r.push(a), !s) {\n            if (a === \"[\") {\n                e++;\n                continue;\n            } else if (a === \"]\") {\n                e--;\n                continue;\n            }\n            if (e < 0) return t.substring(0, i.index - 1);\n            if (e === 0 && !Mv.test(a)) return t.substring(0, i.index);\n        }\n    }\n    return t;\n}\nvar Ae = Vn, Nf = {\n    DEFAULT: Lf\n}, qf = {\n    DEFAULT: (t)=>t,\n    svelte: (t)=>t.replace(/(?:^|\\s)class:/g, \" \")\n};\nfunction Lv(t, e) {\n    let r = t.tailwindConfig.content.extract;\n    return r[e] || r.DEFAULT || Nf[e] || Nf.DEFAULT(t);\n}\nfunction Nv(t, e) {\n    let r = t.content.transform;\n    return r[e] || r.DEFAULT || qf[e] || qf.DEFAULT;\n}\nvar ur = new WeakMap;\nfunction qv(t, e, r, n) {\n    ur.has(e) || ur.set(e, new $f.default({\n        maxSize: 25e3\n    }));\n    for (let i of t.split(`\n`))if (i = i.trim(), !n.has(i)) if (n.add(i), ur.get(e).has(i)) for (let a of ur.get(e).get(i))r.add(a);\n    else {\n        let a = e(i).filter((o)=>o !== \"!*\"), s = new Set(a);\n        for (let o of s)r.add(o);\n        ur.get(e).set(i, s);\n    }\n}\nfunction $v(t, e) {\n    let r = e.offsets.sort(t), n = {\n        base: new Set,\n        defaults: new Set,\n        components: new Set,\n        utilities: new Set,\n        variants: new Set\n    };\n    for (let [i, a] of r)n[i.layer].add(a);\n    return n;\n}\nfunction Qs(t) {\n    return (e)=>{\n        var h;\n        let r = {\n            base: null,\n            components: null,\n            utilities: null,\n            variants: null\n        };\n        if (e.walkAtRules((y)=>{\n            y.name === \"tailwind\" && Object.keys(r).includes(y.params) && (r[y.params] = y);\n        }), Object.values(r).every((y)=>y === null)) return e;\n        let n = new Set([\n            ...(h = t.candidates) != null ? h : [],\n            ke\n        ]), i = new Set;\n        Ae.DEBUG && console.time(\"Reading changed files\");\n        for (let { file: y, content: m, extension: g } of t.changedContent){\n            let w = Nv(t.tailwindConfig, g), b = Lv(t, g);\n            m = y ? ht.readFileSync(y, \"utf8\") : m, qv(w(m), b, n, i);\n        }\n        Ae.DEBUG && console.timeEnd(\"Reading changed files\");\n        let a = t.classCache.size;\n        Ae.DEBUG && console.time(\"Generate rules\"), Ae.DEBUG && console.time(\"Sorting candidates\");\n        let s = new Set([\n            ...n\n        ].sort((y, m)=>y === m ? 0 : y < m ? -1 : 1));\n        Ae.DEBUG && console.timeEnd(\"Sorting candidates\"), gn(s, t), Ae.DEBUG && console.timeEnd(\"Generate rules\"), Ae.DEBUG && console.time(\"Build stylesheet\"), (t.stylesheetCache === null || t.classCache.size !== a) && (t.stylesheetCache = $v([\n            ...t.ruleCache\n        ], t)), Ae.DEBUG && console.timeEnd(\"Build stylesheet\");\n        let { defaults: o, base: l, components: u, utilities: f, variants: p } = t.stylesheetCache;\n        r.base && (r.base.before(Ge([\n            ...l,\n            ...o\n        ], r.base.source, {\n            layer: \"base\"\n        })), r.base.remove()), r.components && (r.components.before(Ge([\n            ...u\n        ], r.components.source, {\n            layer: \"components\"\n        })), r.components.remove()), r.utilities && (r.utilities.before(Ge([\n            ...f\n        ], r.utilities.source, {\n            layer: \"utilities\"\n        })), r.utilities.remove());\n        let c = Array.from(p).filter((y)=>{\n            var g;\n            let m = (g = y.raws.tailwind) == null ? void 0 : g.parentLayer;\n            return m === \"components\" ? r.components !== null : m === \"utilities\" ? r.utilities !== null : !0;\n        });\n        r.variants ? (r.variants.before(Ge(c, r.variants.source, {\n            layer: \"variants\"\n        })), r.variants.remove()) : c.length > 0 && e.append(Ge(c, e.source, {\n            layer: \"variants\"\n        }));\n        let d = c.some((y)=>{\n            var m;\n            return ((m = y.raws.tailwind) == null ? void 0 : m.parentLayer) === \"utilities\";\n        });\n        r.utilities && f.size === 0 && !d && L.warn(\"content-problems\", [\n            \"No utility classes were detected in your source files. If this is unexpected, double-check the `content` option in your Tailwind CSS configuration.\",\n            \"https://tailwindcss.com/docs/content-configuration\"\n        ]), Ae.DEBUG && (console.log(\"Potential classes: \", n.size), console.log(\"Active contexts: \", Wn.size)), t.changedContent = [], e.walkAtRules(\"layer\", (y)=>{\n            Object.keys(r).includes(y.params) && y.remove();\n        });\n    };\n}\nvar kn = H(ve());\nfunction Sn(t) {\n    let e = new Map;\n    R.root({\n        nodes: [\n            t.clone()\n        ]\n    }).walkRules((a)=>{\n        (0, kn.default)((s)=>{\n            s.walkClasses((o)=>{\n                let l = o.parent.toString(), u = e.get(l);\n                u || e.set(l, u = new Set), u.add(o.value);\n            });\n        }).processSync(a.selector);\n    });\n    let n = Array.from(e.values(), (a)=>Array.from(a)), i = n.flat();\n    return Object.assign(i, {\n        groups: n\n    });\n}\nvar Uv = (0, kn.default)();\nfunction Js(t) {\n    return Uv.astSync(t);\n}\nfunction Uf(t, e) {\n    let r = new Set;\n    for (let n of t)r.add(n.split(e).pop());\n    return Array.from(r);\n}\nfunction jf(t, e) {\n    let r = t.tailwindConfig.prefix;\n    return typeof r == \"function\" ? r(e) : r + e;\n}\nfunction* Vf(t) {\n    for(yield t; t.parent;)yield t.parent, t = t.parent;\n}\nfunction jv(t, e = {}) {\n    let r = t.nodes;\n    t.nodes = [];\n    let n = t.clone(e);\n    return t.nodes = r, n;\n}\nfunction zv(t) {\n    for (let e of Vf(t))if (t !== e) {\n        if (e.type === \"root\") break;\n        t = jv(e, {\n            nodes: [\n                t\n            ]\n        });\n    }\n    return t;\n}\nfunction Vv(t, e) {\n    let r = new Map;\n    return t.walkRules((n)=>{\n        var s;\n        for (let o of Vf(n))if (((s = o.raws.tailwind) == null ? void 0 : s.layer) !== void 0) return;\n        let i = zv(n), a = e.offsets.create(\"user\");\n        for (let o of Sn(n)){\n            let l = r.get(o) || [];\n            r.set(o, l), l.push([\n                {\n                    layer: \"user\",\n                    sort: a,\n                    important: !1\n                },\n                i\n            ]);\n        }\n    }), r;\n}\nfunction Wv(t, e) {\n    for (let r of t){\n        if (e.notClassCache.has(r) || e.applyClassCache.has(r)) continue;\n        if (e.classCache.has(r)) {\n            e.applyClassCache.set(r, e.classCache.get(r).map(([i, a])=>[\n                    i,\n                    a.clone()\n                ]));\n            continue;\n        }\n        let n = Array.from(bn(r, e));\n        if (n.length === 0) {\n            e.notClassCache.add(r);\n            continue;\n        }\n        e.applyClassCache.set(r, n);\n    }\n    return e.applyClassCache;\n}\nfunction Bv(t) {\n    let e = null;\n    return {\n        get: (r)=>(e = e || t(), e.get(r)),\n        has: (r)=>(e = e || t(), e.has(r))\n    };\n}\nfunction Gv(t) {\n    return {\n        get: (e)=>t.flatMap((r)=>r.get(e) || []),\n        has: (e)=>t.some((r)=>r.has(e))\n    };\n}\nfunction zf(t) {\n    let e = t.split(/[\\s\\t\\n]+/g);\n    return e[e.length - 1] === \"!important\" ? [\n        e.slice(0, -1),\n        !0\n    ] : [\n        e,\n        !1\n    ];\n}\nfunction Wf(t, e, r) {\n    let n = new Set, i = [];\n    if (t.walkAtRules(\"apply\", (l)=>{\n        let [u] = zf(l.params);\n        for (let f of u)n.add(f);\n        i.push(l);\n    }), i.length === 0) return;\n    let a = Gv([\n        r,\n        Wv(n, e)\n    ]);\n    function s(l, u, f) {\n        let p = Js(l), c = Js(u), h = Js(`.${re(f)}`).nodes[0].nodes[0];\n        return p.each((y)=>{\n            let m = new Set;\n            c.each((g)=>{\n                let w = !1;\n                g = g.clone(), g.walkClasses((b)=>{\n                    b.value === h.value && (w || (b.replaceWith(...y.nodes.map((v)=>v.clone())), m.add(g), w = !0));\n                });\n            });\n            for (let g of m){\n                let w = [\n                    []\n                ];\n                for (let b of g.nodes)b.type === \"combinator\" ? (w.push(b), w.push([])) : w[w.length - 1].push(b);\n                g.nodes = [];\n                for (let b of w)Array.isArray(b) && b.sort((v, O)=>v.type === \"tag\" && O.type === \"class\" ? -1 : v.type === \"class\" && O.type === \"tag\" ? 1 : v.type === \"class\" && O.type === \"pseudo\" && O.value.startsWith(\"::\") ? -1 : v.type === \"pseudo\" && v.value.startsWith(\"::\") && O.type === \"class\" ? 1 : 0), g.nodes = g.nodes.concat(b);\n            }\n            y.replaceWith(...m);\n        }), p.toString();\n    }\n    let o = new Map;\n    for (let l of i){\n        let [u] = o.get(l.parent) || [\n            [],\n            l.source\n        ];\n        o.set(l.parent, [\n            u,\n            l.source\n        ]);\n        let [f, p] = zf(l.params);\n        if (l.parent.type === \"atrule\") {\n            if (l.parent.name === \"screen\") {\n                let c = l.parent.params;\n                throw l.error(`@apply is not supported within nested at-rules like @screen. We suggest you write this as @apply ${f.map((d)=>`${c}:${d}`).join(\" \")} instead.`);\n            }\n            throw l.error(`@apply is not supported within nested at-rules like @${l.parent.name}. You can fix this by un-nesting @${l.parent.name}.`);\n        }\n        for (let c of f){\n            if ([\n                jf(e, \"group\"),\n                jf(e, \"peer\")\n            ].includes(c)) throw l.error(`@apply should not be used with the '${c}' utility`);\n            if (!a.has(c)) throw l.error(`The \\`${c}\\` class does not exist. If \\`${c}\\` is a custom class, make sure it is defined within a \\`@layer\\` directive.`);\n            let d = a.get(c);\n            u.push([\n                c,\n                p,\n                d\n            ]);\n        }\n    }\n    for (let [l, [u, f]] of o){\n        let p = [];\n        for (let [d, h, y] of u){\n            let m = [\n                d,\n                ...Uf([\n                    d\n                ], e.tailwindConfig.separator)\n            ];\n            for (let [g, w] of y){\n                let b = Sn(l), v = Sn(w);\n                if (v = v.groups.filter((E)=>E.some((I)=>m.includes(I))).flat(), v = v.concat(Uf(v, e.tailwindConfig.separator)), b.some((E)=>v.includes(E))) throw w.error(`You cannot \\`@apply\\` the \\`${d}\\` utility here because it creates a circular dependency.`);\n                let x = R.root({\n                    nodes: [\n                        w.clone()\n                    ]\n                });\n                x.walk((E)=>{\n                    E.source = f;\n                }), (w.type !== \"atrule\" || w.type === \"atrule\" && w.name !== \"keyframes\") && x.walkRules((E)=>{\n                    if (!Sn(E).some((B)=>B === d)) {\n                        E.remove();\n                        return;\n                    }\n                    let I = typeof e.tailwindConfig.important == \"string\" ? e.tailwindConfig.important : null, Y = l.raws.tailwind !== void 0 && I && l.selector.indexOf(I) === 0 ? l.selector.slice(I.length) : l.selector;\n                    E.selector = s(Y, E.selector, d), I && Y !== l.selector && (E.selector = yn(E.selector, I)), E.walkDecls((B)=>{\n                        B.important = g.important || h;\n                    });\n                    let K = (0, kn.default)().astSync(E.selector);\n                    K.each((B)=>at(B)), E.selector = K.toString();\n                }), x.nodes[0] && p.push([\n                    g.sort,\n                    x.nodes[0]\n                ]);\n            }\n        }\n        let c = e.offsets.sort(p).map((d)=>d[1]);\n        l.after(c);\n    }\n    for (let l of i)l.parent.nodes.length > 1 ? l.remove() : l.parent.remove();\n    Wf(t, e, r);\n}\nfunction Xs(t) {\n    return (e)=>{\n        let r = Bv(()=>Vv(e, t));\n        Wf(e, t, r);\n    };\n}\nvar fr = H(qs()), oc = H(Bf());\nvar oa = H(sc());\nfunction sa(t) {\n    return typeof t == \"object\" && t !== null;\n}\nfunction tw(t, e) {\n    let r = Le(e);\n    do if (r.pop(), (0, fr.default)(t, r) !== void 0) break;\n    while (r.length);\n    return r.length ? r : void 0;\n}\nfunction ct(t) {\n    return typeof t == \"string\" ? t : t.reduce((e, r, n)=>r.includes(\".\") ? `${e}[${r}]` : n === 0 ? r : `${e}.${r}`, \"\");\n}\nfunction lc(t) {\n    return t.map((e)=>`'${e}'`).join(\", \");\n}\nfunction ac(t) {\n    return lc(Object.keys(t));\n}\nfunction aa(t, e, r, n = {}) {\n    let i = Array.isArray(e) ? ct(e) : e.replace(/^['\"]+|['\"]+$/g, \"\"), a = Array.isArray(e) ? e : Le(i), s = (0, fr.default)(t.theme, a, r);\n    if (s === void 0) {\n        let l = `'${i}' does not exist in your theme config.`, u = a.slice(0, -1), f = (0, fr.default)(t.theme, u);\n        if (sa(f)) {\n            let p = Object.keys(f).filter((d)=>aa(t, [\n                    ...u,\n                    d\n                ]).isValid), c = (0, oc.default)(a[a.length - 1], p);\n            c ? l += ` Did you mean '${ct([\n                ...u,\n                c\n            ])}'?` : p.length > 0 && (l += ` '${ct(u)}' has the following valid keys: ${lc(p)}`);\n        } else {\n            let p = tw(t.theme, i);\n            if (p) {\n                let c = (0, fr.default)(t.theme, p);\n                sa(c) ? l += ` '${ct(p)}' has the following keys: ${ac(c)}` : l += ` '${ct(p)}' is not an object.`;\n            } else l += ` Your theme has the following top-level keys: ${ac(t.theme)}`;\n        }\n        return {\n            isValid: !1,\n            error: l\n        };\n    }\n    if (!(typeof s == \"string\" || typeof s == \"number\" || typeof s == \"function\" || s instanceof String || s instanceof Number || Array.isArray(s))) {\n        let l = `'${i}' was found but does not resolve to a string.`;\n        if (sa(s)) {\n            let u = Object.keys(s).filter((f)=>aa(t, [\n                    ...a,\n                    f\n                ]).isValid);\n            u.length && (l += ` Did you mean something like '${ct([\n                ...a,\n                u[0]\n            ])}'?`);\n        }\n        return {\n            isValid: !1,\n            error: l\n        };\n    }\n    let [o] = a;\n    return {\n        isValid: !0,\n        value: Ce(o)(s, n)\n    };\n}\nfunction rw(t, e, r) {\n    e = e.map((i)=>uc(t, i, r));\n    let n = [\n        \"\"\n    ];\n    for (let i of e)i.type === \"div\" && i.value === \",\" ? n.push(\"\") : n[n.length - 1] += oa.default.stringify(i);\n    return n;\n}\nfunction uc(t, e, r) {\n    if (e.type === \"function\" && r[e.value] !== void 0) {\n        let n = rw(t, e.nodes, r);\n        e.type = \"word\", e.value = r[e.value](t, ...n);\n    }\n    return e;\n}\nfunction nw(t, e, r) {\n    return (0, oa.default)(e).walk((n)=>{\n        uc(t, n, r);\n    }).toString();\n}\nvar iw = {\n    atrule: \"params\",\n    decl: \"value\"\n};\nfunction* sw(t) {\n    t = t.replace(/^['\"]+|['\"]+$/g, \"\");\n    let e = t.match(/^([^\\s]+)(?![^\\[]*\\])(?:\\s*\\/\\s*([^\\/\\s]+))$/), r;\n    yield [\n        t,\n        void 0\n    ], e && (t = e[1], r = e[2], yield [\n        t,\n        r\n    ]);\n}\nfunction aw(t, e, r) {\n    var i;\n    let n = Array.from(sw(e)).map(([a, s])=>Object.assign(aa(t, a, r, {\n            opacityValue: s\n        }), {\n            resolvedPath: a,\n            alpha: s\n        }));\n    return (i = n.find((a)=>a.isValid)) != null ? i : n[0];\n}\nfunction fc(t) {\n    let e = t.tailwindConfig, r = {\n        theme: (n, i, ...a)=>{\n            var c;\n            let { isValid: s, value: o, error: l, alpha: u } = aw(e, i, a.length ? a : void 0);\n            if (!s) {\n                let d = n.parent, h = (c = d == null ? void 0 : d.raws.tailwind) == null ? void 0 : c.candidate;\n                if (d && h !== void 0) {\n                    t.markInvalidUtilityNode(d), d.remove(), L.warn(\"invalid-theme-key-in-class\", [\n                        `The utility \\`${h}\\` contains an invalid theme value and was not generated.`\n                    ]);\n                    return;\n                }\n                throw n.error(l);\n            }\n            let f = st(o);\n            return (u !== void 0 || f !== void 0 && typeof f == \"function\") && (u === void 0 && (u = 1), o = we(f, u, f)), o;\n        },\n        screen: (n, i)=>{\n            i = i.replace(/^['\"]+/g, \"\").replace(/['\"]+$/g, \"\");\n            let s = Fe(e.theme.screens).find(({ name: o })=>o === i);\n            if (!s) throw n.error(`The '${i}' screen does not exist in your theme.`);\n            return Me(s);\n        }\n    };\n    return (n)=>{\n        n.walk((i)=>{\n            let a = iw[i.type];\n            a !== void 0 && (i[a] = nw(i, i[a], r));\n        });\n    };\n}\nfunction cc({ tailwindConfig: { theme: t } }) {\n    return function(e) {\n        e.walkAtRules(\"screen\", (r)=>{\n            let n = r.params, a = Fe(t.screens).find(({ name: s })=>s === n);\n            if (!a) throw r.error(`No \\`${n}\\` screen found.`);\n            r.name = \"media\", r.params = Me(a);\n        });\n    };\n}\nvar Tn = H(ve());\nvar pc = {\n    id (t) {\n        return Tn.default.attribute({\n            attribute: \"id\",\n            operator: \"=\",\n            value: t.value,\n            quoteMark: '\"'\n        });\n    }\n};\nfunction ow(t) {\n    let e = t.filter((o)=>o.type !== \"pseudo\" || o.nodes.length > 0 ? !0 : o.value.startsWith(\"::\") || [\n            \":before\",\n            \":after\",\n            \":first-line\",\n            \":first-letter\"\n        ].includes(o.value)).reverse(), r = new Set([\n        \"tag\",\n        \"class\",\n        \"id\",\n        \"attribute\"\n    ]), n = e.findIndex((o)=>r.has(o.type));\n    if (n === -1) return e.reverse().join(\"\").trim();\n    let i = e[n], a = pc[i.type] ? pc[i.type](i) : i;\n    e = e.slice(0, n);\n    let s = e.findIndex((o)=>o.type === \"combinator\" && o.value === \">\");\n    return s !== -1 && (e.splice(0, s), e.unshift(Tn.default.universal())), [\n        a,\n        ...e.reverse()\n    ].join(\"\").trim();\n}\nvar lw = (0, Tn.default)((t)=>t.map((e)=>{\n        let r = e.split((n)=>n.type === \"combinator\" && n.value === \" \").pop();\n        return ow(r);\n    })), la = new Map;\nfunction uw(t) {\n    return la.has(t) || la.set(t, lw.transformSync(t)), la.get(t);\n}\nfunction ua({ tailwindConfig: t }) {\n    return (e)=>{\n        var i, a;\n        let r = new Map, n = new Set;\n        if (e.walkAtRules(\"defaults\", (s)=>{\n            if (s.nodes && s.nodes.length > 0) {\n                n.add(s);\n                return;\n            }\n            let o = s.params;\n            r.has(o) || r.set(o, new Set), r.get(o).add(s.parent), s.remove();\n        }), G(t, \"optimizeUniversalDefaults\")) for (let s of n){\n            let o = new Map, l = (i = r.get(s.params)) != null ? i : [];\n            for (let u of l)for (let f of uw(u.selector)){\n                let p = f.includes(\":-\") || f.includes(\"::-\") ? f : \"__DEFAULT__\", c = (a = o.get(p)) != null ? a : new Set;\n                o.set(p, c), c.add(f);\n            }\n            if (G(t, \"optimizeUniversalDefaults\")) {\n                if (o.size === 0) {\n                    s.remove();\n                    continue;\n                }\n                for (let [, u] of o){\n                    let f = R.rule({\n                        source: s.source\n                    });\n                    f.selectors = [\n                        ...u\n                    ], f.append(s.nodes.map((p)=>p.clone())), s.before(f);\n                }\n            }\n            s.remove();\n        }\n        else if (n.size) {\n            let s = R.rule({\n                selectors: [\n                    \"*\",\n                    \"::before\",\n                    \"::after\"\n                ]\n            });\n            for (let l of n)s.append(l.nodes), s.parent || l.before(s), s.source || (s.source = l.source), l.remove();\n            let o = s.clone({\n                selectors: [\n                    \"::backdrop\"\n                ]\n            });\n            s.after(o);\n        }\n    };\n}\nvar dc = {\n    atrule: [\n        \"name\",\n        \"params\"\n    ],\n    rule: [\n        \"selector\"\n    ]\n}, fw = new Set(Object.keys(dc));\nfunction fa() {\n    function t(e) {\n        let r = null;\n        e.each((n)=>{\n            if (!fw.has(n.type)) {\n                r = null;\n                return;\n            }\n            if (r === null) {\n                r = n;\n                return;\n            }\n            let i = dc[n.type];\n            n.type === \"atrule\" && n.name === \"font-face\" ? r = n : i.every((a)=>{\n                var s, o;\n                return ((s = n[a]) != null ? s : \"\").replace(/\\s+/g, \" \") === ((o = r[a]) != null ? o : \"\").replace(/\\s+/g, \" \");\n            }) ? (n.nodes && r.append(n.nodes), n.remove()) : r = n;\n        }), e.each((n)=>{\n            n.type === \"atrule\" && t(n);\n        });\n    }\n    return (e)=>{\n        t(e);\n    };\n}\nfunction ca() {\n    return (t)=>{\n        t.walkRules((e)=>{\n            let r = new Map, n = new Set([]), i = new Map;\n            e.walkDecls((a)=>{\n                if (a.parent === e) {\n                    if (r.has(a.prop)) {\n                        if (r.get(a.prop).value === a.value) {\n                            n.add(r.get(a.prop)), r.set(a.prop, a);\n                            return;\n                        }\n                        i.has(a.prop) || i.set(a.prop, new Set), i.get(a.prop).add(r.get(a.prop)), i.get(a.prop).add(a);\n                    }\n                    r.set(a.prop, a);\n                }\n            });\n            for (let a of n)a.remove();\n            for (let a of i.values()){\n                let s = new Map;\n                for (let o of a){\n                    let l = pw(o.value);\n                    l !== null && (s.has(l) || s.set(l, new Set), s.get(l).add(o));\n                }\n                for (let o of s.values()){\n                    let l = Array.from(o).slice(0, -1);\n                    for (let u of l)u.remove();\n                }\n            }\n        });\n    };\n}\nvar cw = Symbol(\"unitless-number\");\nfunction pw(t) {\n    var r;\n    let e = /^-?\\d*.?\\d+([\\w%]+)?$/g.exec(t);\n    return e ? (r = e[1]) != null ? r : cw : null;\n}\nfunction dw(t) {\n    if (!t.walkAtRules) return;\n    let e = new Set;\n    if (t.walkAtRules(\"apply\", (r)=>{\n        e.add(r.parent);\n    }), e.size !== 0) for (let r of e){\n        let n = [], i = [];\n        for (let a of r.nodes)a.type === \"atrule\" && a.name === \"apply\" ? (i.length > 0 && (n.push(i), i = []), n.push([\n            a\n        ])) : i.push(a);\n        if (i.length > 0 && n.push(i), n.length !== 1) {\n            for (let a of [\n                ...n\n            ].reverse()){\n                let s = r.clone({\n                    nodes: []\n                });\n                s.append(a), r.after(s);\n            }\n            r.remove();\n        }\n    }\n}\nfunction Pn() {\n    return (t)=>{\n        dw(t);\n    };\n}\nfunction hw(t) {\n    return t.type === \"root\";\n}\nfunction mw(t) {\n    return t.type === \"atrule\" && t.name === \"layer\";\n}\nfunction hc(t) {\n    return (e, r)=>{\n        let n = !1;\n        e.walkAtRules(\"tailwind\", (i)=>{\n            if (n) return !1;\n            if (i.parent && !(hw(i.parent) || mw(i.parent))) return n = !0, i.warn(r, [\n                \"Nested @tailwind rules were detected, but are not supported.\",\n                \"Consider using a prefix to scope Tailwind's classes: https://tailwindcss.com/docs/configuration#prefix\",\n                \"Alternatively, use the important selector strategy: https://tailwindcss.com/docs/configuration#selector-strategy\"\n            ].join(`\n`)), !1;\n        }), e.walkRules((i)=>{\n            if (n) return !1;\n            i.walkRules((a)=>(n = !0, a.warn(r, [\n                    \"Nested CSS was detected, but CSS nesting has not been configured correctly.\",\n                    \"Please enable a CSS nesting plugin *before* Tailwind in your configuration.\",\n                    \"See how here: https://tailwindcss.com/docs/using-with-preprocessors#nesting\"\n                ].join(`\n`)), !1));\n        });\n    };\n}\nfunction pa(t) {\n    return function(e, r) {\n        let { tailwindDirectives: n, applyDirectives: i } = Un(e);\n        hc()(e, r), Pn()(e, r);\n        let a = t({\n            tailwindDirectives: n,\n            applyDirectives: i,\n            registerDependency (s) {\n                r.messages.push({\n                    plugin: \"tailwindcss\",\n                    parent: r.opts.from,\n                    ...s\n                });\n            },\n            createContext (s, o) {\n                return Pf(s, o, e);\n            }\n        })(e, r);\n        if (a.tailwindConfig.separator === \"-\") throw new Error(\"The '-' character cannot be used as a custom separator in JIT mode due to parsing ambiguity. Please use another character like '_' instead.\");\n        nf(a.tailwindConfig), Qs(a)(e, r), Pn()(e, r), Xs(a)(e, r), fc(a)(e, r), cc(a)(e, r), ua(a)(e, r), fa(a)(e, r), ca(a)(e, r);\n    };\n}\nvar mc = [\n    \"preflight\",\n    \"container\",\n    \"accessibility\",\n    \"pointerEvents\",\n    \"visibility\",\n    \"position\",\n    \"inset\",\n    \"isolation\",\n    \"zIndex\",\n    \"order\",\n    \"gridColumn\",\n    \"gridColumnStart\",\n    \"gridColumnEnd\",\n    \"gridRow\",\n    \"gridRowStart\",\n    \"gridRowEnd\",\n    \"float\",\n    \"clear\",\n    \"margin\",\n    \"boxSizing\",\n    \"lineClamp\",\n    \"display\",\n    \"aspectRatio\",\n    \"height\",\n    \"maxHeight\",\n    \"minHeight\",\n    \"width\",\n    \"minWidth\",\n    \"maxWidth\",\n    \"flex\",\n    \"flexShrink\",\n    \"flexGrow\",\n    \"flexBasis\",\n    \"tableLayout\",\n    \"captionSide\",\n    \"borderCollapse\",\n    \"borderSpacing\",\n    \"transformOrigin\",\n    \"translate\",\n    \"rotate\",\n    \"skew\",\n    \"scale\",\n    \"transform\",\n    \"animation\",\n    \"cursor\",\n    \"touchAction\",\n    \"userSelect\",\n    \"resize\",\n    \"scrollSnapType\",\n    \"scrollSnapAlign\",\n    \"scrollSnapStop\",\n    \"scrollMargin\",\n    \"scrollPadding\",\n    \"listStylePosition\",\n    \"listStyleType\",\n    \"listStyleImage\",\n    \"appearance\",\n    \"columns\",\n    \"breakBefore\",\n    \"breakInside\",\n    \"breakAfter\",\n    \"gridAutoColumns\",\n    \"gridAutoFlow\",\n    \"gridAutoRows\",\n    \"gridTemplateColumns\",\n    \"gridTemplateRows\",\n    \"flexDirection\",\n    \"flexWrap\",\n    \"placeContent\",\n    \"placeItems\",\n    \"alignContent\",\n    \"alignItems\",\n    \"justifyContent\",\n    \"justifyItems\",\n    \"gap\",\n    \"space\",\n    \"divideWidth\",\n    \"divideStyle\",\n    \"divideColor\",\n    \"divideOpacity\",\n    \"placeSelf\",\n    \"alignSelf\",\n    \"justifySelf\",\n    \"overflow\",\n    \"overscrollBehavior\",\n    \"scrollBehavior\",\n    \"textOverflow\",\n    \"hyphens\",\n    \"whitespace\",\n    \"wordBreak\",\n    \"borderRadius\",\n    \"borderWidth\",\n    \"borderStyle\",\n    \"borderColor\",\n    \"borderOpacity\",\n    \"backgroundColor\",\n    \"backgroundOpacity\",\n    \"backgroundImage\",\n    \"gradientColorStops\",\n    \"boxDecorationBreak\",\n    \"backgroundSize\",\n    \"backgroundAttachment\",\n    \"backgroundClip\",\n    \"backgroundPosition\",\n    \"backgroundRepeat\",\n    \"backgroundOrigin\",\n    \"fill\",\n    \"stroke\",\n    \"strokeWidth\",\n    \"objectFit\",\n    \"objectPosition\",\n    \"padding\",\n    \"textAlign\",\n    \"textIndent\",\n    \"verticalAlign\",\n    \"fontFamily\",\n    \"fontSize\",\n    \"fontWeight\",\n    \"textTransform\",\n    \"fontStyle\",\n    \"fontVariantNumeric\",\n    \"lineHeight\",\n    \"letterSpacing\",\n    \"textColor\",\n    \"textOpacity\",\n    \"textDecoration\",\n    \"textDecorationColor\",\n    \"textDecorationStyle\",\n    \"textDecorationThickness\",\n    \"textUnderlineOffset\",\n    \"fontSmoothing\",\n    \"placeholderColor\",\n    \"placeholderOpacity\",\n    \"caretColor\",\n    \"accentColor\",\n    \"opacity\",\n    \"backgroundBlendMode\",\n    \"mixBlendMode\",\n    \"boxShadow\",\n    \"boxShadowColor\",\n    \"outlineStyle\",\n    \"outlineWidth\",\n    \"outlineOffset\",\n    \"outlineColor\",\n    \"ringWidth\",\n    \"ringColor\",\n    \"ringOpacity\",\n    \"ringOffsetWidth\",\n    \"ringOffsetColor\",\n    \"blur\",\n    \"brightness\",\n    \"contrast\",\n    \"dropShadow\",\n    \"grayscale\",\n    \"hueRotate\",\n    \"invert\",\n    \"saturate\",\n    \"sepia\",\n    \"filter\",\n    \"backdropBlur\",\n    \"backdropBrightness\",\n    \"backdropContrast\",\n    \"backdropGrayscale\",\n    \"backdropHueRotate\",\n    \"backdropInvert\",\n    \"backdropOpacity\",\n    \"backdropSaturate\",\n    \"backdropSepia\",\n    \"backdropFilter\",\n    \"transitionProperty\",\n    \"transitionDelay\",\n    \"transitionDuration\",\n    \"transitionTimingFunction\",\n    \"willChange\",\n    \"content\"\n];\nfunction gc(t, e) {\n    return t === void 0 ? e : Array.isArray(t) ? t : [\n        ...new Set(e.filter((n)=>t !== !1 && t[n] !== !1).concat(Object.keys(t).filter((n)=>t[n] !== !1)))\n    ];\n}\nfunction cr({ version: t, from: e, to: r }) {\n    L.warn(`${e}-color-renamed`, [\n        `As of Tailwind CSS ${t}, \\`${e}\\` has been renamed to \\`${r}\\`.`,\n        \"Update your configuration file to silence this warning.\"\n    ]);\n}\nvar yc = {\n    inherit: \"inherit\",\n    current: \"currentColor\",\n    transparent: \"transparent\",\n    black: \"#000\",\n    white: \"#fff\",\n    slate: {\n        50: \"#f8fafc\",\n        100: \"#f1f5f9\",\n        200: \"#e2e8f0\",\n        300: \"#cbd5e1\",\n        400: \"#94a3b8\",\n        500: \"#64748b\",\n        600: \"#475569\",\n        700: \"#334155\",\n        800: \"#1e293b\",\n        900: \"#0f172a\",\n        950: \"#020617\"\n    },\n    gray: {\n        50: \"#f9fafb\",\n        100: \"#f3f4f6\",\n        200: \"#e5e7eb\",\n        300: \"#d1d5db\",\n        400: \"#9ca3af\",\n        500: \"#6b7280\",\n        600: \"#4b5563\",\n        700: \"#374151\",\n        800: \"#1f2937\",\n        900: \"#111827\",\n        950: \"#030712\"\n    },\n    zinc: {\n        50: \"#fafafa\",\n        100: \"#f4f4f5\",\n        200: \"#e4e4e7\",\n        300: \"#d4d4d8\",\n        400: \"#a1a1aa\",\n        500: \"#71717a\",\n        600: \"#52525b\",\n        700: \"#3f3f46\",\n        800: \"#27272a\",\n        900: \"#18181b\",\n        950: \"#09090b\"\n    },\n    neutral: {\n        50: \"#fafafa\",\n        100: \"#f5f5f5\",\n        200: \"#e5e5e5\",\n        300: \"#d4d4d4\",\n        400: \"#a3a3a3\",\n        500: \"#737373\",\n        600: \"#525252\",\n        700: \"#404040\",\n        800: \"#262626\",\n        900: \"#171717\",\n        950: \"#0a0a0a\"\n    },\n    stone: {\n        50: \"#fafaf9\",\n        100: \"#f5f5f4\",\n        200: \"#e7e5e4\",\n        300: \"#d6d3d1\",\n        400: \"#a8a29e\",\n        500: \"#78716c\",\n        600: \"#57534e\",\n        700: \"#44403c\",\n        800: \"#292524\",\n        900: \"#1c1917\",\n        950: \"#0c0a09\"\n    },\n    red: {\n        50: \"#fef2f2\",\n        100: \"#fee2e2\",\n        200: \"#fecaca\",\n        300: \"#fca5a5\",\n        400: \"#f87171\",\n        500: \"#ef4444\",\n        600: \"#dc2626\",\n        700: \"#b91c1c\",\n        800: \"#991b1b\",\n        900: \"#7f1d1d\",\n        950: \"#450a0a\"\n    },\n    orange: {\n        50: \"#fff7ed\",\n        100: \"#ffedd5\",\n        200: \"#fed7aa\",\n        300: \"#fdba74\",\n        400: \"#fb923c\",\n        500: \"#f97316\",\n        600: \"#ea580c\",\n        700: \"#c2410c\",\n        800: \"#9a3412\",\n        900: \"#7c2d12\",\n        950: \"#431407\"\n    },\n    amber: {\n        50: \"#fffbeb\",\n        100: \"#fef3c7\",\n        200: \"#fde68a\",\n        300: \"#fcd34d\",\n        400: \"#fbbf24\",\n        500: \"#f59e0b\",\n        600: \"#d97706\",\n        700: \"#b45309\",\n        800: \"#92400e\",\n        900: \"#78350f\",\n        950: \"#451a03\"\n    },\n    yellow: {\n        50: \"#fefce8\",\n        100: \"#fef9c3\",\n        200: \"#fef08a\",\n        300: \"#fde047\",\n        400: \"#facc15\",\n        500: \"#eab308\",\n        600: \"#ca8a04\",\n        700: \"#a16207\",\n        800: \"#854d0e\",\n        900: \"#713f12\",\n        950: \"#422006\"\n    },\n    lime: {\n        50: \"#f7fee7\",\n        100: \"#ecfccb\",\n        200: \"#d9f99d\",\n        300: \"#bef264\",\n        400: \"#a3e635\",\n        500: \"#84cc16\",\n        600: \"#65a30d\",\n        700: \"#4d7c0f\",\n        800: \"#3f6212\",\n        900: \"#365314\",\n        950: \"#1a2e05\"\n    },\n    green: {\n        50: \"#f0fdf4\",\n        100: \"#dcfce7\",\n        200: \"#bbf7d0\",\n        300: \"#86efac\",\n        400: \"#4ade80\",\n        500: \"#22c55e\",\n        600: \"#16a34a\",\n        700: \"#15803d\",\n        800: \"#166534\",\n        900: \"#14532d\",\n        950: \"#052e16\"\n    },\n    emerald: {\n        50: \"#ecfdf5\",\n        100: \"#d1fae5\",\n        200: \"#a7f3d0\",\n        300: \"#6ee7b7\",\n        400: \"#34d399\",\n        500: \"#10b981\",\n        600: \"#059669\",\n        700: \"#047857\",\n        800: \"#065f46\",\n        900: \"#064e3b\",\n        950: \"#022c22\"\n    },\n    teal: {\n        50: \"#f0fdfa\",\n        100: \"#ccfbf1\",\n        200: \"#99f6e4\",\n        300: \"#5eead4\",\n        400: \"#2dd4bf\",\n        500: \"#14b8a6\",\n        600: \"#0d9488\",\n        700: \"#0f766e\",\n        800: \"#115e59\",\n        900: \"#134e4a\",\n        950: \"#042f2e\"\n    },\n    cyan: {\n        50: \"#ecfeff\",\n        100: \"#cffafe\",\n        200: \"#a5f3fc\",\n        300: \"#67e8f9\",\n        400: \"#22d3ee\",\n        500: \"#06b6d4\",\n        600: \"#0891b2\",\n        700: \"#0e7490\",\n        800: \"#155e75\",\n        900: \"#164e63\",\n        950: \"#083344\"\n    },\n    sky: {\n        50: \"#f0f9ff\",\n        100: \"#e0f2fe\",\n        200: \"#bae6fd\",\n        300: \"#7dd3fc\",\n        400: \"#38bdf8\",\n        500: \"#0ea5e9\",\n        600: \"#0284c7\",\n        700: \"#0369a1\",\n        800: \"#075985\",\n        900: \"#0c4a6e\",\n        950: \"#082f49\"\n    },\n    blue: {\n        50: \"#eff6ff\",\n        100: \"#dbeafe\",\n        200: \"#bfdbfe\",\n        300: \"#93c5fd\",\n        400: \"#60a5fa\",\n        500: \"#3b82f6\",\n        600: \"#2563eb\",\n        700: \"#1d4ed8\",\n        800: \"#1e40af\",\n        900: \"#1e3a8a\",\n        950: \"#172554\"\n    },\n    indigo: {\n        50: \"#eef2ff\",\n        100: \"#e0e7ff\",\n        200: \"#c7d2fe\",\n        300: \"#a5b4fc\",\n        400: \"#818cf8\",\n        500: \"#6366f1\",\n        600: \"#4f46e5\",\n        700: \"#4338ca\",\n        800: \"#3730a3\",\n        900: \"#312e81\",\n        950: \"#1e1b4b\"\n    },\n    violet: {\n        50: \"#f5f3ff\",\n        100: \"#ede9fe\",\n        200: \"#ddd6fe\",\n        300: \"#c4b5fd\",\n        400: \"#a78bfa\",\n        500: \"#8b5cf6\",\n        600: \"#7c3aed\",\n        700: \"#6d28d9\",\n        800: \"#5b21b6\",\n        900: \"#4c1d95\",\n        950: \"#2e1065\"\n    },\n    purple: {\n        50: \"#faf5ff\",\n        100: \"#f3e8ff\",\n        200: \"#e9d5ff\",\n        300: \"#d8b4fe\",\n        400: \"#c084fc\",\n        500: \"#a855f7\",\n        600: \"#9333ea\",\n        700: \"#7e22ce\",\n        800: \"#6b21a8\",\n        900: \"#581c87\",\n        950: \"#3b0764\"\n    },\n    fuchsia: {\n        50: \"#fdf4ff\",\n        100: \"#fae8ff\",\n        200: \"#f5d0fe\",\n        300: \"#f0abfc\",\n        400: \"#e879f9\",\n        500: \"#d946ef\",\n        600: \"#c026d3\",\n        700: \"#a21caf\",\n        800: \"#86198f\",\n        900: \"#701a75\",\n        950: \"#4a044e\"\n    },\n    pink: {\n        50: \"#fdf2f8\",\n        100: \"#fce7f3\",\n        200: \"#fbcfe8\",\n        300: \"#f9a8d4\",\n        400: \"#f472b6\",\n        500: \"#ec4899\",\n        600: \"#db2777\",\n        700: \"#be185d\",\n        800: \"#9d174d\",\n        900: \"#831843\",\n        950: \"#500724\"\n    },\n    rose: {\n        50: \"#fff1f2\",\n        100: \"#ffe4e6\",\n        200: \"#fecdd3\",\n        300: \"#fda4af\",\n        400: \"#fb7185\",\n        500: \"#f43f5e\",\n        600: \"#e11d48\",\n        700: \"#be123c\",\n        800: \"#9f1239\",\n        900: \"#881337\",\n        950: \"#4c0519\"\n    },\n    get lightBlue () {\n        return cr({\n            version: \"v2.2\",\n            from: \"lightBlue\",\n            to: \"sky\"\n        }), this.sky;\n    },\n    get warmGray () {\n        return cr({\n            version: \"v3.0\",\n            from: \"warmGray\",\n            to: \"stone\"\n        }), this.stone;\n    },\n    get trueGray () {\n        return cr({\n            version: \"v3.0\",\n            from: \"trueGray\",\n            to: \"neutral\"\n        }), this.neutral;\n    },\n    get coolGray () {\n        return cr({\n            version: \"v3.0\",\n            from: \"coolGray\",\n            to: \"gray\"\n        }), this.gray;\n    },\n    get blueGray () {\n        return cr({\n            version: \"v3.0\",\n            from: \"blueGray\",\n            to: \"slate\"\n        }), this.slate;\n    }\n};\nfunction da(t, ...e) {\n    var r, n;\n    for (let i of e){\n        for(let a in i)(r = t == null ? void 0 : t.hasOwnProperty) != null && r.call(t, a) || (t[a] = i[a]);\n        for (let a of Object.getOwnPropertySymbols(i))(n = t == null ? void 0 : t.hasOwnProperty) != null && n.call(t, a) || (t[a] = i[a]);\n    }\n    return t;\n}\nfunction vc(t) {\n    var r;\n    (()=>{\n        if (t.purge || !t.content || !Array.isArray(t.content) && !(typeof t.content == \"object\" && t.content !== null)) return !1;\n        if (Array.isArray(t.content)) return t.content.every((n)=>typeof n == \"string\" ? !0 : !(typeof (n == null ? void 0 : n.raw) != \"string\" || (n == null ? void 0 : n.extension) && typeof (n == null ? void 0 : n.extension) != \"string\"));\n        if (typeof t.content == \"object\" && t.content !== null) {\n            if (Object.keys(t.content).some((n)=>![\n                    \"files\",\n                    \"relative\",\n                    \"extract\",\n                    \"transform\"\n                ].includes(n))) return !1;\n            if (Array.isArray(t.content.files)) {\n                if (!t.content.files.every((n)=>typeof n == \"string\" ? !0 : !(typeof (n == null ? void 0 : n.raw) != \"string\" || (n == null ? void 0 : n.extension) && typeof (n == null ? void 0 : n.extension) != \"string\"))) return !1;\n                if (typeof t.content.extract == \"object\") {\n                    for (let n of Object.values(t.content.extract))if (typeof n != \"function\") return !1;\n                } else if (!(t.content.extract === void 0 || typeof t.content.extract == \"function\")) return !1;\n                if (typeof t.content.transform == \"object\") {\n                    for (let n of Object.values(t.content.transform))if (typeof n != \"function\") return !1;\n                } else if (!(t.content.transform === void 0 || typeof t.content.transform == \"function\")) return !1;\n                if (typeof t.content.relative != \"boolean\" && typeof t.content.relative < \"u\") return !1;\n            }\n            return !0;\n        }\n        return !1;\n    })() || L.warn(\"purge-deprecation\", [\n        \"The `purge`/`content` options have changed in Tailwind CSS v3.0.\",\n        \"Update your configuration file to eliminate this warning.\",\n        \"https://tailwindcss.com/docs/upgrade-guide#configure-content-sources\"\n    ]), t.safelist = (()=>{\n        var s;\n        let { content: n, purge: i, safelist: a } = t;\n        return Array.isArray(a) ? a : Array.isArray(n == null ? void 0 : n.safelist) ? n.safelist : Array.isArray(i == null ? void 0 : i.safelist) ? i.safelist : Array.isArray((s = i == null ? void 0 : i.options) == null ? void 0 : s.safelist) ? i.options.safelist : [];\n    })(), t.blocklist = (()=>{\n        let { blocklist: n } = t;\n        if (Array.isArray(n)) {\n            if (n.every((i)=>typeof i == \"string\")) return n;\n            L.warn(\"blocklist-invalid\", [\n                \"The `blocklist` option must be an array of strings.\",\n                \"https://tailwindcss.com/docs/content-configuration#discarding-classes\"\n            ]);\n        }\n        return [];\n    })(), typeof t.prefix == \"function\" ? (L.warn(\"prefix-function\", [\n        \"As of Tailwind CSS v3.0, `prefix` cannot be a function.\",\n        \"Update `prefix` in your configuration to be a string to eliminate this warning.\",\n        \"https://tailwindcss.com/docs/upgrade-guide#prefix-cannot-be-a-function\"\n    ]), t.prefix = \"\") : t.prefix = (r = t.prefix) != null ? r : \"\", t.content = {\n        relative: (()=>{\n            let { content: n } = t;\n            return n != null && n.relative ? n.relative : G(t, \"relativeContentPathsByDefault\");\n        })(),\n        files: (()=>{\n            let { content: n, purge: i } = t;\n            return Array.isArray(i) ? i : Array.isArray(i == null ? void 0 : i.content) ? i.content : Array.isArray(n) ? n : Array.isArray(n == null ? void 0 : n.content) ? n.content : Array.isArray(n == null ? void 0 : n.files) ? n.files : [];\n        })(),\n        extract: (()=>{\n            let n = (()=>{\n                var s, o, l, u, f, p, c, d, h, y;\n                return (s = t.purge) != null && s.extract ? t.purge.extract : (o = t.content) != null && o.extract ? t.content.extract : (u = (l = t.purge) == null ? void 0 : l.extract) != null && u.DEFAULT ? t.purge.extract.DEFAULT : (p = (f = t.content) == null ? void 0 : f.extract) != null && p.DEFAULT ? t.content.extract.DEFAULT : (d = (c = t.purge) == null ? void 0 : c.options) != null && d.extractors ? t.purge.options.extractors : (y = (h = t.content) == null ? void 0 : h.options) != null && y.extractors ? t.content.options.extractors : {};\n            })(), i = {}, a = (()=>{\n                var s, o, l, u;\n                if ((o = (s = t.purge) == null ? void 0 : s.options) != null && o.defaultExtractor) return t.purge.options.defaultExtractor;\n                if ((u = (l = t.content) == null ? void 0 : l.options) != null && u.defaultExtractor) return t.content.options.defaultExtractor;\n            })();\n            if (a !== void 0 && (i.DEFAULT = a), typeof n == \"function\") i.DEFAULT = n;\n            else if (Array.isArray(n)) for (let { extensions: s, extractor: o } of n != null ? n : [])for (let l of s)i[l] = o;\n            else typeof n == \"object\" && n !== null && Object.assign(i, n);\n            return i;\n        })(),\n        transform: (()=>{\n            let n = (()=>{\n                var a, s, o, l, u, f;\n                return (a = t.purge) != null && a.transform ? t.purge.transform : (s = t.content) != null && s.transform ? t.content.transform : (l = (o = t.purge) == null ? void 0 : o.transform) != null && l.DEFAULT ? t.purge.transform.DEFAULT : (f = (u = t.content) == null ? void 0 : u.transform) != null && f.DEFAULT ? t.content.transform.DEFAULT : {};\n            })(), i = {};\n            return typeof n == \"function\" && (i.DEFAULT = n), typeof n == \"object\" && n !== null && Object.assign(i, n), i;\n        })()\n    };\n    for (let n of t.content.files)if (typeof n == \"string\" && /{([^,]*?)}/g.test(n)) {\n        L.warn(\"invalid-glob-braces\", [\n            `The glob pattern ${n} in your Tailwind CSS configuration is invalid.`,\n            `Update it to ${n.replace(/{([^,]*?)}/g, \"$1\")} to silence this warning.`\n        ]);\n        break;\n    }\n    return t;\n}\nfunction In(t) {\n    return Array.isArray(t) ? t.map((e)=>In(e)) : typeof t == \"object\" && t !== null ? Object.fromEntries(Object.entries(t).map(([e, r])=>[\n            e,\n            In(r)\n        ])) : t;\n}\nfunction pt(t) {\n    return typeof t == \"function\";\n}\nfunction pr(t, ...e) {\n    let r = e.pop();\n    for (let n of e)for(let i in n){\n        let a = r(t[i], n[i]);\n        a === void 0 ? X(t[i]) && X(n[i]) ? t[i] = pr({}, t[i], n[i], r) : t[i] = n[i] : t[i] = a;\n    }\n    return t;\n}\nvar ha = {\n    colors: yc,\n    negative (t) {\n        return Object.keys(t).filter((e)=>t[e] !== \"0\").reduce((e, r)=>{\n            let n = Re(t[r]);\n            return n !== void 0 && (e[`-${r}`] = n), e;\n        }, {});\n    },\n    breakpoints (t) {\n        return Object.keys(t).filter((e)=>typeof t[e] == \"string\").reduce((e, r)=>({\n                ...e,\n                [`screen-${r}`]: t[r]\n            }), {});\n    }\n};\nfunction gw(t, ...e) {\n    return pt(t) ? t(...e) : t;\n}\nfunction yw(t) {\n    return t.reduce((e, { extend: r })=>pr(e, r, (n, i)=>n === void 0 ? [\n                i\n            ] : Array.isArray(n) ? [\n                i,\n                ...n\n            ] : [\n                i,\n                n\n            ]), {});\n}\nfunction vw(t) {\n    return {\n        ...t.reduce((e, r)=>da(e, r), {}),\n        extend: yw(t)\n    };\n}\nfunction wc(t, e) {\n    if (Array.isArray(t) && X(t[0])) return t.concat(e);\n    if (Array.isArray(e) && X(e[0]) && X(t)) return [\n        t,\n        ...e\n    ];\n    if (Array.isArray(e)) return e;\n}\nfunction ww({ extend: t, ...e }) {\n    return pr(e, t, (r, n)=>!pt(r) && !n.some(pt) ? pr({}, r, ...n, wc) : (i, a)=>pr({}, ...[\n                r,\n                ...n\n            ].map((s)=>gw(s, i, a)), wc));\n}\nfunction* bw(t) {\n    let e = Le(t);\n    if (e.length === 0 || (yield e, Array.isArray(t))) return;\n    let r = /^(.*?)\\s*\\/\\s*([^/]+)$/, n = t.match(r);\n    if (n !== null) {\n        let [, i, a] = n, s = Le(i);\n        s.alpha = a, yield s;\n    }\n}\nfunction xw(t) {\n    let e = (r, n)=>{\n        for (let i of bw(r)){\n            let a = 0, s = t;\n            for(; s != null && a < i.length;)s = s[i[a++]], s = pt(s) && (i.alpha === void 0 || a <= i.length - 1) ? s(e, ha) : s;\n            if (s !== void 0) {\n                if (i.alpha !== void 0) {\n                    let o = st(s);\n                    return we(o, i.alpha, M(o));\n                }\n                return X(s) ? In(s) : s;\n            }\n        }\n        return n;\n    };\n    return Object.assign(e, {\n        theme: e,\n        ...ha\n    }), Object.keys(t).reduce((r, n)=>(r[n] = pt(t[n]) ? t[n](e, ha) : t[n], r), {});\n}\nfunction bc(t) {\n    let e = [];\n    return t.forEach((r)=>{\n        var i;\n        e = [\n            ...e,\n            r\n        ];\n        let n = (i = r == null ? void 0 : r.plugins) != null ? i : [];\n        n.length !== 0 && n.forEach((a)=>{\n            var s;\n            a.__isOptionsFunction && (a = a()), e = [\n                ...e,\n                ...bc([\n                    (s = a == null ? void 0 : a.config) != null ? s : {}\n                ])\n            ];\n        });\n    }), e;\n}\nfunction Sw(t) {\n    return [\n        ...t\n    ].reduceRight((r, n)=>pt(n) ? n({\n            corePlugins: r\n        }) : gc(n, r), mc);\n}\nfunction kw(t) {\n    return [\n        ...t\n    ].reduceRight((r, n)=>[\n            ...r,\n            ...n\n        ], []);\n}\nfunction ma(t) {\n    let e = [\n        ...bc(t),\n        {\n            prefix: \"\",\n            important: !1,\n            separator: \":\"\n        }\n    ];\n    return vc(da({\n        theme: xw(ww(vw(e.map((r)=>{\n            var n;\n            return (n = r == null ? void 0 : r.theme) != null ? n : {};\n        })))),\n        corePlugins: Sw(e.map((r)=>r.corePlugins)),\n        plugins: kw(t.map((r)=>{\n            var n;\n            return (n = r == null ? void 0 : r.plugins) != null ? n : [];\n        }))\n    }, ...e));\n}\nvar kc = H(Sc());\nfunction Rn(t) {\n    var i;\n    let e = ((i = t == null ? void 0 : t.presets) != null ? i : [\n        kc.default\n    ]).slice().reverse().flatMap((a)=>Rn(a instanceof Function ? a() : a)), r = {\n        respectDefaultRingColorOpacity: {\n            theme: {\n                ringColor: ({ theme: a })=>({\n                        DEFAULT: \"#3b82f67f\",\n                        ...a(\"colors\")\n                    })\n            }\n        },\n        disableColorOpacityUtilitiesByDefault: {\n            corePlugins: {\n                backgroundOpacity: !1,\n                borderOpacity: !1,\n                divideOpacity: !1,\n                placeholderOpacity: !1,\n                ringOpacity: !1,\n                textOpacity: !1\n            }\n        }\n    }, n = Object.keys(r).filter((a)=>G(t, a)).map((a)=>r[a]);\n    return [\n        t,\n        ...n,\n        ...e\n    ];\n}\nfunction ga(...t) {\n    let [, ...e] = Rn(t[0]);\n    return ma([\n        ...t,\n        ...e\n    ]);\n}\nvar Oc = (t)=>{\n    var n;\n    let e = ga((n = t.config) != null ? n : {});\n    return pa((i)=>()=>i.createContext(e, [\n                {\n                    content: t.content\n                }\n            ]));\n};\nvar wp = H(vp(), 1);\nvar bp = (t)=>{\n    let e = Oc({\n        config: t.config,\n        content: t.content\n    });\n    return R([\n        e,\n        (0, wp.default)()\n    ]).process(xp, {\n        from: void 0\n    }).css;\n};\nvar xp = String.raw`\n  @tailwind base;\n  @tailwind components;\n  @tailwind utilities;\n`;\nfunction kp(t) {\n    let e = R.parse(t);\n    return tn.objectify(e);\n}\nvar sb = (t, e)=>{\n    var i, a;\n    let r = (a = (i = e == null ? void 0 : e.corePlugins) == null ? void 0 : i.preflight) != null ? a : !1, n = (e == null ? void 0 : e.corePlugins) || {};\n    return bp({\n        config: {\n            ...e,\n            corePlugins: {\n                ...n,\n                preflight: r\n            }\n        },\n        content: t\n    });\n}, Op = ({ config: t, options: e })=>({\n        twi: Ea(t, e),\n        twj: Cp(t, e)\n    }), Ep = (...t)=>{\n    let e = \"\";\n    return typeof t[0] == \"string\" ? e = t[0] : Array.isArray(t[0]) ? e = t.flat(1 / 0).map((r)=>Ep(r)).join(\" \") : typeof t[0] == \"object\" && (e = Object.entries(t[0]).filter((r)=>!!r[1]).map((r)=>r[0]).join(\" \")), e = e.replace(/\\s+/g, \" \"), e;\n}, Ea = (t, e)=>(...r)=>{\n        let n = Ep(r), { 1: i } = r || {}, s = {\n            ...{\n                merge: !0,\n                minify: !0,\n                ignoreMediaQueries: !0\n            },\n            ...e,\n            ...i\n        }, o = Ra(sb(n, t));\n        return s != null && s.ignoreMediaQueries ? o.removeMediaQueries() : (o.removeUndefined(), o.combineMediaQueries()), o.fixRGB(), s != null && s.merge && o.merge(), s != null && s.minify && o.minify(), o.get();\n    }, Cp = (t, e)=>(...r)=>kp(Ea(t, e)(r)), Sp = Ea(), ab = Cp(), ob = Op;\n /*! https://mths.be/cssesc v3.0.0 by @mathias */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/tw-to-css/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/tw-to-css/dist/index.mjs":
/*!***********************************************!*\
  !*** ./node_modules/tw-to-css/dist/index.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tailwindToCSS: () => (/* binding */ Op),\n/* harmony export */   twToCSS: () => (/* binding */ ob),\n/* harmony export */   twi: () => (/* binding */ Sp),\n/* harmony export */   twj: () => (/* binding */ ab)\n/* harmony export */ });\nvar Ap=Object.create;var gr=Object.defineProperty;var _p=Object.getOwnPropertyDescriptor;var Tp=Object.getOwnPropertyNames;var Pp=Object.getPrototypeOf,Ip=Object.prototype.hasOwnProperty;var dt=(t,e)=>()=>(t&&(e=t(t=0)),e);var S=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),yr=(t,e)=>{for(var r in e)gr(t,r,{get:e[r],enumerable:!0})},Ia=(t,e,r,n)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of Tp(e))!Ip.call(t,i)&&i!==r&&gr(t,i,{get:()=>e[i],enumerable:!(n=_p(e,i))||n.enumerable});return t};var H=(t,e,r)=>(r=t!=null?Ap(Pp(t)):{},Ia(e||!t||!t.__esModule?gr(r,\"default\",{value:t,enumerable:!0}):r,t)),$e=t=>Ia(gr({},\"__esModule\",{value:!0}),t);var Ma,Da=dt(()=>{Ma=`*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:theme(\"borderColor.DEFAULT\",currentColor)}:before,:after{--tw-content: \"\"}html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:theme(\"fontFamily.sans\",ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\");font-feature-settings:theme(\"fontFamily.sans[1].fontFeatureSettings\",normal);font-variation-settings:theme(\"fontFamily.sans[1].fontVariationSettings\",normal)}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:theme(\"fontFamily.mono\",ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace);font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:theme(\"colors.gray.400\",#9ca3af)}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}\n`});var Fa={};yr(Fa,{default:()=>ht});var ht,vr=dt(()=>{Da();ht={readFileSync:()=>Ma}});var Na=S((mb,La)=>{\"use strict\";var jn=class{constructor(e={}){if(!(e.maxSize&&e.maxSize>0))throw new TypeError(\"`maxSize` must be a number greater than 0\");if(typeof e.maxAge==\"number\"&&e.maxAge===0)throw new TypeError(\"`maxAge` must be a number greater than 0\");this.maxSize=e.maxSize,this.maxAge=e.maxAge||1/0,this.onEviction=e.onEviction,this.cache=new Map,this.oldCache=new Map,this._size=0}_emitEvictions(e){if(typeof this.onEviction==\"function\")for(let[r,n]of e)this.onEviction(r,n.value)}_deleteIfExpired(e,r){return typeof r.expiry==\"number\"&&r.expiry<=Date.now()?(typeof this.onEviction==\"function\"&&this.onEviction(e,r.value),this.delete(e)):!1}_getOrDeleteIfExpired(e,r){if(this._deleteIfExpired(e,r)===!1)return r.value}_getItemValue(e,r){return r.expiry?this._getOrDeleteIfExpired(e,r):r.value}_peek(e,r){let n=r.get(e);return this._getItemValue(e,n)}_set(e,r){this.cache.set(e,r),this._size++,this._size>=this.maxSize&&(this._size=0,this._emitEvictions(this.oldCache),this.oldCache=this.cache,this.cache=new Map)}_moveToRecent(e,r){this.oldCache.delete(e),this._set(e,r)}*_entriesAscending(){for(let e of this.oldCache){let[r,n]=e;this.cache.has(r)||this._deleteIfExpired(r,n)===!1&&(yield e)}for(let e of this.cache){let[r,n]=e;this._deleteIfExpired(r,n)===!1&&(yield e)}}get(e){if(this.cache.has(e)){let r=this.cache.get(e);return this._getItemValue(e,r)}if(this.oldCache.has(e)){let r=this.oldCache.get(e);if(this._deleteIfExpired(e,r)===!1)return this._moveToRecent(e,r),r.value}}set(e,r,{maxAge:n=this.maxAge===1/0?void 0:Date.now()+this.maxAge}={}){this.cache.has(e)?this.cache.set(e,{value:r,maxAge:n}):this._set(e,{value:r,expiry:n})}has(e){return this.cache.has(e)?!this._deleteIfExpired(e,this.cache.get(e)):this.oldCache.has(e)?!this._deleteIfExpired(e,this.oldCache.get(e)):!1}peek(e){if(this.cache.has(e))return this._peek(e,this.cache);if(this.oldCache.has(e))return this._peek(e,this.oldCache)}delete(e){let r=this.cache.delete(e);return r&&this._size--,this.oldCache.delete(e)||r}clear(){this.cache.clear(),this.oldCache.clear(),this._size=0}resize(e){if(!(e&&e>0))throw new TypeError(\"`maxSize` must be a number greater than 0\");let r=[...this._entriesAscending()],n=r.length-e;n<0?(this.cache=new Map(r),this.oldCache=new Map,this._size=r.length):(n>0&&this._emitEvictions(r.slice(0,n)),this.oldCache=new Map(r.slice(n)),this.cache=new Map,this._size=0),this.maxSize=e}*keys(){for(let[e]of this)yield e}*values(){for(let[,e]of this)yield e}*[Symbol.iterator](){for(let e of this.cache){let[r,n]=e;this._deleteIfExpired(r,n)===!1&&(yield[r,n.value])}for(let e of this.oldCache){let[r,n]=e;this.cache.has(r)||this._deleteIfExpired(r,n)===!1&&(yield[r,n.value])}}*entriesDescending(){let e=[...this.cache];for(let r=e.length-1;r>=0;--r){let n=e[r],[i,a]=n;this._deleteIfExpired(i,a)===!1&&(yield[i,a.value])}e=[...this.oldCache];for(let r=e.length-1;r>=0;--r){let n=e[r],[i,a]=n;this.cache.has(i)||this._deleteIfExpired(i,a)===!1&&(yield[i,a.value])}}*entriesAscending(){for(let[e,r]of this._entriesAscending())yield[e,r.value]}get size(){if(!this._size)return this.oldCache.size;let e=0;for(let r of this.oldCache.keys())this.cache.has(r)||e++;return Math.min(this._size+e,this.maxSize)}};La.exports=jn});var Ua={};yr(Ua,{default:()=>Bn});var Bn,Gn=dt(()=>{Bn={yellow:t=>t}});var Yn=S(()=>{});var br=S((bb,Va)=>{\"use strict\";var ja=(Gn(),$e(Ua)),za=Yn(),Ue=class extends Error{constructor(e,r,n,i,a,s){super(e),this.name=\"CssSyntaxError\",this.reason=e,a&&(this.file=a),i&&(this.source=i),s&&(this.plugin=s),typeof r<\"u\"&&typeof n<\"u\"&&(typeof r==\"number\"?(this.line=r,this.column=n):(this.line=r.line,this.column=r.column,this.endLine=n.line,this.endColumn=n.column)),this.setMessage(),Error.captureStackTrace&&Error.captureStackTrace(this,Ue)}setMessage(){this.message=this.plugin?this.plugin+\": \":\"\",this.message+=this.file?this.file:\"<css input>\",typeof this.line<\"u\"&&(this.message+=\":\"+this.line+\":\"+this.column),this.message+=\": \"+this.reason}showSourceCode(e){if(!this.source)return\"\";let r=this.source;e==null&&(e=ja.isColorSupported),za&&e&&(r=za(r));let n=r.split(/\\r?\\n/),i=Math.max(this.line-3,0),a=Math.min(this.line+2,n.length),s=String(a).length,o,l;if(e){let{bold:u,gray:f,red:p}=ja.createColors(!0);o=c=>u(p(c)),l=c=>f(c)}else o=l=u=>u;return n.slice(i,a).map((u,f)=>{let p=i+1+f,c=\" \"+(\" \"+p).slice(-s)+\" | \";if(p===this.line){let d=l(c.replace(/\\d/g,\" \"))+u.slice(0,this.column-1).replace(/[^\\t]/g,\" \");return o(\">\")+l(c)+u+`\n `+d+o(\"^\")}return\" \"+l(c)+u}).join(`\n`)}toString(){let e=this.showSourceCode();return e&&(e=`\n\n`+e+`\n`),this.name+\": \"+this.message+e}};Va.exports=Ue;Ue.default=Ue});var xr=S((xb,Hn)=>{\"use strict\";Hn.exports.isClean=Symbol(\"isClean\");Hn.exports.my=Symbol(\"my\")});var Qn=S((Sb,Ba)=>{\"use strict\";var Wa={after:`\n`,beforeClose:`\n`,beforeComment:`\n`,beforeDecl:`\n`,beforeOpen:\" \",beforeRule:`\n`,colon:\": \",commentLeft:\" \",commentRight:\" \",emptyBody:\"\",indent:\"    \",semicolon:!1};function Mp(t){return t[0].toUpperCase()+t.slice(1)}var gt=class{constructor(e){this.builder=e}atrule(e,r){let n=\"@\"+e.name,i=e.params?this.rawValue(e,\"params\"):\"\";if(typeof e.raws.afterName<\"u\"?n+=e.raws.afterName:i&&(n+=\" \"),e.nodes)this.block(e,n+i);else{let a=(e.raws.between||\"\")+(r?\";\":\"\");this.builder(n+i+a,e)}}beforeAfter(e,r){let n;e.type===\"decl\"?n=this.raw(e,null,\"beforeDecl\"):e.type===\"comment\"?n=this.raw(e,null,\"beforeComment\"):r===\"before\"?n=this.raw(e,null,\"beforeRule\"):n=this.raw(e,null,\"beforeClose\");let i=e.parent,a=0;for(;i&&i.type!==\"root\";)a+=1,i=i.parent;if(n.includes(`\n`)){let s=this.raw(e,null,\"indent\");if(s.length)for(let o=0;o<a;o++)n+=s}return n}block(e,r){let n=this.raw(e,\"between\",\"beforeOpen\");this.builder(r+n+\"{\",e,\"start\");let i;e.nodes&&e.nodes.length?(this.body(e),i=this.raw(e,\"after\")):i=this.raw(e,\"after\",\"emptyBody\"),i&&this.builder(i),this.builder(\"}\",e,\"end\")}body(e){let r=e.nodes.length-1;for(;r>0&&e.nodes[r].type===\"comment\";)r-=1;let n=this.raw(e,\"semicolon\");for(let i=0;i<e.nodes.length;i++){let a=e.nodes[i],s=this.raw(a,\"before\");s&&this.builder(s),this.stringify(a,r!==i||n)}}comment(e){let r=this.raw(e,\"left\",\"commentLeft\"),n=this.raw(e,\"right\",\"commentRight\");this.builder(\"/*\"+r+e.text+n+\"*/\",e)}decl(e,r){let n=this.raw(e,\"between\",\"colon\"),i=e.prop+n+this.rawValue(e,\"value\");e.important&&(i+=e.raws.important||\" !important\"),r&&(i+=\";\"),this.builder(i,e)}document(e){this.body(e)}raw(e,r,n){let i;if(n||(n=r),r&&(i=e.raws[r],typeof i<\"u\"))return i;let a=e.parent;if(n===\"before\"&&(!a||a.type===\"root\"&&a.first===e||a&&a.type===\"document\"))return\"\";if(!a)return Wa[n];let s=e.root();if(s.rawCache||(s.rawCache={}),typeof s.rawCache[n]<\"u\")return s.rawCache[n];if(n===\"before\"||n===\"after\")return this.beforeAfter(e,n);{let o=\"raw\"+Mp(n);this[o]?i=this[o](s,e):s.walk(l=>{if(i=l.raws[r],typeof i<\"u\")return!1})}return typeof i>\"u\"&&(i=Wa[n]),s.rawCache[n]=i,i}rawBeforeClose(e){let r;return e.walk(n=>{if(n.nodes&&n.nodes.length>0&&typeof n.raws.after<\"u\")return r=n.raws.after,r.includes(`\n`)&&(r=r.replace(/[^\\n]+$/,\"\")),!1}),r&&(r=r.replace(/\\S/g,\"\")),r}rawBeforeComment(e,r){let n;return e.walkComments(i=>{if(typeof i.raws.before<\"u\")return n=i.raws.before,n.includes(`\n`)&&(n=n.replace(/[^\\n]+$/,\"\")),!1}),typeof n>\"u\"?n=this.raw(r,null,\"beforeDecl\"):n&&(n=n.replace(/\\S/g,\"\")),n}rawBeforeDecl(e,r){let n;return e.walkDecls(i=>{if(typeof i.raws.before<\"u\")return n=i.raws.before,n.includes(`\n`)&&(n=n.replace(/[^\\n]+$/,\"\")),!1}),typeof n>\"u\"?n=this.raw(r,null,\"beforeRule\"):n&&(n=n.replace(/\\S/g,\"\")),n}rawBeforeOpen(e){let r;return e.walk(n=>{if(n.type!==\"decl\"&&(r=n.raws.between,typeof r<\"u\"))return!1}),r}rawBeforeRule(e){let r;return e.walk(n=>{if(n.nodes&&(n.parent!==e||e.first!==n)&&typeof n.raws.before<\"u\")return r=n.raws.before,r.includes(`\n`)&&(r=r.replace(/[^\\n]+$/,\"\")),!1}),r&&(r=r.replace(/\\S/g,\"\")),r}rawColon(e){let r;return e.walkDecls(n=>{if(typeof n.raws.between<\"u\")return r=n.raws.between.replace(/[^\\s:]/g,\"\"),!1}),r}rawEmptyBody(e){let r;return e.walk(n=>{if(n.nodes&&n.nodes.length===0&&(r=n.raws.after,typeof r<\"u\"))return!1}),r}rawIndent(e){if(e.raws.indent)return e.raws.indent;let r;return e.walk(n=>{let i=n.parent;if(i&&i!==e&&i.parent&&i.parent===e&&typeof n.raws.before<\"u\"){let a=n.raws.before.split(`\n`);return r=a[a.length-1],r=r.replace(/\\S/g,\"\"),!1}}),r}rawSemicolon(e){let r;return e.walk(n=>{if(n.nodes&&n.nodes.length&&n.last.type===\"decl\"&&(r=n.raws.semicolon,typeof r<\"u\"))return!1}),r}rawValue(e,r){let n=e[r],i=e.raws[r];return i&&i.value===n?i.raw:n}root(e){this.body(e),e.raws.after&&this.builder(e.raws.after)}rule(e){this.block(e,this.rawValue(e,\"selector\")),e.raws.ownSemicolon&&this.builder(e.raws.ownSemicolon,e,\"end\")}stringify(e,r){if(!this[e.type])throw new Error(\"Unknown AST node type \"+e.type+\". Maybe you need to change PostCSS stringifier.\");this[e.type](e,r)}};Ba.exports=gt;gt.default=gt});var yt=S((kb,Ga)=>{\"use strict\";var Fp=Qn();function Jn(t,e){new Fp(e).stringify(t)}Ga.exports=Jn;Jn.default=Jn});var wt=S((Ob,Ya)=>{\"use strict\";var{isClean:Sr,my:Lp}=xr(),Np=br(),qp=Qn(),$p=yt();function Xn(t,e){let r=new t.constructor;for(let n in t){if(!Object.prototype.hasOwnProperty.call(t,n)||n===\"proxyCache\")continue;let i=t[n],a=typeof i;n===\"parent\"&&a===\"object\"?e&&(r[n]=e):n===\"source\"?r[n]=i:Array.isArray(i)?r[n]=i.map(s=>Xn(s,r)):(a===\"object\"&&i!==null&&(i=Xn(i)),r[n]=i)}return r}var vt=class{constructor(e={}){this.raws={},this[Sr]=!1,this[Lp]=!0;for(let r in e)if(r===\"nodes\"){this.nodes=[];for(let n of e[r])typeof n.clone==\"function\"?this.append(n.clone()):this.append(n)}else this[r]=e[r]}addToError(e){if(e.postcssNode=this,e.stack&&this.source&&/\\n\\s{4}at /.test(e.stack)){let r=this.source;e.stack=e.stack.replace(/\\n\\s{4}at /,`$&${r.input.from}:${r.start.line}:${r.start.column}$&`)}return e}after(e){return this.parent.insertAfter(this,e),this}assign(e={}){for(let r in e)this[r]=e[r];return this}before(e){return this.parent.insertBefore(this,e),this}cleanRaws(e){delete this.raws.before,delete this.raws.after,e||delete this.raws.between}clone(e={}){let r=Xn(this);for(let n in e)r[n]=e[n];return r}cloneAfter(e={}){let r=this.clone(e);return this.parent.insertAfter(this,r),r}cloneBefore(e={}){let r=this.clone(e);return this.parent.insertBefore(this,r),r}error(e,r={}){if(this.source){let{end:n,start:i}=this.rangeBy(r);return this.source.input.error(e,{column:i.column,line:i.line},{column:n.column,line:n.line},r)}return new Np(e)}getProxyProcessor(){return{get(e,r){return r===\"proxyOf\"?e:r===\"root\"?()=>e.root().toProxy():e[r]},set(e,r,n){return e[r]===n||(e[r]=n,(r===\"prop\"||r===\"value\"||r===\"name\"||r===\"params\"||r===\"important\"||r===\"text\")&&e.markDirty()),!0}}}markDirty(){if(this[Sr]){this[Sr]=!1;let e=this;for(;e=e.parent;)e[Sr]=!1}}next(){if(!this.parent)return;let e=this.parent.index(this);return this.parent.nodes[e+1]}positionBy(e,r){let n=this.source.start;if(e.index)n=this.positionInside(e.index,r);else if(e.word){r=this.toString();let i=r.indexOf(e.word);i!==-1&&(n=this.positionInside(i,r))}return n}positionInside(e,r){let n=r||this.toString(),i=this.source.start.column,a=this.source.start.line;for(let s=0;s<e;s++)n[s]===`\n`?(i=1,a+=1):i+=1;return{column:i,line:a}}prev(){if(!this.parent)return;let e=this.parent.index(this);return this.parent.nodes[e-1]}rangeBy(e){let r={column:this.source.start.column,line:this.source.start.line},n=this.source.end?{column:this.source.end.column+1,line:this.source.end.line}:{column:r.column+1,line:r.line};if(e.word){let i=this.toString(),a=i.indexOf(e.word);a!==-1&&(r=this.positionInside(a,i),n=this.positionInside(a+e.word.length,i))}else e.start?r={column:e.start.column,line:e.start.line}:e.index&&(r=this.positionInside(e.index)),e.end?n={column:e.end.column,line:e.end.line}:e.endIndex?n=this.positionInside(e.endIndex):e.index&&(n=this.positionInside(e.index+1));return(n.line<r.line||n.line===r.line&&n.column<=r.column)&&(n={column:r.column+1,line:r.line}),{end:n,start:r}}raw(e,r){return new qp().raw(this,e,r)}remove(){return this.parent&&this.parent.removeChild(this),this.parent=void 0,this}replaceWith(...e){if(this.parent){let r=this,n=!1;for(let i of e)i===this?n=!0:n?(this.parent.insertAfter(r,i),r=i):this.parent.insertBefore(r,i);n||this.remove()}return this}root(){let e=this;for(;e.parent&&e.parent.type!==\"document\";)e=e.parent;return e}toJSON(e,r){let n={},i=r==null;r=r||new Map;let a=0;for(let s in this){if(!Object.prototype.hasOwnProperty.call(this,s)||s===\"parent\"||s===\"proxyCache\")continue;let o=this[s];if(Array.isArray(o))n[s]=o.map(l=>typeof l==\"object\"&&l.toJSON?l.toJSON(null,r):l);else if(typeof o==\"object\"&&o.toJSON)n[s]=o.toJSON(null,r);else if(s===\"source\"){let l=r.get(o.input);l==null&&(l=a,r.set(o.input,a),a++),n[s]={end:o.end,inputId:l,start:o.start}}else n[s]=o}return i&&(n.inputs=[...r.keys()].map(s=>s.toJSON())),n}toProxy(){return this.proxyCache||(this.proxyCache=new Proxy(this,this.getProxyProcessor())),this.proxyCache}toString(e=$p){e.stringify&&(e=e.stringify);let r=\"\";return e(this,n=>{r+=n}),r}warn(e,r,n){let i={node:this};for(let a in n)i[a]=n[a];return e.warn(r,i)}get proxyOf(){return this}};Ya.exports=vt;vt.default=vt});var xt=S((Eb,Ha)=>{\"use strict\";var Up=wt(),bt=class extends Up{constructor(e){e&&typeof e.value<\"u\"&&typeof e.value!=\"string\"&&(e={...e,value:String(e.value)}),super(e),this.type=\"decl\"}get variable(){return this.prop.startsWith(\"--\")||this.prop[0]===\"$\"}};Ha.exports=bt;bt.default=bt});var kr=S(()=>{});var St={};yr(St,{join:()=>Kn});var Kn,kt=dt(()=>{Kn=()=>\"\"});var Zn={};yr(Zn,{default:()=>jp});var jp,ei=dt(()=>{jp=null});var Ja=S((_b,Qa)=>{var zp=\"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\",Vp=(t,e=21)=>(r=e)=>{let n=\"\",i=r;for(;i--;)n+=t[Math.random()*t.length|0];return n},Wp=(t=21)=>{let e=\"\",r=t;for(;r--;)e+=zp[Math.random()*64|0];return e};Qa.exports={nanoid:Wp,customAlphabet:Vp}});var ri=S((Tb,Za)=>{\"use strict\";var{SourceMapConsumer:Xa,SourceMapGenerator:Ka}=kr(),{existsSync:Bp,readFileSync:Gp}=(vr(),$e(Fa)),{dirname:ti,join:Yp}=(kt(),$e(St));function Hp(t){return Buffer?Buffer.from(t,\"base64\").toString():window.atob(t)}var Ot=class{constructor(e,r){if(r.map===!1)return;this.loadAnnotation(e),this.inline=this.startWith(this.annotation,\"data:\");let n=r.map?r.map.prev:void 0,i=this.loadMap(r.from,n);!this.mapFile&&r.from&&(this.mapFile=r.from),this.mapFile&&(this.root=ti(this.mapFile)),i&&(this.text=i)}consumer(){return this.consumerCache||(this.consumerCache=new Xa(this.text)),this.consumerCache}decodeInline(e){let r=/^data:application\\/json;charset=utf-?8;base64,/,n=/^data:application\\/json;base64,/,i=/^data:application\\/json;charset=utf-?8,/,a=/^data:application\\/json,/;if(i.test(e)||a.test(e))return decodeURIComponent(e.substr(RegExp.lastMatch.length));if(r.test(e)||n.test(e))return Hp(e.substr(RegExp.lastMatch.length));let s=e.match(/data:application\\/json;([^,]+),/)[1];throw new Error(\"Unsupported source map encoding \"+s)}getAnnotationURL(e){return e.replace(/^\\/\\*\\s*# sourceMappingURL=/,\"\").trim()}isMap(e){return typeof e!=\"object\"?!1:typeof e.mappings==\"string\"||typeof e._mappings==\"string\"||Array.isArray(e.sections)}loadAnnotation(e){let r=e.match(/\\/\\*\\s*# sourceMappingURL=/gm);if(!r)return;let n=e.lastIndexOf(r.pop()),i=e.indexOf(\"*/\",n);n>-1&&i>-1&&(this.annotation=this.getAnnotationURL(e.substring(n,i)))}loadFile(e){if(this.root=ti(e),Bp(e))return this.mapFile=e,Gp(e,\"utf-8\").toString().trim()}loadMap(e,r){if(r===!1)return!1;if(r){if(typeof r==\"string\")return r;if(typeof r==\"function\"){let n=r(e);if(n){let i=this.loadFile(n);if(!i)throw new Error(\"Unable to load previous source map: \"+n.toString());return i}}else{if(r instanceof Xa)return Ka.fromSourceMap(r).toString();if(r instanceof Ka)return r.toString();if(this.isMap(r))return JSON.stringify(r);throw new Error(\"Unsupported previous source map format: \"+r.toString())}}else{if(this.inline)return this.decodeInline(this.annotation);if(this.annotation){let n=this.annotation;return e&&(n=Yp(ti(e),n)),this.loadFile(n)}}}startWith(e,r){return e?e.substr(0,r.length)===r:!1}withContent(){return!!(this.consumer().sourcesContent&&this.consumer().sourcesContent.length>0)}};Za.exports=Ot;Ot.default=Ot});var Et=S((Pb,no)=>{\"use strict\";var{SourceMapConsumer:Qp,SourceMapGenerator:Jp}=kr(),{fileURLToPath:eo,pathToFileURL:Or}=(ei(),$e(Zn)),{isAbsolute:si,resolve:ai}=(kt(),$e(St)),{nanoid:Xp}=Ja(),ni=Yn(),to=br(),Kp=ri(),ii=Symbol(\"fromOffsetCache\"),Zp=Boolean(Qp&&Jp),ro=Boolean(ai&&si),Ye=class{constructor(e,r={}){if(e===null||typeof e>\"u\"||typeof e==\"object\"&&!e.toString)throw new Error(`PostCSS received ${e} instead of CSS string`);if(this.css=e.toString(),this.css[0]===\"\\uFEFF\"||this.css[0]===\"\\uFFFE\"?(this.hasBOM=!0,this.css=this.css.slice(1)):this.hasBOM=!1,r.from&&(!ro||/^\\w+:\\/\\//.test(r.from)||si(r.from)?this.file=r.from:this.file=ai(r.from)),ro&&Zp){let n=new Kp(this.css,r);if(n.text){this.map=n;let i=n.consumer().file;!this.file&&i&&(this.file=this.mapResolve(i))}}this.file||(this.id=\"<input css \"+Xp(6)+\">\"),this.map&&(this.map.file=this.from)}error(e,r,n,i={}){let a,s,o;if(r&&typeof r==\"object\"){let u=r,f=n;if(typeof u.offset==\"number\"){let p=this.fromOffset(u.offset);r=p.line,n=p.col}else r=u.line,n=u.column;if(typeof f.offset==\"number\"){let p=this.fromOffset(f.offset);s=p.line,o=p.col}else s=f.line,o=f.column}else if(!n){let u=this.fromOffset(r);r=u.line,n=u.col}let l=this.origin(r,n,s,o);return l?a=new to(e,l.endLine===void 0?l.line:{column:l.column,line:l.line},l.endLine===void 0?l.column:{column:l.endColumn,line:l.endLine},l.source,l.file,i.plugin):a=new to(e,s===void 0?r:{column:n,line:r},s===void 0?n:{column:o,line:s},this.css,this.file,i.plugin),a.input={column:n,endColumn:o,endLine:s,line:r,source:this.css},this.file&&(Or&&(a.input.url=Or(this.file).toString()),a.input.file=this.file),a}fromOffset(e){let r,n;if(this[ii])n=this[ii];else{let a=this.css.split(`\n`);n=new Array(a.length);let s=0;for(let o=0,l=a.length;o<l;o++)n[o]=s,s+=a[o].length+1;this[ii]=n}r=n[n.length-1];let i=0;if(e>=r)i=n.length-1;else{let a=n.length-2,s;for(;i<a;)if(s=i+(a-i>>1),e<n[s])a=s-1;else if(e>=n[s+1])i=s+1;else{i=s;break}}return{col:e-n[i]+1,line:i+1}}mapResolve(e){return/^\\w+:\\/\\//.test(e)?e:ai(this.map.consumer().sourceRoot||this.map.root||\".\",e)}origin(e,r,n,i){if(!this.map)return!1;let a=this.map.consumer(),s=a.originalPositionFor({column:r,line:e});if(!s.source)return!1;let o;typeof n==\"number\"&&(o=a.originalPositionFor({column:i,line:n}));let l;si(s.source)?l=Or(s.source):l=new URL(s.source,this.map.consumer().sourceRoot||Or(this.map.mapFile));let u={column:s.column,endColumn:o&&o.column,endLine:o&&o.line,line:s.line,url:l.toString()};if(l.protocol===\"file:\")if(eo)u.file=eo(l);else throw new Error(\"file: protocol is not available in this PostCSS build\");let f=a.sourceContentFor(s.source);return f&&(u.source=f),u}toJSON(){let e={};for(let r of[\"hasBOM\",\"css\",\"file\",\"id\"])this[r]!=null&&(e[r]=this[r]);return this.map&&(e.map={...this.map},e.map.consumerCache&&(e.map.consumerCache=void 0)),e}get from(){return this.file||this.id}};no.exports=Ye;Ye.default=Ye;ni&&ni.registerInput&&ni.registerInput(Ye)});var li=S((Ib,uo)=>{\"use strict\";var{SourceMapConsumer:so,SourceMapGenerator:Er}=kr(),{dirname:Cr,relative:ao,resolve:oo,sep:lo}=(kt(),$e(St)),{pathToFileURL:io}=(ei(),$e(Zn)),ed=Et(),td=Boolean(so&&Er),rd=Boolean(Cr&&oo&&ao&&lo),oi=class{constructor(e,r,n,i){this.stringify=e,this.mapOpts=n.map||{},this.root=r,this.opts=n,this.css=i,this.usesFileUrls=!this.mapOpts.from&&this.mapOpts.absolute,this.memoizedFileURLs=new Map,this.memoizedPaths=new Map,this.memoizedURLs=new Map}addAnnotation(){let e;this.isInline()?e=\"data:application/json;base64,\"+this.toBase64(this.map.toString()):typeof this.mapOpts.annotation==\"string\"?e=this.mapOpts.annotation:typeof this.mapOpts.annotation==\"function\"?e=this.mapOpts.annotation(this.opts.to,this.root):e=this.outputFile()+\".map\";let r=`\n`;this.css.includes(`\\r\n`)&&(r=`\\r\n`),this.css+=r+\"/*# sourceMappingURL=\"+e+\" */\"}applyPrevMaps(){for(let e of this.previous()){let r=this.toUrl(this.path(e.file)),n=e.root||Cr(e.file),i;this.mapOpts.sourcesContent===!1?(i=new so(e.text),i.sourcesContent&&(i.sourcesContent=i.sourcesContent.map(()=>null))):i=e.consumer(),this.map.applySourceMap(i,r,this.toUrl(this.path(n)))}}clearAnnotation(){if(this.mapOpts.annotation!==!1)if(this.root){let e;for(let r=this.root.nodes.length-1;r>=0;r--)e=this.root.nodes[r],e.type===\"comment\"&&e.text.indexOf(\"# sourceMappingURL=\")===0&&this.root.removeChild(r)}else this.css&&(this.css=this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm,\"\"))}generate(){if(this.clearAnnotation(),rd&&td&&this.isMap())return this.generateMap();{let e=\"\";return this.stringify(this.root,r=>{e+=r}),[e]}}generateMap(){if(this.root)this.generateString();else if(this.previous().length===1){let e=this.previous()[0].consumer();e.file=this.outputFile(),this.map=Er.fromSourceMap(e)}else this.map=new Er({file:this.outputFile()}),this.map.addMapping({generated:{column:0,line:1},original:{column:0,line:1},source:this.opts.from?this.toUrl(this.path(this.opts.from)):\"<no source>\"});return this.isSourcesContent()&&this.setSourcesContent(),this.root&&this.previous().length>0&&this.applyPrevMaps(),this.isAnnotation()&&this.addAnnotation(),this.isInline()?[this.css]:[this.css,this.map]}generateString(){this.css=\"\",this.map=new Er({file:this.outputFile()});let e=1,r=1,n=\"<no source>\",i={generated:{column:0,line:0},original:{column:0,line:0},source:\"\"},a,s;this.stringify(this.root,(o,l,u)=>{if(this.css+=o,l&&u!==\"end\"&&(i.generated.line=e,i.generated.column=r-1,l.source&&l.source.start?(i.source=this.sourcePath(l),i.original.line=l.source.start.line,i.original.column=l.source.start.column-1,this.map.addMapping(i)):(i.source=n,i.original.line=1,i.original.column=0,this.map.addMapping(i))),a=o.match(/\\n/g),a?(e+=a.length,s=o.lastIndexOf(`\n`),r=o.length-s):r+=o.length,l&&u!==\"start\"){let f=l.parent||{raws:{}};(!(l.type===\"decl\"||l.type===\"atrule\"&&!l.nodes)||l!==f.last||f.raws.semicolon)&&(l.source&&l.source.end?(i.source=this.sourcePath(l),i.original.line=l.source.end.line,i.original.column=l.source.end.column-1,i.generated.line=e,i.generated.column=r-2,this.map.addMapping(i)):(i.source=n,i.original.line=1,i.original.column=0,i.generated.line=e,i.generated.column=r-1,this.map.addMapping(i)))}})}isAnnotation(){return this.isInline()?!0:typeof this.mapOpts.annotation<\"u\"?this.mapOpts.annotation:this.previous().length?this.previous().some(e=>e.annotation):!0}isInline(){if(typeof this.mapOpts.inline<\"u\")return this.mapOpts.inline;let e=this.mapOpts.annotation;return typeof e<\"u\"&&e!==!0?!1:this.previous().length?this.previous().some(r=>r.inline):!0}isMap(){return typeof this.opts.map<\"u\"?!!this.opts.map:this.previous().length>0}isSourcesContent(){return typeof this.mapOpts.sourcesContent<\"u\"?this.mapOpts.sourcesContent:this.previous().length?this.previous().some(e=>e.withContent()):!0}outputFile(){return this.opts.to?this.path(this.opts.to):this.opts.from?this.path(this.opts.from):\"to.css\"}path(e){if(this.mapOpts.absolute||e.charCodeAt(0)===60||/^\\w+:\\/\\//.test(e))return e;let r=this.memoizedPaths.get(e);if(r)return r;let n=this.opts.to?Cr(this.opts.to):\".\";typeof this.mapOpts.annotation==\"string\"&&(n=Cr(oo(n,this.mapOpts.annotation)));let i=ao(n,e);return this.memoizedPaths.set(e,i),i}previous(){if(!this.previousMaps)if(this.previousMaps=[],this.root)this.root.walk(e=>{if(e.source&&e.source.input.map){let r=e.source.input.map;this.previousMaps.includes(r)||this.previousMaps.push(r)}});else{let e=new ed(this.css,this.opts);e.map&&this.previousMaps.push(e.map)}return this.previousMaps}setSourcesContent(){let e={};if(this.root)this.root.walk(r=>{if(r.source){let n=r.source.input.from;if(n&&!e[n]){e[n]=!0;let i=this.usesFileUrls?this.toFileUrl(n):this.toUrl(this.path(n));this.map.setSourceContent(i,r.source.input.css)}}});else if(this.css){let r=this.opts.from?this.toUrl(this.path(this.opts.from)):\"<no source>\";this.map.setSourceContent(r,this.css)}}sourcePath(e){return this.mapOpts.from?this.toUrl(this.mapOpts.from):this.usesFileUrls?this.toFileUrl(e.source.input.from):this.toUrl(this.path(e.source.input.from))}toBase64(e){return Buffer?Buffer.from(e).toString(\"base64\"):window.btoa(unescape(encodeURIComponent(e)))}toFileUrl(e){let r=this.memoizedFileURLs.get(e);if(r)return r;if(io){let n=io(e).toString();return this.memoizedFileURLs.set(e,n),n}else throw new Error(\"`map.absolute` option is not available in this PostCSS build\")}toUrl(e){let r=this.memoizedURLs.get(e);if(r)return r;lo===\"\\\\\"&&(e=e.replace(/\\\\/g,\"/\"));let n=encodeURI(e).replace(/[#?]/g,encodeURIComponent);return this.memoizedURLs.set(e,n),n}};uo.exports=oi});var At=S((Rb,fo)=>{\"use strict\";var nd=wt(),Ct=class extends nd{constructor(e){super(e),this.type=\"comment\"}};fo.exports=Ct;Ct.default=Ct});var _e=S((Db,bo)=>{\"use strict\";var{isClean:co,my:po}=xr(),ho=xt(),mo=At(),id=wt(),go,ui,fi,yo;function vo(t){return t.map(e=>(e.nodes&&(e.nodes=vo(e.nodes)),delete e.source,e))}function wo(t){if(t[co]=!1,t.proxyOf.nodes)for(let e of t.proxyOf.nodes)wo(e)}var ae=class extends id{append(...e){for(let r of e){let n=this.normalize(r,this.last);for(let i of n)this.proxyOf.nodes.push(i)}return this.markDirty(),this}cleanRaws(e){if(super.cleanRaws(e),this.nodes)for(let r of this.nodes)r.cleanRaws(e)}each(e){if(!this.proxyOf.nodes)return;let r=this.getIterator(),n,i;for(;this.indexes[r]<this.proxyOf.nodes.length&&(n=this.indexes[r],i=e(this.proxyOf.nodes[n],n),i!==!1);)this.indexes[r]+=1;return delete this.indexes[r],i}every(e){return this.nodes.every(e)}getIterator(){this.lastEach||(this.lastEach=0),this.indexes||(this.indexes={}),this.lastEach+=1;let e=this.lastEach;return this.indexes[e]=0,e}getProxyProcessor(){return{get(e,r){return r===\"proxyOf\"?e:e[r]?r===\"each\"||typeof r==\"string\"&&r.startsWith(\"walk\")?(...n)=>e[r](...n.map(i=>typeof i==\"function\"?(a,s)=>i(a.toProxy(),s):i)):r===\"every\"||r===\"some\"?n=>e[r]((i,...a)=>n(i.toProxy(),...a)):r===\"root\"?()=>e.root().toProxy():r===\"nodes\"?e.nodes.map(n=>n.toProxy()):r===\"first\"||r===\"last\"?e[r].toProxy():e[r]:e[r]},set(e,r,n){return e[r]===n||(e[r]=n,(r===\"name\"||r===\"params\"||r===\"selector\")&&e.markDirty()),!0}}}index(e){return typeof e==\"number\"?e:(e.proxyOf&&(e=e.proxyOf),this.proxyOf.nodes.indexOf(e))}insertAfter(e,r){let n=this.index(e),i=this.normalize(r,this.proxyOf.nodes[n]).reverse();n=this.index(e);for(let s of i)this.proxyOf.nodes.splice(n+1,0,s);let a;for(let s in this.indexes)a=this.indexes[s],n<a&&(this.indexes[s]=a+i.length);return this.markDirty(),this}insertBefore(e,r){let n=this.index(e),i=n===0?\"prepend\":!1,a=this.normalize(r,this.proxyOf.nodes[n],i).reverse();n=this.index(e);for(let o of a)this.proxyOf.nodes.splice(n,0,o);let s;for(let o in this.indexes)s=this.indexes[o],n<=s&&(this.indexes[o]=s+a.length);return this.markDirty(),this}normalize(e,r){if(typeof e==\"string\")e=vo(go(e).nodes);else if(Array.isArray(e)){e=e.slice(0);for(let i of e)i.parent&&i.parent.removeChild(i,\"ignore\")}else if(e.type===\"root\"&&this.type!==\"document\"){e=e.nodes.slice(0);for(let i of e)i.parent&&i.parent.removeChild(i,\"ignore\")}else if(e.type)e=[e];else if(e.prop){if(typeof e.value>\"u\")throw new Error(\"Value field is missed in node creation\");typeof e.value!=\"string\"&&(e.value=String(e.value)),e=[new ho(e)]}else if(e.selector)e=[new ui(e)];else if(e.name)e=[new fi(e)];else if(e.text)e=[new mo(e)];else throw new Error(\"Unknown node type in node creation\");return e.map(i=>(i[po]||ae.rebuild(i),i=i.proxyOf,i.parent&&i.parent.removeChild(i),i[co]&&wo(i),typeof i.raws.before>\"u\"&&r&&typeof r.raws.before<\"u\"&&(i.raws.before=r.raws.before.replace(/\\S/g,\"\")),i.parent=this.proxyOf,i))}prepend(...e){e=e.reverse();for(let r of e){let n=this.normalize(r,this.first,\"prepend\").reverse();for(let i of n)this.proxyOf.nodes.unshift(i);for(let i in this.indexes)this.indexes[i]=this.indexes[i]+n.length}return this.markDirty(),this}push(e){return e.parent=this,this.proxyOf.nodes.push(e),this}removeAll(){for(let e of this.proxyOf.nodes)e.parent=void 0;return this.proxyOf.nodes=[],this.markDirty(),this}removeChild(e){e=this.index(e),this.proxyOf.nodes[e].parent=void 0,this.proxyOf.nodes.splice(e,1);let r;for(let n in this.indexes)r=this.indexes[n],r>=e&&(this.indexes[n]=r-1);return this.markDirty(),this}replaceValues(e,r,n){return n||(n=r,r={}),this.walkDecls(i=>{r.props&&!r.props.includes(i.prop)||r.fast&&!i.value.includes(r.fast)||(i.value=i.value.replace(e,n))}),this.markDirty(),this}some(e){return this.nodes.some(e)}walk(e){return this.each((r,n)=>{let i;try{i=e(r,n)}catch(a){throw r.addToError(a)}return i!==!1&&r.walk&&(i=r.walk(e)),i})}walkAtRules(e,r){return r?e instanceof RegExp?this.walk((n,i)=>{if(n.type===\"atrule\"&&e.test(n.name))return r(n,i)}):this.walk((n,i)=>{if(n.type===\"atrule\"&&n.name===e)return r(n,i)}):(r=e,this.walk((n,i)=>{if(n.type===\"atrule\")return r(n,i)}))}walkComments(e){return this.walk((r,n)=>{if(r.type===\"comment\")return e(r,n)})}walkDecls(e,r){return r?e instanceof RegExp?this.walk((n,i)=>{if(n.type===\"decl\"&&e.test(n.prop))return r(n,i)}):this.walk((n,i)=>{if(n.type===\"decl\"&&n.prop===e)return r(n,i)}):(r=e,this.walk((n,i)=>{if(n.type===\"decl\")return r(n,i)}))}walkRules(e,r){return r?e instanceof RegExp?this.walk((n,i)=>{if(n.type===\"rule\"&&e.test(n.selector))return r(n,i)}):this.walk((n,i)=>{if(n.type===\"rule\"&&n.selector===e)return r(n,i)}):(r=e,this.walk((n,i)=>{if(n.type===\"rule\")return r(n,i)}))}get first(){if(!!this.proxyOf.nodes)return this.proxyOf.nodes[0]}get last(){if(!!this.proxyOf.nodes)return this.proxyOf.nodes[this.proxyOf.nodes.length-1]}};ae.registerParse=t=>{go=t};ae.registerRule=t=>{ui=t};ae.registerAtRule=t=>{fi=t};ae.registerRoot=t=>{yo=t};bo.exports=ae;ae.default=ae;ae.rebuild=t=>{t.type===\"atrule\"?Object.setPrototypeOf(t,fi.prototype):t.type===\"rule\"?Object.setPrototypeOf(t,ui.prototype):t.type===\"decl\"?Object.setPrototypeOf(t,ho.prototype):t.type===\"comment\"?Object.setPrototypeOf(t,mo.prototype):t.type===\"root\"&&Object.setPrototypeOf(t,yo.prototype),t[po]=!0,t.nodes&&t.nodes.forEach(e=>{ae.rebuild(e)})}});var Ar=S((Mb,ko)=>{\"use strict\";var sd=_e(),xo,So,je=class extends sd{constructor(e){super({type:\"document\",...e}),this.nodes||(this.nodes=[])}toResult(e={}){return new xo(new So,this,e).stringify()}};je.registerLazyResult=t=>{xo=t};je.registerProcessor=t=>{So=t};ko.exports=je;je.default=je});var ci=S((Fb,Eo)=>{\"use strict\";var Oo={};Eo.exports=function(e){Oo[e]||(Oo[e]=!0,typeof console<\"u\"&&console.warn&&console.warn(e))}});var pi=S((Lb,Co)=>{\"use strict\";var _t=class{constructor(e,r={}){if(this.type=\"warning\",this.text=e,r.node&&r.node.source){let n=r.node.rangeBy(r);this.line=n.start.line,this.column=n.start.column,this.endLine=n.end.line,this.endColumn=n.end.column}for(let n in r)this[n]=r[n]}toString(){return this.node?this.node.error(this.text,{index:this.index,plugin:this.plugin,word:this.word}).message:this.plugin?this.plugin+\": \"+this.text:this.text}};Co.exports=_t;_t.default=_t});var _r=S((Nb,Ao)=>{\"use strict\";var ad=pi(),Tt=class{constructor(e,r,n){this.processor=e,this.messages=[],this.root=r,this.opts=n,this.css=void 0,this.map=void 0}toString(){return this.css}warn(e,r={}){r.plugin||this.lastPlugin&&this.lastPlugin.postcssPlugin&&(r.plugin=this.lastPlugin.postcssPlugin);let n=new ad(e,r);return this.messages.push(n),n}warnings(){return this.messages.filter(e=>e.type===\"warning\")}get content(){return this.css}};Ao.exports=Tt;Tt.default=Tt});var Ro=S((qb,Io)=>{\"use strict\";var di=\"'\".charCodeAt(0),_o='\"'.charCodeAt(0),Tr=\"\\\\\".charCodeAt(0),To=\"/\".charCodeAt(0),Pr=`\n`.charCodeAt(0),Pt=\" \".charCodeAt(0),Ir=\"\\f\".charCodeAt(0),Rr=\"\t\".charCodeAt(0),Dr=\"\\r\".charCodeAt(0),od=\"[\".charCodeAt(0),ld=\"]\".charCodeAt(0),ud=\"(\".charCodeAt(0),fd=\")\".charCodeAt(0),cd=\"{\".charCodeAt(0),pd=\"}\".charCodeAt(0),dd=\";\".charCodeAt(0),hd=\"*\".charCodeAt(0),md=\":\".charCodeAt(0),gd=\"@\".charCodeAt(0),Mr=/[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g,Fr=/[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g,yd=/.[\\r\\n\"'(/\\\\]/,Po=/[\\da-f]/i;Io.exports=function(e,r={}){let n=e.css.valueOf(),i=r.ignoreErrors,a,s,o,l,u,f,p,c,d,h,y=n.length,m=0,g=[],w=[];function b(){return m}function v(E){throw e.error(\"Unclosed \"+E,m)}function O(){return w.length===0&&m>=y}function x(E){if(w.length)return w.pop();if(m>=y)return;let I=E?E.ignoreUnclosed:!1;switch(a=n.charCodeAt(m),a){case Pr:case Pt:case Rr:case Dr:case Ir:{s=m;do s+=1,a=n.charCodeAt(s);while(a===Pt||a===Pr||a===Rr||a===Dr||a===Ir);h=[\"space\",n.slice(m,s)],m=s-1;break}case od:case ld:case cd:case pd:case md:case dd:case fd:{let F=String.fromCharCode(a);h=[F,F,m];break}case ud:{if(c=g.length?g.pop()[1]:\"\",d=n.charCodeAt(m+1),c===\"url\"&&d!==di&&d!==_o&&d!==Pt&&d!==Pr&&d!==Rr&&d!==Ir&&d!==Dr){s=m;do{if(f=!1,s=n.indexOf(\")\",s+1),s===-1)if(i||I){s=m;break}else v(\"bracket\");for(p=s;n.charCodeAt(p-1)===Tr;)p-=1,f=!f}while(f);h=[\"brackets\",n.slice(m,s+1),m,s],m=s}else s=n.indexOf(\")\",m+1),l=n.slice(m,s+1),s===-1||yd.test(l)?h=[\"(\",\"(\",m]:(h=[\"brackets\",l,m,s],m=s);break}case di:case _o:{o=a===di?\"'\":'\"',s=m;do{if(f=!1,s=n.indexOf(o,s+1),s===-1)if(i||I){s=m+1;break}else v(\"string\");for(p=s;n.charCodeAt(p-1)===Tr;)p-=1,f=!f}while(f);h=[\"string\",n.slice(m,s+1),m,s],m=s;break}case gd:{Mr.lastIndex=m+1,Mr.test(n),Mr.lastIndex===0?s=n.length-1:s=Mr.lastIndex-2,h=[\"at-word\",n.slice(m,s+1),m,s],m=s;break}case Tr:{for(s=m,u=!0;n.charCodeAt(s+1)===Tr;)s+=1,u=!u;if(a=n.charCodeAt(s+1),u&&a!==To&&a!==Pt&&a!==Pr&&a!==Rr&&a!==Dr&&a!==Ir&&(s+=1,Po.test(n.charAt(s)))){for(;Po.test(n.charAt(s+1));)s+=1;n.charCodeAt(s+1)===Pt&&(s+=1)}h=[\"word\",n.slice(m,s+1),m,s],m=s;break}default:{a===To&&n.charCodeAt(m+1)===hd?(s=n.indexOf(\"*/\",m+2)+1,s===0&&(i||I?s=n.length:v(\"comment\")),h=[\"comment\",n.slice(m,s+1),m,s],m=s):(Fr.lastIndex=m+1,Fr.test(n),Fr.lastIndex===0?s=n.length-1:s=Fr.lastIndex-2,h=[\"word\",n.slice(m,s+1),m,s],g.push(h),m=s);break}}return m++,h}function A(E){w.push(E)}return{back:A,endOfFile:O,nextToken:x,position:b}}});var Lr=S(($b,Mo)=>{\"use strict\";var Do=_e(),He=class extends Do{constructor(e){super(e),this.type=\"atrule\"}append(...e){return this.proxyOf.nodes||(this.nodes=[]),super.append(...e)}prepend(...e){return this.proxyOf.nodes||(this.nodes=[]),super.prepend(...e)}};Mo.exports=He;He.default=He;Do.registerAtRule(He)});var Qe=S((Ub,qo)=>{\"use strict\";var Fo=_e(),Lo,No,Te=class extends Fo{constructor(e){super(e),this.type=\"root\",this.nodes||(this.nodes=[])}normalize(e,r,n){let i=super.normalize(e);if(r){if(n===\"prepend\")this.nodes.length>1?r.raws.before=this.nodes[1].raws.before:delete r.raws.before;else if(this.first!==r)for(let a of i)a.raws.before=r.raws.before}return i}removeChild(e,r){let n=this.index(e);return!r&&n===0&&this.nodes.length>1&&(this.nodes[1].raws.before=this.nodes[n].raws.before),super.removeChild(e)}toResult(e={}){return new Lo(new No,this,e).stringify()}};Te.registerLazyResult=t=>{Lo=t};Te.registerProcessor=t=>{No=t};qo.exports=Te;Te.default=Te;Fo.registerRoot(Te)});var hi=S((jb,$o)=>{\"use strict\";var It={comma(t){return It.split(t,[\",\"],!0)},space(t){let e=[\" \",`\n`,\"\t\"];return It.split(t,e)},split(t,e,r){let n=[],i=\"\",a=!1,s=0,o=!1,l=\"\",u=!1;for(let f of t)u?u=!1:f===\"\\\\\"?u=!0:o?f===l&&(o=!1):f==='\"'||f===\"'\"?(o=!0,l=f):f===\"(\"?s+=1:f===\")\"?s>0&&(s-=1):s===0&&e.includes(f)&&(a=!0),a?(i!==\"\"&&n.push(i.trim()),i=\"\",a=!1):i+=f;return(r||i!==\"\")&&n.push(i.trim()),n}};$o.exports=It;It.default=It});var Nr=S((zb,jo)=>{\"use strict\";var Uo=_e(),vd=hi(),Je=class extends Uo{constructor(e){super(e),this.type=\"rule\",this.nodes||(this.nodes=[])}get selectors(){return vd.comma(this.selector)}set selectors(e){let r=this.selector?this.selector.match(/,\\s*/):null,n=r?r[0]:\",\"+this.raw(\"between\",\"beforeOpen\");this.selector=e.join(n)}};jo.exports=Je;Je.default=Je;Uo.registerRule(Je)});var Bo=S((Vb,Wo)=>{\"use strict\";var wd=xt(),bd=Ro(),xd=At(),Sd=Lr(),kd=Qe(),zo=Nr(),Vo={empty:!0,space:!0};function Od(t){for(let e=t.length-1;e>=0;e--){let r=t[e],n=r[3]||r[2];if(n)return n}}var mi=class{constructor(e){this.input=e,this.root=new kd,this.current=this.root,this.spaces=\"\",this.semicolon=!1,this.customProperty=!1,this.createTokenizer(),this.root.source={input:e,start:{column:1,line:1,offset:0}}}atrule(e){let r=new Sd;r.name=e[1].slice(1),r.name===\"\"&&this.unnamedAtrule(r,e),this.init(r,e[2]);let n,i,a,s=!1,o=!1,l=[],u=[];for(;!this.tokenizer.endOfFile();){if(e=this.tokenizer.nextToken(),n=e[0],n===\"(\"||n===\"[\"?u.push(n===\"(\"?\")\":\"]\"):n===\"{\"&&u.length>0?u.push(\"}\"):n===u[u.length-1]&&u.pop(),u.length===0)if(n===\";\"){r.source.end=this.getPosition(e[2]),r.source.end.offset++,this.semicolon=!0;break}else if(n===\"{\"){o=!0;break}else if(n===\"}\"){if(l.length>0){for(a=l.length-1,i=l[a];i&&i[0]===\"space\";)i=l[--a];i&&(r.source.end=this.getPosition(i[3]||i[2]),r.source.end.offset++)}this.end(e);break}else l.push(e);else l.push(e);if(this.tokenizer.endOfFile()){s=!0;break}}r.raws.between=this.spacesAndCommentsFromEnd(l),l.length?(r.raws.afterName=this.spacesAndCommentsFromStart(l),this.raw(r,\"params\",l),s&&(e=l[l.length-1],r.source.end=this.getPosition(e[3]||e[2]),r.source.end.offset++,this.spaces=r.raws.between,r.raws.between=\"\")):(r.raws.afterName=\"\",r.params=\"\"),o&&(r.nodes=[],this.current=r)}checkMissedSemicolon(e){let r=this.colon(e);if(r===!1)return;let n=0,i;for(let a=r-1;a>=0&&(i=e[a],!(i[0]!==\"space\"&&(n+=1,n===2)));a--);throw this.input.error(\"Missed semicolon\",i[0]===\"word\"?i[3]+1:i[2])}colon(e){let r=0,n,i,a;for(let[s,o]of e.entries()){if(n=o,i=n[0],i===\"(\"&&(r+=1),i===\")\"&&(r-=1),r===0&&i===\":\")if(!a)this.doubleColon(n);else{if(a[0]===\"word\"&&a[1]===\"progid\")continue;return s}a=n}return!1}comment(e){let r=new xd;this.init(r,e[2]),r.source.end=this.getPosition(e[3]||e[2]),r.source.end.offset++;let n=e[1].slice(2,-2);if(/^\\s*$/.test(n))r.text=\"\",r.raws.left=n,r.raws.right=\"\";else{let i=n.match(/^(\\s*)([^]*\\S)(\\s*)$/);r.text=i[2],r.raws.left=i[1],r.raws.right=i[3]}}createTokenizer(){this.tokenizer=bd(this.input)}decl(e,r){let n=new wd;this.init(n,e[0][2]);let i=e[e.length-1];for(i[0]===\";\"&&(this.semicolon=!0,e.pop()),n.source.end=this.getPosition(i[3]||i[2]||Od(e)),n.source.end.offset++;e[0][0]!==\"word\";)e.length===1&&this.unknownWord(e),n.raws.before+=e.shift()[1];for(n.source.start=this.getPosition(e[0][2]),n.prop=\"\";e.length;){let u=e[0][0];if(u===\":\"||u===\"space\"||u===\"comment\")break;n.prop+=e.shift()[1]}n.raws.between=\"\";let a;for(;e.length;)if(a=e.shift(),a[0]===\":\"){n.raws.between+=a[1];break}else a[0]===\"word\"&&/\\w/.test(a[1])&&this.unknownWord([a]),n.raws.between+=a[1];(n.prop[0]===\"_\"||n.prop[0]===\"*\")&&(n.raws.before+=n.prop[0],n.prop=n.prop.slice(1));let s=[],o;for(;e.length&&(o=e[0][0],!(o!==\"space\"&&o!==\"comment\"));)s.push(e.shift());this.precheckMissedSemicolon(e);for(let u=e.length-1;u>=0;u--){if(a=e[u],a[1].toLowerCase()===\"!important\"){n.important=!0;let f=this.stringFrom(e,u);f=this.spacesFromEnd(e)+f,f!==\" !important\"&&(n.raws.important=f);break}else if(a[1].toLowerCase()===\"important\"){let f=e.slice(0),p=\"\";for(let c=u;c>0;c--){let d=f[c][0];if(p.trim().indexOf(\"!\")===0&&d!==\"space\")break;p=f.pop()[1]+p}p.trim().indexOf(\"!\")===0&&(n.important=!0,n.raws.important=p,e=f)}if(a[0]!==\"space\"&&a[0]!==\"comment\")break}e.some(u=>u[0]!==\"space\"&&u[0]!==\"comment\")&&(n.raws.between+=s.map(u=>u[1]).join(\"\"),s=[]),this.raw(n,\"value\",s.concat(e),r),n.value.includes(\":\")&&!r&&this.checkMissedSemicolon(e)}doubleColon(e){throw this.input.error(\"Double colon\",{offset:e[2]},{offset:e[2]+e[1].length})}emptyRule(e){let r=new zo;this.init(r,e[2]),r.selector=\"\",r.raws.between=\"\",this.current=r}end(e){this.current.nodes&&this.current.nodes.length&&(this.current.raws.semicolon=this.semicolon),this.semicolon=!1,this.current.raws.after=(this.current.raws.after||\"\")+this.spaces,this.spaces=\"\",this.current.parent?(this.current.source.end=this.getPosition(e[2]),this.current.source.end.offset++,this.current=this.current.parent):this.unexpectedClose(e)}endFile(){this.current.parent&&this.unclosedBlock(),this.current.nodes&&this.current.nodes.length&&(this.current.raws.semicolon=this.semicolon),this.current.raws.after=(this.current.raws.after||\"\")+this.spaces,this.root.source.end=this.getPosition(this.tokenizer.position())}freeSemicolon(e){if(this.spaces+=e[1],this.current.nodes){let r=this.current.nodes[this.current.nodes.length-1];r&&r.type===\"rule\"&&!r.raws.ownSemicolon&&(r.raws.ownSemicolon=this.spaces,this.spaces=\"\")}}getPosition(e){let r=this.input.fromOffset(e);return{column:r.col,line:r.line,offset:e}}init(e,r){this.current.push(e),e.source={input:this.input,start:this.getPosition(r)},e.raws.before=this.spaces,this.spaces=\"\",e.type!==\"comment\"&&(this.semicolon=!1)}other(e){let r=!1,n=null,i=!1,a=null,s=[],o=e[1].startsWith(\"--\"),l=[],u=e;for(;u;){if(n=u[0],l.push(u),n===\"(\"||n===\"[\")a||(a=u),s.push(n===\"(\"?\")\":\"]\");else if(o&&i&&n===\"{\")a||(a=u),s.push(\"}\");else if(s.length===0)if(n===\";\")if(i){this.decl(l,o);return}else break;else if(n===\"{\"){this.rule(l);return}else if(n===\"}\"){this.tokenizer.back(l.pop()),r=!0;break}else n===\":\"&&(i=!0);else n===s[s.length-1]&&(s.pop(),s.length===0&&(a=null));u=this.tokenizer.nextToken()}if(this.tokenizer.endOfFile()&&(r=!0),s.length>0&&this.unclosedBracket(a),r&&i){if(!o)for(;l.length&&(u=l[l.length-1][0],!(u!==\"space\"&&u!==\"comment\"));)this.tokenizer.back(l.pop());this.decl(l,o)}else this.unknownWord(l)}parse(){let e;for(;!this.tokenizer.endOfFile();)switch(e=this.tokenizer.nextToken(),e[0]){case\"space\":this.spaces+=e[1];break;case\";\":this.freeSemicolon(e);break;case\"}\":this.end(e);break;case\"comment\":this.comment(e);break;case\"at-word\":this.atrule(e);break;case\"{\":this.emptyRule(e);break;default:this.other(e);break}this.endFile()}precheckMissedSemicolon(){}raw(e,r,n,i){let a,s,o=n.length,l=\"\",u=!0,f,p;for(let c=0;c<o;c+=1)a=n[c],s=a[0],s===\"space\"&&c===o-1&&!i?u=!1:s===\"comment\"?(p=n[c-1]?n[c-1][0]:\"empty\",f=n[c+1]?n[c+1][0]:\"empty\",!Vo[p]&&!Vo[f]?l.slice(-1)===\",\"?u=!1:l+=a[1]:u=!1):l+=a[1];if(!u){let c=n.reduce((d,h)=>d+h[1],\"\");e.raws[r]={raw:c,value:l}}e[r]=l}rule(e){e.pop();let r=new zo;this.init(r,e[0][2]),r.raws.between=this.spacesAndCommentsFromEnd(e),this.raw(r,\"selector\",e),this.current=r}spacesAndCommentsFromEnd(e){let r,n=\"\";for(;e.length&&(r=e[e.length-1][0],!(r!==\"space\"&&r!==\"comment\"));)n=e.pop()[1]+n;return n}spacesAndCommentsFromStart(e){let r,n=\"\";for(;e.length&&(r=e[0][0],!(r!==\"space\"&&r!==\"comment\"));)n+=e.shift()[1];return n}spacesFromEnd(e){let r,n=\"\";for(;e.length&&(r=e[e.length-1][0],r===\"space\");)n=e.pop()[1]+n;return n}stringFrom(e,r){let n=\"\";for(let i=r;i<e.length;i++)n+=e[i][1];return e.splice(r,e.length-r),n}unclosedBlock(){let e=this.current.source.start;throw this.input.error(\"Unclosed block\",e.line,e.column)}unclosedBracket(e){throw this.input.error(\"Unclosed bracket\",{offset:e[2]},{offset:e[2]+1})}unexpectedClose(e){throw this.input.error(\"Unexpected }\",{offset:e[2]},{offset:e[2]+1})}unknownWord(e){throw this.input.error(\"Unknown word\",{offset:e[0][2]},{offset:e[0][2]+e[0][1].length})}unnamedAtrule(e,r){throw this.input.error(\"At-rule without name\",{offset:r[2]},{offset:r[2]+r[1].length})}};Wo.exports=mi});var $r=S((Wb,Go)=>{\"use strict\";var Ed=_e(),Cd=Bo(),Ad=Et();function qr(t,e){let r=new Ad(t,e),n=new Cd(r);try{n.parse()}catch(i){throw i}return n.root}Go.exports=qr;qr.default=qr;Ed.registerParse(qr)});var vi=S((Gb,Jo)=>{\"use strict\";var{isClean:me,my:_d}=xr(),Td=li(),Pd=yt(),Id=_e(),Rd=Ar(),Bb=ci(),Yo=_r(),Dd=$r(),Md=Qe(),Fd={atrule:\"AtRule\",comment:\"Comment\",decl:\"Declaration\",document:\"Document\",root:\"Root\",rule:\"Rule\"},Ld={AtRule:!0,AtRuleExit:!0,Comment:!0,CommentExit:!0,Declaration:!0,DeclarationExit:!0,Document:!0,DocumentExit:!0,Once:!0,OnceExit:!0,postcssPlugin:!0,prepare:!0,Root:!0,RootExit:!0,Rule:!0,RuleExit:!0},Nd={Once:!0,postcssPlugin:!0,prepare:!0},Xe=0;function Rt(t){return typeof t==\"object\"&&typeof t.then==\"function\"}function Qo(t){let e=!1,r=Fd[t.type];return t.type===\"decl\"?e=t.prop.toLowerCase():t.type===\"atrule\"&&(e=t.name.toLowerCase()),e&&t.append?[r,r+\"-\"+e,Xe,r+\"Exit\",r+\"Exit-\"+e]:e?[r,r+\"-\"+e,r+\"Exit\",r+\"Exit-\"+e]:t.append?[r,Xe,r+\"Exit\"]:[r,r+\"Exit\"]}function Ho(t){let e;return t.type===\"document\"?e=[\"Document\",Xe,\"DocumentExit\"]:t.type===\"root\"?e=[\"Root\",Xe,\"RootExit\"]:e=Qo(t),{eventIndex:0,events:e,iterator:0,node:t,visitorIndex:0,visitors:[]}}function gi(t){return t[me]=!1,t.nodes&&t.nodes.forEach(e=>gi(e)),t}var yi={},ge=class{constructor(e,r,n){this.stringified=!1,this.processed=!1;let i;if(typeof r==\"object\"&&r!==null&&(r.type===\"root\"||r.type===\"document\"))i=gi(r);else if(r instanceof ge||r instanceof Yo)i=gi(r.root),r.map&&(typeof n.map>\"u\"&&(n.map={}),n.map.inline||(n.map.inline=!1),n.map.prev=r.map);else{let a=Dd;n.syntax&&(a=n.syntax.parse),n.parser&&(a=n.parser),a.parse&&(a=a.parse);try{i=a(r,n)}catch(s){this.processed=!0,this.error=s}i&&!i[_d]&&Id.rebuild(i)}this.result=new Yo(e,i,n),this.helpers={...yi,postcss:yi,result:this.result},this.plugins=this.processor.plugins.map(a=>typeof a==\"object\"&&a.prepare?{...a,...a.prepare(this.result)}:a)}async(){return this.error?Promise.reject(this.error):this.processed?Promise.resolve(this.result):(this.processing||(this.processing=this.runAsync()),this.processing)}catch(e){return this.async().catch(e)}finally(e){return this.async().then(e,e)}getAsyncError(){throw new Error(\"Use process(css).then(cb) to work with async plugins\")}handleError(e,r){let n=this.result.lastPlugin;try{r&&r.addToError(e),this.error=e,e.name===\"CssSyntaxError\"&&!e.plugin?(e.plugin=n.postcssPlugin,e.setMessage()):n.postcssVersion}catch(i){console&&console.error&&console.error(i)}return e}prepareVisitors(){this.listeners={};let e=(r,n,i)=>{this.listeners[n]||(this.listeners[n]=[]),this.listeners[n].push([r,i])};for(let r of this.plugins)if(typeof r==\"object\")for(let n in r){if(!Ld[n]&&/^[A-Z]/.test(n))throw new Error(`Unknown event ${n} in ${r.postcssPlugin}. Try to update PostCSS (${this.processor.version} now).`);if(!Nd[n])if(typeof r[n]==\"object\")for(let i in r[n])i===\"*\"?e(r,n,r[n][i]):e(r,n+\"-\"+i.toLowerCase(),r[n][i]);else typeof r[n]==\"function\"&&e(r,n,r[n])}this.hasListener=Object.keys(this.listeners).length>0}async runAsync(){this.plugin=0;for(let e=0;e<this.plugins.length;e++){let r=this.plugins[e],n=this.runOnRoot(r);if(Rt(n))try{await n}catch(i){throw this.handleError(i)}}if(this.prepareVisitors(),this.hasListener){let e=this.result.root;for(;!e[me];){e[me]=!0;let r=[Ho(e)];for(;r.length>0;){let n=this.visitTick(r);if(Rt(n))try{await n}catch(i){let a=r[r.length-1].node;throw this.handleError(i,a)}}}if(this.listeners.OnceExit)for(let[r,n]of this.listeners.OnceExit){this.result.lastPlugin=r;try{if(e.type===\"document\"){let i=e.nodes.map(a=>n(a,this.helpers));await Promise.all(i)}else await n(e,this.helpers)}catch(i){throw this.handleError(i)}}}return this.processed=!0,this.stringify()}runOnRoot(e){this.result.lastPlugin=e;try{if(typeof e==\"object\"&&e.Once){if(this.result.root.type===\"document\"){let r=this.result.root.nodes.map(n=>e.Once(n,this.helpers));return Rt(r[0])?Promise.all(r):r}return e.Once(this.result.root,this.helpers)}else if(typeof e==\"function\")return e(this.result.root,this.result)}catch(r){throw this.handleError(r)}}stringify(){if(this.error)throw this.error;if(this.stringified)return this.result;this.stringified=!0,this.sync();let e=this.result.opts,r=Pd;e.syntax&&(r=e.syntax.stringify),e.stringifier&&(r=e.stringifier),r.stringify&&(r=r.stringify);let i=new Td(r,this.result.root,this.result.opts).generate();return this.result.css=i[0],this.result.map=i[1],this.result}sync(){if(this.error)throw this.error;if(this.processed)return this.result;if(this.processed=!0,this.processing)throw this.getAsyncError();for(let e of this.plugins){let r=this.runOnRoot(e);if(Rt(r))throw this.getAsyncError()}if(this.prepareVisitors(),this.hasListener){let e=this.result.root;for(;!e[me];)e[me]=!0,this.walkSync(e);if(this.listeners.OnceExit)if(e.type===\"document\")for(let r of e.nodes)this.visitSync(this.listeners.OnceExit,r);else this.visitSync(this.listeners.OnceExit,e)}return this.result}then(e,r){return this.async().then(e,r)}toString(){return this.css}visitSync(e,r){for(let[n,i]of e){this.result.lastPlugin=n;let a;try{a=i(r,this.helpers)}catch(s){throw this.handleError(s,r.proxyOf)}if(r.type!==\"root\"&&r.type!==\"document\"&&!r.parent)return!0;if(Rt(a))throw this.getAsyncError()}}visitTick(e){let r=e[e.length-1],{node:n,visitors:i}=r;if(n.type!==\"root\"&&n.type!==\"document\"&&!n.parent){e.pop();return}if(i.length>0&&r.visitorIndex<i.length){let[s,o]=i[r.visitorIndex];r.visitorIndex+=1,r.visitorIndex===i.length&&(r.visitors=[],r.visitorIndex=0),this.result.lastPlugin=s;try{return o(n.toProxy(),this.helpers)}catch(l){throw this.handleError(l,n)}}if(r.iterator!==0){let s=r.iterator,o;for(;o=n.nodes[n.indexes[s]];)if(n.indexes[s]+=1,!o[me]){o[me]=!0,e.push(Ho(o));return}r.iterator=0,delete n.indexes[s]}let a=r.events;for(;r.eventIndex<a.length;){let s=a[r.eventIndex];if(r.eventIndex+=1,s===Xe){n.nodes&&n.nodes.length&&(n[me]=!0,r.iterator=n.getIterator());return}else if(this.listeners[s]){r.visitors=this.listeners[s];return}}e.pop()}walkSync(e){e[me]=!0;let r=Qo(e);for(let n of r)if(n===Xe)e.nodes&&e.each(i=>{i[me]||this.walkSync(i)});else{let i=this.listeners[n];if(i&&this.visitSync(i,e.toProxy()))return}}warnings(){return this.sync().warnings()}get content(){return this.stringify().content}get css(){return this.stringify().css}get map(){return this.stringify().map}get messages(){return this.sync().messages}get opts(){return this.result.opts}get processor(){return this.result.processor}get root(){return this.sync().root}get[Symbol.toStringTag](){return\"LazyResult\"}};ge.registerPostcss=t=>{yi=t};Jo.exports=ge;ge.default=ge;Md.registerLazyResult(ge);Rd.registerLazyResult(ge)});var Ko=S((Hb,Xo)=>{\"use strict\";var qd=li(),$d=yt(),Yb=ci(),Ud=$r(),jd=_r(),Dt=class{constructor(e,r,n){r=r.toString(),this.stringified=!1,this._processor=e,this._css=r,this._opts=n,this._map=void 0;let i,a=$d;this.result=new jd(this._processor,i,this._opts),this.result.css=r;let s=this;Object.defineProperty(this.result,\"root\",{get(){return s.root}});let o=new qd(a,i,this._opts,r);if(o.isMap()){let[l,u]=o.generate();l&&(this.result.css=l),u&&(this.result.map=u)}}async(){return this.error?Promise.reject(this.error):Promise.resolve(this.result)}catch(e){return this.async().catch(e)}finally(e){return this.async().then(e,e)}sync(){if(this.error)throw this.error;return this.result}then(e,r){return this.async().then(e,r)}toString(){return this._css}warnings(){return[]}get content(){return this.result.css}get css(){return this.result.css}get map(){return this.result.map}get messages(){return[]}get opts(){return this.result.opts}get processor(){return this.result.processor}get root(){if(this._root)return this._root;let e,r=Ud;try{e=r(this._css,this._opts)}catch(n){this.error=n}if(this.error)throw this.error;return this._root=e,e}get[Symbol.toStringTag](){return\"NoWorkResult\"}};Xo.exports=Dt;Dt.default=Dt});var el=S((Qb,Zo)=>{\"use strict\";var zd=Ko(),Vd=vi(),Wd=Ar(),Bd=Qe(),ze=class{constructor(e=[]){this.version=\"8.4.31\",this.plugins=this.normalize(e)}normalize(e){let r=[];for(let n of e)if(n.postcss===!0?n=n():n.postcss&&(n=n.postcss),typeof n==\"object\"&&Array.isArray(n.plugins))r=r.concat(n.plugins);else if(typeof n==\"object\"&&n.postcssPlugin)r.push(n);else if(typeof n==\"function\")r.push(n);else if(!(typeof n==\"object\"&&(n.parse||n.stringify)))throw new Error(n+\" is not a PostCSS plugin\");return r}process(e,r={}){return this.plugins.length===0&&typeof r.parser>\"u\"&&typeof r.stringifier>\"u\"&&typeof r.syntax>\"u\"?new zd(this,e,r):new Vd(this,e,r)}use(e){return this.plugins=this.plugins.concat(this.normalize([e])),this}};Zo.exports=ze;ze.default=ze;Bd.registerProcessor(ze);Wd.registerProcessor(ze)});var rl=S((Jb,tl)=>{\"use strict\";var Gd=xt(),Yd=ri(),Hd=At(),Qd=Lr(),Jd=Et(),Xd=Qe(),Kd=Nr();function Mt(t,e){if(Array.isArray(t))return t.map(i=>Mt(i));let{inputs:r,...n}=t;if(r){e=[];for(let i of r){let a={...i,__proto__:Jd.prototype};a.map&&(a.map={...a.map,__proto__:Yd.prototype}),e.push(a)}}if(n.nodes&&(n.nodes=t.nodes.map(i=>Mt(i,e))),n.source){let{inputId:i,...a}=n.source;n.source=a,i!=null&&(n.source.input=e[i])}if(n.type===\"root\")return new Xd(n);if(n.type===\"decl\")return new Gd(n);if(n.type===\"rule\")return new Kd(n);if(n.type===\"comment\")return new Hd(n);if(n.type===\"atrule\")return new Qd(n);throw new Error(\"Unknown node type: \"+t.type)}tl.exports=Mt;Mt.default=Mt});var Ke=S((Xb,ul)=>{\"use strict\";var Zd=br(),nl=xt(),eh=vi(),th=_e(),wi=el(),rh=yt(),nh=rl(),il=Ar(),ih=pi(),sl=At(),al=Lr(),sh=_r(),ah=Et(),oh=$r(),lh=hi(),ol=Nr(),ll=Qe(),uh=wt();function N(...t){return t.length===1&&Array.isArray(t[0])&&(t=t[0]),new wi(t)}N.plugin=function(e,r){let n=!1;function i(...s){console&&console.warn&&!n&&(n=!0,console.warn(e+`: postcss.plugin was deprecated. Migration guide:\nhttps://evilmartians.com/chronicles/postcss-8-plugin-migration`),process.env.LANG&&process.env.LANG.startsWith(\"cn\")&&console.warn(e+`: \\u91CC\\u9762 postcss.plugin \\u88AB\\u5F03\\u7528. \\u8FC1\\u79FB\\u6307\\u5357:\nhttps://www.w3ctech.com/topic/2226`));let o=r(...s);return o.postcssPlugin=e,o.postcssVersion=new wi().version,o}let a;return Object.defineProperty(i,\"postcss\",{get(){return a||(a=i()),a}}),i.process=function(s,o,l){return N([i(l)]).process(s,o)},i};N.stringify=rh;N.parse=oh;N.fromJSON=nh;N.list=lh;N.comment=t=>new sl(t);N.atRule=t=>new al(t);N.decl=t=>new nl(t);N.rule=t=>new ol(t);N.root=t=>new ll(t);N.document=t=>new il(t);N.CssSyntaxError=Zd;N.Declaration=nl;N.Container=th;N.Processor=wi;N.Document=il;N.Comment=sl;N.Warning=ih;N.AtRule=al;N.Result=sh;N.Input=ah;N.Rule=ol;N.Root=ll;N.Node=uh;eh.registerPostcss(N);ul.exports=N;N.default=N});var jr=S((Ur,fl)=>{\"use strict\";Ur.__esModule=!0;Ur.default=ph;function fh(t){for(var e=t.toLowerCase(),r=\"\",n=!1,i=0;i<6&&e[i]!==void 0;i++){var a=e.charCodeAt(i),s=a>=97&&a<=102||a>=48&&a<=57;if(n=a===32,!s)break;r+=e[i]}if(r.length!==0){var o=parseInt(r,16),l=o>=55296&&o<=57343;return l||o===0||o>1114111?[\"\\uFFFD\",r.length+(n?1:0)]:[String.fromCodePoint(o),r.length+(n?1:0)]}}var ch=/\\\\/;function ph(t){var e=ch.test(t);if(!e)return t;for(var r=\"\",n=0;n<t.length;n++){if(t[n]===\"\\\\\"){var i=fh(t.slice(n+1,n+7));if(i!==void 0){r+=i[0],n+=i[1];continue}if(t[n+1]===\"\\\\\"){r+=\"\\\\\",n++;continue}t.length===n+1&&(r+=t[n]);continue}r+=t[n]}return r}fl.exports=Ur.default});var pl=S((zr,cl)=>{\"use strict\";zr.__esModule=!0;zr.default=dh;function dh(t){for(var e=arguments.length,r=new Array(e>1?e-1:0),n=1;n<e;n++)r[n-1]=arguments[n];for(;r.length>0;){var i=r.shift();if(!t[i])return;t=t[i]}return t}cl.exports=zr.default});var hl=S((Vr,dl)=>{\"use strict\";Vr.__esModule=!0;Vr.default=hh;function hh(t){for(var e=arguments.length,r=new Array(e>1?e-1:0),n=1;n<e;n++)r[n-1]=arguments[n];for(;r.length>0;){var i=r.shift();t[i]||(t[i]={}),t=t[i]}}dl.exports=Vr.default});var gl=S((Wr,ml)=>{\"use strict\";Wr.__esModule=!0;Wr.default=mh;function mh(t){for(var e=\"\",r=t.indexOf(\"/*\"),n=0;r>=0;){e=e+t.slice(n,r);var i=t.indexOf(\"*/\",r+2);if(i<0)return e;n=i+2,r=t.indexOf(\"/*\",n)}return e=e+t.slice(n),e}ml.exports=Wr.default});var Ft=S(ye=>{\"use strict\";ye.__esModule=!0;ye.unesc=ye.stripComments=ye.getProp=ye.ensureObject=void 0;var gh=Br(jr());ye.unesc=gh.default;var yh=Br(pl());ye.getProp=yh.default;var vh=Br(hl());ye.ensureObject=vh.default;var wh=Br(gl());ye.stripComments=wh.default;function Br(t){return t&&t.__esModule?t:{default:t}}});var Oe=S((Lt,wl)=>{\"use strict\";Lt.__esModule=!0;Lt.default=void 0;var yl=Ft();function vl(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function bh(t,e,r){return e&&vl(t.prototype,e),r&&vl(t,r),Object.defineProperty(t,\"prototype\",{writable:!1}),t}var xh=function t(e,r){if(typeof e!=\"object\"||e===null)return e;var n=new e.constructor;for(var i in e)if(!!e.hasOwnProperty(i)){var a=e[i],s=typeof a;i===\"parent\"&&s===\"object\"?r&&(n[i]=r):a instanceof Array?n[i]=a.map(function(o){return t(o,n)}):n[i]=t(a,n)}return n},Sh=function(){function t(r){r===void 0&&(r={}),Object.assign(this,r),this.spaces=this.spaces||{},this.spaces.before=this.spaces.before||\"\",this.spaces.after=this.spaces.after||\"\"}var e=t.prototype;return e.remove=function(){return this.parent&&this.parent.removeChild(this),this.parent=void 0,this},e.replaceWith=function(){if(this.parent){for(var n in arguments)this.parent.insertBefore(this,arguments[n]);this.remove()}return this},e.next=function(){return this.parent.at(this.parent.index(this)+1)},e.prev=function(){return this.parent.at(this.parent.index(this)-1)},e.clone=function(n){n===void 0&&(n={});var i=xh(this);for(var a in n)i[a]=n[a];return i},e.appendToPropertyAndEscape=function(n,i,a){this.raws||(this.raws={});var s=this[n],o=this.raws[n];this[n]=s+i,o||a!==i?this.raws[n]=(o||s)+a:delete this.raws[n]},e.setPropertyAndEscape=function(n,i,a){this.raws||(this.raws={}),this[n]=i,this.raws[n]=a},e.setPropertyWithoutEscape=function(n,i){this[n]=i,this.raws&&delete this.raws[n]},e.isAtPosition=function(n,i){if(this.source&&this.source.start&&this.source.end)return!(this.source.start.line>n||this.source.end.line<n||this.source.start.line===n&&this.source.start.column>i||this.source.end.line===n&&this.source.end.column<i)},e.stringifyProperty=function(n){return this.raws&&this.raws[n]||this[n]},e.valueToString=function(){return String(this.stringifyProperty(\"value\"))},e.toString=function(){return[this.rawSpaceBefore,this.valueToString(),this.rawSpaceAfter].join(\"\")},bh(t,[{key:\"rawSpaceBefore\",get:function(){var n=this.raws&&this.raws.spaces&&this.raws.spaces.before;return n===void 0&&(n=this.spaces&&this.spaces.before),n||\"\"},set:function(n){(0,yl.ensureObject)(this,\"raws\",\"spaces\"),this.raws.spaces.before=n}},{key:\"rawSpaceAfter\",get:function(){var n=this.raws&&this.raws.spaces&&this.raws.spaces.after;return n===void 0&&(n=this.spaces.after),n||\"\"},set:function(n){(0,yl.ensureObject)(this,\"raws\",\"spaces\"),this.raws.spaces.after=n}}]),t}();Lt.default=Sh;wl.exports=Lt.default});var J=S(U=>{\"use strict\";U.__esModule=!0;U.UNIVERSAL=U.TAG=U.STRING=U.SELECTOR=U.ROOT=U.PSEUDO=U.NESTING=U.ID=U.COMMENT=U.COMBINATOR=U.CLASS=U.ATTRIBUTE=void 0;var kh=\"tag\";U.TAG=kh;var Oh=\"string\";U.STRING=Oh;var Eh=\"selector\";U.SELECTOR=Eh;var Ch=\"root\";U.ROOT=Ch;var Ah=\"pseudo\";U.PSEUDO=Ah;var _h=\"nesting\";U.NESTING=_h;var Th=\"id\";U.ID=Th;var Ph=\"comment\";U.COMMENT=Ph;var Ih=\"combinator\";U.COMBINATOR=Ih;var Rh=\"class\";U.CLASS=Rh;var Dh=\"attribute\";U.ATTRIBUTE=Dh;var Mh=\"universal\";U.UNIVERSAL=Mh});var Gr=S((Nt,kl)=>{\"use strict\";Nt.__esModule=!0;Nt.default=void 0;var Fh=Nh(Oe()),Ee=Lh(J());function Sl(t){if(typeof WeakMap!=\"function\")return null;var e=new WeakMap,r=new WeakMap;return(Sl=function(i){return i?r:e})(t)}function Lh(t,e){if(!e&&t&&t.__esModule)return t;if(t===null||typeof t!=\"object\"&&typeof t!=\"function\")return{default:t};var r=Sl(e);if(r&&r.has(t))return r.get(t);var n={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(a!==\"default\"&&Object.prototype.hasOwnProperty.call(t,a)){var s=i?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}return n.default=t,r&&r.set(t,n),n}function Nh(t){return t&&t.__esModule?t:{default:t}}function qh(t,e){var r=typeof Symbol<\"u\"&&t[Symbol.iterator]||t[\"@@iterator\"];if(r)return(r=r.call(t)).next.bind(r);if(Array.isArray(t)||(r=$h(t))||e&&t&&typeof t.length==\"number\"){r&&(t=r);var n=0;return function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function $h(t,e){if(!!t){if(typeof t==\"string\")return bl(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);if(r===\"Object\"&&t.constructor&&(r=t.constructor.name),r===\"Map\"||r===\"Set\")return Array.from(t);if(r===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return bl(t,e)}}function bl(t,e){(e==null||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function xl(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function Uh(t,e,r){return e&&xl(t.prototype,e),r&&xl(t,r),Object.defineProperty(t,\"prototype\",{writable:!1}),t}function jh(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,bi(t,e)}function bi(t,e){return bi=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},bi(t,e)}var zh=function(t){jh(e,t);function e(n){var i;return i=t.call(this,n)||this,i.nodes||(i.nodes=[]),i}var r=e.prototype;return r.append=function(i){return i.parent=this,this.nodes.push(i),this},r.prepend=function(i){return i.parent=this,this.nodes.unshift(i),this},r.at=function(i){return this.nodes[i]},r.index=function(i){return typeof i==\"number\"?i:this.nodes.indexOf(i)},r.removeChild=function(i){i=this.index(i),this.at(i).parent=void 0,this.nodes.splice(i,1);var a;for(var s in this.indexes)a=this.indexes[s],a>=i&&(this.indexes[s]=a-1);return this},r.removeAll=function(){for(var i=qh(this.nodes),a;!(a=i()).done;){var s=a.value;s.parent=void 0}return this.nodes=[],this},r.empty=function(){return this.removeAll()},r.insertAfter=function(i,a){a.parent=this;var s=this.index(i);this.nodes.splice(s+1,0,a),a.parent=this;var o;for(var l in this.indexes)o=this.indexes[l],s<=o&&(this.indexes[l]=o+1);return this},r.insertBefore=function(i,a){a.parent=this;var s=this.index(i);this.nodes.splice(s,0,a),a.parent=this;var o;for(var l in this.indexes)o=this.indexes[l],o<=s&&(this.indexes[l]=o+1);return this},r._findChildAtPosition=function(i,a){var s=void 0;return this.each(function(o){if(o.atPosition){var l=o.atPosition(i,a);if(l)return s=l,!1}else if(o.isAtPosition(i,a))return s=o,!1}),s},r.atPosition=function(i,a){if(this.isAtPosition(i,a))return this._findChildAtPosition(i,a)||this},r._inferEndPosition=function(){this.last&&this.last.source&&this.last.source.end&&(this.source=this.source||{},this.source.end=this.source.end||{},Object.assign(this.source.end,this.last.source.end))},r.each=function(i){this.lastEach||(this.lastEach=0),this.indexes||(this.indexes={}),this.lastEach++;var a=this.lastEach;if(this.indexes[a]=0,!!this.length){for(var s,o;this.indexes[a]<this.length&&(s=this.indexes[a],o=i(this.at(s),s),o!==!1);)this.indexes[a]+=1;if(delete this.indexes[a],o===!1)return!1}},r.walk=function(i){return this.each(function(a,s){var o=i(a,s);if(o!==!1&&a.length&&(o=a.walk(i)),o===!1)return!1})},r.walkAttributes=function(i){var a=this;return this.walk(function(s){if(s.type===Ee.ATTRIBUTE)return i.call(a,s)})},r.walkClasses=function(i){var a=this;return this.walk(function(s){if(s.type===Ee.CLASS)return i.call(a,s)})},r.walkCombinators=function(i){var a=this;return this.walk(function(s){if(s.type===Ee.COMBINATOR)return i.call(a,s)})},r.walkComments=function(i){var a=this;return this.walk(function(s){if(s.type===Ee.COMMENT)return i.call(a,s)})},r.walkIds=function(i){var a=this;return this.walk(function(s){if(s.type===Ee.ID)return i.call(a,s)})},r.walkNesting=function(i){var a=this;return this.walk(function(s){if(s.type===Ee.NESTING)return i.call(a,s)})},r.walkPseudos=function(i){var a=this;return this.walk(function(s){if(s.type===Ee.PSEUDO)return i.call(a,s)})},r.walkTags=function(i){var a=this;return this.walk(function(s){if(s.type===Ee.TAG)return i.call(a,s)})},r.walkUniversals=function(i){var a=this;return this.walk(function(s){if(s.type===Ee.UNIVERSAL)return i.call(a,s)})},r.split=function(i){var a=this,s=[];return this.reduce(function(o,l,u){var f=i.call(a,l);return s.push(l),f?(o.push(s),s=[]):u===a.length-1&&o.push(s),o},[])},r.map=function(i){return this.nodes.map(i)},r.reduce=function(i,a){return this.nodes.reduce(i,a)},r.every=function(i){return this.nodes.every(i)},r.some=function(i){return this.nodes.some(i)},r.filter=function(i){return this.nodes.filter(i)},r.sort=function(i){return this.nodes.sort(i)},r.toString=function(){return this.map(String).join(\"\")},Uh(e,[{key:\"first\",get:function(){return this.at(0)}},{key:\"last\",get:function(){return this.at(this.length-1)}},{key:\"length\",get:function(){return this.nodes.length}}]),e}(Fh.default);Nt.default=zh;kl.exports=Nt.default});var Si=S((qt,El)=>{\"use strict\";qt.__esModule=!0;qt.default=void 0;var Vh=Bh(Gr()),Wh=J();function Bh(t){return t&&t.__esModule?t:{default:t}}function Ol(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function Gh(t,e,r){return e&&Ol(t.prototype,e),r&&Ol(t,r),Object.defineProperty(t,\"prototype\",{writable:!1}),t}function Yh(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,xi(t,e)}function xi(t,e){return xi=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},xi(t,e)}var Hh=function(t){Yh(e,t);function e(n){var i;return i=t.call(this,n)||this,i.type=Wh.ROOT,i}var r=e.prototype;return r.toString=function(){var i=this.reduce(function(a,s){return a.push(String(s)),a},[]).join(\",\");return this.trailingComma?i+\",\":i},r.error=function(i,a){return this._error?this._error(i,a):new Error(i)},Gh(e,[{key:\"errorGenerator\",set:function(i){this._error=i}}]),e}(Vh.default);qt.default=Hh;El.exports=qt.default});var Oi=S(($t,Cl)=>{\"use strict\";$t.__esModule=!0;$t.default=void 0;var Qh=Xh(Gr()),Jh=J();function Xh(t){return t&&t.__esModule?t:{default:t}}function Kh(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,ki(t,e)}function ki(t,e){return ki=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},ki(t,e)}var Zh=function(t){Kh(e,t);function e(r){var n;return n=t.call(this,r)||this,n.type=Jh.SELECTOR,n}return e}(Qh.default);$t.default=Zh;Cl.exports=$t.default});var Yr=S((Ex,Al)=>{\"use strict\";var em={},tm=em.hasOwnProperty,rm=function(e,r){if(!e)return r;var n={};for(var i in r)n[i]=tm.call(e,i)?e[i]:r[i];return n},nm=/[ -,\\.\\/:-@\\[-\\^`\\{-~]/,im=/[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/,sm=/(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g,Ei=function t(e,r){r=rm(r,t.options),r.quotes!=\"single\"&&r.quotes!=\"double\"&&(r.quotes=\"single\");for(var n=r.quotes==\"double\"?'\"':\"'\",i=r.isIdentifier,a=e.charAt(0),s=\"\",o=0,l=e.length;o<l;){var u=e.charAt(o++),f=u.charCodeAt(),p=void 0;if(f<32||f>126){if(f>=55296&&f<=56319&&o<l){var c=e.charCodeAt(o++);(c&64512)==56320?f=((f&1023)<<10)+(c&1023)+65536:o--}p=\"\\\\\"+f.toString(16).toUpperCase()+\" \"}else r.escapeEverything?nm.test(u)?p=\"\\\\\"+u:p=\"\\\\\"+f.toString(16).toUpperCase()+\" \":/[\\t\\n\\f\\r\\x0B]/.test(u)?p=\"\\\\\"+f.toString(16).toUpperCase()+\" \":u==\"\\\\\"||!i&&(u=='\"'&&n==u||u==\"'\"&&n==u)||i&&im.test(u)?p=\"\\\\\"+u:p=u;s+=p}return i&&(/^-[-\\d]/.test(s)?s=\"\\\\-\"+s.slice(1):/\\d/.test(a)&&(s=\"\\\\3\"+a+\" \"+s.slice(1))),s=s.replace(sm,function(d,h,y){return h&&h.length%2?d:(h||\"\")+y}),!i&&r.wrap?n+s+n:s};Ei.options={escapeEverything:!1,isIdentifier:!1,quotes:\"single\",wrap:!1};Ei.version=\"3.0.0\";Al.exports=Ei});var Ai=S((Ut,Pl)=>{\"use strict\";Ut.__esModule=!0;Ut.default=void 0;var am=Tl(Yr()),om=Ft(),lm=Tl(Oe()),um=J();function Tl(t){return t&&t.__esModule?t:{default:t}}function _l(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function fm(t,e,r){return e&&_l(t.prototype,e),r&&_l(t,r),Object.defineProperty(t,\"prototype\",{writable:!1}),t}function cm(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,Ci(t,e)}function Ci(t,e){return Ci=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},Ci(t,e)}var pm=function(t){cm(e,t);function e(n){var i;return i=t.call(this,n)||this,i.type=um.CLASS,i._constructed=!0,i}var r=e.prototype;return r.valueToString=function(){return\".\"+t.prototype.valueToString.call(this)},fm(e,[{key:\"value\",get:function(){return this._value},set:function(i){if(this._constructed){var a=(0,am.default)(i,{isIdentifier:!0});a!==i?((0,om.ensureObject)(this,\"raws\"),this.raws.value=a):this.raws&&delete this.raws.value}this._value=i}}]),e}(lm.default);Ut.default=pm;Pl.exports=Ut.default});var Ti=S((jt,Il)=>{\"use strict\";jt.__esModule=!0;jt.default=void 0;var dm=mm(Oe()),hm=J();function mm(t){return t&&t.__esModule?t:{default:t}}function gm(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,_i(t,e)}function _i(t,e){return _i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},_i(t,e)}var ym=function(t){gm(e,t);function e(r){var n;return n=t.call(this,r)||this,n.type=hm.COMMENT,n}return e}(dm.default);jt.default=ym;Il.exports=jt.default});var Ii=S((zt,Rl)=>{\"use strict\";zt.__esModule=!0;zt.default=void 0;var vm=bm(Oe()),wm=J();function bm(t){return t&&t.__esModule?t:{default:t}}function xm(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,Pi(t,e)}function Pi(t,e){return Pi=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},Pi(t,e)}var Sm=function(t){xm(e,t);function e(n){var i;return i=t.call(this,n)||this,i.type=wm.ID,i}var r=e.prototype;return r.valueToString=function(){return\"#\"+t.prototype.valueToString.call(this)},e}(vm.default);zt.default=Sm;Rl.exports=zt.default});var Hr=S((Vt,Fl)=>{\"use strict\";Vt.__esModule=!0;Vt.default=void 0;var km=Ml(Yr()),Om=Ft(),Em=Ml(Oe());function Ml(t){return t&&t.__esModule?t:{default:t}}function Dl(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function Cm(t,e,r){return e&&Dl(t.prototype,e),r&&Dl(t,r),Object.defineProperty(t,\"prototype\",{writable:!1}),t}function Am(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,Ri(t,e)}function Ri(t,e){return Ri=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},Ri(t,e)}var _m=function(t){Am(e,t);function e(){return t.apply(this,arguments)||this}var r=e.prototype;return r.qualifiedName=function(i){return this.namespace?this.namespaceString+\"|\"+i:i},r.valueToString=function(){return this.qualifiedName(t.prototype.valueToString.call(this))},Cm(e,[{key:\"namespace\",get:function(){return this._namespace},set:function(i){if(i===!0||i===\"*\"||i===\"&\"){this._namespace=i,this.raws&&delete this.raws.namespace;return}var a=(0,km.default)(i,{isIdentifier:!0});this._namespace=i,a!==i?((0,Om.ensureObject)(this,\"raws\"),this.raws.namespace=a):this.raws&&delete this.raws.namespace}},{key:\"ns\",get:function(){return this._namespace},set:function(i){this.namespace=i}},{key:\"namespaceString\",get:function(){if(this.namespace){var i=this.stringifyProperty(\"namespace\");return i===!0?\"\":i}else return\"\"}}]),e}(Em.default);Vt.default=_m;Fl.exports=Vt.default});var Mi=S((Wt,Ll)=>{\"use strict\";Wt.__esModule=!0;Wt.default=void 0;var Tm=Im(Hr()),Pm=J();function Im(t){return t&&t.__esModule?t:{default:t}}function Rm(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,Di(t,e)}function Di(t,e){return Di=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},Di(t,e)}var Dm=function(t){Rm(e,t);function e(r){var n;return n=t.call(this,r)||this,n.type=Pm.TAG,n}return e}(Tm.default);Wt.default=Dm;Ll.exports=Wt.default});var Li=S((Bt,Nl)=>{\"use strict\";Bt.__esModule=!0;Bt.default=void 0;var Mm=Lm(Oe()),Fm=J();function Lm(t){return t&&t.__esModule?t:{default:t}}function Nm(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,Fi(t,e)}function Fi(t,e){return Fi=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},Fi(t,e)}var qm=function(t){Nm(e,t);function e(r){var n;return n=t.call(this,r)||this,n.type=Fm.STRING,n}return e}(Mm.default);Bt.default=qm;Nl.exports=Bt.default});var qi=S((Gt,ql)=>{\"use strict\";Gt.__esModule=!0;Gt.default=void 0;var $m=jm(Gr()),Um=J();function jm(t){return t&&t.__esModule?t:{default:t}}function zm(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,Ni(t,e)}function Ni(t,e){return Ni=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},Ni(t,e)}var Vm=function(t){zm(e,t);function e(n){var i;return i=t.call(this,n)||this,i.type=Um.PSEUDO,i}var r=e.prototype;return r.toString=function(){var i=this.length?\"(\"+this.map(String).join(\",\")+\")\":\"\";return[this.rawSpaceBefore,this.stringifyProperty(\"value\"),i,this.rawSpaceAfter].join(\"\")},e}($m.default);Gt.default=Vm;ql.exports=Gt.default});var Ul=S((Cx,$l)=>{$l.exports=Wm;function Wm(t,e){if($i(\"noDeprecation\"))return t;var r=!1;function n(){if(!r){if($i(\"throwDeprecation\"))throw new Error(e);$i(\"traceDeprecation\")?console.trace(e):console.warn(e),r=!0}return t.apply(this,arguments)}return n}function $i(t){try{if(!global.localStorage)return!1}catch{return!1}var e=global.localStorage[t];return e==null?!1:String(e).toLowerCase()===\"true\"}});var Bi=S(Qt=>{\"use strict\";Qt.__esModule=!0;Qt.default=void 0;Qt.unescapeValue=Wi;var Yt=Vi(Yr()),Bm=Vi(jr()),Gm=Vi(Hr()),Ym=J(),Ui;function Vi(t){return t&&t.__esModule?t:{default:t}}function jl(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function Hm(t,e,r){return e&&jl(t.prototype,e),r&&jl(t,r),Object.defineProperty(t,\"prototype\",{writable:!1}),t}function Qm(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,zi(t,e)}function zi(t,e){return zi=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},zi(t,e)}var Ht=Ul(),Jm=/^('|\")([^]*)\\1$/,Xm=Ht(function(){},\"Assigning an attribute a value containing characters that might need to be escaped is deprecated. Call attribute.setValue() instead.\"),Km=Ht(function(){},\"Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.\"),Zm=Ht(function(){},\"Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.\");function Wi(t){var e=!1,r=null,n=t,i=n.match(Jm);return i&&(r=i[1],n=i[2]),n=(0,Bm.default)(n),n!==t&&(e=!0),{deprecatedUsage:e,unescaped:n,quoteMark:r}}function eg(t){if(t.quoteMark!==void 0||t.value===void 0)return t;Zm();var e=Wi(t.value),r=e.quoteMark,n=e.unescaped;return t.raws||(t.raws={}),t.raws.value===void 0&&(t.raws.value=t.value),t.value=n,t.quoteMark=r,t}var Qr=function(t){Qm(e,t);function e(n){var i;return n===void 0&&(n={}),i=t.call(this,eg(n))||this,i.type=Ym.ATTRIBUTE,i.raws=i.raws||{},Object.defineProperty(i.raws,\"unquoted\",{get:Ht(function(){return i.value},\"attr.raws.unquoted is deprecated. Call attr.value instead.\"),set:Ht(function(){return i.value},\"Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.\")}),i._constructed=!0,i}var r=e.prototype;return r.getQuotedValue=function(i){i===void 0&&(i={});var a=this._determineQuoteMark(i),s=ji[a],o=(0,Yt.default)(this._value,s);return o},r._determineQuoteMark=function(i){return i.smart?this.smartQuoteMark(i):this.preferredQuoteMark(i)},r.setValue=function(i,a){a===void 0&&(a={}),this._value=i,this._quoteMark=this._determineQuoteMark(a),this._syncRawValue()},r.smartQuoteMark=function(i){var a=this.value,s=a.replace(/[^']/g,\"\").length,o=a.replace(/[^\"]/g,\"\").length;if(s+o===0){var l=(0,Yt.default)(a,{isIdentifier:!0});if(l===a)return e.NO_QUOTE;var u=this.preferredQuoteMark(i);if(u===e.NO_QUOTE){var f=this.quoteMark||i.quoteMark||e.DOUBLE_QUOTE,p=ji[f],c=(0,Yt.default)(a,p);if(c.length<l.length)return f}return u}else return o===s?this.preferredQuoteMark(i):o<s?e.DOUBLE_QUOTE:e.SINGLE_QUOTE},r.preferredQuoteMark=function(i){var a=i.preferCurrentQuoteMark?this.quoteMark:i.quoteMark;return a===void 0&&(a=i.preferCurrentQuoteMark?i.quoteMark:this.quoteMark),a===void 0&&(a=e.DOUBLE_QUOTE),a},r._syncRawValue=function(){var i=(0,Yt.default)(this._value,ji[this.quoteMark]);i===this._value?this.raws&&delete this.raws.value:this.raws.value=i},r._handleEscapes=function(i,a){if(this._constructed){var s=(0,Yt.default)(a,{isIdentifier:!0});s!==a?this.raws[i]=s:delete this.raws[i]}},r._spacesFor=function(i){var a={before:\"\",after:\"\"},s=this.spaces[i]||{},o=this.raws.spaces&&this.raws.spaces[i]||{};return Object.assign(a,s,o)},r._stringFor=function(i,a,s){a===void 0&&(a=i),s===void 0&&(s=zl);var o=this._spacesFor(a);return s(this.stringifyProperty(i),o)},r.offsetOf=function(i){var a=1,s=this._spacesFor(\"attribute\");if(a+=s.before.length,i===\"namespace\"||i===\"ns\")return this.namespace?a:-1;if(i===\"attributeNS\"||(a+=this.namespaceString.length,this.namespace&&(a+=1),i===\"attribute\"))return a;a+=this.stringifyProperty(\"attribute\").length,a+=s.after.length;var o=this._spacesFor(\"operator\");a+=o.before.length;var l=this.stringifyProperty(\"operator\");if(i===\"operator\")return l?a:-1;a+=l.length,a+=o.after.length;var u=this._spacesFor(\"value\");a+=u.before.length;var f=this.stringifyProperty(\"value\");if(i===\"value\")return f?a:-1;a+=f.length,a+=u.after.length;var p=this._spacesFor(\"insensitive\");return a+=p.before.length,i===\"insensitive\"&&this.insensitive?a:-1},r.toString=function(){var i=this,a=[this.rawSpaceBefore,\"[\"];return a.push(this._stringFor(\"qualifiedAttribute\",\"attribute\")),this.operator&&(this.value||this.value===\"\")&&(a.push(this._stringFor(\"operator\")),a.push(this._stringFor(\"value\")),a.push(this._stringFor(\"insensitiveFlag\",\"insensitive\",function(s,o){return s.length>0&&!i.quoted&&o.before.length===0&&!(i.spaces.value&&i.spaces.value.after)&&(o.before=\" \"),zl(s,o)}))),a.push(\"]\"),a.push(this.rawSpaceAfter),a.join(\"\")},Hm(e,[{key:\"quoted\",get:function(){var i=this.quoteMark;return i===\"'\"||i==='\"'},set:function(i){Km()}},{key:\"quoteMark\",get:function(){return this._quoteMark},set:function(i){if(!this._constructed){this._quoteMark=i;return}this._quoteMark!==i&&(this._quoteMark=i,this._syncRawValue())}},{key:\"qualifiedAttribute\",get:function(){return this.qualifiedName(this.raws.attribute||this.attribute)}},{key:\"insensitiveFlag\",get:function(){return this.insensitive?\"i\":\"\"}},{key:\"value\",get:function(){return this._value},set:function(i){if(this._constructed){var a=Wi(i),s=a.deprecatedUsage,o=a.unescaped,l=a.quoteMark;if(s&&Xm(),o===this._value&&l===this._quoteMark)return;this._value=o,this._quoteMark=l,this._syncRawValue()}else this._value=i}},{key:\"insensitive\",get:function(){return this._insensitive},set:function(i){i||(this._insensitive=!1,this.raws&&(this.raws.insensitiveFlag===\"I\"||this.raws.insensitiveFlag===\"i\")&&(this.raws.insensitiveFlag=void 0)),this._insensitive=i}},{key:\"attribute\",get:function(){return this._attribute},set:function(i){this._handleEscapes(\"attribute\",i),this._attribute=i}}]),e}(Gm.default);Qt.default=Qr;Qr.NO_QUOTE=null;Qr.SINGLE_QUOTE=\"'\";Qr.DOUBLE_QUOTE='\"';var ji=(Ui={\"'\":{quotes:\"single\",wrap:!0},'\"':{quotes:\"double\",wrap:!0}},Ui[null]={isIdentifier:!0},Ui);function zl(t,e){return\"\"+e.before+t+e.after}});var Yi=S((Jt,Vl)=>{\"use strict\";Jt.__esModule=!0;Jt.default=void 0;var tg=ng(Hr()),rg=J();function ng(t){return t&&t.__esModule?t:{default:t}}function ig(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,Gi(t,e)}function Gi(t,e){return Gi=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},Gi(t,e)}var sg=function(t){ig(e,t);function e(r){var n;return n=t.call(this,r)||this,n.type=rg.UNIVERSAL,n.value=\"*\",n}return e}(tg.default);Jt.default=sg;Vl.exports=Jt.default});var Qi=S((Xt,Wl)=>{\"use strict\";Xt.__esModule=!0;Xt.default=void 0;var ag=lg(Oe()),og=J();function lg(t){return t&&t.__esModule?t:{default:t}}function ug(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,Hi(t,e)}function Hi(t,e){return Hi=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},Hi(t,e)}var fg=function(t){ug(e,t);function e(r){var n;return n=t.call(this,r)||this,n.type=og.COMBINATOR,n}return e}(ag.default);Xt.default=fg;Wl.exports=Xt.default});var Xi=S((Kt,Bl)=>{\"use strict\";Kt.__esModule=!0;Kt.default=void 0;var cg=dg(Oe()),pg=J();function dg(t){return t&&t.__esModule?t:{default:t}}function hg(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,Ji(t,e)}function Ji(t,e){return Ji=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(n,i){return n.__proto__=i,n},Ji(t,e)}var mg=function(t){hg(e,t);function e(r){var n;return n=t.call(this,r)||this,n.type=pg.NESTING,n.value=\"&\",n}return e}(cg.default);Kt.default=mg;Bl.exports=Kt.default});var Yl=S((Jr,Gl)=>{\"use strict\";Jr.__esModule=!0;Jr.default=gg;function gg(t){return t.sort(function(e,r){return e-r})}Gl.exports=Jr.default});var Ki=S(P=>{\"use strict\";P.__esModule=!0;P.word=P.tilde=P.tab=P.str=P.space=P.slash=P.singleQuote=P.semicolon=P.plus=P.pipe=P.openSquare=P.openParenthesis=P.newline=P.greaterThan=P.feed=P.equals=P.doubleQuote=P.dollar=P.cr=P.comment=P.comma=P.combinator=P.colon=P.closeSquare=P.closeParenthesis=P.caret=P.bang=P.backslash=P.at=P.asterisk=P.ampersand=void 0;var yg=38;P.ampersand=yg;var vg=42;P.asterisk=vg;var wg=64;P.at=wg;var bg=44;P.comma=bg;var xg=58;P.colon=xg;var Sg=59;P.semicolon=Sg;var kg=40;P.openParenthesis=kg;var Og=41;P.closeParenthesis=Og;var Eg=91;P.openSquare=Eg;var Cg=93;P.closeSquare=Cg;var Ag=36;P.dollar=Ag;var _g=126;P.tilde=_g;var Tg=94;P.caret=Tg;var Pg=43;P.plus=Pg;var Ig=61;P.equals=Ig;var Rg=124;P.pipe=Rg;var Dg=62;P.greaterThan=Dg;var Mg=32;P.space=Mg;var Hl=39;P.singleQuote=Hl;var Fg=34;P.doubleQuote=Fg;var Lg=47;P.slash=Lg;var Ng=33;P.bang=Ng;var qg=92;P.backslash=qg;var $g=13;P.cr=$g;var Ug=12;P.feed=Ug;var jg=10;P.newline=jg;var zg=9;P.tab=zg;var Vg=Hl;P.str=Vg;var Wg=-1;P.comment=Wg;var Bg=-2;P.word=Bg;var Gg=-3;P.combinator=Gg});var Xl=S(Zt=>{\"use strict\";Zt.__esModule=!0;Zt.FIELDS=void 0;Zt.default=Zg;var C=Yg(Ki()),Ze,q;function Jl(t){if(typeof WeakMap!=\"function\")return null;var e=new WeakMap,r=new WeakMap;return(Jl=function(i){return i?r:e})(t)}function Yg(t,e){if(!e&&t&&t.__esModule)return t;if(t===null||typeof t!=\"object\"&&typeof t!=\"function\")return{default:t};var r=Jl(e);if(r&&r.has(t))return r.get(t);var n={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(a!==\"default\"&&Object.prototype.hasOwnProperty.call(t,a)){var s=i?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}return n.default=t,r&&r.set(t,n),n}var Hg=(Ze={},Ze[C.tab]=!0,Ze[C.newline]=!0,Ze[C.cr]=!0,Ze[C.feed]=!0,Ze),Qg=(q={},q[C.space]=!0,q[C.tab]=!0,q[C.newline]=!0,q[C.cr]=!0,q[C.feed]=!0,q[C.ampersand]=!0,q[C.asterisk]=!0,q[C.bang]=!0,q[C.comma]=!0,q[C.colon]=!0,q[C.semicolon]=!0,q[C.openParenthesis]=!0,q[C.closeParenthesis]=!0,q[C.openSquare]=!0,q[C.closeSquare]=!0,q[C.singleQuote]=!0,q[C.doubleQuote]=!0,q[C.plus]=!0,q[C.pipe]=!0,q[C.tilde]=!0,q[C.greaterThan]=!0,q[C.equals]=!0,q[C.dollar]=!0,q[C.caret]=!0,q[C.slash]=!0,q),Zi={},Ql=\"0123456789abcdefABCDEF\";for(Xr=0;Xr<Ql.length;Xr++)Zi[Ql.charCodeAt(Xr)]=!0;var Xr;function Jg(t,e){var r=e,n;do{if(n=t.charCodeAt(r),Qg[n])return r-1;n===C.backslash?r=Xg(t,r)+1:r++}while(r<t.length);return r-1}function Xg(t,e){var r=e,n=t.charCodeAt(r+1);if(!Hg[n])if(Zi[n]){var i=0;do r++,i++,n=t.charCodeAt(r+1);while(Zi[n]&&i<6);i<6&&n===C.space&&r++}else r++;return r}var Kg={TYPE:0,START_LINE:1,START_COL:2,END_LINE:3,END_COL:4,START_POS:5,END_POS:6};Zt.FIELDS=Kg;function Zg(t){var e=[],r=t.css.valueOf(),n=r,i=n.length,a=-1,s=1,o=0,l=0,u,f,p,c,d,h,y,m,g,w,b,v,O;function x(A,E){if(t.safe)r+=E,g=r.length-1;else throw t.error(\"Unclosed \"+A,s,o-a,o)}for(;o<i;){switch(u=r.charCodeAt(o),u===C.newline&&(a=o,s+=1),u){case C.space:case C.tab:case C.newline:case C.cr:case C.feed:g=o;do g+=1,u=r.charCodeAt(g),u===C.newline&&(a=g,s+=1);while(u===C.space||u===C.newline||u===C.tab||u===C.cr||u===C.feed);O=C.space,c=s,p=g-a-1,l=g;break;case C.plus:case C.greaterThan:case C.tilde:case C.pipe:g=o;do g+=1,u=r.charCodeAt(g);while(u===C.plus||u===C.greaterThan||u===C.tilde||u===C.pipe);O=C.combinator,c=s,p=o-a,l=g;break;case C.asterisk:case C.ampersand:case C.bang:case C.comma:case C.equals:case C.dollar:case C.caret:case C.openSquare:case C.closeSquare:case C.colon:case C.semicolon:case C.openParenthesis:case C.closeParenthesis:g=o,O=u,c=s,p=o-a,l=g+1;break;case C.singleQuote:case C.doubleQuote:v=u===C.singleQuote?\"'\":'\"',g=o;do for(d=!1,g=r.indexOf(v,g+1),g===-1&&x(\"quote\",v),h=g;r.charCodeAt(h-1)===C.backslash;)h-=1,d=!d;while(d);O=C.str,c=s,p=o-a,l=g+1;break;default:u===C.slash&&r.charCodeAt(o+1)===C.asterisk?(g=r.indexOf(\"*/\",o+2)+1,g===0&&x(\"comment\",\"*/\"),f=r.slice(o,g+1),m=f.split(`\n`),y=m.length-1,y>0?(w=s+y,b=g-m[y].length):(w=s,b=a),O=C.comment,s=w,c=w,p=g-b):u===C.slash?(g=o,O=u,c=s,p=o-a,l=g+1):(g=Jg(r,o),O=C.word,c=s,p=g-a),l=g+1;break}e.push([O,s,o-a,c,p,o,l]),b&&(a=b,b=null),o=l}return e}});var su=S((er,iu)=>{\"use strict\";er.__esModule=!0;er.default=void 0;var ey=le(Si()),es=le(Oi()),ty=le(Ai()),Kl=le(Ti()),ry=le(Ii()),ny=le(Mi()),ts=le(Li()),iy=le(qi()),Zl=Kr(Bi()),sy=le(Yi()),rs=le(Qi()),ay=le(Xi()),oy=le(Yl()),k=Kr(Xl()),_=Kr(Ki()),ly=Kr(J()),V=Ft(),Ve,ns;function nu(t){if(typeof WeakMap!=\"function\")return null;var e=new WeakMap,r=new WeakMap;return(nu=function(i){return i?r:e})(t)}function Kr(t,e){if(!e&&t&&t.__esModule)return t;if(t===null||typeof t!=\"object\"&&typeof t!=\"function\")return{default:t};var r=nu(e);if(r&&r.has(t))return r.get(t);var n={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(a!==\"default\"&&Object.prototype.hasOwnProperty.call(t,a)){var s=i?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}return n.default=t,r&&r.set(t,n),n}function le(t){return t&&t.__esModule?t:{default:t}}function eu(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function uy(t,e,r){return e&&eu(t.prototype,e),r&&eu(t,r),Object.defineProperty(t,\"prototype\",{writable:!1}),t}var as=(Ve={},Ve[_.space]=!0,Ve[_.cr]=!0,Ve[_.feed]=!0,Ve[_.newline]=!0,Ve[_.tab]=!0,Ve),fy=Object.assign({},as,(ns={},ns[_.comment]=!0,ns));function tu(t){return{line:t[k.FIELDS.START_LINE],column:t[k.FIELDS.START_COL]}}function ru(t){return{line:t[k.FIELDS.END_LINE],column:t[k.FIELDS.END_COL]}}function We(t,e,r,n){return{start:{line:t,column:e},end:{line:r,column:n}}}function et(t){return We(t[k.FIELDS.START_LINE],t[k.FIELDS.START_COL],t[k.FIELDS.END_LINE],t[k.FIELDS.END_COL])}function is(t,e){if(!!t)return We(t[k.FIELDS.START_LINE],t[k.FIELDS.START_COL],e[k.FIELDS.END_LINE],e[k.FIELDS.END_COL])}function tt(t,e){var r=t[e];if(typeof r==\"string\")return r.indexOf(\"\\\\\")!==-1&&((0,V.ensureObject)(t,\"raws\"),t[e]=(0,V.unesc)(r),t.raws[e]===void 0&&(t.raws[e]=r)),t}function ss(t,e){for(var r=-1,n=[];(r=t.indexOf(e,r+1))!==-1;)n.push(r);return n}function cy(){var t=Array.prototype.concat.apply([],arguments);return t.filter(function(e,r){return r===t.indexOf(e)})}var py=function(){function t(r,n){n===void 0&&(n={}),this.rule=r,this.options=Object.assign({lossy:!1,safe:!1},n),this.position=0,this.css=typeof this.rule==\"string\"?this.rule:this.rule.selector,this.tokens=(0,k.default)({css:this.css,error:this._errorGenerator(),safe:this.options.safe});var i=is(this.tokens[0],this.tokens[this.tokens.length-1]);this.root=new ey.default({source:i}),this.root.errorGenerator=this._errorGenerator();var a=new es.default({source:{start:{line:1,column:1}}});this.root.append(a),this.current=a,this.loop()}var e=t.prototype;return e._errorGenerator=function(){var n=this;return function(i,a){return typeof n.rule==\"string\"?new Error(i):n.rule.error(i,a)}},e.attribute=function(){var n=[],i=this.currToken;for(this.position++;this.position<this.tokens.length&&this.currToken[k.FIELDS.TYPE]!==_.closeSquare;)n.push(this.currToken),this.position++;if(this.currToken[k.FIELDS.TYPE]!==_.closeSquare)return this.expected(\"closing square bracket\",this.currToken[k.FIELDS.START_POS]);var a=n.length,s={source:We(i[1],i[2],this.currToken[3],this.currToken[4]),sourceIndex:i[k.FIELDS.START_POS]};if(a===1&&!~[_.word].indexOf(n[0][k.FIELDS.TYPE]))return this.expected(\"attribute\",n[0][k.FIELDS.START_POS]);for(var o=0,l=\"\",u=\"\",f=null,p=!1;o<a;){var c=n[o],d=this.content(c),h=n[o+1];switch(c[k.FIELDS.TYPE]){case _.space:if(p=!0,this.options.lossy)break;if(f){(0,V.ensureObject)(s,\"spaces\",f);var y=s.spaces[f].after||\"\";s.spaces[f].after=y+d;var m=(0,V.getProp)(s,\"raws\",\"spaces\",f,\"after\")||null;m&&(s.raws.spaces[f].after=m+d)}else l=l+d,u=u+d;break;case _.asterisk:if(h[k.FIELDS.TYPE]===_.equals)s.operator=d,f=\"operator\";else if((!s.namespace||f===\"namespace\"&&!p)&&h){l&&((0,V.ensureObject)(s,\"spaces\",\"attribute\"),s.spaces.attribute.before=l,l=\"\"),u&&((0,V.ensureObject)(s,\"raws\",\"spaces\",\"attribute\"),s.raws.spaces.attribute.before=l,u=\"\"),s.namespace=(s.namespace||\"\")+d;var g=(0,V.getProp)(s,\"raws\",\"namespace\")||null;g&&(s.raws.namespace+=d),f=\"namespace\"}p=!1;break;case _.dollar:if(f===\"value\"){var w=(0,V.getProp)(s,\"raws\",\"value\");s.value+=\"$\",w&&(s.raws.value=w+\"$\");break}case _.caret:h[k.FIELDS.TYPE]===_.equals&&(s.operator=d,f=\"operator\"),p=!1;break;case _.combinator:if(d===\"~\"&&h[k.FIELDS.TYPE]===_.equals&&(s.operator=d,f=\"operator\"),d!==\"|\"){p=!1;break}h[k.FIELDS.TYPE]===_.equals?(s.operator=d,f=\"operator\"):!s.namespace&&!s.attribute&&(s.namespace=!0),p=!1;break;case _.word:if(h&&this.content(h)===\"|\"&&n[o+2]&&n[o+2][k.FIELDS.TYPE]!==_.equals&&!s.operator&&!s.namespace)s.namespace=d,f=\"namespace\";else if(!s.attribute||f===\"attribute\"&&!p){l&&((0,V.ensureObject)(s,\"spaces\",\"attribute\"),s.spaces.attribute.before=l,l=\"\"),u&&((0,V.ensureObject)(s,\"raws\",\"spaces\",\"attribute\"),s.raws.spaces.attribute.before=u,u=\"\"),s.attribute=(s.attribute||\"\")+d;var b=(0,V.getProp)(s,\"raws\",\"attribute\")||null;b&&(s.raws.attribute+=d),f=\"attribute\"}else if(!s.value&&s.value!==\"\"||f===\"value\"&&!(p||s.quoteMark)){var v=(0,V.unesc)(d),O=(0,V.getProp)(s,\"raws\",\"value\")||\"\",x=s.value||\"\";s.value=x+v,s.quoteMark=null,(v!==d||O)&&((0,V.ensureObject)(s,\"raws\"),s.raws.value=(O||x)+d),f=\"value\"}else{var A=d===\"i\"||d===\"I\";(s.value||s.value===\"\")&&(s.quoteMark||p)?(s.insensitive=A,(!A||d===\"I\")&&((0,V.ensureObject)(s,\"raws\"),s.raws.insensitiveFlag=d),f=\"insensitive\",l&&((0,V.ensureObject)(s,\"spaces\",\"insensitive\"),s.spaces.insensitive.before=l,l=\"\"),u&&((0,V.ensureObject)(s,\"raws\",\"spaces\",\"insensitive\"),s.raws.spaces.insensitive.before=u,u=\"\")):(s.value||s.value===\"\")&&(f=\"value\",s.value+=d,s.raws.value&&(s.raws.value+=d))}p=!1;break;case _.str:if(!s.attribute||!s.operator)return this.error(\"Expected an attribute followed by an operator preceding the string.\",{index:c[k.FIELDS.START_POS]});var E=(0,Zl.unescapeValue)(d),I=E.unescaped,F=E.quoteMark;s.value=I,s.quoteMark=F,f=\"value\",(0,V.ensureObject)(s,\"raws\"),s.raws.value=d,p=!1;break;case _.equals:if(!s.attribute)return this.expected(\"attribute\",c[k.FIELDS.START_POS],d);if(s.value)return this.error('Unexpected \"=\" found; an operator was already defined.',{index:c[k.FIELDS.START_POS]});s.operator=s.operator?s.operator+d:d,f=\"operator\",p=!1;break;case _.comment:if(f)if(p||h&&h[k.FIELDS.TYPE]===_.space||f===\"insensitive\"){var Y=(0,V.getProp)(s,\"spaces\",f,\"after\")||\"\",K=(0,V.getProp)(s,\"raws\",\"spaces\",f,\"after\")||Y;(0,V.ensureObject)(s,\"raws\",\"spaces\",f),s.raws.spaces[f].after=K+d}else{var B=s[f]||\"\",qe=(0,V.getProp)(s,\"raws\",f)||B;(0,V.ensureObject)(s,\"raws\"),s.raws[f]=qe+d}else u=u+d;break;default:return this.error('Unexpected \"'+d+'\" found.',{index:c[k.FIELDS.START_POS]})}o++}tt(s,\"attribute\"),tt(s,\"namespace\"),this.newNode(new Zl.default(s)),this.position++},e.parseWhitespaceEquivalentTokens=function(n){n<0&&(n=this.tokens.length);var i=this.position,a=[],s=\"\",o=void 0;do if(as[this.currToken[k.FIELDS.TYPE]])this.options.lossy||(s+=this.content());else if(this.currToken[k.FIELDS.TYPE]===_.comment){var l={};s&&(l.before=s,s=\"\"),o=new Kl.default({value:this.content(),source:et(this.currToken),sourceIndex:this.currToken[k.FIELDS.START_POS],spaces:l}),a.push(o)}while(++this.position<n);if(s){if(o)o.spaces.after=s;else if(!this.options.lossy){var u=this.tokens[i],f=this.tokens[this.position-1];a.push(new ts.default({value:\"\",source:We(u[k.FIELDS.START_LINE],u[k.FIELDS.START_COL],f[k.FIELDS.END_LINE],f[k.FIELDS.END_COL]),sourceIndex:u[k.FIELDS.START_POS],spaces:{before:s,after:\"\"}}))}}return a},e.convertWhitespaceNodesToSpace=function(n,i){var a=this;i===void 0&&(i=!1);var s=\"\",o=\"\";n.forEach(function(u){var f=a.lossySpace(u.spaces.before,i),p=a.lossySpace(u.rawSpaceBefore,i);s+=f+a.lossySpace(u.spaces.after,i&&f.length===0),o+=f+u.value+a.lossySpace(u.rawSpaceAfter,i&&p.length===0)}),o===s&&(o=void 0);var l={space:s,rawSpace:o};return l},e.isNamedCombinator=function(n){return n===void 0&&(n=this.position),this.tokens[n+0]&&this.tokens[n+0][k.FIELDS.TYPE]===_.slash&&this.tokens[n+1]&&this.tokens[n+1][k.FIELDS.TYPE]===_.word&&this.tokens[n+2]&&this.tokens[n+2][k.FIELDS.TYPE]===_.slash},e.namedCombinator=function(){if(this.isNamedCombinator()){var n=this.content(this.tokens[this.position+1]),i=(0,V.unesc)(n).toLowerCase(),a={};i!==n&&(a.value=\"/\"+n+\"/\");var s=new rs.default({value:\"/\"+i+\"/\",source:We(this.currToken[k.FIELDS.START_LINE],this.currToken[k.FIELDS.START_COL],this.tokens[this.position+2][k.FIELDS.END_LINE],this.tokens[this.position+2][k.FIELDS.END_COL]),sourceIndex:this.currToken[k.FIELDS.START_POS],raws:a});return this.position=this.position+3,s}else this.unexpected()},e.combinator=function(){var n=this;if(this.content()===\"|\")return this.namespace();var i=this.locateNextMeaningfulToken(this.position);if(i<0||this.tokens[i][k.FIELDS.TYPE]===_.comma){var a=this.parseWhitespaceEquivalentTokens(i);if(a.length>0){var s=this.current.last;if(s){var o=this.convertWhitespaceNodesToSpace(a),l=o.space,u=o.rawSpace;u!==void 0&&(s.rawSpaceAfter+=u),s.spaces.after+=l}else a.forEach(function(O){return n.newNode(O)})}return}var f=this.currToken,p=void 0;i>this.position&&(p=this.parseWhitespaceEquivalentTokens(i));var c;if(this.isNamedCombinator()?c=this.namedCombinator():this.currToken[k.FIELDS.TYPE]===_.combinator?(c=new rs.default({value:this.content(),source:et(this.currToken),sourceIndex:this.currToken[k.FIELDS.START_POS]}),this.position++):as[this.currToken[k.FIELDS.TYPE]]||p||this.unexpected(),c){if(p){var d=this.convertWhitespaceNodesToSpace(p),h=d.space,y=d.rawSpace;c.spaces.before=h,c.rawSpaceBefore=y}}else{var m=this.convertWhitespaceNodesToSpace(p,!0),g=m.space,w=m.rawSpace;w||(w=g);var b={},v={spaces:{}};g.endsWith(\" \")&&w.endsWith(\" \")?(b.before=g.slice(0,g.length-1),v.spaces.before=w.slice(0,w.length-1)):g.startsWith(\" \")&&w.startsWith(\" \")?(b.after=g.slice(1),v.spaces.after=w.slice(1)):v.value=w,c=new rs.default({value:\" \",source:is(f,this.tokens[this.position-1]),sourceIndex:f[k.FIELDS.START_POS],spaces:b,raws:v})}return this.currToken&&this.currToken[k.FIELDS.TYPE]===_.space&&(c.spaces.after=this.optionalSpace(this.content()),this.position++),this.newNode(c)},e.comma=function(){if(this.position===this.tokens.length-1){this.root.trailingComma=!0,this.position++;return}this.current._inferEndPosition();var n=new es.default({source:{start:tu(this.tokens[this.position+1])}});this.current.parent.append(n),this.current=n,this.position++},e.comment=function(){var n=this.currToken;this.newNode(new Kl.default({value:this.content(),source:et(n),sourceIndex:n[k.FIELDS.START_POS]})),this.position++},e.error=function(n,i){throw this.root.error(n,i)},e.missingBackslash=function(){return this.error(\"Expected a backslash preceding the semicolon.\",{index:this.currToken[k.FIELDS.START_POS]})},e.missingParenthesis=function(){return this.expected(\"opening parenthesis\",this.currToken[k.FIELDS.START_POS])},e.missingSquareBracket=function(){return this.expected(\"opening square bracket\",this.currToken[k.FIELDS.START_POS])},e.unexpected=function(){return this.error(\"Unexpected '\"+this.content()+\"'. Escaping special characters with \\\\ may help.\",this.currToken[k.FIELDS.START_POS])},e.unexpectedPipe=function(){return this.error(\"Unexpected '|'.\",this.currToken[k.FIELDS.START_POS])},e.namespace=function(){var n=this.prevToken&&this.content(this.prevToken)||!0;if(this.nextToken[k.FIELDS.TYPE]===_.word)return this.position++,this.word(n);if(this.nextToken[k.FIELDS.TYPE]===_.asterisk)return this.position++,this.universal(n);this.unexpectedPipe()},e.nesting=function(){if(this.nextToken){var n=this.content(this.nextToken);if(n===\"|\"){this.position++;return}}var i=this.currToken;this.newNode(new ay.default({value:this.content(),source:et(i),sourceIndex:i[k.FIELDS.START_POS]})),this.position++},e.parentheses=function(){var n=this.current.last,i=1;if(this.position++,n&&n.type===ly.PSEUDO){var a=new es.default({source:{start:tu(this.tokens[this.position-1])}}),s=this.current;for(n.append(a),this.current=a;this.position<this.tokens.length&&i;)this.currToken[k.FIELDS.TYPE]===_.openParenthesis&&i++,this.currToken[k.FIELDS.TYPE]===_.closeParenthesis&&i--,i?this.parse():(this.current.source.end=ru(this.currToken),this.current.parent.source.end=ru(this.currToken),this.position++);this.current=s}else{for(var o=this.currToken,l=\"(\",u;this.position<this.tokens.length&&i;)this.currToken[k.FIELDS.TYPE]===_.openParenthesis&&i++,this.currToken[k.FIELDS.TYPE]===_.closeParenthesis&&i--,u=this.currToken,l+=this.parseParenthesisToken(this.currToken),this.position++;n?n.appendToPropertyAndEscape(\"value\",l,l):this.newNode(new ts.default({value:l,source:We(o[k.FIELDS.START_LINE],o[k.FIELDS.START_COL],u[k.FIELDS.END_LINE],u[k.FIELDS.END_COL]),sourceIndex:o[k.FIELDS.START_POS]}))}if(i)return this.expected(\"closing parenthesis\",this.currToken[k.FIELDS.START_POS])},e.pseudo=function(){for(var n=this,i=\"\",a=this.currToken;this.currToken&&this.currToken[k.FIELDS.TYPE]===_.colon;)i+=this.content(),this.position++;if(!this.currToken)return this.expected([\"pseudo-class\",\"pseudo-element\"],this.position-1);if(this.currToken[k.FIELDS.TYPE]===_.word)this.splitWord(!1,function(s,o){i+=s,n.newNode(new iy.default({value:i,source:is(a,n.currToken),sourceIndex:a[k.FIELDS.START_POS]})),o>1&&n.nextToken&&n.nextToken[k.FIELDS.TYPE]===_.openParenthesis&&n.error(\"Misplaced parenthesis.\",{index:n.nextToken[k.FIELDS.START_POS]})});else return this.expected([\"pseudo-class\",\"pseudo-element\"],this.currToken[k.FIELDS.START_POS])},e.space=function(){var n=this.content();this.position===0||this.prevToken[k.FIELDS.TYPE]===_.comma||this.prevToken[k.FIELDS.TYPE]===_.openParenthesis||this.current.nodes.every(function(i){return i.type===\"comment\"})?(this.spaces=this.optionalSpace(n),this.position++):this.position===this.tokens.length-1||this.nextToken[k.FIELDS.TYPE]===_.comma||this.nextToken[k.FIELDS.TYPE]===_.closeParenthesis?(this.current.last.spaces.after=this.optionalSpace(n),this.position++):this.combinator()},e.string=function(){var n=this.currToken;this.newNode(new ts.default({value:this.content(),source:et(n),sourceIndex:n[k.FIELDS.START_POS]})),this.position++},e.universal=function(n){var i=this.nextToken;if(i&&this.content(i)===\"|\")return this.position++,this.namespace();var a=this.currToken;this.newNode(new sy.default({value:this.content(),source:et(a),sourceIndex:a[k.FIELDS.START_POS]}),n),this.position++},e.splitWord=function(n,i){for(var a=this,s=this.nextToken,o=this.content();s&&~[_.dollar,_.caret,_.equals,_.word].indexOf(s[k.FIELDS.TYPE]);){this.position++;var l=this.content();if(o+=l,l.lastIndexOf(\"\\\\\")===l.length-1){var u=this.nextToken;u&&u[k.FIELDS.TYPE]===_.space&&(o+=this.requiredSpace(this.content(u)),this.position++)}s=this.nextToken}var f=ss(o,\".\").filter(function(h){var y=o[h-1]===\"\\\\\",m=/^\\d+\\.\\d+%$/.test(o);return!y&&!m}),p=ss(o,\"#\").filter(function(h){return o[h-1]!==\"\\\\\"}),c=ss(o,\"#{\");c.length&&(p=p.filter(function(h){return!~c.indexOf(h)}));var d=(0,oy.default)(cy([0].concat(f,p)));d.forEach(function(h,y){var m=d[y+1]||o.length,g=o.slice(h,m);if(y===0&&i)return i.call(a,g,d.length);var w,b=a.currToken,v=b[k.FIELDS.START_POS]+d[y],O=We(b[1],b[2]+h,b[3],b[2]+(m-1));if(~f.indexOf(h)){var x={value:g.slice(1),source:O,sourceIndex:v};w=new ty.default(tt(x,\"value\"))}else if(~p.indexOf(h)){var A={value:g.slice(1),source:O,sourceIndex:v};w=new ry.default(tt(A,\"value\"))}else{var E={value:g,source:O,sourceIndex:v};tt(E,\"value\"),w=new ny.default(E)}a.newNode(w,n),n=null}),this.position++},e.word=function(n){var i=this.nextToken;return i&&this.content(i)===\"|\"?(this.position++,this.namespace()):this.splitWord(n)},e.loop=function(){for(;this.position<this.tokens.length;)this.parse(!0);return this.current._inferEndPosition(),this.root},e.parse=function(n){switch(this.currToken[k.FIELDS.TYPE]){case _.space:this.space();break;case _.comment:this.comment();break;case _.openParenthesis:this.parentheses();break;case _.closeParenthesis:n&&this.missingParenthesis();break;case _.openSquare:this.attribute();break;case _.dollar:case _.caret:case _.equals:case _.word:this.word();break;case _.colon:this.pseudo();break;case _.comma:this.comma();break;case _.asterisk:this.universal();break;case _.ampersand:this.nesting();break;case _.slash:case _.combinator:this.combinator();break;case _.str:this.string();break;case _.closeSquare:this.missingSquareBracket();case _.semicolon:this.missingBackslash();default:this.unexpected()}},e.expected=function(n,i,a){if(Array.isArray(n)){var s=n.pop();n=n.join(\", \")+\" or \"+s}var o=/^[aeiou]/.test(n[0])?\"an\":\"a\";return a?this.error(\"Expected \"+o+\" \"+n+', found \"'+a+'\" instead.',{index:i}):this.error(\"Expected \"+o+\" \"+n+\".\",{index:i})},e.requiredSpace=function(n){return this.options.lossy?\" \":n},e.optionalSpace=function(n){return this.options.lossy?\"\":n},e.lossySpace=function(n,i){return this.options.lossy?i?\" \":\"\":n},e.parseParenthesisToken=function(n){var i=this.content(n);return n[k.FIELDS.TYPE]===_.space?this.requiredSpace(i):i},e.newNode=function(n,i){return i&&(/^ +$/.test(i)&&(this.options.lossy||(this.spaces=(this.spaces||\"\")+i),i=!0),n.namespace=i,tt(n,\"namespace\")),this.spaces&&(n.spaces.before=this.spaces,this.spaces=\"\"),this.current.append(n)},e.content=function(n){return n===void 0&&(n=this.currToken),this.css.slice(n[k.FIELDS.START_POS],n[k.FIELDS.END_POS])},e.locateNextMeaningfulToken=function(n){n===void 0&&(n=this.position+1);for(var i=n;i<this.tokens.length;)if(fy[this.tokens[i][k.FIELDS.TYPE]]){i++;continue}else return i;return-1},uy(t,[{key:\"currToken\",get:function(){return this.tokens[this.position]}},{key:\"nextToken\",get:function(){return this.tokens[this.position+1]}},{key:\"prevToken\",get:function(){return this.tokens[this.position-1]}}]),t}();er.default=py;iu.exports=er.default});var ou=S((tr,au)=>{\"use strict\";tr.__esModule=!0;tr.default=void 0;var dy=hy(su());function hy(t){return t&&t.__esModule?t:{default:t}}var my=function(){function t(r,n){this.func=r||function(){},this.funcRes=null,this.options=n}var e=t.prototype;return e._shouldUpdateSelector=function(n,i){i===void 0&&(i={});var a=Object.assign({},this.options,i);return a.updateSelector===!1?!1:typeof n!=\"string\"},e._isLossy=function(n){n===void 0&&(n={});var i=Object.assign({},this.options,n);return i.lossless===!1},e._root=function(n,i){i===void 0&&(i={});var a=new dy.default(n,this._parseOptions(i));return a.root},e._parseOptions=function(n){return{lossy:this._isLossy(n)}},e._run=function(n,i){var a=this;return i===void 0&&(i={}),new Promise(function(s,o){try{var l=a._root(n,i);Promise.resolve(a.func(l)).then(function(u){var f=void 0;return a._shouldUpdateSelector(n,i)&&(f=l.toString(),n.selector=f),{transform:u,root:l,string:f}}).then(s,o)}catch(u){o(u);return}})},e._runSync=function(n,i){i===void 0&&(i={});var a=this._root(n,i),s=this.func(a);if(s&&typeof s.then==\"function\")throw new Error(\"Selector processor returned a promise to a synchronous call.\");var o=void 0;return i.updateSelector&&typeof n!=\"string\"&&(o=a.toString(),n.selector=o),{transform:s,root:a,string:o}},e.ast=function(n,i){return this._run(n,i).then(function(a){return a.root})},e.astSync=function(n,i){return this._runSync(n,i).root},e.transform=function(n,i){return this._run(n,i).then(function(a){return a.transform})},e.transformSync=function(n,i){return this._runSync(n,i).transform},e.process=function(n,i){return this._run(n,i).then(function(a){return a.string||a.root.toString()})},e.processSync=function(n,i){var a=this._runSync(n,i);return a.string||a.root.toString()},t}();tr.default=my;au.exports=tr.default});var lu=S(j=>{\"use strict\";j.__esModule=!0;j.universal=j.tag=j.string=j.selector=j.root=j.pseudo=j.nesting=j.id=j.comment=j.combinator=j.className=j.attribute=void 0;var gy=ue(Bi()),yy=ue(Ai()),vy=ue(Qi()),wy=ue(Ti()),by=ue(Ii()),xy=ue(Xi()),Sy=ue(qi()),ky=ue(Si()),Oy=ue(Oi()),Ey=ue(Li()),Cy=ue(Mi()),Ay=ue(Yi());function ue(t){return t&&t.__esModule?t:{default:t}}var _y=function(e){return new gy.default(e)};j.attribute=_y;var Ty=function(e){return new yy.default(e)};j.className=Ty;var Py=function(e){return new vy.default(e)};j.combinator=Py;var Iy=function(e){return new wy.default(e)};j.comment=Iy;var Ry=function(e){return new by.default(e)};j.id=Ry;var Dy=function(e){return new xy.default(e)};j.nesting=Dy;var My=function(e){return new Sy.default(e)};j.pseudo=My;var Fy=function(e){return new ky.default(e)};j.root=Fy;var Ly=function(e){return new Oy.default(e)};j.selector=Ly;var Ny=function(e){return new Ey.default(e)};j.string=Ny;var qy=function(e){return new Cy.default(e)};j.tag=qy;var $y=function(e){return new Ay.default(e)};j.universal=$y});var pu=S(D=>{\"use strict\";D.__esModule=!0;D.isComment=D.isCombinator=D.isClassName=D.isAttribute=void 0;D.isContainer=Xy;D.isIdentifier=void 0;D.isNamespace=Ky;D.isNesting=void 0;D.isNode=os;D.isPseudo=void 0;D.isPseudoClass=Jy;D.isPseudoElement=cu;D.isUniversal=D.isTag=D.isString=D.isSelector=D.isRoot=void 0;var W=J(),te,Uy=(te={},te[W.ATTRIBUTE]=!0,te[W.CLASS]=!0,te[W.COMBINATOR]=!0,te[W.COMMENT]=!0,te[W.ID]=!0,te[W.NESTING]=!0,te[W.PSEUDO]=!0,te[W.ROOT]=!0,te[W.SELECTOR]=!0,te[W.STRING]=!0,te[W.TAG]=!0,te[W.UNIVERSAL]=!0,te);function os(t){return typeof t==\"object\"&&Uy[t.type]}function fe(t,e){return os(e)&&e.type===t}var uu=fe.bind(null,W.ATTRIBUTE);D.isAttribute=uu;var jy=fe.bind(null,W.CLASS);D.isClassName=jy;var zy=fe.bind(null,W.COMBINATOR);D.isCombinator=zy;var Vy=fe.bind(null,W.COMMENT);D.isComment=Vy;var Wy=fe.bind(null,W.ID);D.isIdentifier=Wy;var By=fe.bind(null,W.NESTING);D.isNesting=By;var ls=fe.bind(null,W.PSEUDO);D.isPseudo=ls;var Gy=fe.bind(null,W.ROOT);D.isRoot=Gy;var Yy=fe.bind(null,W.SELECTOR);D.isSelector=Yy;var Hy=fe.bind(null,W.STRING);D.isString=Hy;var fu=fe.bind(null,W.TAG);D.isTag=fu;var Qy=fe.bind(null,W.UNIVERSAL);D.isUniversal=Qy;function cu(t){return ls(t)&&t.value&&(t.value.startsWith(\"::\")||t.value.toLowerCase()===\":before\"||t.value.toLowerCase()===\":after\"||t.value.toLowerCase()===\":first-letter\"||t.value.toLowerCase()===\":first-line\")}function Jy(t){return ls(t)&&!cu(t)}function Xy(t){return!!(os(t)&&t.walk)}function Ky(t){return uu(t)||fu(t)}});var du=S(de=>{\"use strict\";de.__esModule=!0;var us=J();Object.keys(us).forEach(function(t){t===\"default\"||t===\"__esModule\"||t in de&&de[t]===us[t]||(de[t]=us[t])});var fs=lu();Object.keys(fs).forEach(function(t){t===\"default\"||t===\"__esModule\"||t in de&&de[t]===fs[t]||(de[t]=fs[t])});var cs=pu();Object.keys(cs).forEach(function(t){t===\"default\"||t===\"__esModule\"||t in de&&de[t]===cs[t]||(de[t]=cs[t])})});var ve=S((rr,mu)=>{\"use strict\";rr.__esModule=!0;rr.default=void 0;var Zy=r0(ou()),e0=t0(du());function hu(t){if(typeof WeakMap!=\"function\")return null;var e=new WeakMap,r=new WeakMap;return(hu=function(i){return i?r:e})(t)}function t0(t,e){if(!e&&t&&t.__esModule)return t;if(t===null||typeof t!=\"object\"&&typeof t!=\"function\")return{default:t};var r=hu(e);if(r&&r.has(t))return r.get(t);var n={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in t)if(a!==\"default\"&&Object.prototype.hasOwnProperty.call(t,a)){var s=i?Object.getOwnPropertyDescriptor(t,a):null;s&&(s.get||s.set)?Object.defineProperty(n,a,s):n[a]=t[a]}return n.default=t,r&&r.set(t,n),n}function r0(t){return t&&t.__esModule?t:{default:t}}var ps=function(e){return new Zy.default(e)};Object.assign(ps,e0);delete ps.__esModule;var n0=ps;rr.default=n0;mu.exports=rr.default});var Su=S((Dx,ys)=>{var{Rule:yu,AtRule:i0}=Ke(),vu=ve();function ms(t,e){let r;try{vu(n=>{r=n}).processSync(t)}catch(n){throw t.includes(\":\")?e?e.error(\"Missed semicolon\"):n:e?e.error(n.message):n}return r.at(0)}function wu(t,e){let r=!1;return t.each(n=>{if(n.type===\"nesting\"){let i=e.clone({});n.value!==\"&\"?n.replaceWith(ms(n.value.replace(\"&\",i.toString()))):n.replaceWith(i),r=!0}else\"nodes\"in n&&n.nodes&&wu(n,e)&&(r=!0)}),r}function bu(t,e){let r=[];return t.selectors.forEach(n=>{let i=ms(n,t);e.selectors.forEach(a=>{if(!a)return;let s=ms(a,e);wu(s,i)||(s.prepend(vu.combinator({value:\" \"})),s.prepend(i.clone({}))),r.push(s.toString())})}),r}function Zr(t,e){let r=t.prev();for(e.after(t);r&&r.type===\"comment\";){let n=r.prev();e.after(r),r=n}return t}function s0(t){return function e(r,n,i,a=i){let s=[];if(n.each(o=>{o.type===\"rule\"&&i?a&&(o.selectors=bu(r,o)):o.type===\"atrule\"&&o.nodes?t[o.name]?e(r,o,a):n[gs]!==!1&&s.push(o):s.push(o)}),i&&s.length){let o=r.clone({nodes:[]});for(let l of s)o.append(l);n.prepend(o)}}}function ds(t,e,r){let n=new yu({selector:t,nodes:[]});return n.append(e),r.after(n),n}function gu(t,e){let r={};for(let n of t)r[n]=!0;if(e)for(let n of e)r[n.replace(/^@/,\"\")]=!0;return r}function a0(t){t=t.trim();let e=t.match(/^\\((.*)\\)$/);if(!e)return{type:\"basic\",selector:t};let r=e[1].match(/^(with(?:out)?):(.+)$/);if(r){let n=r[1]===\"with\",i=Object.fromEntries(r[2].trim().split(/\\s+/).map(s=>[s,!0]));if(n&&i.all)return{type:\"noop\"};let a=s=>!!i[s];return i.all?a=()=>!0:n&&(a=s=>s===\"all\"?!1:!i[s]),{type:\"withrules\",escapes:a}}return{type:\"unknown\"}}function o0(t){let e=[],r=t.parent;for(;r&&r instanceof i0;)e.push(r),r=r.parent;return e}function l0(t){let e=t[xu];if(!e)t.after(t.nodes);else{let r=t.nodes,n,i=-1,a,s,o,l=o0(t);if(l.forEach((u,f)=>{if(e(u.name))n=u,i=f,s=o;else{let p=o;o=u.clone({nodes:[]}),p&&o.append(p),a=a||o}}),n?s?(a.append(r),n.after(s)):n.after(r):t.after(r),t.next()&&n){let u;l.slice(0,i+1).forEach((f,p,c)=>{let d=u;u=f.clone({nodes:[]}),d&&u.append(d);let h=[],m=(c[p-1]||t).next();for(;m;)h.push(m),m=m.next();u.append(h)}),u&&(s||r[r.length-1]).after(u)}}t.remove()}var gs=Symbol(\"rootRuleMergeSel\"),xu=Symbol(\"rootRuleEscapes\");function u0(t){let{params:e}=t,{type:r,selector:n,escapes:i}=a0(e);if(r===\"unknown\")throw t.error(`Unknown @${t.name} parameter ${JSON.stringify(e)}`);if(r===\"basic\"&&n){let a=new yu({selector:n,nodes:t.nodes});t.removeAll(),t.append(a)}t[xu]=i,t[gs]=i?!i(\"all\"):r===\"noop\"}var hs=Symbol(\"hasRootRule\");ys.exports=(t={})=>{let e=gu([\"media\",\"supports\",\"layer\",\"container\"],t.bubble),r=s0(e),n=gu([\"document\",\"font-face\",\"keyframes\",\"-webkit-keyframes\",\"-moz-keyframes\"],t.unwrap),i=(t.rootRuleName||\"at-root\").replace(/^@/,\"\"),a=t.preserveEmpty;return{postcssPlugin:\"postcss-nested\",Once(s){s.walkAtRules(i,o=>{u0(o),s[hs]=!0})},Rule(s){let o=!1,l=s,u=!1,f=[];s.each(p=>{p.type===\"rule\"?(f.length&&(l=ds(s.selector,f,l),f=[]),u=!0,o=!0,p.selectors=bu(s,p),l=Zr(p,l)):p.type===\"atrule\"?(f.length&&(l=ds(s.selector,f,l),f=[]),p.name===i?(o=!0,r(s,p,!0,p[gs]),l=Zr(p,l)):e[p.name]?(u=!0,o=!0,r(s,p,!0),l=Zr(p,l)):n[p.name]?(u=!0,o=!0,r(s,p,!1),l=Zr(p,l)):u&&f.push(p)):p.type===\"decl\"&&u&&f.push(p)}),f.length&&(l=ds(s.selector,f,l)),o&&a!==!0&&(s.raws.semicolon=!0,s.nodes.length===0&&s.remove())},RootExit(s){s[hs]&&(s.walkAtRules(i,l0),s[hs]=!1)}}};ys.exports.postcss=!0});var Cu=S((Mx,Eu)=>{\"use strict\";var ku=/-(\\w|$)/g,Ou=function(e,r){return r.toUpperCase()},f0=function(e){return e=e.toLowerCase(),e===\"float\"?\"cssFloat\":e.charCodeAt(0)===45&&e.charCodeAt(1)===109&&e.charCodeAt(2)===115&&e.charCodeAt(3)===45?e.substr(1).replace(ku,Ou):e.replace(ku,Ou)};Eu.exports=f0});var bs=S((Fx,Au)=>{var c0=Cu(),p0={boxFlex:!0,boxFlexGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,strokeDashoffset:!0,strokeOpacity:!0,strokeWidth:!0};function vs(t){return typeof t.nodes>\"u\"?!0:ws(t)}function ws(t){let e,r={};return t.each(n=>{if(n.type===\"atrule\")e=\"@\"+n.name,n.params&&(e+=\" \"+n.params),typeof r[e]>\"u\"?r[e]=vs(n):Array.isArray(r[e])?r[e].push(vs(n)):r[e]=[r[e],vs(n)];else if(n.type===\"rule\"){let i=ws(n);if(r[n.selector])for(let a in i)r[n.selector][a]=i[a];else r[n.selector]=i}else if(n.type===\"decl\"){n.prop[0]===\"-\"&&n.prop[1]===\"-\"||n.parent&&n.parent.selector===\":export\"?e=n.prop:e=c0(n.prop);let i=n.value;!isNaN(n.value)&&p0[e]&&(i=parseFloat(n.value)),n.important&&(i+=\" !important\"),typeof r[e]>\"u\"?r[e]=i:Array.isArray(r[e])?r[e].push(i):r[e]=[r[e],i]}}),r}Au.exports=ws});var en=S((Lx,Iu)=>{var nr=Ke(),_u=/\\s*!important\\s*$/i,d0={\"box-flex\":!0,\"box-flex-group\":!0,\"column-count\":!0,flex:!0,\"flex-grow\":!0,\"flex-positive\":!0,\"flex-shrink\":!0,\"flex-negative\":!0,\"font-weight\":!0,\"line-clamp\":!0,\"line-height\":!0,opacity:!0,order:!0,orphans:!0,\"tab-size\":!0,widows:!0,\"z-index\":!0,zoom:!0,\"fill-opacity\":!0,\"stroke-dashoffset\":!0,\"stroke-opacity\":!0,\"stroke-width\":!0};function h0(t){return t.replace(/([A-Z])/g,\"-$1\").replace(/^ms-/,\"-ms-\").toLowerCase()}function Tu(t,e,r){r===!1||r===null||(e.startsWith(\"--\")||(e=h0(e)),typeof r==\"number\"&&(r===0||d0[e]?r=r.toString():r+=\"px\"),e===\"css-float\"&&(e=\"float\"),_u.test(r)?(r=r.replace(_u,\"\"),t.push(nr.decl({prop:e,value:r,important:!0}))):t.push(nr.decl({prop:e,value:r})))}function Pu(t,e,r){let n=nr.atRule({name:e[1],params:e[3]||\"\"});typeof r==\"object\"&&(n.nodes=[],xs(r,n)),t.push(n)}function xs(t,e){let r,n,i;for(r in t)if(n=t[r],!(n===null||typeof n>\"u\"))if(r[0]===\"@\"){let a=r.match(/@(\\S+)(\\s+([\\W\\w]*)\\s*)?/);if(Array.isArray(n))for(let s of n)Pu(e,a,s);else Pu(e,a,n)}else if(Array.isArray(n))for(let a of n)Tu(e,r,a);else typeof n==\"object\"?(i=nr.rule({selector:r}),xs(n,i),e.push(i)):Tu(e,r,n)}Iu.exports=function(t){let e=nr.root();return xs(t,e),e}});var Ss=S((Nx,Ru)=>{var m0=bs();Ru.exports=function(e){return console&&console.warn&&e.warnings().forEach(r=>{let n=r.plugin||\"PostCSS\";console.warn(n+\": \"+r.text)}),m0(e.root)}});var Mu=S((qx,Du)=>{var g0=Ke(),y0=Ss(),v0=en();Du.exports=function(e){let r=g0(e);return async n=>{let i=await r.process(n,{parser:v0,from:void 0});return y0(i)}}});var Lu=S(($x,Fu)=>{var w0=Ke(),b0=Ss(),x0=en();Fu.exports=function(t){let e=w0(t);return r=>{let n=e.process(r,{parser:x0,from:void 0});return b0(n)}}});var qu=S((Ux,Nu)=>{var S0=bs(),k0=en(),O0=Mu(),E0=Lu();Nu.exports={objectify:S0,parse:k0,async:O0,sync:E0}});var qs=S((Ls,Ns)=>{(function(t,e){typeof Ls==\"object\"&&typeof Ns<\"u\"?Ns.exports=function(r,n,i,a,s){for(n=n.split?n.split(\".\"):n,a=0;a<n.length;a++)r=r?r[n[a]]:s;return r===s?i:r}:typeof define==\"function\"&&define.amd?define(function(){return function(r,n,i,a,s){for(n=n.split?n.split(\".\"):n,a=0;a<n.length;a++)r=r?r[n[a]]:s;return r===s?i:r}}):t.dlv=function(r,n,i,a,s){for(n=n.split?n.split(\".\"):n,a=0;a<n.length;a++)r=r?r[n[a]]:s;return r===s?i:r}})(Ls)});var Bf=S((bk,On)=>{(function(){\"use strict\";function t(n,i,a){if(!n)return null;t.caseSensitive||(n=n.toLowerCase());var s=t.threshold===null?null:t.threshold*n.length,o=t.thresholdAbsolute,l;s!==null&&o!==null?l=Math.min(s,o):s!==null?l=s:o!==null?l=o:l=null;var u,f,p,c,d,h=i.length;for(d=0;d<h;d++)if(f=i[d],a&&(f=f[a]),!!f&&(t.caseSensitive?p=f:p=f.toLowerCase(),c=r(n,p,l),(l===null||c<l)&&(l=c,a&&t.returnWinningObject?u=i[d]:u=f,t.returnFirstMatch)))return u;return u||t.nullResultValue}t.threshold=.4,t.thresholdAbsolute=20,t.caseSensitive=!1,t.nullResultValue=null,t.returnWinningObject=null,t.returnFirstMatch=!1,typeof On<\"u\"&&On.exports?On.exports=t:window.didYouMean=t;var e=Math.pow(2,32)-1;function r(n,i,a){a=a||a===0?a:e;var s=n.length,o=i.length;if(s===0)return Math.min(a+1,o);if(o===0)return Math.min(a+1,s);if(Math.abs(s-o)>a)return a+1;var l=[],u,f,p,c,d;for(u=0;u<=o;u++)l[u]=[u];for(f=0;f<=s;f++)l[0][f]=f;for(u=1;u<=o;u++){for(p=e,c=1,u>a&&(c=u-a),d=o+1,d>a+u&&(d=a+u),f=1;f<=s;f++)f<c||f>d?l[u][f]=a+1:i.charAt(u-1)===n.charAt(f-1)?l[u][f]=l[u-1][f-1]:l[u][f]=Math.min(l[u-1][f-1]+1,Math.min(l[u][f-1]+1,l[u-1][f]+1)),l[u][f]<p&&(p=l[u][f]);if(p>a)return a+1}return l[o][s]}})()});var Yf=S((xk,Gf)=>{var Ks=\"(\".charCodeAt(0),Zs=\")\".charCodeAt(0),En=\"'\".charCodeAt(0),ea='\"'.charCodeAt(0),ta=\"\\\\\".charCodeAt(0),ft=\"/\".charCodeAt(0),ra=\",\".charCodeAt(0),na=\":\".charCodeAt(0),Cn=\"*\".charCodeAt(0),Yv=\"u\".charCodeAt(0),Hv=\"U\".charCodeAt(0),Qv=\"+\".charCodeAt(0),Jv=/^[a-f0-9?-]+$/i;Gf.exports=function(t){for(var e=[],r=t,n,i,a,s,o,l,u,f,p=0,c=r.charCodeAt(p),d=r.length,h=[{nodes:e}],y=0,m,g=\"\",w=\"\",b=\"\";p<d;)if(c<=32){n=p;do n+=1,c=r.charCodeAt(n);while(c<=32);s=r.slice(p,n),a=e[e.length-1],c===Zs&&y?b=s:a&&a.type===\"div\"?(a.after=s,a.sourceEndIndex+=s.length):c===ra||c===na||c===ft&&r.charCodeAt(n+1)!==Cn&&(!m||m&&m.type===\"function\"&&m.value!==\"calc\")?w=s:e.push({type:\"space\",sourceIndex:p,sourceEndIndex:n,value:s}),p=n}else if(c===En||c===ea){n=p,i=c===En?\"'\":'\"',s={type:\"string\",sourceIndex:p,quote:i};do if(o=!1,n=r.indexOf(i,n+1),~n)for(l=n;r.charCodeAt(l-1)===ta;)l-=1,o=!o;else r+=i,n=r.length-1,s.unclosed=!0;while(o);s.value=r.slice(p+1,n),s.sourceEndIndex=s.unclosed?n:n+1,e.push(s),p=n+1,c=r.charCodeAt(p)}else if(c===ft&&r.charCodeAt(p+1)===Cn)n=r.indexOf(\"*/\",p),s={type:\"comment\",sourceIndex:p,sourceEndIndex:n+2},n===-1&&(s.unclosed=!0,n=r.length,s.sourceEndIndex=n),s.value=r.slice(p+2,n),e.push(s),p=n+2,c=r.charCodeAt(p);else if((c===ft||c===Cn)&&m&&m.type===\"function\"&&m.value===\"calc\")s=r[p],e.push({type:\"word\",sourceIndex:p-w.length,sourceEndIndex:p+s.length,value:s}),p+=1,c=r.charCodeAt(p);else if(c===ft||c===ra||c===na)s=r[p],e.push({type:\"div\",sourceIndex:p-w.length,sourceEndIndex:p+s.length,value:s,before:w,after:\"\"}),w=\"\",p+=1,c=r.charCodeAt(p);else if(Ks===c){n=p;do n+=1,c=r.charCodeAt(n);while(c<=32);if(f=p,s={type:\"function\",sourceIndex:p-g.length,value:g,before:r.slice(f+1,n)},p=n,g===\"url\"&&c!==En&&c!==ea){n-=1;do if(o=!1,n=r.indexOf(\")\",n+1),~n)for(l=n;r.charCodeAt(l-1)===ta;)l-=1,o=!o;else r+=\")\",n=r.length-1,s.unclosed=!0;while(o);u=n;do u-=1,c=r.charCodeAt(u);while(c<=32);f<u?(p!==u+1?s.nodes=[{type:\"word\",sourceIndex:p,sourceEndIndex:u+1,value:r.slice(p,u+1)}]:s.nodes=[],s.unclosed&&u+1!==n?(s.after=\"\",s.nodes.push({type:\"space\",sourceIndex:u+1,sourceEndIndex:n,value:r.slice(u+1,n)})):(s.after=r.slice(u+1,n),s.sourceEndIndex=n)):(s.after=\"\",s.nodes=[]),p=n+1,s.sourceEndIndex=s.unclosed?n:p,c=r.charCodeAt(p),e.push(s)}else y+=1,s.after=\"\",s.sourceEndIndex=p+1,e.push(s),h.push(s),e=s.nodes=[],m=s;g=\"\"}else if(Zs===c&&y)p+=1,c=r.charCodeAt(p),m.after=b,m.sourceEndIndex+=b.length,b=\"\",y-=1,h[h.length-1].sourceEndIndex=p,h.pop(),m=h[y],e=m.nodes;else{n=p;do c===ta&&(n+=1),n+=1,c=r.charCodeAt(n);while(n<d&&!(c<=32||c===En||c===ea||c===ra||c===na||c===ft||c===Ks||c===Cn&&m&&m.type===\"function\"&&m.value===\"calc\"||c===ft&&m.type===\"function\"&&m.value===\"calc\"||c===Zs&&y));s=r.slice(p,n),Ks===c?g=s:(Yv===s.charCodeAt(0)||Hv===s.charCodeAt(0))&&Qv===s.charCodeAt(1)&&Jv.test(s.slice(2))?e.push({type:\"unicode-range\",sourceIndex:p,sourceEndIndex:n,value:s}):e.push({type:\"word\",sourceIndex:p,sourceEndIndex:n,value:s}),p=n}for(p=h.length-1;p;p-=1)h[p].unclosed=!0,h[p].sourceEndIndex=r.length;return h[0].nodes}});var Qf=S((Sk,Hf)=>{Hf.exports=function t(e,r,n){var i,a,s,o;for(i=0,a=e.length;i<a;i+=1)s=e[i],n||(o=r(s,i,e)),o!==!1&&s.type===\"function\"&&Array.isArray(s.nodes)&&t(s.nodes,r,n),n&&r(s,i,e)}});var Zf=S((kk,Kf)=>{function Jf(t,e){var r=t.type,n=t.value,i,a;return e&&(a=e(t))!==void 0?a:r===\"word\"||r===\"space\"?n:r===\"string\"?(i=t.quote||\"\",i+n+(t.unclosed?\"\":i)):r===\"comment\"?\"/*\"+n+(t.unclosed?\"\":\"*/\"):r===\"div\"?(t.before||\"\")+n+(t.after||\"\"):Array.isArray(t.nodes)?(i=Xf(t.nodes,e),r!==\"function\"?i:n+\"(\"+(t.before||\"\")+i+(t.after||\"\")+(t.unclosed?\"\":\")\")):n}function Xf(t,e){var r,n;if(Array.isArray(t)){for(r=\"\",n=t.length-1;~n;n-=1)r=Jf(t[n],e)+r;return r}return Jf(t,e)}Kf.exports=Xf});var tc=S((Ok,ec)=>{var An=\"-\".charCodeAt(0),_n=\"+\".charCodeAt(0),ia=\".\".charCodeAt(0),Xv=\"e\".charCodeAt(0),Kv=\"E\".charCodeAt(0);function Zv(t){var e=t.charCodeAt(0),r;if(e===_n||e===An){if(r=t.charCodeAt(1),r>=48&&r<=57)return!0;var n=t.charCodeAt(2);return r===ia&&n>=48&&n<=57}return e===ia?(r=t.charCodeAt(1),r>=48&&r<=57):e>=48&&e<=57}ec.exports=function(t){var e=0,r=t.length,n,i,a;if(r===0||!Zv(t))return!1;for(n=t.charCodeAt(e),(n===_n||n===An)&&e++;e<r&&(n=t.charCodeAt(e),!(n<48||n>57));)e+=1;if(n=t.charCodeAt(e),i=t.charCodeAt(e+1),n===ia&&i>=48&&i<=57)for(e+=2;e<r&&(n=t.charCodeAt(e),!(n<48||n>57));)e+=1;if(n=t.charCodeAt(e),i=t.charCodeAt(e+1),a=t.charCodeAt(e+2),(n===Xv||n===Kv)&&(i>=48&&i<=57||(i===_n||i===An)&&a>=48&&a<=57))for(e+=i===_n||i===An?3:2;e<r&&(n=t.charCodeAt(e),!(n<48||n>57));)e+=1;return{number:t.slice(0,e),unit:t.slice(e)}}});var sc=S((Ek,ic)=>{var ew=Yf(),rc=Qf(),nc=Zf();function Ne(t){return this instanceof Ne?(this.nodes=ew(t),this):new Ne(t)}Ne.prototype.toString=function(){return Array.isArray(this.nodes)?nc(this.nodes):\"\"};Ne.prototype.walk=function(t,e){return rc(this.nodes,t,e),this};Ne.unit=tc();Ne.walk=rc;Ne.stringify=nc;ic.exports=Ne});var Sc=S((CO,xc)=>{xc.exports={content:[],presets:[],darkMode:\"media\",theme:{accentColor:({theme:t})=>({...t(\"colors\"),auto:\"auto\"}),animation:{none:\"none\",spin:\"spin 1s linear infinite\",ping:\"ping 1s cubic-bezier(0, 0, 0.2, 1) infinite\",pulse:\"pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite\",bounce:\"bounce 1s infinite\"},aria:{checked:'checked=\"true\"',disabled:'disabled=\"true\"',expanded:'expanded=\"true\"',hidden:'hidden=\"true\"',pressed:'pressed=\"true\"',readonly:'readonly=\"true\"',required:'required=\"true\"',selected:'selected=\"true\"'},aspectRatio:{auto:\"auto\",square:\"1 / 1\",video:\"16 / 9\"},backdropBlur:({theme:t})=>t(\"blur\"),backdropBrightness:({theme:t})=>t(\"brightness\"),backdropContrast:({theme:t})=>t(\"contrast\"),backdropGrayscale:({theme:t})=>t(\"grayscale\"),backdropHueRotate:({theme:t})=>t(\"hueRotate\"),backdropInvert:({theme:t})=>t(\"invert\"),backdropOpacity:({theme:t})=>t(\"opacity\"),backdropSaturate:({theme:t})=>t(\"saturate\"),backdropSepia:({theme:t})=>t(\"sepia\"),backgroundColor:({theme:t})=>t(\"colors\"),backgroundImage:{none:\"none\",\"gradient-to-t\":\"linear-gradient(to top, var(--tw-gradient-stops))\",\"gradient-to-tr\":\"linear-gradient(to top right, var(--tw-gradient-stops))\",\"gradient-to-r\":\"linear-gradient(to right, var(--tw-gradient-stops))\",\"gradient-to-br\":\"linear-gradient(to bottom right, var(--tw-gradient-stops))\",\"gradient-to-b\":\"linear-gradient(to bottom, var(--tw-gradient-stops))\",\"gradient-to-bl\":\"linear-gradient(to bottom left, var(--tw-gradient-stops))\",\"gradient-to-l\":\"linear-gradient(to left, var(--tw-gradient-stops))\",\"gradient-to-tl\":\"linear-gradient(to top left, var(--tw-gradient-stops))\"},backgroundOpacity:({theme:t})=>t(\"opacity\"),backgroundPosition:{bottom:\"bottom\",center:\"center\",left:\"left\",\"left-bottom\":\"left bottom\",\"left-top\":\"left top\",right:\"right\",\"right-bottom\":\"right bottom\",\"right-top\":\"right top\",top:\"top\"},backgroundSize:{auto:\"auto\",cover:\"cover\",contain:\"contain\"},blur:{0:\"0\",none:\"0\",sm:\"4px\",DEFAULT:\"8px\",md:\"12px\",lg:\"16px\",xl:\"24px\",\"2xl\":\"40px\",\"3xl\":\"64px\"},borderColor:({theme:t})=>({...t(\"colors\"),DEFAULT:t(\"colors.gray.200\",\"currentColor\")}),borderOpacity:({theme:t})=>t(\"opacity\"),borderRadius:{none:\"0px\",sm:\"0.125rem\",DEFAULT:\"0.25rem\",md:\"0.375rem\",lg:\"0.5rem\",xl:\"0.75rem\",\"2xl\":\"1rem\",\"3xl\":\"1.5rem\",full:\"9999px\"},borderSpacing:({theme:t})=>({...t(\"spacing\")}),borderWidth:{DEFAULT:\"1px\",0:\"0px\",2:\"2px\",4:\"4px\",8:\"8px\"},boxShadow:{sm:\"0 1px 2px 0 rgb(0 0 0 / 0.05)\",DEFAULT:\"0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)\",md:\"0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)\",lg:\"0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)\",xl:\"0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)\",\"2xl\":\"0 25px 50px -12px rgb(0 0 0 / 0.25)\",inner:\"inset 0 2px 4px 0 rgb(0 0 0 / 0.05)\",none:\"none\"},boxShadowColor:({theme:t})=>t(\"colors\"),brightness:{0:\"0\",50:\".5\",75:\".75\",90:\".9\",95:\".95\",100:\"1\",105:\"1.05\",110:\"1.1\",125:\"1.25\",150:\"1.5\",200:\"2\"},caretColor:({theme:t})=>t(\"colors\"),colors:({colors:t})=>({inherit:t.inherit,current:t.current,transparent:t.transparent,black:t.black,white:t.white,slate:t.slate,gray:t.gray,zinc:t.zinc,neutral:t.neutral,stone:t.stone,red:t.red,orange:t.orange,amber:t.amber,yellow:t.yellow,lime:t.lime,green:t.green,emerald:t.emerald,teal:t.teal,cyan:t.cyan,sky:t.sky,blue:t.blue,indigo:t.indigo,violet:t.violet,purple:t.purple,fuchsia:t.fuchsia,pink:t.pink,rose:t.rose}),columns:{auto:\"auto\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\",8:\"8\",9:\"9\",10:\"10\",11:\"11\",12:\"12\",\"3xs\":\"16rem\",\"2xs\":\"18rem\",xs:\"20rem\",sm:\"24rem\",md:\"28rem\",lg:\"32rem\",xl:\"36rem\",\"2xl\":\"42rem\",\"3xl\":\"48rem\",\"4xl\":\"56rem\",\"5xl\":\"64rem\",\"6xl\":\"72rem\",\"7xl\":\"80rem\"},container:{},content:{none:\"none\"},contrast:{0:\"0\",50:\".5\",75:\".75\",100:\"1\",125:\"1.25\",150:\"1.5\",200:\"2\"},cursor:{auto:\"auto\",default:\"default\",pointer:\"pointer\",wait:\"wait\",text:\"text\",move:\"move\",help:\"help\",\"not-allowed\":\"not-allowed\",none:\"none\",\"context-menu\":\"context-menu\",progress:\"progress\",cell:\"cell\",crosshair:\"crosshair\",\"vertical-text\":\"vertical-text\",alias:\"alias\",copy:\"copy\",\"no-drop\":\"no-drop\",grab:\"grab\",grabbing:\"grabbing\",\"all-scroll\":\"all-scroll\",\"col-resize\":\"col-resize\",\"row-resize\":\"row-resize\",\"n-resize\":\"n-resize\",\"e-resize\":\"e-resize\",\"s-resize\":\"s-resize\",\"w-resize\":\"w-resize\",\"ne-resize\":\"ne-resize\",\"nw-resize\":\"nw-resize\",\"se-resize\":\"se-resize\",\"sw-resize\":\"sw-resize\",\"ew-resize\":\"ew-resize\",\"ns-resize\":\"ns-resize\",\"nesw-resize\":\"nesw-resize\",\"nwse-resize\":\"nwse-resize\",\"zoom-in\":\"zoom-in\",\"zoom-out\":\"zoom-out\"},divideColor:({theme:t})=>t(\"borderColor\"),divideOpacity:({theme:t})=>t(\"borderOpacity\"),divideWidth:({theme:t})=>t(\"borderWidth\"),dropShadow:{sm:\"0 1px 1px rgb(0 0 0 / 0.05)\",DEFAULT:[\"0 1px 2px rgb(0 0 0 / 0.1)\",\"0 1px 1px rgb(0 0 0 / 0.06)\"],md:[\"0 4px 3px rgb(0 0 0 / 0.07)\",\"0 2px 2px rgb(0 0 0 / 0.06)\"],lg:[\"0 10px 8px rgb(0 0 0 / 0.04)\",\"0 4px 3px rgb(0 0 0 / 0.1)\"],xl:[\"0 20px 13px rgb(0 0 0 / 0.03)\",\"0 8px 5px rgb(0 0 0 / 0.08)\"],\"2xl\":\"0 25px 25px rgb(0 0 0 / 0.15)\",none:\"0 0 #0000\"},fill:({theme:t})=>({none:\"none\",...t(\"colors\")}),flex:{1:\"1 1 0%\",auto:\"1 1 auto\",initial:\"0 1 auto\",none:\"none\"},flexBasis:({theme:t})=>({auto:\"auto\",...t(\"spacing\"),\"1/2\":\"50%\",\"1/3\":\"33.333333%\",\"2/3\":\"66.666667%\",\"1/4\":\"25%\",\"2/4\":\"50%\",\"3/4\":\"75%\",\"1/5\":\"20%\",\"2/5\":\"40%\",\"3/5\":\"60%\",\"4/5\":\"80%\",\"1/6\":\"16.666667%\",\"2/6\":\"33.333333%\",\"3/6\":\"50%\",\"4/6\":\"66.666667%\",\"5/6\":\"83.333333%\",\"1/12\":\"8.333333%\",\"2/12\":\"16.666667%\",\"3/12\":\"25%\",\"4/12\":\"33.333333%\",\"5/12\":\"41.666667%\",\"6/12\":\"50%\",\"7/12\":\"58.333333%\",\"8/12\":\"66.666667%\",\"9/12\":\"75%\",\"10/12\":\"83.333333%\",\"11/12\":\"91.666667%\",full:\"100%\"}),flexGrow:{0:\"0\",DEFAULT:\"1\"},flexShrink:{0:\"0\",DEFAULT:\"1\"},fontFamily:{sans:[\"ui-sans-serif\",\"system-ui\",\"-apple-system\",\"BlinkMacSystemFont\",'\"Segoe UI\"',\"Roboto\",'\"Helvetica Neue\"',\"Arial\",'\"Noto Sans\"',\"sans-serif\",'\"Apple Color Emoji\"','\"Segoe UI Emoji\"','\"Segoe UI Symbol\"','\"Noto Color Emoji\"'],serif:[\"ui-serif\",\"Georgia\",\"Cambria\",'\"Times New Roman\"',\"Times\",\"serif\"],mono:[\"ui-monospace\",\"SFMono-Regular\",\"Menlo\",\"Monaco\",\"Consolas\",'\"Liberation Mono\"','\"Courier New\"',\"monospace\"]},fontSize:{xs:[\"0.75rem\",{lineHeight:\"1rem\"}],sm:[\"0.875rem\",{lineHeight:\"1.25rem\"}],base:[\"1rem\",{lineHeight:\"1.5rem\"}],lg:[\"1.125rem\",{lineHeight:\"1.75rem\"}],xl:[\"1.25rem\",{lineHeight:\"1.75rem\"}],\"2xl\":[\"1.5rem\",{lineHeight:\"2rem\"}],\"3xl\":[\"1.875rem\",{lineHeight:\"2.25rem\"}],\"4xl\":[\"2.25rem\",{lineHeight:\"2.5rem\"}],\"5xl\":[\"3rem\",{lineHeight:\"1\"}],\"6xl\":[\"3.75rem\",{lineHeight:\"1\"}],\"7xl\":[\"4.5rem\",{lineHeight:\"1\"}],\"8xl\":[\"6rem\",{lineHeight:\"1\"}],\"9xl\":[\"8rem\",{lineHeight:\"1\"}]},fontWeight:{thin:\"100\",extralight:\"200\",light:\"300\",normal:\"400\",medium:\"500\",semibold:\"600\",bold:\"700\",extrabold:\"800\",black:\"900\"},gap:({theme:t})=>t(\"spacing\"),gradientColorStops:({theme:t})=>t(\"colors\"),gradientColorStopPositions:{\"0%\":\"0%\",\"5%\":\"5%\",\"10%\":\"10%\",\"15%\":\"15%\",\"20%\":\"20%\",\"25%\":\"25%\",\"30%\":\"30%\",\"35%\":\"35%\",\"40%\":\"40%\",\"45%\":\"45%\",\"50%\":\"50%\",\"55%\":\"55%\",\"60%\":\"60%\",\"65%\":\"65%\",\"70%\":\"70%\",\"75%\":\"75%\",\"80%\":\"80%\",\"85%\":\"85%\",\"90%\":\"90%\",\"95%\":\"95%\",\"100%\":\"100%\"},grayscale:{0:\"0\",DEFAULT:\"100%\"},gridAutoColumns:{auto:\"auto\",min:\"min-content\",max:\"max-content\",fr:\"minmax(0, 1fr)\"},gridAutoRows:{auto:\"auto\",min:\"min-content\",max:\"max-content\",fr:\"minmax(0, 1fr)\"},gridColumn:{auto:\"auto\",\"span-1\":\"span 1 / span 1\",\"span-2\":\"span 2 / span 2\",\"span-3\":\"span 3 / span 3\",\"span-4\":\"span 4 / span 4\",\"span-5\":\"span 5 / span 5\",\"span-6\":\"span 6 / span 6\",\"span-7\":\"span 7 / span 7\",\"span-8\":\"span 8 / span 8\",\"span-9\":\"span 9 / span 9\",\"span-10\":\"span 10 / span 10\",\"span-11\":\"span 11 / span 11\",\"span-12\":\"span 12 / span 12\",\"span-full\":\"1 / -1\"},gridColumnEnd:{auto:\"auto\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\",8:\"8\",9:\"9\",10:\"10\",11:\"11\",12:\"12\",13:\"13\"},gridColumnStart:{auto:\"auto\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\",8:\"8\",9:\"9\",10:\"10\",11:\"11\",12:\"12\",13:\"13\"},gridRow:{auto:\"auto\",\"span-1\":\"span 1 / span 1\",\"span-2\":\"span 2 / span 2\",\"span-3\":\"span 3 / span 3\",\"span-4\":\"span 4 / span 4\",\"span-5\":\"span 5 / span 5\",\"span-6\":\"span 6 / span 6\",\"span-full\":\"1 / -1\"},gridRowEnd:{auto:\"auto\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\"},gridRowStart:{auto:\"auto\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\"},gridTemplateColumns:{none:\"none\",1:\"repeat(1, minmax(0, 1fr))\",2:\"repeat(2, minmax(0, 1fr))\",3:\"repeat(3, minmax(0, 1fr))\",4:\"repeat(4, minmax(0, 1fr))\",5:\"repeat(5, minmax(0, 1fr))\",6:\"repeat(6, minmax(0, 1fr))\",7:\"repeat(7, minmax(0, 1fr))\",8:\"repeat(8, minmax(0, 1fr))\",9:\"repeat(9, minmax(0, 1fr))\",10:\"repeat(10, minmax(0, 1fr))\",11:\"repeat(11, minmax(0, 1fr))\",12:\"repeat(12, minmax(0, 1fr))\"},gridTemplateRows:{none:\"none\",1:\"repeat(1, minmax(0, 1fr))\",2:\"repeat(2, minmax(0, 1fr))\",3:\"repeat(3, minmax(0, 1fr))\",4:\"repeat(4, minmax(0, 1fr))\",5:\"repeat(5, minmax(0, 1fr))\",6:\"repeat(6, minmax(0, 1fr))\"},height:({theme:t})=>({auto:\"auto\",...t(\"spacing\"),\"1/2\":\"50%\",\"1/3\":\"33.333333%\",\"2/3\":\"66.666667%\",\"1/4\":\"25%\",\"2/4\":\"50%\",\"3/4\":\"75%\",\"1/5\":\"20%\",\"2/5\":\"40%\",\"3/5\":\"60%\",\"4/5\":\"80%\",\"1/6\":\"16.666667%\",\"2/6\":\"33.333333%\",\"3/6\":\"50%\",\"4/6\":\"66.666667%\",\"5/6\":\"83.333333%\",full:\"100%\",screen:\"100vh\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\"}),hueRotate:{0:\"0deg\",15:\"15deg\",30:\"30deg\",60:\"60deg\",90:\"90deg\",180:\"180deg\"},inset:({theme:t})=>({auto:\"auto\",...t(\"spacing\"),\"1/2\":\"50%\",\"1/3\":\"33.333333%\",\"2/3\":\"66.666667%\",\"1/4\":\"25%\",\"2/4\":\"50%\",\"3/4\":\"75%\",full:\"100%\"}),invert:{0:\"0\",DEFAULT:\"100%\"},keyframes:{spin:{to:{transform:\"rotate(360deg)\"}},ping:{\"75%, 100%\":{transform:\"scale(2)\",opacity:\"0\"}},pulse:{\"50%\":{opacity:\".5\"}},bounce:{\"0%, 100%\":{transform:\"translateY(-25%)\",animationTimingFunction:\"cubic-bezier(0.8,0,1,1)\"},\"50%\":{transform:\"none\",animationTimingFunction:\"cubic-bezier(0,0,0.2,1)\"}}},letterSpacing:{tighter:\"-0.05em\",tight:\"-0.025em\",normal:\"0em\",wide:\"0.025em\",wider:\"0.05em\",widest:\"0.1em\"},lineHeight:{none:\"1\",tight:\"1.25\",snug:\"1.375\",normal:\"1.5\",relaxed:\"1.625\",loose:\"2\",3:\".75rem\",4:\"1rem\",5:\"1.25rem\",6:\"1.5rem\",7:\"1.75rem\",8:\"2rem\",9:\"2.25rem\",10:\"2.5rem\"},listStyleType:{none:\"none\",disc:\"disc\",decimal:\"decimal\"},listStyleImage:{none:\"none\"},margin:({theme:t})=>({auto:\"auto\",...t(\"spacing\")}),lineClamp:{1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\"},maxHeight:({theme:t})=>({...t(\"spacing\"),none:\"none\",full:\"100%\",screen:\"100vh\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\"}),maxWidth:({theme:t,breakpoints:e})=>({none:\"none\",0:\"0rem\",xs:\"20rem\",sm:\"24rem\",md:\"28rem\",lg:\"32rem\",xl:\"36rem\",\"2xl\":\"42rem\",\"3xl\":\"48rem\",\"4xl\":\"56rem\",\"5xl\":\"64rem\",\"6xl\":\"72rem\",\"7xl\":\"80rem\",full:\"100%\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\",prose:\"65ch\",...e(t(\"screens\"))}),minHeight:{0:\"0px\",full:\"100%\",screen:\"100vh\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\"},minWidth:{0:\"0px\",full:\"100%\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\"},objectPosition:{bottom:\"bottom\",center:\"center\",left:\"left\",\"left-bottom\":\"left bottom\",\"left-top\":\"left top\",right:\"right\",\"right-bottom\":\"right bottom\",\"right-top\":\"right top\",top:\"top\"},opacity:{0:\"0\",5:\"0.05\",10:\"0.1\",20:\"0.2\",25:\"0.25\",30:\"0.3\",40:\"0.4\",50:\"0.5\",60:\"0.6\",70:\"0.7\",75:\"0.75\",80:\"0.8\",90:\"0.9\",95:\"0.95\",100:\"1\"},order:{first:\"-9999\",last:\"9999\",none:\"0\",1:\"1\",2:\"2\",3:\"3\",4:\"4\",5:\"5\",6:\"6\",7:\"7\",8:\"8\",9:\"9\",10:\"10\",11:\"11\",12:\"12\"},outlineColor:({theme:t})=>t(\"colors\"),outlineOffset:{0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},outlineWidth:{0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},padding:({theme:t})=>t(\"spacing\"),placeholderColor:({theme:t})=>t(\"colors\"),placeholderOpacity:({theme:t})=>t(\"opacity\"),ringColor:({theme:t})=>({DEFAULT:t(\"colors.blue.500\",\"#3b82f6\"),...t(\"colors\")}),ringOffsetColor:({theme:t})=>t(\"colors\"),ringOffsetWidth:{0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},ringOpacity:({theme:t})=>({DEFAULT:\"0.5\",...t(\"opacity\")}),ringWidth:{DEFAULT:\"3px\",0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},rotate:{0:\"0deg\",1:\"1deg\",2:\"2deg\",3:\"3deg\",6:\"6deg\",12:\"12deg\",45:\"45deg\",90:\"90deg\",180:\"180deg\"},saturate:{0:\"0\",50:\".5\",100:\"1\",150:\"1.5\",200:\"2\"},scale:{0:\"0\",50:\".5\",75:\".75\",90:\".9\",95:\".95\",100:\"1\",105:\"1.05\",110:\"1.1\",125:\"1.25\",150:\"1.5\"},screens:{sm:\"640px\",md:\"768px\",lg:\"1024px\",xl:\"1280px\",\"2xl\":\"1536px\"},scrollMargin:({theme:t})=>({...t(\"spacing\")}),scrollPadding:({theme:t})=>t(\"spacing\"),sepia:{0:\"0\",DEFAULT:\"100%\"},skew:{0:\"0deg\",1:\"1deg\",2:\"2deg\",3:\"3deg\",6:\"6deg\",12:\"12deg\"},space:({theme:t})=>({...t(\"spacing\")}),spacing:{px:\"1px\",0:\"0px\",.5:\"0.125rem\",1:\"0.25rem\",1.5:\"0.375rem\",2:\"0.5rem\",2.5:\"0.625rem\",3:\"0.75rem\",3.5:\"0.875rem\",4:\"1rem\",5:\"1.25rem\",6:\"1.5rem\",7:\"1.75rem\",8:\"2rem\",9:\"2.25rem\",10:\"2.5rem\",11:\"2.75rem\",12:\"3rem\",14:\"3.5rem\",16:\"4rem\",20:\"5rem\",24:\"6rem\",28:\"7rem\",32:\"8rem\",36:\"9rem\",40:\"10rem\",44:\"11rem\",48:\"12rem\",52:\"13rem\",56:\"14rem\",60:\"15rem\",64:\"16rem\",72:\"18rem\",80:\"20rem\",96:\"24rem\"},stroke:({theme:t})=>({none:\"none\",...t(\"colors\")}),strokeWidth:{0:\"0\",1:\"1\",2:\"2\"},supports:{},data:{},textColor:({theme:t})=>t(\"colors\"),textDecorationColor:({theme:t})=>t(\"colors\"),textDecorationThickness:{auto:\"auto\",\"from-font\":\"from-font\",0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},textIndent:({theme:t})=>({...t(\"spacing\")}),textOpacity:({theme:t})=>t(\"opacity\"),textUnderlineOffset:{auto:\"auto\",0:\"0px\",1:\"1px\",2:\"2px\",4:\"4px\",8:\"8px\"},transformOrigin:{center:\"center\",top:\"top\",\"top-right\":\"top right\",right:\"right\",\"bottom-right\":\"bottom right\",bottom:\"bottom\",\"bottom-left\":\"bottom left\",left:\"left\",\"top-left\":\"top left\"},transitionDelay:{0:\"0s\",75:\"75ms\",100:\"100ms\",150:\"150ms\",200:\"200ms\",300:\"300ms\",500:\"500ms\",700:\"700ms\",1e3:\"1000ms\"},transitionDuration:{DEFAULT:\"150ms\",0:\"0s\",75:\"75ms\",100:\"100ms\",150:\"150ms\",200:\"200ms\",300:\"300ms\",500:\"500ms\",700:\"700ms\",1e3:\"1000ms\"},transitionProperty:{none:\"none\",all:\"all\",DEFAULT:\"color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter\",colors:\"color, background-color, border-color, text-decoration-color, fill, stroke\",opacity:\"opacity\",shadow:\"box-shadow\",transform:\"transform\"},transitionTimingFunction:{DEFAULT:\"cubic-bezier(0.4, 0, 0.2, 1)\",linear:\"linear\",in:\"cubic-bezier(0.4, 0, 1, 1)\",out:\"cubic-bezier(0, 0, 0.2, 1)\",\"in-out\":\"cubic-bezier(0.4, 0, 0.2, 1)\"},translate:({theme:t})=>({...t(\"spacing\"),\"1/2\":\"50%\",\"1/3\":\"33.333333%\",\"2/3\":\"66.666667%\",\"1/4\":\"25%\",\"2/4\":\"50%\",\"3/4\":\"75%\",full:\"100%\"}),width:({theme:t})=>({auto:\"auto\",...t(\"spacing\"),\"1/2\":\"50%\",\"1/3\":\"33.333333%\",\"2/3\":\"66.666667%\",\"1/4\":\"25%\",\"2/4\":\"50%\",\"3/4\":\"75%\",\"1/5\":\"20%\",\"2/5\":\"40%\",\"3/5\":\"60%\",\"4/5\":\"80%\",\"1/6\":\"16.666667%\",\"2/6\":\"33.333333%\",\"3/6\":\"50%\",\"4/6\":\"66.666667%\",\"5/6\":\"83.333333%\",\"1/12\":\"8.333333%\",\"2/12\":\"16.666667%\",\"3/12\":\"25%\",\"4/12\":\"33.333333%\",\"5/12\":\"41.666667%\",\"6/12\":\"50%\",\"7/12\":\"58.333333%\",\"8/12\":\"66.666667%\",\"9/12\":\"75%\",\"10/12\":\"83.333333%\",\"11/12\":\"91.666667%\",full:\"100%\",screen:\"100vw\",min:\"min-content\",max:\"max-content\",fit:\"fit-content\"}),willChange:{auto:\"auto\",scroll:\"scroll-position\",contents:\"contents\",transform:\"transform\"},zIndex:{auto:\"auto\",0:\"0\",10:\"10\",20:\"20\",30:\"30\",40:\"40\",50:\"50\"}},plugins:[]}});var Dc=S((FO,Rc)=>{\"use strict\";var Dn=Object.prototype.hasOwnProperty,Ic=Object.prototype.toString,Ec=Object.defineProperty,Cc=Object.getOwnPropertyDescriptor,Ac=function(e){return typeof Array.isArray==\"function\"?Array.isArray(e):Ic.call(e)===\"[object Array]\"},_c=function(e){if(!e||Ic.call(e)!==\"[object Object]\")return!1;var r=Dn.call(e,\"constructor\"),n=e.constructor&&e.constructor.prototype&&Dn.call(e.constructor.prototype,\"isPrototypeOf\");if(e.constructor&&!r&&!n)return!1;var i;for(i in e);return typeof i>\"u\"||Dn.call(e,i)},Tc=function(e,r){Ec&&r.name===\"__proto__\"?Ec(e,r.name,{enumerable:!0,configurable:!0,value:r.newValue,writable:!0}):e[r.name]=r.newValue},Pc=function(e,r){if(r===\"__proto__\")if(Dn.call(e,r)){if(Cc)return Cc(e,r).value}else return;return e[r]};Rc.exports=function t(){var e,r,n,i,a,s,o=arguments[0],l=1,u=arguments.length,f=!1;for(typeof o==\"boolean\"&&(f=o,o=arguments[1]||{},l=2),(o==null||typeof o!=\"object\"&&typeof o!=\"function\")&&(o={});l<u;++l)if(e=arguments[l],e!=null)for(r in e)n=Pc(o,r),i=Pc(e,r),o!==i&&(f&&i&&(_c(i)||(a=Ac(i)))?(a?(a=!1,s=n&&Ac(n)?n:[]):s=n&&_c(n)?n:{},Tc(o,{name:r,newValue:t(f,s,i)})):typeof i<\"u\"&&Tc(o,{name:r,newValue:i}));return o}});var Mn=S((LO,Mc)=>{var ya=function(t,e){var r=new t.constructor;return Object.keys(t).forEach(function(n){if(!!t.hasOwnProperty(n)){var i=t[n],a=typeof i;n===\"parent\"&&a===\"object\"?e&&(r[n]=e):n===\"source\"?r[n]=i:i instanceof Array?n===\"nodes\"?r[n]=[]:r[n]=i.map(function(s){ya(s,r)}):n!==\"before\"&&n!==\"after\"&&n!==\"between\"&&n!==\"semicolon\"&&(a===\"object\"&&(i=ya(i)),r[n]=i)}}),r};Mc.exports=ya});var $c=S((NO,qc)=>{\"use strict\";qc.exports=Lc;function Lc(t,e,r){t instanceof RegExp&&(t=Fc(t,r)),e instanceof RegExp&&(e=Fc(e,r));var n=Nc(t,e,r);return n&&{start:n[0],end:n[1],pre:r.slice(0,n[0]),body:r.slice(n[0]+t.length,n[1]),post:r.slice(n[1]+e.length)}}function Fc(t,e){var r=e.match(t);return r?r[0]:null}Lc.range=Nc;function Nc(t,e,r){var n,i,a,s,o,l=r.indexOf(t),u=r.indexOf(e,l+1),f=l;if(l>=0&&u>0){if(t===e)return[l,u];for(n=[],a=r.length;f>=0&&!o;)f==l?(n.push(f),l=r.indexOf(t,f+1)):n.length==1?o=[n.pop(),u]:(i=n.pop(),i<a&&(a=i,s=u),u=r.indexOf(e,f+1)),f=l<u&&l>=0?l:u;n.length&&(o=[a,s])}return o}});var jc=S((qO,Uc)=>{var Ow=/(.*?(?:(?:\\([^\\)]+\\)|\\[[^\\]]+\\]|(?![><+~\\s]).)+)(?:(?:(?:\\s(?!>>))|(?:\\t(?!>>))|(?:\\s?>>\\s?))(?!\\s+))(?![><+~][\\s]+?))/,Ew=function(t){return t.split(Ow).filter(function(e){return e.length>0}).map(function(e){return e.trim().replace(/\\s*?>>\\s*?/g,\"\")})};Uc.exports=Ew});var dr=S(($O,zc)=>{var Cw=jc(),Aw=function(t,e){e=e||!1;for(var r=[[]],n=e?t:t.parent;n;){var i=(n.selectors||[]).map(function(s){return{value:s,type:\"selector\"}});n.type===\"atrule\"&&(i=[].concat(n.params).map(function(s){return{value:\"@\"+n.name+\" \"+s,type:\"atrule\"}}));var a=(i.length>0?i:[1]).map(function(){return r.map(function(s){return s.slice(0)})});i.forEach(function(s,o){a[o]=a[o].map(function(l){var u=[s.value];return s.type===\"selector\"&&(u=Cw(s.value)),l.unshift.apply(l,u),l})}),r=[],a.forEach(function(s){r=r.concat(s)}),n=n.parent}return r};zc.exports=Aw});var Wc=S((UO,Vc)=>{\"use strict\";var _w=/[|\\\\{}()[\\]^$+*?.]/g;Vc.exports=function(t){if(typeof t!=\"string\")throw new TypeError(\"Expected a string\");return t.replace(_w,\"\\\\$&\")}});var Gc=S((jO,Bc)=>{var Tw={\"*\":!0,\":root\":!0,html:!0},Pw=function(t){return!!Tw[t]};Bc.exports=Pw});var Hc=S((zO,Yc)=>{var Iw=/(.*?(?:(?:\\([^\\)]+\\)|\\[[^\\]]+\\]|(?!>>|<|\\+|~|\\s).)+)(?:(?:(?:>(?!>))|(?:\\s?>(?!>)\\s?))(?!\\s+))(?!(?:>>|<|\\+|~)[\\s]+?))/,Rw=function(t){return t.split(Iw).filter(function(e){return e.length>0}).map(function(e){return e.trim().replace(/\\s*?>\\s*?/g,\"\")})};Yc.exports=Rw});var va=S((VO,tp)=>{var Dw=Wc(),Qc=Gc(),Jc=Hc(),Mw=/^@.*/,Kc=/([^\\s:]+)((?::|::)[^\\s]*?)(\\s+|$)/;function Zc(t,e){var r,n,i=e.some(function(a){return t.some(function(s){r=null;var o=!0;for(n=0;n<a.length;n++){for(var l=a[n],u=r||0,f=-1,p=s.slice(u),c=0;c<p.length;c++){var d=p[c],h=u+c;if(new RegExp(Dw(l)+\"$\").test(d)){f=h;break}if(Qc(l)||Qc(d)){f=h;break}var y=Jc(d);if(y.length>1){var m=[].concat([y]),g=[].concat([a.slice(n).reduce(function(v,O){return v.concat(Jc(O))},[])]),w=Zc(m,g);(w.doesMatchScope||n+1<a.length)&&(f=h,n+=w.scopePieceIndex-1);break}}var b=f>=u;if(r=f+1,o=o&&b,!o)break}return o})});return{doesMatchScope:i,nodeScopePieceIndex:r-1,scopePieceIndex:n}}var Xc=function(t){return t.map(function(e){return e.map(function(r){return Mw.test(r)?r:r.replace(new RegExp(Kc.source,\"g\"),function(n,i,a,s){return i+s})})})},ep=function(t,e,r){return t=Xc(t),r&&(e=Xc(e)),Zc(t,e).doesMatchScope};ep.RE_PSEUDO_SELECTOR=Kc;tp.exports=ep});var wa=S((WO,np)=>{var Fw=va(),rp=dr(),Lw=function(t,e,r){var n=rp(t,!0),i=rp(e,!0);return Fw(n,i,r)};np.exports=Lw});var ba=S((BO,sp)=>{var ip=function(t,e,r){r=r||[];var n=!1;return t&&(r=t.reduce(function(i,a){var s=!!e[a],o=s?i.some(function(l){return e[a].some(function(u){return l===u})}):!1;return n=n||o,s&&!n&&(i=i.concat(e[a]),(e[a]||[]).forEach(function(l){var u=ip(l.variablesUsed,e,i);i=u.deps,n=n||u.hasCircularOrSelfReference})),i},r)),{deps:r,hasCircularOrSelfReference:n}};sp.exports=ip});var xa=S((GO,ap)=>{var Nw=dr(),qw=function(t,e){for(var r,n=e;n.parent&&!r;){var i=Nw(n.clone(),!0);i.some(function(a){return a.some(function(s){return s===t?(r=n,!0):!1})}),n=n.parent}return r};ap.exports=qw});var Sa=S((YO,lp)=>{var op=Mn(),$w=function(t,e,r){r=r||function(){return!0};for(var n=[],i=t,a=!1;i&&!a;)i.type===\"decl\"?n.push(i.clone()):n.push(op(i)),a=r(i),i=i.parent;for(var s=[],o=e;o;)s.push(op(o)),o=o.parent;return s.forEach(function(l,u,f){u+1<f.length&&(l.parent=f[u+1])}),n.forEach(function(l,u,f){u+1<f.length?l.parent=f[u+1]:(s.slice(-1)[0].parent=i,l.parent=s[0])}),n[0]};lp.exports=$w});var ka=S((HO,fp)=>{var Uw=$c(),jw=dr(),up=wa(),zw=ba(),Vw=xa(),Ww=Sa(),Bw=/var\\(\\s*(--[^,\\s)]+)/;function Gw(t){return String(t)}function Fn(t){var e=Uw(\"(\",\")\",t);if(e){if(/(?:^|[^\\w-])var$/.test(e.pre))return{pre:e.pre.slice(0,-3),body:e.body,post:e.post};var r=Fn(e.body);if(r)return{pre:e.pre+\"(\"+r.pre,body:r.body,post:r.post+\")\"+e.post};var n=Fn(e.post);if(n)return{pre:e.pre+\"(\"+e.body+\")\"+n.pre,body:n.body,post:n.post}}}var Ln=function(t,e,r,n){for(var i=n?\"\t\":\"\",a=void 0,s=Gw(t.value),o=[],l={},u=s;a=Fn(u);){var f=a.body.split(\",\"),p=f[0].trim();l[p]=!0,u=(a.pre||\"\")+a.body.replace(p,\"\")+(a.post||\"\")}u=void 0;for(var c=Object.keys(l),d=!1;a=Fn(s);){var h=void 0,f=a.body.split(\",\"),p=f[0].trim(),y=f.length>1?f.slice(1).join(\",\").trim():void 0;(e[p]||[]).forEach(function(A){var E=A.parent.type===\"root\"||A.parent.selectors[0]===\":root\",I=up(t.parent,A.parent),F=up(t.parent,A.parent,r);F&&(!(h||{}).isImportant||A.isImportant)&&(h=A)});var m=(h||{}).calculatedInPlaceValue||function(){var A=y;if(y){var E=t.clone({parent:t.parent,value:y});A=Ln(E,e,!1,!0).value}return A}();if(h!==void 0&&!zw(c,e).hasCircularOrSelfReference){var g=jw(t.parent.parent,!0),w=g[0].slice(-1)[0],b=Vw(w,h.decl.parent),v=Ww(h.decl,t.parent.parent,function(A){return A===b});m=Ln(v,e,!1,!0).value}d=m===void 0,d&&o.push([\"variable \"+p+\" is undefined and used without a fallback\",{node:t}]),s=(a.pre||\"\")+m+(a.post||\"\")}return{value:d?void 0:s,variablesUsed:c,warnings:o}};Ln.RE_VAR_FUNC=Bw;fp.exports=Ln});var hp=S((QO,dp)=>{var cp=ka(),Yw=dr(),Hw=ba(),pp=va(),Qw=wa(),Nn=Mn(),Jw=xa(),Xw=Sa();function Kw(t,e,r,n){t.forEach(function(i){Hw(t,e).deps.forEach(function(a){var s;if(a.isUnderAtRule){var o=Yw(a.parent,!0),l=o[0].slice(-1)[0],u=Jw(l,r.parent),f=a.parent.parent;s=Xw(r,f,function(h){return h===u})}else if(pp.RE_PSEUDO_SELECTOR.test(a.parent.selector)){var p=Nn(r.parent);p.parent=r.parent.parent,s=r.clone(),p.append(s);var c=a.parent.selector.match(new RegExp(pp.RE_PSEUDO_SELECTOR.source+\"$\")),d=c?c[2]:\"\";p.selector+=d}s&&Qw(s,a.parent,!0)&&n(s,a)})})}function Zw(t,e,r,n,i){r=(typeof r==\"function\"?r(t):r)||!1,n=n||!1;var a=function(l){return i&&i(l),l},s=a(cp(t,e)),o;Kw(s.variablesUsed,e,t,function(l,u){var f=Nn(t.parent),p=t.clone();f.append(p);let c;if(typeof r==\"function\"?c=r(t):c=r,c===!0&&p.cloneAfter(),p.value=a(cp(l,e,!0)).value,u.isUnderAtRule){var d=Nn(u.parent.parent);d.append(f);for(var h=d,y=u.parent.parent;y.parent.type===\"atrule\";){var m=Nn(y.parent);m.append(h),h=m,y=y.parent}t.parent.parent.insertAfter(n&&o||t.parent,h),o=h}else f.selector=l.parent.selector,t.parent.parent.insertAfter(n&&o||t.parent,f)}),r===!0&&t.value!==s.value&&t.cloneAfter(),s.value===void 0&&(s.value=\"undefined\"),t.value=s.value}dp.exports=Zw});var vp=S((JO,Oa)=>{var mp=Dc(),eb=Mn(),gp=ka(),tb=hp(),yp=/(--(.+))/;function rb(t,e){t.walkDecls(function(r){yp.test(r.prop)&&e(r)})}function nb(t){for(var e=t;e&&e.nodes.length<=0;){var r=e.type!==\"root\"?e:null;r?(e=r.parent,r.remove()):e=null}}var ib={preserve:!1,variables:{},preserveInjectedVariables:!0,preserveAtRulesOrder:!1};Oa.exports=(t={})=>{var e=mp({},ib,t);return{postcssPlugin:\"postcss-css-variables\",Once(r,{decl:n,result:i,rule:a}){var s=[],o=[],l={};l=mp(l,Object.keys(e.variables).reduce(function(p,c){var d=e.variables[c];c=c.slice(0,2)===\"--\"?c:\"--\"+c;var h=(d||{}).value||d,y=(d||{}).isImportant||!1,m=a({selector:\":root\"});r.root().prepend(m);var g=n({prop:c,value:h,important:y});return m.append(g),e.preserveInjectedVariables||o.push(g),p[c]=(p[c]||[]).concat({decl:g,prop:c,calculatedInPlaceValue:h,isImportant:y,variablesUsed:[],parent:m,isUnderAtRule:!1}),p},{}));var u=function(p){var c=[].concat(p.warnings);return c.forEach(function(d){d=[].concat(d),i.warn.apply(i,d)}),p};rb(r,function(p){var c=p.parent,d=u(gp(p,l));p.parent.selectors.forEach(function(y){var m=eb(p.parent);m.selector=y,m.parent=p.parent.parent;var g=p.clone();m.append(g);var w=p.prop;l[w]=(l[w]||[]).concat({decl:g,prop:w,calculatedInPlaceValue:d.value,isImportant:p.important||!1,variablesUsed:d.variablesUsed,parent:m,isUnderAtRule:m.parent.type===\"atrule\"})});let h;typeof e.preserve==\"function\"?h=e.preserve(p):h=e.preserve,h?h===\"computed\"&&(p.value=d.value):p.remove(),c.nodes.length<=0&&s.push(c)});var f=[];r.walk(function(p){if(p.nodes!==void 0){var c=p.nodes.some(function(d){if(d.type===\"decl\"){var h=d;if(gp.RE_VAR_FUNC.test(h.value)&&!yp.test(h.prop))return!0}return!1});c&&f.push(p)}}),f.forEach(function(p){var c=[].concat(p);p.type===\"rule\"&&p.selectors.length>1&&(c=p.selectors.reverse().map(function(d){var h=p.cloneAfter();return h.selector=d,h}),p.remove()),c.forEach(function(d){d.nodes.slice(0).forEach(function(h){if(h.type===\"decl\"){var y=h;tb(y,l,e.preserve,e.preserveAtRulesOrder,u)}})})}),s.forEach(nb),o.forEach(function(p){p.remove()})}}};Oa.exports.postcss=!0});var Ra=t=>({extractCSS(e,r=!1){let n=/(?:[\\s\\r\\n]*)?(?<prop>[\\w-]+)\\s*:\\s*(?<value>[^;\\r\\n]+)/gm,i,a={};for(;(i=n.exec(e))!==null;){let{prop:s,value:o}=i.groups;a[s]=o}return Object.entries(a).reduce((s,[o,l])=>s+`${r?\"\t\":\"\"}${o}: ${l}; \n\\r`,\"\")},merge(){let e=/(?<=\\.)[^{]+\\s*\\{(?<content>[^{}]*(?:(?<=;)\\s*\\n\\r?[^{}]*)*)\\s*\\}/gm,r,n=\"\";for(;(r=e.exec(t))!==null;){let{content:o}=r.groups;n+=o}let i=this.extractCSS(n),a=/(?<media>@media\\s*\\([^\\)]*\\))\\s*\\{(?<content>[^\\}]*)\\}/gm,s;for(;(s=a.exec(t))!==null;){let{media:o,content:l}=s.groups;i+=`\n\\r${o} {\n\\r${this.extractCSS(l,!0)}}\n\\r`}return t=i,this},removeUndefined(){let e=/^[^{}]*(?:[.#][a-zA-Z0-9_-]+)[^{]*{[^}]*\\b(?:[a-z-]+):\\s*undefined\\s*;?[^}]*}/gm;return t=t.replace(e,\"\"),this},combineMediaQueries(){let e=new RegExp(\"@media\\\\s*(?<conditions>\\\\([^)]+\\\\))\\\\s*{(?<content>(?:[^{}]+|{(?:[^{}]+|{[^{}]*})*})+)}\",\"gs\"),r=new Map,n=a=>a.replace(e,(s,o,l)=>{var f;let u=(f=r.get(o))!=null?f:\"\";return r.set(o,u+n(l.trim())),n(l),\"\"}),i=[];return i.push(n(t)),i.push(...Array.from(r,([a,s])=>`@media${a}{${s}}`)),t=i.join(\"\"),this},minify(){return t=t.replace(/\\/\\*[\\s\\S]*?\\*\\//gm,\"\").replace(/;\\s+/gm,\";\").replace(/:\\s+/gm,\":\").replace(/\\)\\s*{/gm,\"){\").replace(/\\s+\\(/gm,\"(\").replace(/{\\s+/gm,\"{\").replace(/}\\s+/gm,\"}\").replace(/\\s*{/gm,\"{\").replace(/;?\\s*}/gm,\"}\"),this},fixRGB(){let e=/rgb\\(\\s*(?<red>\\d+)\\s*(?<green>\\d+)\\s*(?<blue>\\d+)(?:\\s*\\/\\s*(?<alpha>[\\d%.]+))?\\s*\\)/gm,r;for(;(r=e.exec(t))!==null;){let[n]=r,{red:i,green:a,blue:s,alpha:o=1}=r.groups;t=t.replace(n,`rgb(${i},${a},${s}${o===\"1\"?\"\":`,${o}`})`)}return this},removeMediaQueries(){return t=t.replace(/@media[^\\{]+\\{[^@]+\\}/g,\"\"),this},get(){return t}});function $n(){}var L={info:$n,warn:$n,risk:$n};function Un(t){let e=new Set,r=new Set,n=new Set;if(t.walkAtRules(i=>{i.name===\"apply\"&&n.add(i),i.name===\"import\"&&(i.params==='\"tailwindcss/base\"'||i.params===\"'tailwindcss/base'\"?(i.name=\"tailwind\",i.params=\"base\"):i.params==='\"tailwindcss/components\"'||i.params===\"'tailwindcss/components'\"?(i.name=\"tailwind\",i.params=\"components\"):i.params==='\"tailwindcss/utilities\"'||i.params===\"'tailwindcss/utilities'\"?(i.name=\"tailwind\",i.params=\"utilities\"):(i.params==='\"tailwindcss/screens\"'||i.params===\"'tailwindcss/screens'\"||i.params==='\"tailwindcss/variants\"'||i.params===\"'tailwindcss/variants'\")&&(i.name=\"tailwind\",i.params=\"variants\")),i.name===\"tailwind\"&&(i.params===\"screens\"&&(i.params=\"variants\"),e.add(i.params)),[\"layer\",\"responsive\",\"variants\"].includes(i.name)&&([\"responsive\",\"variants\"].includes(i.name)&&L.warn(`${i.name}-at-rule-deprecated`,[`The \\`@${i.name}\\` directive has been deprecated in Tailwind CSS v3.0.`,\"Use `@layer utilities` or `@layer components` instead.\",\"https://tailwindcss.com/docs/upgrade-guide#replace-variants-with-layer\"]),r.add(i))}),!e.has(\"base\")||!e.has(\"components\")||!e.has(\"utilities\")){for(let i of r)if(i.name===\"layer\"&&[\"base\",\"components\",\"utilities\"].includes(i.params)){if(!e.has(i.params))throw i.error(`\\`@layer ${i.params}\\` is used but no matching \\`@tailwind ${i.params}\\` directive is present.`)}else if(i.name===\"responsive\"){if(!e.has(\"utilities\"))throw i.error(\"`@responsive` is used but `@tailwind utilities` is missing.\")}else if(i.name===\"variants\"&&!e.has(\"utilities\"))throw i.error(\"`@variants` is used but `@tailwind utilities` is missing.\")}return{tailwindDirectives:e,applyDirectives:n}}vr();var $f=H(Na());var $a=\"3.3.2\";var zn={name:\"tailwindcss\",version:$a,description:\"A utility-first CSS framework for rapidly building custom user interfaces.\",license:\"MIT\",main:\"lib/index.js\",types:\"types/index.d.ts\",repository:\"https://github.com/tailwindlabs/tailwindcss.git\",bugs:\"https://github.com/tailwindlabs/tailwindcss/issues\",homepage:\"https://tailwindcss.com\",bin:{tailwind:\"lib/cli.js\",tailwindcss:\"lib/cli.js\"},tailwindcss:{engine:\"stable\"},scripts:{prebuild:\"npm run generate && rimraf lib\",build:`swc src --out-dir lib --copy-files --config jsc.transform.optimizer.globals.vars.__OXIDE__='\"false\"'`,postbuild:\"esbuild lib/cli-peer-dependencies.js --bundle --platform=node --outfile=peers/index.js --define:process.env.CSS_TRANSFORMER_WASM=false\",\"rebuild-fixtures\":\"npm run build && node -r @swc/register scripts/rebuildFixtures.js\",style:\"eslint .\",pretest:\"npm run generate\",test:\"jest\",\"test:integrations\":\"npm run test --prefix ./integrations\",\"install:integrations\":\"node scripts/install-integrations.js\",\"generate:plugin-list\":\"node -r @swc/register scripts/create-plugin-list.js\",\"generate:types\":\"node -r @swc/register scripts/generate-types.js\",generate:\"npm run generate:plugin-list && npm run generate:types\",\"release-channel\":\"node ./scripts/release-channel.js\",\"release-notes\":\"node ./scripts/release-notes.js\",prepublishOnly:\"npm install --force && npm run build\"},files:[\"src/*\",\"cli/*\",\"lib/*\",\"peers/*\",\"scripts/*.js\",\"stubs/*\",\"nesting/*\",\"types/**/*\",\"*.d.ts\",\"*.css\",\"*.js\"],devDependencies:{\"@swc/cli\":\"^0.1.62\",\"@swc/core\":\"^1.3.55\",\"@swc/jest\":\"^0.2.26\",\"@swc/register\":\"^0.1.10\",autoprefixer:\"^10.4.14\",browserslist:\"^4.21.5\",concurrently:\"^8.0.1\",cssnano:\"^6.0.0\",esbuild:\"^0.17.18\",eslint:\"^8.39.0\",\"eslint-config-prettier\":\"^8.8.0\",\"eslint-plugin-prettier\":\"^4.2.1\",jest:\"^29.5.0\",\"jest-diff\":\"^29.5.0\",lightningcss:\"1.18.0\",prettier:\"^2.8.8\",rimraf:\"^5.0.0\",\"source-map-js\":\"^1.0.2\",turbo:\"^1.9.3\"},dependencies:{\"@alloc/quick-lru\":\"^5.2.0\",arg:\"^5.0.2\",chokidar:\"^3.5.3\",didyoumean:\"^1.2.2\",dlv:\"^1.1.3\",\"fast-glob\":\"^3.2.12\",\"glob-parent\":\"^6.0.2\",\"is-glob\":\"^4.0.3\",jiti:\"^1.18.2\",lilconfig:\"^2.1.0\",micromatch:\"^4.0.5\",\"normalize-path\":\"^3.0.0\",\"object-hash\":\"^3.0.0\",picocolors:\"^1.0.0\",postcss:\"^8.4.23\",\"postcss-import\":\"^15.1.0\",\"postcss-js\":\"^4.0.1\",\"postcss-load-config\":\"^4.0.1\",\"postcss-nested\":\"^6.0.1\",\"postcss-selector-parser\":\"^6.0.11\",\"postcss-value-parser\":\"^4.2.0\",resolve:\"^1.22.2\",sucrase:\"^3.32.0\"},browserslist:[\"> 1%\",\"not edge <= 18\",\"not ie 11\",\"not op_mini all\"],jest:{testTimeout:3e4,setupFilesAfterEnv:[\"<rootDir>/jest/customMatchers.js\"],testPathIgnorePatterns:[\"/node_modules/\",\"/integrations/\",\"/standalone-cli/\",\"\\\\.test\\\\.skip\\\\.js$\"],transformIgnorePatterns:[\"node_modules/(?!lightningcss)\"],transform:{\"\\\\.js$\":\"@swc/jest\",\"\\\\.ts$\":\"@swc/jest\"}},engines:{node:\">=14.0.0\"}};var Vn=typeof process<\"u\"?{NODE_ENV:\"production\",DEBUG:Dp(void 0),ENGINE:zn.tailwindcss.engine}:{NODE_ENV:\"production\",DEBUG:!1,ENGINE:zn.tailwindcss.engine};var Wn=new Map;var ke=new String(\"*\"),mt=Symbol(\"__NONE__\");function Dp(t){if(t===void 0)return!1;if(t===\"true\"||t===\"1\")return!0;if(t===\"false\"||t===\"0\")return!1;if(t===\"*\")return!0;let e=t.split(\",\").map(r=>r.split(\":\")[0]);return e.includes(\"-tailwindcss\")?!1:!!e.includes(\"tailwindcss\")}var $=H(Ke(),1),R=$.default,Kb=$.default.stringify,Zb=$.default.fromJSON,ex=$.default.plugin,tx=$.default.parse,rx=$.default.list,nx=$.default.document,ix=$.default.comment,sx=$.default.atRule,ax=$.default.rule,ox=$.default.decl,lx=$.default.root,ux=$.default.CssSyntaxError,fx=$.default.Declaration,cx=$.default.Container,px=$.default.Processor,dx=$.default.Document,hx=$.default.Comment,mx=$.default.Warning,gx=$.default.AtRule,yx=$.default.Result,vx=$.default.Input,wx=$.default.Rule,bx=$.default.Root,xx=$.default.Node;var wn=H(ve());var $u=H(Su());var rt=H(qu(),1),tn=rt.default,jx=rt.default.objectify,zx=rt.default.parse,Vx=rt.default.async,Wx=rt.default.sync;function nt(t){return Array.isArray(t)?t.flatMap(e=>R([(0,$u.default)({bubble:[\"screen\"]})]).process(e,{parser:tn}).root.nodes):nt([t])}function X(t){if(Object.prototype.toString.call(t)!==\"[object Object]\")return!1;let e=Object.getPrototypeOf(t);return e===null||e===Object.prototype}var Uu=H(ve());function it(t,e,r=!1){if(t===\"\")return e;let n=typeof e==\"string\"?(0,Uu.default)().astSync(e):e;return n.walkClasses(i=>{let a=i.value,s=r&&a.startsWith(\"-\");i.value=s?`-${t}${a.slice(1)}`:`${t}${a}`}),typeof e==\"string\"?n.toString():n}function Be(t){return t.replace(/\\\\,/g,\"\\\\2c \")}var ks={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]};var C0=/^#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i,A0=/^#([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i,Pe=/(?:\\d+|\\d*\\.\\d+)%?/,rn=/(?:\\s*,\\s*|\\s+)/,ju=/\\s*[,/]\\s*/,Ie=/var\\(--(?:[^ )]*?)\\)/,_0=new RegExp(`^(rgba?)\\\\(\\\\s*(${Pe.source}|${Ie.source})(?:${rn.source}(${Pe.source}|${Ie.source}))?(?:${rn.source}(${Pe.source}|${Ie.source}))?(?:${ju.source}(${Pe.source}|${Ie.source}))?\\\\s*\\\\)$`),T0=new RegExp(`^(hsla?)\\\\(\\\\s*((?:${Pe.source})(?:deg|rad|grad|turn)?|${Ie.source})(?:${rn.source}(${Pe.source}|${Ie.source}))?(?:${rn.source}(${Pe.source}|${Ie.source}))?(?:${ju.source}(${Pe.source}|${Ie.source}))?\\\\s*\\\\)$`);function ir(t,{loose:e=!1}={}){var a,s,o;if(typeof t!=\"string\")return null;if(t=t.trim(),t===\"transparent\")return{mode:\"rgb\",color:[\"0\",\"0\",\"0\"],alpha:\"0\"};if(t in ks)return{mode:\"rgb\",color:ks[t].map(l=>l.toString())};let r=t.replace(A0,(l,u,f,p,c)=>[\"#\",u,u,f,f,p,p,c?c+c:\"\"].join(\"\")).match(C0);if(r!==null)return{mode:\"rgb\",color:[parseInt(r[1],16),parseInt(r[2],16),parseInt(r[3],16)].map(l=>l.toString()),alpha:r[4]?(parseInt(r[4],16)/255).toString():void 0};let n=(a=t.match(_0))!=null?a:t.match(T0);if(n===null)return null;let i=[n[2],n[3],n[4]].filter(Boolean).map(l=>l.toString());return i.length===2&&i[0].startsWith(\"var(\")?{mode:n[1],color:[i[0]],alpha:i[1]}:!e&&i.length!==3||i.length<3&&!i.some(l=>/^var\\(.*?\\)$/.test(l))?null:{mode:n[1],color:i,alpha:(o=(s=n[5])==null?void 0:s.toString)==null?void 0:o.call(s)}}function Os({mode:t,color:e,alpha:r}){let n=r!==void 0;return t===\"rgba\"||t===\"hsla\"?`${t}(${e.join(\", \")}${n?`, ${r}`:\"\"})`:`${t}(${e.join(\" \")}${n?` / ${r}`:\"\"})`}function we(t,e,r){if(typeof t==\"function\")return t({opacityValue:e});let n=ir(t,{loose:!0});return n===null?r:Os({...n,alpha:e})}function Z({color:t,property:e,variable:r}){let n=[].concat(e);if(typeof t==\"function\")return{[r]:\"1\",...Object.fromEntries(n.map(a=>[a,t({opacityVariable:r,opacityValue:`var(${r})`})]))};let i=ir(t);return i===null?Object.fromEntries(n.map(a=>[a,t])):i.alpha!==void 0?Object.fromEntries(n.map(a=>[a,t])):{[r]:\"1\",...Object.fromEntries(n.map(a=>[a,Os({...i,alpha:`var(${r})`})]))}}function ee(t,e){let r=[],n=[],i=0,a=!1;for(let s=0;s<t.length;s++){let o=t[s];r.length===0&&o===e[0]&&!a&&(e.length===1||t.slice(s,s+e.length)===e)&&(n.push(t.slice(i,s)),i=s+e.length),a?a=!1:o===\"\\\\\"&&(a=!0),o===\"(\"||o===\"[\"||o===\"{\"?r.push(o):(o===\")\"&&r[r.length-1]===\"(\"||o===\"]\"&&r[r.length-1]===\"[\"||o===\"}\"&&r[r.length-1]===\"{\")&&r.pop()}return n.push(t.slice(i)),n}var P0=new Set([\"inset\",\"inherit\",\"initial\",\"revert\",\"unset\"]),I0=/\\ +(?![^(]*\\))/g,zu=/^-?(\\d+|\\.\\d+)(.*?)$/g;function nn(t){return ee(t,\",\").map(r=>{let n=r.trim(),i={raw:n},a=n.split(I0),s=new Set;for(let o of a)zu.lastIndex=0,!s.has(\"KEYWORD\")&&P0.has(o)?(i.keyword=o,s.add(\"KEYWORD\")):zu.test(o)?s.has(\"X\")?s.has(\"Y\")?s.has(\"BLUR\")?s.has(\"SPREAD\")||(i.spread=o,s.add(\"SPREAD\")):(i.blur=o,s.add(\"BLUR\")):(i.y=o,s.add(\"Y\")):(i.x=o,s.add(\"X\")):i.color?(i.unknown||(i.unknown=[]),i.unknown.push(o)):i.color=o;return i.valid=i.x!==void 0&&i.y!==void 0,i})}function Vu(t){return t.map(e=>e.valid?[e.keyword,e.x,e.y,e.blur,e.spread,e.color].filter(Boolean).join(\" \"):e.raw).join(\", \")}var R0=[\"min\",\"max\",\"clamp\",\"calc\"];function Es(t){return R0.some(e=>new RegExp(`^${e}\\\\(.*\\\\)`).test(t))}var Wu=\"--tw-placeholder\",D0=new RegExp(Wu,\"g\");function z(t,e=!0){return t.startsWith(\"--\")?`var(${t})`:t.includes(\"url(\")?t.split(/(url\\(.*?\\))/g).filter(Boolean).map(r=>/^url\\(.*?\\)$/.test(r)?r:z(r,!1)).join(\"\"):(t=t.replace(/([^\\\\])_+/g,(r,n)=>n+\" \".repeat(r.length-1)).replace(/^_/g,\" \").replace(/\\\\_/g,\"_\"),e&&(t=t.trim()),t=t.replace(/(calc|min|max|clamp)\\(.+\\)/g,r=>{let n=[];return r.replace(/var\\((--.+?)[,)]/g,(i,a)=>(n.push(a),i.replace(a,Wu))).replace(/(-?\\d*\\.?\\d(?!\\b-\\d.+[,)](?![^+\\-/*])\\D)(?:%|[a-z]+)?|\\))([+\\-/*])/g,\"$1 $2 \").replace(D0,()=>n.shift())}),t)}function Cs(t){return t.startsWith(\"url(\")}function As(t){return!isNaN(Number(t))||Es(t)}function sr(t){return t.endsWith(\"%\")&&As(t.slice(0,-1))||Es(t)}var M0=[\"cm\",\"mm\",\"Q\",\"in\",\"pc\",\"pt\",\"px\",\"em\",\"ex\",\"ch\",\"rem\",\"lh\",\"rlh\",\"vw\",\"vh\",\"vmin\",\"vmax\",\"vb\",\"vi\",\"svw\",\"svh\",\"lvw\",\"lvh\",\"dvw\",\"dvh\",\"cqw\",\"cqh\",\"cqi\",\"cqb\",\"cqmin\",\"cqmax\"],F0=`(?:${M0.join(\"|\")})`;function ar(t){return t===\"0\"||new RegExp(`^[+-]?[0-9]*.?[0-9]+(?:[eE][+-]?[0-9]+)?${F0}$`).test(t)||Es(t)}var L0=new Set([\"thin\",\"medium\",\"thick\"]);function Bu(t){return L0.has(t)}function Gu(t){let e=nn(z(t));for(let r of e)if(!r.valid)return!1;return!0}function Yu(t){let e=0;return ee(t,\"_\").every(n=>(n=z(n),n.startsWith(\"var(\")?!0:ir(n,{loose:!0})!==null?(e++,!0):!1))?e>0:!1}function Hu(t){let e=0;return ee(t,\",\").every(n=>(n=z(n),n.startsWith(\"var(\")?!0:Cs(n)||q0(n)||[\"element(\",\"image(\",\"cross-fade(\",\"image-set(\"].some(i=>n.startsWith(i))?(e++,!0):!1))?e>0:!1}var N0=new Set([\"linear-gradient\",\"radial-gradient\",\"repeating-linear-gradient\",\"repeating-radial-gradient\",\"conic-gradient\"]);function q0(t){t=z(t);for(let e of N0)if(t.startsWith(`${e}(`))return!0;return!1}var $0=new Set([\"center\",\"top\",\"right\",\"bottom\",\"left\"]);function Qu(t){let e=0;return ee(t,\"_\").every(n=>(n=z(n),n.startsWith(\"var(\")?!0:$0.has(n)||ar(n)||sr(n)?(e++,!0):!1))?e>0:!1}function Ju(t){let e=0;return ee(t,\",\").every(n=>(n=z(n),n.startsWith(\"var(\")?!0:n.includes(\" \")&&!/(['\"])([^\"']+)\\1/g.test(n)||/^\\d/g.test(n)?!1:(e++,!0)))?e>0:!1}var U0=new Set([\"serif\",\"sans-serif\",\"monospace\",\"cursive\",\"fantasy\",\"system-ui\",\"ui-serif\",\"ui-sans-serif\",\"ui-monospace\",\"ui-rounded\",\"math\",\"emoji\",\"fangsong\"]);function Xu(t){return U0.has(t)}var j0=new Set([\"xx-small\",\"x-small\",\"small\",\"medium\",\"large\",\"x-large\",\"x-large\",\"xxx-large\"]);function Ku(t){return j0.has(t)}var z0=new Set([\"larger\",\"smaller\"]);function Zu(t){return z0.has(t)}function Re(t){if(t=`${t}`,t===\"0\")return\"0\";if(/^[+-]?(\\d+|\\d*\\.\\d+)(e[+-]?\\d+)?(%|\\w+)?$/.test(t))return t.replace(/^[+-]?/,r=>r===\"-\"?\"\":\"-\");let e=[\"var\",\"calc\",\"min\",\"max\",\"clamp\"];for(let r of e)if(t.includes(`${r}(`))return`calc(${t} * -1)`}function ef(t){let e=[\"cover\",\"contain\"];return ee(t,\",\").every(r=>{let n=ee(r,\"_\").filter(Boolean);return n.length===1&&e.includes(n[0])?!0:n.length!==1&&n.length!==2?!1:n.every(i=>ar(i)||sr(i)||i===\"auto\")})}Gn();var tf={optimizeUniversalDefaults:!1,generalizedModifiers:!0,get disableColorOpacityUtilitiesByDefault(){},get relativeContentPathsByDefault(){}},sn={future:[\"hoverOnlyWhenSupported\",\"respectDefaultRingColorOpacity\",\"disableColorOpacityUtilitiesByDefault\",\"relativeContentPathsByDefault\"],experimental:[\"optimizeUniversalDefaults\",\"generalizedModifiers\"]};function G(t,e){var r,n,i,a,s,o;return sn.future.includes(e)?t.future===\"all\"||((i=(n=(r=t==null?void 0:t.future)==null?void 0:r[e])!=null?n:tf[e])!=null?i:!1):sn.experimental.includes(e)?t.experimental===\"all\"||((o=(s=(a=t==null?void 0:t.experimental)==null?void 0:a[e])!=null?s:tf[e])!=null?o:!1):!1}function rf(t){var e;return t.experimental===\"all\"?sn.experimental:Object.keys((e=t==null?void 0:t.experimental)!=null?e:{}).filter(r=>sn.experimental.includes(r)&&t.experimental[r])}function nf(t){if(1===void 0&&rf(t).length>0){let e=rf(t).map(r=>Bn.yellow(r)).join(\", \");L.warn(\"experimental-flags-enabled\",[`You have enabled experimental features: ${e}`,\"Experimental features in Tailwind CSS are not covered by semver, may introduce breaking changes, and can change at any time.\"])}}function af(t,e){t.walkClasses(r=>{r.value=e(r.value),r.raws&&r.raws.value&&(r.raws.value=Be(r.raws.value))})}function of(t,e){if(!De(t))return;let r=t.slice(1,-1);if(!!e(r))return z(r)}function V0(t,e={},r){let n=e[t];if(n!==void 0)return Re(n);if(De(t)){let i=of(t,r);return i===void 0?void 0:Re(i)}}function an(t,e={},{validate:r=()=>!0}={}){var i;let n=(i=e.values)==null?void 0:i[t];return n!==void 0?n:e.supportsNegativeValues&&t.startsWith(\"-\")?V0(t.slice(1),e.values,r):of(t,r)}function De(t){return t.startsWith(\"[\")&&t.endsWith(\"]\")}function lf(t){let e=t.lastIndexOf(\"/\");return e===-1||e===t.length-1?[t,void 0]:De(t)&&!t.includes(\"]/[\")?[t,void 0]:[t.slice(0,e),t.slice(e+1)]}function st(t){if(typeof t==\"string\"&&t.includes(\"<alpha-value>\")){let e=t;return({opacityValue:r=1})=>e.replace(\"<alpha-value>\",r)}return t}function uf(t){return z(t.slice(1,-1))}function W0(t,e={},{tailwindConfig:r={}}={}){var a,s,o,l,u,f;if(((a=e.values)==null?void 0:a[t])!==void 0)return st((s=e.values)==null?void 0:s[t]);let[n,i]=lf(t);if(i!==void 0){let p=(l=(o=e.values)==null?void 0:o[n])!=null?l:De(n)?n.slice(1,-1):void 0;return p===void 0?void 0:(p=st(p),De(i)?we(p,uf(i)):((f=(u=r.theme)==null?void 0:u.opacity)==null?void 0:f[i])===void 0?void 0:we(p,r.theme.opacity[i]))}return an(t,e,{validate:Yu})}function B0(t,e={}){var r;return(r=e.values)==null?void 0:r[t]}function oe(t){return(e,r)=>an(e,r,{validate:t})}var _s={any:an,color:W0,url:oe(Cs),image:oe(Hu),length:oe(ar),percentage:oe(sr),position:oe(Qu),lookup:B0,\"generic-name\":oe(Xu),\"family-name\":oe(Ju),number:oe(As),\"line-width\":oe(Bu),\"absolute-size\":oe(Ku),\"relative-size\":oe(Zu),shadow:oe(Gu),size:oe(ef)},sf=Object.keys(_s);function G0(t,e){let r=t.indexOf(e);return r===-1?[void 0,t]:[t.slice(0,r),t.slice(r+1)]}function Ts(t,e,r,n){if(r.values&&e in r.values)for(let{type:a}of t!=null?t:[]){let s=_s[a](e,r,{tailwindConfig:n});if(s!==void 0)return[s,a,null]}if(De(e)){let a=e.slice(1,-1),[s,o]=G0(a,\":\");if(!/^[\\w-_]+$/g.test(s))o=a;else if(s!==void 0&&!sf.includes(s))return[];if(o.length>0&&sf.includes(s))return[an(`[${o}]`,r),s,null]}let i=Ps(t,e,r,n);for(let a of i)return a;return[]}function*Ps(t,e,r,n){var l,u;let i=G(n,\"generalizedModifiers\"),[a,s]=lf(e);if(i&&r.modifiers!=null&&(r.modifiers===\"any\"||typeof r.modifiers==\"object\"&&(s&&De(s)||s in r.modifiers))||(a=e,s=void 0),s!==void 0&&a===\"\"&&(a=\"DEFAULT\"),s!==void 0&&typeof r.modifiers==\"object\"){let f=(u=(l=r.modifiers)==null?void 0:l[s])!=null?u:null;f!==null?s=f:De(s)&&(s=uf(s))}for(let{type:f}of t!=null?t:[]){let p=_s[f](a,r,{tailwindConfig:n});p!==void 0&&(yield[p,f,s!=null?s:null])}}var be=H(ve()),hf=H(jr());var ff=H(ve());function re(t){var r,n;let e=ff.default.className();return e.value=t,Be((n=(r=e==null?void 0:e.raws)==null?void 0:r.value)!=null?n:e.value)}var Is={\"::after\":[\"terminal\",\"jumpable\"],\"::backdrop\":[\"terminal\"],\"::before\":[\"terminal\",\"jumpable\"],\"::cue\":[\"terminal\"],\"::cue-region\":[\"terminal\"],\"::first-letter\":[\"terminal\",\"jumpable\"],\"::first-line\":[\"terminal\",\"jumpable\"],\"::grammar-error\":[\"terminal\"],\"::marker\":[\"terminal\"],\"::part\":[\"terminal\",\"actionable\"],\"::placeholder\":[\"terminal\"],\"::selection\":[\"terminal\"],\"::slotted\":[\"terminal\"],\"::spelling-error\":[\"terminal\"],\"::target-text\":[\"terminal\"],\"::file-selector-button\":[\"terminal\",\"actionable\"],\"::-webkit-progress-bar\":[\"terminal\",\"actionable\"],\"::-webkit-scrollbar\":[\"terminal\",\"actionable\"],\"::-webkit-scrollbar-button\":[\"terminal\",\"actionable\"],\"::-webkit-scrollbar-thumb\":[\"terminal\",\"actionable\"],\"::-webkit-scrollbar-track\":[\"terminal\",\"actionable\"],\"::-webkit-scrollbar-track-piece\":[\"terminal\",\"actionable\"],\"::-webkit-scrollbar-corner\":[\"terminal\",\"actionable\"],\"::-webkit-resizer\":[\"terminal\",\"actionable\"],\":after\":[\"terminal\",\"jumpable\"],\":before\":[\"terminal\",\"jumpable\"],\":first-letter\":[\"terminal\",\"jumpable\"],\":first-line\":[\"terminal\",\"jumpable\"],__default__:[\"actionable\"]};function at(t){let[e]=cf(t);return e.forEach(([r,n])=>r.removeChild(n)),t.nodes.push(...e.map(([,r])=>r)),t}function cf(t){var n;let e=[],r=null;for(let i of t.nodes)if(i.type===\"combinator\")e=e.filter(([,a])=>Rs(a).includes(\"jumpable\")),r=null;else if(i.type===\"pseudo\"){Y0(i)?(r=i,e.push([t,i,null])):r&&H0(i,r)?e.push([t,i,r]):r=null;for(let a of(n=i.nodes)!=null?n:[]){let[s,o]=cf(a);r=o||r,e.push(...s)}}return[e,r]}function pf(t){return t.value.startsWith(\"::\")||Is[t.value]!==void 0}function Y0(t){return pf(t)&&Rs(t).includes(\"terminal\")}function H0(t,e){return t.type!==\"pseudo\"||pf(t)?!1:Rs(e).includes(\"actionable\")}function Rs(t){var e;return(e=Is[t.value])!=null?e:Is.__default__}var Ds=\":merge\";function ot(t,{context:e,candidate:r}){var s;let n=(s=e==null?void 0:e.tailwindConfig.prefix)!=null?s:\"\",i=t.map(o=>{let l=(0,be.default)().astSync(o.format);return{...o,ast:o.isArbitraryVariant?l:it(n,l)}}),a=be.default.root({nodes:[be.default.selector({nodes:[be.default.className({value:re(r)})]})]});for(let{ast:o}of i)[a,o]=J0(a,o),o.walkNesting(l=>l.replaceWith(...a.nodes[0].nodes)),a=o;return a}function df(t){let e=[];for(;t.prev()&&t.prev().type!==\"combinator\";)t=t.prev();for(;t&&t.type!==\"combinator\";)e.push(t),t=t.next();return e}function Q0(t){return t.sort((e,r)=>e.type===\"tag\"&&r.type===\"class\"?-1:e.type===\"class\"&&r.type===\"tag\"?1:e.type===\"class\"&&r.type===\"pseudo\"&&r.value.startsWith(\"::\")?-1:e.type===\"pseudo\"&&e.value.startsWith(\"::\")&&r.type===\"class\"?1:t.index(e)-t.index(r)),t}function Ms(t,e){let r=!1;t.walk(n=>{if(n.type===\"class\"&&n.value===e)return r=!0,!1}),r||t.remove()}function on(t,e,{context:r,candidate:n,base:i}){var f,p;let a=(p=(f=r==null?void 0:r.tailwindConfig)==null?void 0:f.separator)!=null?p:\":\";i=i!=null?i:n.split(new RegExp(`\\\\${a}(?![^[]*\\\\])`)).pop();let s=(0,be.default)().astSync(t);s.walkClasses(c=>{c.raws&&c.value.includes(i)&&(c.raws.value=re((0,hf.default)(c.raws.value)))}),s.each(c=>Ms(c,i));let o=Array.isArray(e)?ot(e,{context:r,candidate:n}):e;if(o===null)return s.toString();let l=be.default.comment({value:\"/*__simple__*/\"}),u=be.default.comment({value:\"/*__simple__*/\"});return s.walkClasses(c=>{if(c.value!==i)return;let d=c.parent,h=o.nodes[0].nodes;if(d.nodes.length===1){c.replaceWith(...h);return}let y=df(c);d.insertBefore(y[0],l),d.insertAfter(y[y.length-1],u);for(let g of h)d.insertBefore(y[0],g.clone());c.remove(),y=df(l);let m=d.index(l);d.nodes.splice(m,y.length,...Q0(be.default.selector({nodes:y})).nodes),l.remove(),u.remove()}),s.walkPseudos(c=>{c.value===Ds&&c.replaceWith(c.nodes)}),s.each(c=>at(c)),s.toString()}function J0(t,e){let r=[];return t.walkPseudos(n=>{n.value===Ds&&r.push({pseudo:n,value:n.nodes[0].toString()})}),e.walkPseudos(n=>{if(n.value!==Ds)return;let i=n.nodes[0].toString(),a=r.find(u=>u.value===i);if(!a)return;let s=[],o=n.next();for(;o&&o.type!==\"combinator\";)s.push(o),o=o.next();let l=o;a.pseudo.parent.insertAfter(a.pseudo,be.default.selector({nodes:s.map(u=>u.clone())})),n.remove(),s.forEach(u=>u.remove()),l&&l.type===\"combinator\"&&l.remove()}),[t,e]}function Fs(t){return Be(`.${re(t)}`)}function ln(t,e){return Fs(or(t,e))}function or(t,e){return e===\"DEFAULT\"?t:e===\"-\"||e===\"-DEFAULT\"?`-${t}`:e.startsWith(\"-\")?`-${t}${e}`:e.startsWith(\"/\")?`${t}${e}`:`${t}-${e}`}var Cf=H(qs()),Vs=H(ve());function Ce(t){return[\"fontSize\",\"outline\"].includes(t)?e=>(typeof e==\"function\"&&(e=e({})),Array.isArray(e)&&(e=e[0]),e):t===\"fontFamily\"?e=>{typeof e==\"function\"&&(e=e({}));let r=Array.isArray(e)&&X(e[1])?e[0]:e;return Array.isArray(r)?r.join(\", \"):r}:[\"boxShadow\",\"transitionProperty\",\"transitionDuration\",\"transitionDelay\",\"transitionTimingFunction\",\"backgroundImage\",\"backgroundSize\",\"backgroundColor\",\"cursor\",\"animation\"].includes(t)?e=>(typeof e==\"function\"&&(e=e({})),Array.isArray(e)&&(e=e.join(\", \")),e):[\"gridTemplateColumns\",\"gridTemplateRows\",\"objectPosition\"].includes(t)?e=>(typeof e==\"function\"&&(e=e({})),typeof e==\"string\"&&(e=R.list.comma(e).join(\" \")),e):(e,r={})=>(typeof e==\"function\"&&(e=e(r)),e)}vr();kt();function T(t,e=[[t,[t]]],{filterDefault:r=!1,...n}={}){let i=Ce(t);return function({matchUtilities:a,theme:s}){var o;for(let l of e){let u=Array.isArray(l[0])?l:[l];a(u.reduce((f,[p,c])=>Object.assign(f,{[p]:d=>c.reduce((h,y)=>Array.isArray(y)?Object.assign(h,{[y[0]]:y[1]}):Object.assign(h,{[y]:i(d)}),{})}),{}),{...n,values:r?Object.fromEntries(Object.entries((o=s(t))!=null?o:{}).filter(([f])=>f!==\"DEFAULT\")):s(t)})}}}function Me(t){return t=Array.isArray(t)?t:[t],t.map(e=>{let r=e.values.map(n=>n.raw!==void 0?n.raw:[n.min&&`(min-width: ${n.min})`,n.max&&`(max-width: ${n.max})`].filter(Boolean).join(\" and \"));return e.not?`not all and ${r}`:r}).join(\", \")}var X0=new Set([\"normal\",\"reverse\",\"alternate\",\"alternate-reverse\"]),K0=new Set([\"running\",\"paused\"]),Z0=new Set([\"none\",\"forwards\",\"backwards\",\"both\"]),ev=new Set([\"infinite\"]),tv=new Set([\"linear\",\"ease\",\"ease-in\",\"ease-out\",\"ease-in-out\",\"step-start\",\"step-end\"]),rv=[\"cubic-bezier\",\"steps\"],nv=/\\,(?![^(]*\\))/g,iv=/\\ +(?![^(]*\\))/g,mf=/^(-?[\\d.]+m?s)$/,sv=/^(\\d+)$/;function $s(t){return t.split(nv).map(r=>{let n=r.trim(),i={value:n},a=n.split(iv),s=new Set;for(let o of a)!s.has(\"DIRECTIONS\")&&X0.has(o)?(i.direction=o,s.add(\"DIRECTIONS\")):!s.has(\"PLAY_STATES\")&&K0.has(o)?(i.playState=o,s.add(\"PLAY_STATES\")):!s.has(\"FILL_MODES\")&&Z0.has(o)?(i.fillMode=o,s.add(\"FILL_MODES\")):!s.has(\"ITERATION_COUNTS\")&&(ev.has(o)||sv.test(o))?(i.iterationCount=o,s.add(\"ITERATION_COUNTS\")):!s.has(\"TIMING_FUNCTION\")&&tv.has(o)||!s.has(\"TIMING_FUNCTION\")&&rv.some(l=>o.startsWith(`${l}(`))?(i.timingFunction=o,s.add(\"TIMING_FUNCTION\")):!s.has(\"DURATION\")&&mf.test(o)?(i.duration=o,s.add(\"DURATION\")):!s.has(\"DELAY\")&&mf.test(o)?(i.delay=o,s.add(\"DELAY\")):s.has(\"NAME\")?(i.unknown||(i.unknown=[]),i.unknown.push(o)):(i.name=o,s.add(\"NAME\"));return i})}var gf=t=>Object.assign({},...Object.entries(t!=null?t:{}).flatMap(([e,r])=>typeof r==\"object\"?Object.entries(gf(r)).map(([n,i])=>({[e+(n===\"DEFAULT\"?\"\":`-${n}`)]:i})):[{[`${e}`]:r}])),Q=gf;function M(t){return typeof t==\"function\"?t({}):t}function Fe(t,e=!0){return Array.isArray(t)?t.map(r=>{if(e&&Array.isArray(r))throw new Error(\"The tuple syntax is not supported for `screens`.\");if(typeof r==\"string\")return{name:r.toString(),not:!1,values:[{min:r,max:void 0}]};let[n,i]=r;return n=n.toString(),typeof i==\"string\"?{name:n,not:!1,values:[{min:i,max:void 0}]}:Array.isArray(i)?{name:n,not:!1,values:i.map(a=>yf(a))}:{name:n,not:!1,values:[yf(i)]}}):Fe(Object.entries(t!=null?t:{}),!1)}function un(t){return t.values.length!==1?{result:!1,reason:\"multiple-values\"}:t.values[0].raw!==void 0?{result:!1,reason:\"raw-values\"}:t.values[0].min!==void 0&&t.values[0].max!==void 0?{result:!1,reason:\"min-and-max\"}:{result:!0,reason:null}}function vf(t,e,r){let n=fn(e,t),i=fn(r,t),a=un(n),s=un(i);if(a.reason===\"multiple-values\"||s.reason===\"multiple-values\")throw new Error(\"Attempted to sort a screen with multiple values. This should never happen. Please open a bug report.\");if(a.reason===\"raw-values\"||s.reason===\"raw-values\")throw new Error(\"Attempted to sort a screen with raw values. This should never happen. Please open a bug report.\");if(a.reason===\"min-and-max\"||s.reason===\"min-and-max\")throw new Error(\"Attempted to sort a screen with both min and max values. This should never happen. Please open a bug report.\");let{min:o,max:l}=n.values[0],{min:u,max:f}=i.values[0];e.not&&([o,l]=[l,o]),r.not&&([u,f]=[f,u]),o=o===void 0?o:parseFloat(o),l=l===void 0?l:parseFloat(l),u=u===void 0?u:parseFloat(u),f=f===void 0?f:parseFloat(f);let[p,c]=t===\"min\"?[o,u]:[f,l];return p-c}function fn(t,e){return typeof t==\"object\"?t:{name:\"arbitrary-screen\",values:[{[e]:t}]}}function yf({\"min-width\":t,min:e=t,max:r,raw:n}={}){return{min:e,max:r,raw:n}}function cn(t,e){t.walkDecls(r=>{if(e.includes(r.prop)){r.remove();return}for(let n of e)r.value.includes(`/ var(${n})`)&&(r.value=r.value.replace(`/ var(${n})`,\"\"))})}var ne={pseudoElementVariants:({addVariant:t})=>{t(\"first-letter\",\"&::first-letter\"),t(\"first-line\",\"&::first-line\"),t(\"marker\",[({container:e})=>(cn(e,[\"--tw-text-opacity\"]),\"& *::marker\"),({container:e})=>(cn(e,[\"--tw-text-opacity\"]),\"&::marker\")]),t(\"selection\",[\"& *::selection\",\"&::selection\"]),t(\"file\",\"&::file-selector-button\"),t(\"placeholder\",\"&::placeholder\"),t(\"backdrop\",\"&::backdrop\"),t(\"before\",({container:e})=>(e.walkRules(r=>{let n=!1;r.walkDecls(\"content\",()=>{n=!0}),n||r.prepend(R.decl({prop:\"content\",value:\"var(--tw-content)\"}))}),\"&::before\")),t(\"after\",({container:e})=>(e.walkRules(r=>{let n=!1;r.walkDecls(\"content\",()=>{n=!0}),n||r.prepend(R.decl({prop:\"content\",value:\"var(--tw-content)\"}))}),\"&::after\"))},pseudoClassVariants:({addVariant:t,matchVariant:e,config:r})=>{let n=[[\"first\",\"&:first-child\"],[\"last\",\"&:last-child\"],[\"only\",\"&:only-child\"],[\"odd\",\"&:nth-child(odd)\"],[\"even\",\"&:nth-child(even)\"],\"first-of-type\",\"last-of-type\",\"only-of-type\",[\"visited\",({container:a})=>(cn(a,[\"--tw-text-opacity\",\"--tw-border-opacity\",\"--tw-bg-opacity\"]),\"&:visited\")],\"target\",[\"open\",\"&[open]\"],\"default\",\"checked\",\"indeterminate\",\"placeholder-shown\",\"autofill\",\"optional\",\"required\",\"valid\",\"invalid\",\"in-range\",\"out-of-range\",\"read-only\",\"empty\",\"focus-within\",[\"hover\",G(r(),\"hoverOnlyWhenSupported\")?\"@media (hover: hover) and (pointer: fine) { &:hover }\":\"&:hover\"],\"focus\",\"focus-visible\",\"active\",\"enabled\",\"disabled\"].map(a=>Array.isArray(a)?a:[a,`&:${a}`]);for(let[a,s]of n)t(a,o=>typeof s==\"function\"?s(o):s);let i={group:(a,{modifier:s})=>s?[`:merge(.group\\\\/${re(s)})`,\" &\"]:[\":merge(.group)\",\" &\"],peer:(a,{modifier:s})=>s?[`:merge(.peer\\\\/${re(s)})`,\" ~ &\"]:[\":merge(.peer)\",\" ~ &\"]};for(let[a,s]of Object.entries(i))e(a,(o=\"\",l)=>{let u=z(typeof o==\"function\"?o(l):o);u.includes(\"&\")||(u=\"&\"+u);let[f,p]=s(\"\",l),c=null,d=null,h=0;for(let y=0;y<u.length;++y){let m=u[y];m===\"&\"?c=y:m===\"'\"||m==='\"'?h+=1:c!==null&&m===\" \"&&!h&&(d=y)}return c!==null&&d===null&&(d=u.length),u.slice(0,c)+f+u.slice(c+1,d)+p+u.slice(d)},{values:Object.fromEntries(n)})},directionVariants:({addVariant:t})=>{t(\"ltr\",':is([dir=\"ltr\"] &)'),t(\"rtl\",':is([dir=\"rtl\"] &)')},reducedMotionVariants:({addVariant:t})=>{t(\"motion-safe\",\"@media (prefers-reduced-motion: no-preference)\"),t(\"motion-reduce\",\"@media (prefers-reduced-motion: reduce)\")},darkVariants:({config:t,addVariant:e})=>{let[r,n=\".dark\"]=[].concat(t(\"darkMode\",\"media\"));r===!1&&(r=\"media\",L.warn(\"darkmode-false\",[\"The `darkMode` option in your Tailwind CSS configuration is set to `false`, which now behaves the same as `media`.\",\"Change `darkMode` to `media` or remove it entirely.\",\"https://tailwindcss.com/docs/upgrade-guide#remove-dark-mode-configuration\"])),r===\"class\"?e(\"dark\",`:is(${n} &)`):r===\"media\"&&e(\"dark\",\"@media (prefers-color-scheme: dark)\")},printVariant:({addVariant:t})=>{t(\"print\",\"@media print\")},screenVariants:({theme:t,addVariant:e,matchVariant:r})=>{var g;let n=(g=t(\"screens\"))!=null?g:{},i=Object.values(n).every(w=>typeof w==\"string\"),a=Fe(t(\"screens\")),s=new Set([]);function o(w){var b,v;return(v=(b=w.match(/(\\D+)$/))==null?void 0:b[1])!=null?v:\"(none)\"}function l(w){w!==void 0&&s.add(o(w))}function u(w){return l(w),s.size===1}for(let w of a)for(let b of w.values)l(b.min),l(b.max);let f=s.size<=1;function p(w){return Object.fromEntries(a.filter(b=>un(b).result).map(b=>{let{min:v,max:O}=b.values[0];if(w===\"min\"&&v!==void 0)return b;if(w===\"min\"&&O!==void 0)return{...b,not:!b.not};if(w===\"max\"&&O!==void 0)return b;if(w===\"max\"&&v!==void 0)return{...b,not:!b.not}}).map(b=>[b.name,b]))}function c(w){return(b,v)=>vf(w,b.value,v.value)}let d=c(\"max\"),h=c(\"min\");function y(w){return b=>{if(i)if(f){if(typeof b==\"string\"&&!u(b))return L.warn(\"minmax-have-mixed-units\",[\"The `min-*` and `max-*` variants are not supported with a `screens` configuration containing mixed units.\"]),[]}else return L.warn(\"mixed-screen-units\",[\"The `min-*` and `max-*` variants are not supported with a `screens` configuration containing mixed units.\"]),[];else return L.warn(\"complex-screen-config\",[\"The `min-*` and `max-*` variants are not supported with a `screens` configuration containing objects.\"]),[];return[`@media ${Me(fn(b,w))}`]}}r(\"max\",y(\"max\"),{sort:d,values:i?p(\"max\"):{}});let m=\"min-screens\";for(let w of a)e(w.name,`@media ${Me(w)}`,{id:m,sort:i&&f?h:void 0,value:w});r(\"min\",y(\"min\"),{id:m,sort:h})},supportsVariants:({matchVariant:t,theme:e})=>{var r;t(\"supports\",(n=\"\")=>{let i=z(n),a=/^\\w*\\s*\\(/.test(i);return i=a?i.replace(/\\b(and|or|not)\\b/g,\" $1 \"):i,a?`@supports ${i}`:(i.includes(\":\")||(i=`${i}: var(--tw)`),i.startsWith(\"(\")&&i.endsWith(\")\")||(i=`(${i})`),`@supports ${i}`)},{values:(r=e(\"supports\"))!=null?r:{}})},ariaVariants:({matchVariant:t,theme:e})=>{var r,n,i;t(\"aria\",a=>`&[aria-${z(a)}]`,{values:(r=e(\"aria\"))!=null?r:{}}),t(\"group-aria\",(a,{modifier:s})=>s?`:merge(.group\\\\/${s})[aria-${z(a)}] &`:`:merge(.group)[aria-${z(a)}] &`,{values:(n=e(\"aria\"))!=null?n:{}}),t(\"peer-aria\",(a,{modifier:s})=>s?`:merge(.peer\\\\/${s})[aria-${z(a)}] ~ &`:`:merge(.peer)[aria-${z(a)}] ~ &`,{values:(i=e(\"aria\"))!=null?i:{}})},dataVariants:({matchVariant:t,theme:e})=>{var r,n,i;t(\"data\",a=>`&[data-${z(a)}]`,{values:(r=e(\"data\"))!=null?r:{}}),t(\"group-data\",(a,{modifier:s})=>s?`:merge(.group\\\\/${s})[data-${z(a)}] &`:`:merge(.group)[data-${z(a)}] &`,{values:(n=e(\"data\"))!=null?n:{}}),t(\"peer-data\",(a,{modifier:s})=>s?`:merge(.peer\\\\/${s})[data-${z(a)}] ~ &`:`:merge(.peer)[data-${z(a)}] ~ &`,{values:(i=e(\"data\"))!=null?i:{}})},orientationVariants:({addVariant:t})=>{t(\"portrait\",\"@media (orientation: portrait)\"),t(\"landscape\",\"@media (orientation: landscape)\")},prefersContrastVariants:({addVariant:t})=>{t(\"contrast-more\",\"@media (prefers-contrast: more)\"),t(\"contrast-less\",\"@media (prefers-contrast: less)\")}},he=[\"translate(var(--tw-translate-x), var(--tw-translate-y))\",\"rotate(var(--tw-rotate))\",\"skewX(var(--tw-skew-x))\",\"skewY(var(--tw-skew-y))\",\"scaleX(var(--tw-scale-x))\",\"scaleY(var(--tw-scale-y))\"].join(\" \"),xe=[\"var(--tw-blur)\",\"var(--tw-brightness)\",\"var(--tw-contrast)\",\"var(--tw-grayscale)\",\"var(--tw-hue-rotate)\",\"var(--tw-invert)\",\"var(--tw-saturate)\",\"var(--tw-sepia)\",\"var(--tw-drop-shadow)\"].join(\" \"),Se=[\"var(--tw-backdrop-blur)\",\"var(--tw-backdrop-brightness)\",\"var(--tw-backdrop-contrast)\",\"var(--tw-backdrop-grayscale)\",\"var(--tw-backdrop-hue-rotate)\",\"var(--tw-backdrop-invert)\",\"var(--tw-backdrop-opacity)\",\"var(--tw-backdrop-saturate)\",\"var(--tw-backdrop-sepia)\"].join(\" \"),wf={preflight:({addBase:t})=>{let e=R.parse(ht.readFileSync(Kn(\"/\",\"./css/preflight.css\"),\"utf8\"));t([R.comment({text:`! tailwindcss v${$a} | MIT License | https://tailwindcss.com`}),...e.nodes])},container:(()=>{function t(r=[]){return r.flatMap(n=>n.values.map(i=>i.min)).filter(n=>n!==void 0)}function e(r,n,i){if(typeof i>\"u\")return[];if(!(typeof i==\"object\"&&i!==null))return[{screen:\"DEFAULT\",minWidth:0,padding:i}];let a=[];i.DEFAULT&&a.push({screen:\"DEFAULT\",minWidth:0,padding:i.DEFAULT});for(let s of r)for(let o of n)for(let{min:l}of o.values)l===s&&a.push({minWidth:s,padding:i[o.name]});return a}return function({addComponents:r,theme:n}){let i=Fe(n(\"container.screens\",n(\"screens\"))),a=t(i),s=e(a,i,n(\"container.padding\")),o=u=>{let f=s.find(p=>p.minWidth===u);return f?{paddingRight:f.padding,paddingLeft:f.padding}:{}},l=Array.from(new Set(a.slice().sort((u,f)=>parseInt(u)-parseInt(f)))).map(u=>({[`@media (min-width: ${u})`]:{\".container\":{\"max-width\":u,...o(u)}}}));r([{\".container\":Object.assign({width:\"100%\"},n(\"container.center\",!1)?{marginRight:\"auto\",marginLeft:\"auto\"}:{},o(0))},...l])}})(),accessibility:({addUtilities:t})=>{t({\".sr-only\":{position:\"absolute\",width:\"1px\",height:\"1px\",padding:\"0\",margin:\"-1px\",overflow:\"hidden\",clip:\"rect(0, 0, 0, 0)\",whiteSpace:\"nowrap\",borderWidth:\"0\"},\".not-sr-only\":{position:\"static\",width:\"auto\",height:\"auto\",padding:\"0\",margin:\"0\",overflow:\"visible\",clip:\"auto\",whiteSpace:\"normal\"}})},pointerEvents:({addUtilities:t})=>{t({\".pointer-events-none\":{\"pointer-events\":\"none\"},\".pointer-events-auto\":{\"pointer-events\":\"auto\"}})},visibility:({addUtilities:t})=>{t({\".visible\":{visibility:\"visible\"},\".invisible\":{visibility:\"hidden\"},\".collapse\":{visibility:\"collapse\"}})},position:({addUtilities:t})=>{t({\".static\":{position:\"static\"},\".fixed\":{position:\"fixed\"},\".absolute\":{position:\"absolute\"},\".relative\":{position:\"relative\"},\".sticky\":{position:\"sticky\"}})},inset:T(\"inset\",[[\"inset\",[\"inset\"]],[[\"inset-x\",[\"left\",\"right\"]],[\"inset-y\",[\"top\",\"bottom\"]]],[[\"start\",[\"inset-inline-start\"]],[\"end\",[\"inset-inline-end\"]],[\"top\",[\"top\"]],[\"right\",[\"right\"]],[\"bottom\",[\"bottom\"]],[\"left\",[\"left\"]]]],{supportsNegativeValues:!0}),isolation:({addUtilities:t})=>{t({\".isolate\":{isolation:\"isolate\"},\".isolation-auto\":{isolation:\"auto\"}})},zIndex:T(\"zIndex\",[[\"z\",[\"zIndex\"]]],{supportsNegativeValues:!0}),order:T(\"order\",void 0,{supportsNegativeValues:!0}),gridColumn:T(\"gridColumn\",[[\"col\",[\"gridColumn\"]]]),gridColumnStart:T(\"gridColumnStart\",[[\"col-start\",[\"gridColumnStart\"]]]),gridColumnEnd:T(\"gridColumnEnd\",[[\"col-end\",[\"gridColumnEnd\"]]]),gridRow:T(\"gridRow\",[[\"row\",[\"gridRow\"]]]),gridRowStart:T(\"gridRowStart\",[[\"row-start\",[\"gridRowStart\"]]]),gridRowEnd:T(\"gridRowEnd\",[[\"row-end\",[\"gridRowEnd\"]]]),float:({addUtilities:t})=>{t({\".float-right\":{float:\"right\"},\".float-left\":{float:\"left\"},\".float-none\":{float:\"none\"}})},clear:({addUtilities:t})=>{t({\".clear-left\":{clear:\"left\"},\".clear-right\":{clear:\"right\"},\".clear-both\":{clear:\"both\"},\".clear-none\":{clear:\"none\"}})},margin:T(\"margin\",[[\"m\",[\"margin\"]],[[\"mx\",[\"margin-left\",\"margin-right\"]],[\"my\",[\"margin-top\",\"margin-bottom\"]]],[[\"ms\",[\"margin-inline-start\"]],[\"me\",[\"margin-inline-end\"]],[\"mt\",[\"margin-top\"]],[\"mr\",[\"margin-right\"]],[\"mb\",[\"margin-bottom\"]],[\"ml\",[\"margin-left\"]]]],{supportsNegativeValues:!0}),boxSizing:({addUtilities:t})=>{t({\".box-border\":{\"box-sizing\":\"border-box\"},\".box-content\":{\"box-sizing\":\"content-box\"}})},lineClamp:({matchUtilities:t,addUtilities:e,theme:r})=>{t({\"line-clamp\":n=>({overflow:\"hidden\",display:\"-webkit-box\",\"-webkit-box-orient\":\"vertical\",\"-webkit-line-clamp\":`${n}`})},{values:r(\"lineClamp\")}),e({\".line-clamp-none\":{overflow:\"visible\",display:\"block\",\"-webkit-box-orient\":\"horizontal\",\"-webkit-line-clamp\":\"none\"}})},display:({addUtilities:t})=>{t({\".block\":{display:\"block\"},\".inline-block\":{display:\"inline-block\"},\".inline\":{display:\"inline\"},\".flex\":{display:\"flex\"},\".inline-flex\":{display:\"inline-flex\"},\".table\":{display:\"table\"},\".inline-table\":{display:\"inline-table\"},\".table-caption\":{display:\"table-caption\"},\".table-cell\":{display:\"table-cell\"},\".table-column\":{display:\"table-column\"},\".table-column-group\":{display:\"table-column-group\"},\".table-footer-group\":{display:\"table-footer-group\"},\".table-header-group\":{display:\"table-header-group\"},\".table-row-group\":{display:\"table-row-group\"},\".table-row\":{display:\"table-row\"},\".flow-root\":{display:\"flow-root\"},\".grid\":{display:\"grid\"},\".inline-grid\":{display:\"inline-grid\"},\".contents\":{display:\"contents\"},\".list-item\":{display:\"list-item\"},\".hidden\":{display:\"none\"}})},aspectRatio:T(\"aspectRatio\",[[\"aspect\",[\"aspect-ratio\"]]]),height:T(\"height\",[[\"h\",[\"height\"]]]),maxHeight:T(\"maxHeight\",[[\"max-h\",[\"maxHeight\"]]]),minHeight:T(\"minHeight\",[[\"min-h\",[\"minHeight\"]]]),width:T(\"width\",[[\"w\",[\"width\"]]]),minWidth:T(\"minWidth\",[[\"min-w\",[\"minWidth\"]]]),maxWidth:T(\"maxWidth\",[[\"max-w\",[\"maxWidth\"]]]),flex:T(\"flex\"),flexShrink:T(\"flexShrink\",[[\"flex-shrink\",[\"flex-shrink\"]],[\"shrink\",[\"flex-shrink\"]]]),flexGrow:T(\"flexGrow\",[[\"flex-grow\",[\"flex-grow\"]],[\"grow\",[\"flex-grow\"]]]),flexBasis:T(\"flexBasis\",[[\"basis\",[\"flex-basis\"]]]),tableLayout:({addUtilities:t})=>{t({\".table-auto\":{\"table-layout\":\"auto\"},\".table-fixed\":{\"table-layout\":\"fixed\"}})},captionSide:({addUtilities:t})=>{t({\".caption-top\":{\"caption-side\":\"top\"},\".caption-bottom\":{\"caption-side\":\"bottom\"}})},borderCollapse:({addUtilities:t})=>{t({\".border-collapse\":{\"border-collapse\":\"collapse\"},\".border-separate\":{\"border-collapse\":\"separate\"}})},borderSpacing:({addDefaults:t,matchUtilities:e,theme:r})=>{t(\"border-spacing\",{\"--tw-border-spacing-x\":0,\"--tw-border-spacing-y\":0}),e({\"border-spacing\":n=>({\"--tw-border-spacing-x\":n,\"--tw-border-spacing-y\":n,\"@defaults border-spacing\":{},\"border-spacing\":\"var(--tw-border-spacing-x) var(--tw-border-spacing-y)\"}),\"border-spacing-x\":n=>({\"--tw-border-spacing-x\":n,\"@defaults border-spacing\":{},\"border-spacing\":\"var(--tw-border-spacing-x) var(--tw-border-spacing-y)\"}),\"border-spacing-y\":n=>({\"--tw-border-spacing-y\":n,\"@defaults border-spacing\":{},\"border-spacing\":\"var(--tw-border-spacing-x) var(--tw-border-spacing-y)\"})},{values:r(\"borderSpacing\")})},transformOrigin:T(\"transformOrigin\",[[\"origin\",[\"transformOrigin\"]]]),translate:T(\"translate\",[[[\"translate-x\",[[\"@defaults transform\",{}],\"--tw-translate-x\",[\"transform\",he]]],[\"translate-y\",[[\"@defaults transform\",{}],\"--tw-translate-y\",[\"transform\",he]]]]],{supportsNegativeValues:!0}),rotate:T(\"rotate\",[[\"rotate\",[[\"@defaults transform\",{}],\"--tw-rotate\",[\"transform\",he]]]],{supportsNegativeValues:!0}),skew:T(\"skew\",[[[\"skew-x\",[[\"@defaults transform\",{}],\"--tw-skew-x\",[\"transform\",he]]],[\"skew-y\",[[\"@defaults transform\",{}],\"--tw-skew-y\",[\"transform\",he]]]]],{supportsNegativeValues:!0}),scale:T(\"scale\",[[\"scale\",[[\"@defaults transform\",{}],\"--tw-scale-x\",\"--tw-scale-y\",[\"transform\",he]]],[[\"scale-x\",[[\"@defaults transform\",{}],\"--tw-scale-x\",[\"transform\",he]]],[\"scale-y\",[[\"@defaults transform\",{}],\"--tw-scale-y\",[\"transform\",he]]]]],{supportsNegativeValues:!0}),transform:({addDefaults:t,addUtilities:e})=>{t(\"transform\",{\"--tw-translate-x\":\"0\",\"--tw-translate-y\":\"0\",\"--tw-rotate\":\"0\",\"--tw-skew-x\":\"0\",\"--tw-skew-y\":\"0\",\"--tw-scale-x\":\"1\",\"--tw-scale-y\":\"1\"}),e({\".transform\":{\"@defaults transform\":{},transform:he},\".transform-cpu\":{transform:he},\".transform-gpu\":{transform:he.replace(\"translate(var(--tw-translate-x), var(--tw-translate-y))\",\"translate3d(var(--tw-translate-x), var(--tw-translate-y), 0)\")},\".transform-none\":{transform:\"none\"}})},animation:({matchUtilities:t,theme:e,config:r})=>{var a;let n=s=>`${r(\"prefix\")}${re(s)}`,i=Object.fromEntries(Object.entries((a=e(\"keyframes\"))!=null?a:{}).map(([s,o])=>[s,{[`@keyframes ${n(s)}`]:o}]));t({animate:s=>{let o=$s(s);return[...o.flatMap(l=>i[l.name]),{animation:o.map(({name:l,value:u})=>l===void 0||i[l]===void 0?u:u.replace(l,n(l))).join(\", \")}]}},{values:e(\"animation\")})},cursor:T(\"cursor\"),touchAction:({addDefaults:t,addUtilities:e})=>{t(\"touch-action\",{\"--tw-pan-x\":\" \",\"--tw-pan-y\":\" \",\"--tw-pinch-zoom\":\" \"});let r=\"var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom)\";e({\".touch-auto\":{\"touch-action\":\"auto\"},\".touch-none\":{\"touch-action\":\"none\"},\".touch-pan-x\":{\"@defaults touch-action\":{},\"--tw-pan-x\":\"pan-x\",\"touch-action\":r},\".touch-pan-left\":{\"@defaults touch-action\":{},\"--tw-pan-x\":\"pan-left\",\"touch-action\":r},\".touch-pan-right\":{\"@defaults touch-action\":{},\"--tw-pan-x\":\"pan-right\",\"touch-action\":r},\".touch-pan-y\":{\"@defaults touch-action\":{},\"--tw-pan-y\":\"pan-y\",\"touch-action\":r},\".touch-pan-up\":{\"@defaults touch-action\":{},\"--tw-pan-y\":\"pan-up\",\"touch-action\":r},\".touch-pan-down\":{\"@defaults touch-action\":{},\"--tw-pan-y\":\"pan-down\",\"touch-action\":r},\".touch-pinch-zoom\":{\"@defaults touch-action\":{},\"--tw-pinch-zoom\":\"pinch-zoom\",\"touch-action\":r},\".touch-manipulation\":{\"touch-action\":\"manipulation\"}})},userSelect:({addUtilities:t})=>{t({\".select-none\":{\"user-select\":\"none\"},\".select-text\":{\"user-select\":\"text\"},\".select-all\":{\"user-select\":\"all\"},\".select-auto\":{\"user-select\":\"auto\"}})},resize:({addUtilities:t})=>{t({\".resize-none\":{resize:\"none\"},\".resize-y\":{resize:\"vertical\"},\".resize-x\":{resize:\"horizontal\"},\".resize\":{resize:\"both\"}})},scrollSnapType:({addDefaults:t,addUtilities:e})=>{t(\"scroll-snap-type\",{\"--tw-scroll-snap-strictness\":\"proximity\"}),e({\".snap-none\":{\"scroll-snap-type\":\"none\"},\".snap-x\":{\"@defaults scroll-snap-type\":{},\"scroll-snap-type\":\"x var(--tw-scroll-snap-strictness)\"},\".snap-y\":{\"@defaults scroll-snap-type\":{},\"scroll-snap-type\":\"y var(--tw-scroll-snap-strictness)\"},\".snap-both\":{\"@defaults scroll-snap-type\":{},\"scroll-snap-type\":\"both var(--tw-scroll-snap-strictness)\"},\".snap-mandatory\":{\"--tw-scroll-snap-strictness\":\"mandatory\"},\".snap-proximity\":{\"--tw-scroll-snap-strictness\":\"proximity\"}})},scrollSnapAlign:({addUtilities:t})=>{t({\".snap-start\":{\"scroll-snap-align\":\"start\"},\".snap-end\":{\"scroll-snap-align\":\"end\"},\".snap-center\":{\"scroll-snap-align\":\"center\"},\".snap-align-none\":{\"scroll-snap-align\":\"none\"}})},scrollSnapStop:({addUtilities:t})=>{t({\".snap-normal\":{\"scroll-snap-stop\":\"normal\"},\".snap-always\":{\"scroll-snap-stop\":\"always\"}})},scrollMargin:T(\"scrollMargin\",[[\"scroll-m\",[\"scroll-margin\"]],[[\"scroll-mx\",[\"scroll-margin-left\",\"scroll-margin-right\"]],[\"scroll-my\",[\"scroll-margin-top\",\"scroll-margin-bottom\"]]],[[\"scroll-ms\",[\"scroll-margin-inline-start\"]],[\"scroll-me\",[\"scroll-margin-inline-end\"]],[\"scroll-mt\",[\"scroll-margin-top\"]],[\"scroll-mr\",[\"scroll-margin-right\"]],[\"scroll-mb\",[\"scroll-margin-bottom\"]],[\"scroll-ml\",[\"scroll-margin-left\"]]]],{supportsNegativeValues:!0}),scrollPadding:T(\"scrollPadding\",[[\"scroll-p\",[\"scroll-padding\"]],[[\"scroll-px\",[\"scroll-padding-left\",\"scroll-padding-right\"]],[\"scroll-py\",[\"scroll-padding-top\",\"scroll-padding-bottom\"]]],[[\"scroll-ps\",[\"scroll-padding-inline-start\"]],[\"scroll-pe\",[\"scroll-padding-inline-end\"]],[\"scroll-pt\",[\"scroll-padding-top\"]],[\"scroll-pr\",[\"scroll-padding-right\"]],[\"scroll-pb\",[\"scroll-padding-bottom\"]],[\"scroll-pl\",[\"scroll-padding-left\"]]]]),listStylePosition:({addUtilities:t})=>{t({\".list-inside\":{\"list-style-position\":\"inside\"},\".list-outside\":{\"list-style-position\":\"outside\"}})},listStyleType:T(\"listStyleType\",[[\"list\",[\"listStyleType\"]]]),listStyleImage:T(\"listStyleImage\",[[\"list-image\",[\"listStyleImage\"]]]),appearance:({addUtilities:t})=>{t({\".appearance-none\":{appearance:\"none\"}})},columns:T(\"columns\",[[\"columns\",[\"columns\"]]]),breakBefore:({addUtilities:t})=>{t({\".break-before-auto\":{\"break-before\":\"auto\"},\".break-before-avoid\":{\"break-before\":\"avoid\"},\".break-before-all\":{\"break-before\":\"all\"},\".break-before-avoid-page\":{\"break-before\":\"avoid-page\"},\".break-before-page\":{\"break-before\":\"page\"},\".break-before-left\":{\"break-before\":\"left\"},\".break-before-right\":{\"break-before\":\"right\"},\".break-before-column\":{\"break-before\":\"column\"}})},breakInside:({addUtilities:t})=>{t({\".break-inside-auto\":{\"break-inside\":\"auto\"},\".break-inside-avoid\":{\"break-inside\":\"avoid\"},\".break-inside-avoid-page\":{\"break-inside\":\"avoid-page\"},\".break-inside-avoid-column\":{\"break-inside\":\"avoid-column\"}})},breakAfter:({addUtilities:t})=>{t({\".break-after-auto\":{\"break-after\":\"auto\"},\".break-after-avoid\":{\"break-after\":\"avoid\"},\".break-after-all\":{\"break-after\":\"all\"},\".break-after-avoid-page\":{\"break-after\":\"avoid-page\"},\".break-after-page\":{\"break-after\":\"page\"},\".break-after-left\":{\"break-after\":\"left\"},\".break-after-right\":{\"break-after\":\"right\"},\".break-after-column\":{\"break-after\":\"column\"}})},gridAutoColumns:T(\"gridAutoColumns\",[[\"auto-cols\",[\"gridAutoColumns\"]]]),gridAutoFlow:({addUtilities:t})=>{t({\".grid-flow-row\":{gridAutoFlow:\"row\"},\".grid-flow-col\":{gridAutoFlow:\"column\"},\".grid-flow-dense\":{gridAutoFlow:\"dense\"},\".grid-flow-row-dense\":{gridAutoFlow:\"row dense\"},\".grid-flow-col-dense\":{gridAutoFlow:\"column dense\"}})},gridAutoRows:T(\"gridAutoRows\",[[\"auto-rows\",[\"gridAutoRows\"]]]),gridTemplateColumns:T(\"gridTemplateColumns\",[[\"grid-cols\",[\"gridTemplateColumns\"]]]),gridTemplateRows:T(\"gridTemplateRows\",[[\"grid-rows\",[\"gridTemplateRows\"]]]),flexDirection:({addUtilities:t})=>{t({\".flex-row\":{\"flex-direction\":\"row\"},\".flex-row-reverse\":{\"flex-direction\":\"row-reverse\"},\".flex-col\":{\"flex-direction\":\"column\"},\".flex-col-reverse\":{\"flex-direction\":\"column-reverse\"}})},flexWrap:({addUtilities:t})=>{t({\".flex-wrap\":{\"flex-wrap\":\"wrap\"},\".flex-wrap-reverse\":{\"flex-wrap\":\"wrap-reverse\"},\".flex-nowrap\":{\"flex-wrap\":\"nowrap\"}})},placeContent:({addUtilities:t})=>{t({\".place-content-center\":{\"place-content\":\"center\"},\".place-content-start\":{\"place-content\":\"start\"},\".place-content-end\":{\"place-content\":\"end\"},\".place-content-between\":{\"place-content\":\"space-between\"},\".place-content-around\":{\"place-content\":\"space-around\"},\".place-content-evenly\":{\"place-content\":\"space-evenly\"},\".place-content-baseline\":{\"place-content\":\"baseline\"},\".place-content-stretch\":{\"place-content\":\"stretch\"}})},placeItems:({addUtilities:t})=>{t({\".place-items-start\":{\"place-items\":\"start\"},\".place-items-end\":{\"place-items\":\"end\"},\".place-items-center\":{\"place-items\":\"center\"},\".place-items-baseline\":{\"place-items\":\"baseline\"},\".place-items-stretch\":{\"place-items\":\"stretch\"}})},alignContent:({addUtilities:t})=>{t({\".content-normal\":{\"align-content\":\"normal\"},\".content-center\":{\"align-content\":\"center\"},\".content-start\":{\"align-content\":\"flex-start\"},\".content-end\":{\"align-content\":\"flex-end\"},\".content-between\":{\"align-content\":\"space-between\"},\".content-around\":{\"align-content\":\"space-around\"},\".content-evenly\":{\"align-content\":\"space-evenly\"},\".content-baseline\":{\"align-content\":\"baseline\"},\".content-stretch\":{\"align-content\":\"stretch\"}})},alignItems:({addUtilities:t})=>{t({\".items-start\":{\"align-items\":\"flex-start\"},\".items-end\":{\"align-items\":\"flex-end\"},\".items-center\":{\"align-items\":\"center\"},\".items-baseline\":{\"align-items\":\"baseline\"},\".items-stretch\":{\"align-items\":\"stretch\"}})},justifyContent:({addUtilities:t})=>{t({\".justify-normal\":{\"justify-content\":\"normal\"},\".justify-start\":{\"justify-content\":\"flex-start\"},\".justify-end\":{\"justify-content\":\"flex-end\"},\".justify-center\":{\"justify-content\":\"center\"},\".justify-between\":{\"justify-content\":\"space-between\"},\".justify-around\":{\"justify-content\":\"space-around\"},\".justify-evenly\":{\"justify-content\":\"space-evenly\"},\".justify-stretch\":{\"justify-content\":\"stretch\"}})},justifyItems:({addUtilities:t})=>{t({\".justify-items-start\":{\"justify-items\":\"start\"},\".justify-items-end\":{\"justify-items\":\"end\"},\".justify-items-center\":{\"justify-items\":\"center\"},\".justify-items-stretch\":{\"justify-items\":\"stretch\"}})},gap:T(\"gap\",[[\"gap\",[\"gap\"]],[[\"gap-x\",[\"columnGap\"]],[\"gap-y\",[\"rowGap\"]]]]),space:({matchUtilities:t,addUtilities:e,theme:r})=>{t({\"space-x\":n=>(n=n===\"0\"?\"0px\":n,{\"& > :not([hidden]) ~ :not([hidden])\":{\"--tw-space-x-reverse\":\"0\",\"margin-right\":`calc(${n} * var(--tw-space-x-reverse))`,\"margin-left\":`calc(${n} * calc(1 - var(--tw-space-x-reverse)))`}}),\"space-y\":n=>(n=n===\"0\"?\"0px\":n,{\"& > :not([hidden]) ~ :not([hidden])\":{\"--tw-space-y-reverse\":\"0\",\"margin-top\":`calc(${n} * calc(1 - var(--tw-space-y-reverse)))`,\"margin-bottom\":`calc(${n} * var(--tw-space-y-reverse))`}})},{values:r(\"space\"),supportsNegativeValues:!0}),e({\".space-y-reverse > :not([hidden]) ~ :not([hidden])\":{\"--tw-space-y-reverse\":\"1\"},\".space-x-reverse > :not([hidden]) ~ :not([hidden])\":{\"--tw-space-x-reverse\":\"1\"}})},divideWidth:({matchUtilities:t,addUtilities:e,theme:r})=>{t({\"divide-x\":n=>(n=n===\"0\"?\"0px\":n,{\"& > :not([hidden]) ~ :not([hidden])\":{\"@defaults border-width\":{},\"--tw-divide-x-reverse\":\"0\",\"border-right-width\":`calc(${n} * var(--tw-divide-x-reverse))`,\"border-left-width\":`calc(${n} * calc(1 - var(--tw-divide-x-reverse)))`}}),\"divide-y\":n=>(n=n===\"0\"?\"0px\":n,{\"& > :not([hidden]) ~ :not([hidden])\":{\"@defaults border-width\":{},\"--tw-divide-y-reverse\":\"0\",\"border-top-width\":`calc(${n} * calc(1 - var(--tw-divide-y-reverse)))`,\"border-bottom-width\":`calc(${n} * var(--tw-divide-y-reverse))`}})},{values:r(\"divideWidth\"),type:[\"line-width\",\"length\",\"any\"]}),e({\".divide-y-reverse > :not([hidden]) ~ :not([hidden])\":{\"@defaults border-width\":{},\"--tw-divide-y-reverse\":\"1\"},\".divide-x-reverse > :not([hidden]) ~ :not([hidden])\":{\"@defaults border-width\":{},\"--tw-divide-x-reverse\":\"1\"}})},divideStyle:({addUtilities:t})=>{t({\".divide-solid > :not([hidden]) ~ :not([hidden])\":{\"border-style\":\"solid\"},\".divide-dashed > :not([hidden]) ~ :not([hidden])\":{\"border-style\":\"dashed\"},\".divide-dotted > :not([hidden]) ~ :not([hidden])\":{\"border-style\":\"dotted\"},\".divide-double > :not([hidden]) ~ :not([hidden])\":{\"border-style\":\"double\"},\".divide-none > :not([hidden]) ~ :not([hidden])\":{\"border-style\":\"none\"}})},divideColor:({matchUtilities:t,theme:e,corePlugins:r})=>{t({divide:n=>r(\"divideOpacity\")?{[\"& > :not([hidden]) ~ :not([hidden])\"]:Z({color:n,property:\"border-color\",variable:\"--tw-divide-opacity\"})}:{[\"& > :not([hidden]) ~ :not([hidden])\"]:{\"border-color\":M(n)}}},{values:(({DEFAULT:n,...i})=>i)(Q(e(\"divideColor\"))),type:[\"color\",\"any\"]})},divideOpacity:({matchUtilities:t,theme:e})=>{t({\"divide-opacity\":r=>({[\"& > :not([hidden]) ~ :not([hidden])\"]:{\"--tw-divide-opacity\":r}})},{values:e(\"divideOpacity\")})},placeSelf:({addUtilities:t})=>{t({\".place-self-auto\":{\"place-self\":\"auto\"},\".place-self-start\":{\"place-self\":\"start\"},\".place-self-end\":{\"place-self\":\"end\"},\".place-self-center\":{\"place-self\":\"center\"},\".place-self-stretch\":{\"place-self\":\"stretch\"}})},alignSelf:({addUtilities:t})=>{t({\".self-auto\":{\"align-self\":\"auto\"},\".self-start\":{\"align-self\":\"flex-start\"},\".self-end\":{\"align-self\":\"flex-end\"},\".self-center\":{\"align-self\":\"center\"},\".self-stretch\":{\"align-self\":\"stretch\"},\".self-baseline\":{\"align-self\":\"baseline\"}})},justifySelf:({addUtilities:t})=>{t({\".justify-self-auto\":{\"justify-self\":\"auto\"},\".justify-self-start\":{\"justify-self\":\"start\"},\".justify-self-end\":{\"justify-self\":\"end\"},\".justify-self-center\":{\"justify-self\":\"center\"},\".justify-self-stretch\":{\"justify-self\":\"stretch\"}})},overflow:({addUtilities:t})=>{t({\".overflow-auto\":{overflow:\"auto\"},\".overflow-hidden\":{overflow:\"hidden\"},\".overflow-clip\":{overflow:\"clip\"},\".overflow-visible\":{overflow:\"visible\"},\".overflow-scroll\":{overflow:\"scroll\"},\".overflow-x-auto\":{\"overflow-x\":\"auto\"},\".overflow-y-auto\":{\"overflow-y\":\"auto\"},\".overflow-x-hidden\":{\"overflow-x\":\"hidden\"},\".overflow-y-hidden\":{\"overflow-y\":\"hidden\"},\".overflow-x-clip\":{\"overflow-x\":\"clip\"},\".overflow-y-clip\":{\"overflow-y\":\"clip\"},\".overflow-x-visible\":{\"overflow-x\":\"visible\"},\".overflow-y-visible\":{\"overflow-y\":\"visible\"},\".overflow-x-scroll\":{\"overflow-x\":\"scroll\"},\".overflow-y-scroll\":{\"overflow-y\":\"scroll\"}})},overscrollBehavior:({addUtilities:t})=>{t({\".overscroll-auto\":{\"overscroll-behavior\":\"auto\"},\".overscroll-contain\":{\"overscroll-behavior\":\"contain\"},\".overscroll-none\":{\"overscroll-behavior\":\"none\"},\".overscroll-y-auto\":{\"overscroll-behavior-y\":\"auto\"},\".overscroll-y-contain\":{\"overscroll-behavior-y\":\"contain\"},\".overscroll-y-none\":{\"overscroll-behavior-y\":\"none\"},\".overscroll-x-auto\":{\"overscroll-behavior-x\":\"auto\"},\".overscroll-x-contain\":{\"overscroll-behavior-x\":\"contain\"},\".overscroll-x-none\":{\"overscroll-behavior-x\":\"none\"}})},scrollBehavior:({addUtilities:t})=>{t({\".scroll-auto\":{\"scroll-behavior\":\"auto\"},\".scroll-smooth\":{\"scroll-behavior\":\"smooth\"}})},textOverflow:({addUtilities:t})=>{t({\".truncate\":{overflow:\"hidden\",\"text-overflow\":\"ellipsis\",\"white-space\":\"nowrap\"},\".overflow-ellipsis\":{\"text-overflow\":\"ellipsis\"},\".text-ellipsis\":{\"text-overflow\":\"ellipsis\"},\".text-clip\":{\"text-overflow\":\"clip\"}})},hyphens:({addUtilities:t})=>{t({\".hyphens-none\":{hyphens:\"none\"},\".hyphens-manual\":{hyphens:\"manual\"},\".hyphens-auto\":{hyphens:\"auto\"}})},whitespace:({addUtilities:t})=>{t({\".whitespace-normal\":{\"white-space\":\"normal\"},\".whitespace-nowrap\":{\"white-space\":\"nowrap\"},\".whitespace-pre\":{\"white-space\":\"pre\"},\".whitespace-pre-line\":{\"white-space\":\"pre-line\"},\".whitespace-pre-wrap\":{\"white-space\":\"pre-wrap\"},\".whitespace-break-spaces\":{\"white-space\":\"break-spaces\"}})},wordBreak:({addUtilities:t})=>{t({\".break-normal\":{\"overflow-wrap\":\"normal\",\"word-break\":\"normal\"},\".break-words\":{\"overflow-wrap\":\"break-word\"},\".break-all\":{\"word-break\":\"break-all\"},\".break-keep\":{\"word-break\":\"keep-all\"}})},borderRadius:T(\"borderRadius\",[[\"rounded\",[\"border-radius\"]],[[\"rounded-s\",[\"border-start-start-radius\",\"border-end-start-radius\"]],[\"rounded-e\",[\"border-start-end-radius\",\"border-end-end-radius\"]],[\"rounded-t\",[\"border-top-left-radius\",\"border-top-right-radius\"]],[\"rounded-r\",[\"border-top-right-radius\",\"border-bottom-right-radius\"]],[\"rounded-b\",[\"border-bottom-right-radius\",\"border-bottom-left-radius\"]],[\"rounded-l\",[\"border-top-left-radius\",\"border-bottom-left-radius\"]]],[[\"rounded-ss\",[\"border-start-start-radius\"]],[\"rounded-se\",[\"border-start-end-radius\"]],[\"rounded-ee\",[\"border-end-end-radius\"]],[\"rounded-es\",[\"border-end-start-radius\"]],[\"rounded-tl\",[\"border-top-left-radius\"]],[\"rounded-tr\",[\"border-top-right-radius\"]],[\"rounded-br\",[\"border-bottom-right-radius\"]],[\"rounded-bl\",[\"border-bottom-left-radius\"]]]]),borderWidth:T(\"borderWidth\",[[\"border\",[[\"@defaults border-width\",{}],\"border-width\"]],[[\"border-x\",[[\"@defaults border-width\",{}],\"border-left-width\",\"border-right-width\"]],[\"border-y\",[[\"@defaults border-width\",{}],\"border-top-width\",\"border-bottom-width\"]]],[[\"border-s\",[[\"@defaults border-width\",{}],\"border-inline-start-width\"]],[\"border-e\",[[\"@defaults border-width\",{}],\"border-inline-end-width\"]],[\"border-t\",[[\"@defaults border-width\",{}],\"border-top-width\"]],[\"border-r\",[[\"@defaults border-width\",{}],\"border-right-width\"]],[\"border-b\",[[\"@defaults border-width\",{}],\"border-bottom-width\"]],[\"border-l\",[[\"@defaults border-width\",{}],\"border-left-width\"]]]],{type:[\"line-width\",\"length\"]}),borderStyle:({addUtilities:t})=>{t({\".border-solid\":{\"border-style\":\"solid\"},\".border-dashed\":{\"border-style\":\"dashed\"},\".border-dotted\":{\"border-style\":\"dotted\"},\".border-double\":{\"border-style\":\"double\"},\".border-hidden\":{\"border-style\":\"hidden\"},\".border-none\":{\"border-style\":\"none\"}})},borderColor:({matchUtilities:t,theme:e,corePlugins:r})=>{t({border:n=>r(\"borderOpacity\")?Z({color:n,property:\"border-color\",variable:\"--tw-border-opacity\"}):{\"border-color\":M(n)}},{values:(({DEFAULT:n,...i})=>i)(Q(e(\"borderColor\"))),type:[\"color\",\"any\"]}),t({\"border-x\":n=>r(\"borderOpacity\")?Z({color:n,property:[\"border-left-color\",\"border-right-color\"],variable:\"--tw-border-opacity\"}):{\"border-left-color\":M(n),\"border-right-color\":M(n)},\"border-y\":n=>r(\"borderOpacity\")?Z({color:n,property:[\"border-top-color\",\"border-bottom-color\"],variable:\"--tw-border-opacity\"}):{\"border-top-color\":M(n),\"border-bottom-color\":M(n)}},{values:(({DEFAULT:n,...i})=>i)(Q(e(\"borderColor\"))),type:[\"color\",\"any\"]}),t({\"border-s\":n=>r(\"borderOpacity\")?Z({color:n,property:\"border-inline-start-color\",variable:\"--tw-border-opacity\"}):{\"border-inline-start-color\":M(n)},\"border-e\":n=>r(\"borderOpacity\")?Z({color:n,property:\"border-inline-end-color\",variable:\"--tw-border-opacity\"}):{\"border-inline-end-color\":M(n)},\"border-t\":n=>r(\"borderOpacity\")?Z({color:n,property:\"border-top-color\",variable:\"--tw-border-opacity\"}):{\"border-top-color\":M(n)},\"border-r\":n=>r(\"borderOpacity\")?Z({color:n,property:\"border-right-color\",variable:\"--tw-border-opacity\"}):{\"border-right-color\":M(n)},\"border-b\":n=>r(\"borderOpacity\")?Z({color:n,property:\"border-bottom-color\",variable:\"--tw-border-opacity\"}):{\"border-bottom-color\":M(n)},\"border-l\":n=>r(\"borderOpacity\")?Z({color:n,property:\"border-left-color\",variable:\"--tw-border-opacity\"}):{\"border-left-color\":M(n)}},{values:(({DEFAULT:n,...i})=>i)(Q(e(\"borderColor\"))),type:[\"color\",\"any\"]})},borderOpacity:T(\"borderOpacity\",[[\"border-opacity\",[\"--tw-border-opacity\"]]]),backgroundColor:({matchUtilities:t,theme:e,corePlugins:r})=>{t({bg:n=>r(\"backgroundOpacity\")?Z({color:n,property:\"background-color\",variable:\"--tw-bg-opacity\"}):{\"background-color\":M(n)}},{values:Q(e(\"backgroundColor\")),type:[\"color\",\"any\"]})},backgroundOpacity:T(\"backgroundOpacity\",[[\"bg-opacity\",[\"--tw-bg-opacity\"]]]),backgroundImage:T(\"backgroundImage\",[[\"bg\",[\"background-image\"]]],{type:[\"lookup\",\"image\",\"url\"]}),gradientColorStops:(()=>{function t(e){return we(e,0,\"rgb(255 255 255 / 0)\")}return function({matchUtilities:e,theme:r,addDefaults:n}){n(\"gradient-color-stops\",{\"--tw-gradient-from-position\":\" \",\"--tw-gradient-via-position\":\" \",\"--tw-gradient-to-position\":\" \"});let i={values:Q(r(\"gradientColorStops\")),type:[\"color\",\"any\"]},a={values:r(\"gradientColorStopPositions\"),type:[\"length\",\"percentage\"]};e({from:s=>{let o=t(s);return{\"@defaults gradient-color-stops\":{},\"--tw-gradient-from\":`${M(s)} var(--tw-gradient-from-position)`,\"--tw-gradient-to\":`${o} var(--tw-gradient-to-position)`,\"--tw-gradient-stops\":\"var(--tw-gradient-from), var(--tw-gradient-to)\"}}},i),e({from:s=>({\"--tw-gradient-from-position\":s})},a),e({via:s=>{let o=t(s);return{\"@defaults gradient-color-stops\":{},\"--tw-gradient-to\":`${o}  var(--tw-gradient-to-position)`,\"--tw-gradient-stops\":`var(--tw-gradient-from), ${M(s)} var(--tw-gradient-via-position), var(--tw-gradient-to)`}}},i),e({via:s=>({\"--tw-gradient-via-position\":s})},a),e({to:s=>({\"@defaults gradient-color-stops\":{},\"--tw-gradient-to\":`${M(s)} var(--tw-gradient-to-position)`})},i),e({to:s=>({\"--tw-gradient-to-position\":s})},a)}})(),boxDecorationBreak:({addUtilities:t})=>{t({\".decoration-slice\":{\"box-decoration-break\":\"slice\"},\".decoration-clone\":{\"box-decoration-break\":\"clone\"},\".box-decoration-slice\":{\"box-decoration-break\":\"slice\"},\".box-decoration-clone\":{\"box-decoration-break\":\"clone\"}})},backgroundSize:T(\"backgroundSize\",[[\"bg\",[\"background-size\"]]],{type:[\"lookup\",\"length\",\"percentage\",\"size\"]}),backgroundAttachment:({addUtilities:t})=>{t({\".bg-fixed\":{\"background-attachment\":\"fixed\"},\".bg-local\":{\"background-attachment\":\"local\"},\".bg-scroll\":{\"background-attachment\":\"scroll\"}})},backgroundClip:({addUtilities:t})=>{t({\".bg-clip-border\":{\"background-clip\":\"border-box\"},\".bg-clip-padding\":{\"background-clip\":\"padding-box\"},\".bg-clip-content\":{\"background-clip\":\"content-box\"},\".bg-clip-text\":{\"background-clip\":\"text\"}})},backgroundPosition:T(\"backgroundPosition\",[[\"bg\",[\"background-position\"]]],{type:[\"lookup\",[\"position\",{preferOnConflict:!0}]]}),backgroundRepeat:({addUtilities:t})=>{t({\".bg-repeat\":{\"background-repeat\":\"repeat\"},\".bg-no-repeat\":{\"background-repeat\":\"no-repeat\"},\".bg-repeat-x\":{\"background-repeat\":\"repeat-x\"},\".bg-repeat-y\":{\"background-repeat\":\"repeat-y\"},\".bg-repeat-round\":{\"background-repeat\":\"round\"},\".bg-repeat-space\":{\"background-repeat\":\"space\"}})},backgroundOrigin:({addUtilities:t})=>{t({\".bg-origin-border\":{\"background-origin\":\"border-box\"},\".bg-origin-padding\":{\"background-origin\":\"padding-box\"},\".bg-origin-content\":{\"background-origin\":\"content-box\"}})},fill:({matchUtilities:t,theme:e})=>{t({fill:r=>({fill:M(r)})},{values:Q(e(\"fill\")),type:[\"color\",\"any\"]})},stroke:({matchUtilities:t,theme:e})=>{t({stroke:r=>({stroke:M(r)})},{values:Q(e(\"stroke\")),type:[\"color\",\"url\",\"any\"]})},strokeWidth:T(\"strokeWidth\",[[\"stroke\",[\"stroke-width\"]]],{type:[\"length\",\"number\",\"percentage\"]}),objectFit:({addUtilities:t})=>{t({\".object-contain\":{\"object-fit\":\"contain\"},\".object-cover\":{\"object-fit\":\"cover\"},\".object-fill\":{\"object-fit\":\"fill\"},\".object-none\":{\"object-fit\":\"none\"},\".object-scale-down\":{\"object-fit\":\"scale-down\"}})},objectPosition:T(\"objectPosition\",[[\"object\",[\"object-position\"]]]),padding:T(\"padding\",[[\"p\",[\"padding\"]],[[\"px\",[\"padding-left\",\"padding-right\"]],[\"py\",[\"padding-top\",\"padding-bottom\"]]],[[\"ps\",[\"padding-inline-start\"]],[\"pe\",[\"padding-inline-end\"]],[\"pt\",[\"padding-top\"]],[\"pr\",[\"padding-right\"]],[\"pb\",[\"padding-bottom\"]],[\"pl\",[\"padding-left\"]]]]),textAlign:({addUtilities:t})=>{t({\".text-left\":{\"text-align\":\"left\"},\".text-center\":{\"text-align\":\"center\"},\".text-right\":{\"text-align\":\"right\"},\".text-justify\":{\"text-align\":\"justify\"},\".text-start\":{\"text-align\":\"start\"},\".text-end\":{\"text-align\":\"end\"}})},textIndent:T(\"textIndent\",[[\"indent\",[\"text-indent\"]]],{supportsNegativeValues:!0}),verticalAlign:({addUtilities:t,matchUtilities:e})=>{t({\".align-baseline\":{\"vertical-align\":\"baseline\"},\".align-top\":{\"vertical-align\":\"top\"},\".align-middle\":{\"vertical-align\":\"middle\"},\".align-bottom\":{\"vertical-align\":\"bottom\"},\".align-text-top\":{\"vertical-align\":\"text-top\"},\".align-text-bottom\":{\"vertical-align\":\"text-bottom\"},\".align-sub\":{\"vertical-align\":\"sub\"},\".align-super\":{\"vertical-align\":\"super\"}}),e({align:r=>({\"vertical-align\":r})})},fontFamily:({matchUtilities:t,theme:e})=>{t({font:r=>{let[n,i={}]=Array.isArray(r)&&X(r[1])?r:[r],{fontFeatureSettings:a,fontVariationSettings:s}=i;return{\"font-family\":Array.isArray(n)?n.join(\", \"):n,...a===void 0?{}:{\"font-feature-settings\":a},...s===void 0?{}:{\"font-variation-settings\":s}}}},{values:e(\"fontFamily\"),type:[\"lookup\",\"generic-name\",\"family-name\"]})},fontSize:({matchUtilities:t,theme:e})=>{t({text:(r,{modifier:n})=>{let[i,a]=Array.isArray(r)?r:[r];if(n)return{\"font-size\":i,\"line-height\":n};let{lineHeight:s,letterSpacing:o,fontWeight:l}=X(a)?a:{lineHeight:a};return{\"font-size\":i,...s===void 0?{}:{\"line-height\":s},...o===void 0?{}:{\"letter-spacing\":o},...l===void 0?{}:{\"font-weight\":l}}}},{values:e(\"fontSize\"),modifiers:e(\"lineHeight\"),type:[\"absolute-size\",\"relative-size\",\"length\",\"percentage\"]})},fontWeight:T(\"fontWeight\",[[\"font\",[\"fontWeight\"]]],{type:[\"lookup\",\"number\",\"any\"]}),textTransform:({addUtilities:t})=>{t({\".uppercase\":{\"text-transform\":\"uppercase\"},\".lowercase\":{\"text-transform\":\"lowercase\"},\".capitalize\":{\"text-transform\":\"capitalize\"},\".normal-case\":{\"text-transform\":\"none\"}})},fontStyle:({addUtilities:t})=>{t({\".italic\":{\"font-style\":\"italic\"},\".not-italic\":{\"font-style\":\"normal\"}})},fontVariantNumeric:({addDefaults:t,addUtilities:e})=>{let r=\"var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)\";t(\"font-variant-numeric\",{\"--tw-ordinal\":\" \",\"--tw-slashed-zero\":\" \",\"--tw-numeric-figure\":\" \",\"--tw-numeric-spacing\":\" \",\"--tw-numeric-fraction\":\" \"}),e({\".normal-nums\":{\"font-variant-numeric\":\"normal\"},\".ordinal\":{\"@defaults font-variant-numeric\":{},\"--tw-ordinal\":\"ordinal\",\"font-variant-numeric\":r},\".slashed-zero\":{\"@defaults font-variant-numeric\":{},\"--tw-slashed-zero\":\"slashed-zero\",\"font-variant-numeric\":r},\".lining-nums\":{\"@defaults font-variant-numeric\":{},\"--tw-numeric-figure\":\"lining-nums\",\"font-variant-numeric\":r},\".oldstyle-nums\":{\"@defaults font-variant-numeric\":{},\"--tw-numeric-figure\":\"oldstyle-nums\",\"font-variant-numeric\":r},\".proportional-nums\":{\"@defaults font-variant-numeric\":{},\"--tw-numeric-spacing\":\"proportional-nums\",\"font-variant-numeric\":r},\".tabular-nums\":{\"@defaults font-variant-numeric\":{},\"--tw-numeric-spacing\":\"tabular-nums\",\"font-variant-numeric\":r},\".diagonal-fractions\":{\"@defaults font-variant-numeric\":{},\"--tw-numeric-fraction\":\"diagonal-fractions\",\"font-variant-numeric\":r},\".stacked-fractions\":{\"@defaults font-variant-numeric\":{},\"--tw-numeric-fraction\":\"stacked-fractions\",\"font-variant-numeric\":r}})},lineHeight:T(\"lineHeight\",[[\"leading\",[\"lineHeight\"]]]),letterSpacing:T(\"letterSpacing\",[[\"tracking\",[\"letterSpacing\"]]],{supportsNegativeValues:!0}),textColor:({matchUtilities:t,theme:e,corePlugins:r})=>{t({text:n=>r(\"textOpacity\")?Z({color:n,property:\"color\",variable:\"--tw-text-opacity\"}):{color:M(n)}},{values:Q(e(\"textColor\")),type:[\"color\",\"any\"]})},textOpacity:T(\"textOpacity\",[[\"text-opacity\",[\"--tw-text-opacity\"]]]),textDecoration:({addUtilities:t})=>{t({\".underline\":{\"text-decoration-line\":\"underline\"},\".overline\":{\"text-decoration-line\":\"overline\"},\".line-through\":{\"text-decoration-line\":\"line-through\"},\".no-underline\":{\"text-decoration-line\":\"none\"}})},textDecorationColor:({matchUtilities:t,theme:e})=>{t({decoration:r=>({\"text-decoration-color\":M(r)})},{values:Q(e(\"textDecorationColor\")),type:[\"color\",\"any\"]})},textDecorationStyle:({addUtilities:t})=>{t({\".decoration-solid\":{\"text-decoration-style\":\"solid\"},\".decoration-double\":{\"text-decoration-style\":\"double\"},\".decoration-dotted\":{\"text-decoration-style\":\"dotted\"},\".decoration-dashed\":{\"text-decoration-style\":\"dashed\"},\".decoration-wavy\":{\"text-decoration-style\":\"wavy\"}})},textDecorationThickness:T(\"textDecorationThickness\",[[\"decoration\",[\"text-decoration-thickness\"]]],{type:[\"length\",\"percentage\"]}),textUnderlineOffset:T(\"textUnderlineOffset\",[[\"underline-offset\",[\"text-underline-offset\"]]],{type:[\"length\",\"percentage\",\"any\"]}),fontSmoothing:({addUtilities:t})=>{t({\".antialiased\":{\"-webkit-font-smoothing\":\"antialiased\",\"-moz-osx-font-smoothing\":\"grayscale\"},\".subpixel-antialiased\":{\"-webkit-font-smoothing\":\"auto\",\"-moz-osx-font-smoothing\":\"auto\"}})},placeholderColor:({matchUtilities:t,theme:e,corePlugins:r})=>{t({placeholder:n=>r(\"placeholderOpacity\")?{\"&::placeholder\":Z({color:n,property:\"color\",variable:\"--tw-placeholder-opacity\"})}:{\"&::placeholder\":{color:M(n)}}},{values:Q(e(\"placeholderColor\")),type:[\"color\",\"any\"]})},placeholderOpacity:({matchUtilities:t,theme:e})=>{t({\"placeholder-opacity\":r=>({[\"&::placeholder\"]:{\"--tw-placeholder-opacity\":r}})},{values:e(\"placeholderOpacity\")})},caretColor:({matchUtilities:t,theme:e})=>{t({caret:r=>({\"caret-color\":M(r)})},{values:Q(e(\"caretColor\")),type:[\"color\",\"any\"]})},accentColor:({matchUtilities:t,theme:e})=>{t({accent:r=>({\"accent-color\":M(r)})},{values:Q(e(\"accentColor\")),type:[\"color\",\"any\"]})},opacity:T(\"opacity\",[[\"opacity\",[\"opacity\"]]]),backgroundBlendMode:({addUtilities:t})=>{t({\".bg-blend-normal\":{\"background-blend-mode\":\"normal\"},\".bg-blend-multiply\":{\"background-blend-mode\":\"multiply\"},\".bg-blend-screen\":{\"background-blend-mode\":\"screen\"},\".bg-blend-overlay\":{\"background-blend-mode\":\"overlay\"},\".bg-blend-darken\":{\"background-blend-mode\":\"darken\"},\".bg-blend-lighten\":{\"background-blend-mode\":\"lighten\"},\".bg-blend-color-dodge\":{\"background-blend-mode\":\"color-dodge\"},\".bg-blend-color-burn\":{\"background-blend-mode\":\"color-burn\"},\".bg-blend-hard-light\":{\"background-blend-mode\":\"hard-light\"},\".bg-blend-soft-light\":{\"background-blend-mode\":\"soft-light\"},\".bg-blend-difference\":{\"background-blend-mode\":\"difference\"},\".bg-blend-exclusion\":{\"background-blend-mode\":\"exclusion\"},\".bg-blend-hue\":{\"background-blend-mode\":\"hue\"},\".bg-blend-saturation\":{\"background-blend-mode\":\"saturation\"},\".bg-blend-color\":{\"background-blend-mode\":\"color\"},\".bg-blend-luminosity\":{\"background-blend-mode\":\"luminosity\"}})},mixBlendMode:({addUtilities:t})=>{t({\".mix-blend-normal\":{\"mix-blend-mode\":\"normal\"},\".mix-blend-multiply\":{\"mix-blend-mode\":\"multiply\"},\".mix-blend-screen\":{\"mix-blend-mode\":\"screen\"},\".mix-blend-overlay\":{\"mix-blend-mode\":\"overlay\"},\".mix-blend-darken\":{\"mix-blend-mode\":\"darken\"},\".mix-blend-lighten\":{\"mix-blend-mode\":\"lighten\"},\".mix-blend-color-dodge\":{\"mix-blend-mode\":\"color-dodge\"},\".mix-blend-color-burn\":{\"mix-blend-mode\":\"color-burn\"},\".mix-blend-hard-light\":{\"mix-blend-mode\":\"hard-light\"},\".mix-blend-soft-light\":{\"mix-blend-mode\":\"soft-light\"},\".mix-blend-difference\":{\"mix-blend-mode\":\"difference\"},\".mix-blend-exclusion\":{\"mix-blend-mode\":\"exclusion\"},\".mix-blend-hue\":{\"mix-blend-mode\":\"hue\"},\".mix-blend-saturation\":{\"mix-blend-mode\":\"saturation\"},\".mix-blend-color\":{\"mix-blend-mode\":\"color\"},\".mix-blend-luminosity\":{\"mix-blend-mode\":\"luminosity\"},\".mix-blend-plus-lighter\":{\"mix-blend-mode\":\"plus-lighter\"}})},boxShadow:(()=>{let t=Ce(\"boxShadow\"),e=[\"var(--tw-ring-offset-shadow, 0 0 #0000)\",\"var(--tw-ring-shadow, 0 0 #0000)\",\"var(--tw-shadow)\"].join(\", \");return function({matchUtilities:r,addDefaults:n,theme:i}){n(\" box-shadow\",{\"--tw-ring-offset-shadow\":\"0 0 #0000\",\"--tw-ring-shadow\":\"0 0 #0000\",\"--tw-shadow\":\"0 0 #0000\",\"--tw-shadow-colored\":\"0 0 #0000\"}),r({shadow:a=>{a=t(a);let s=nn(a);for(let o of s)!o.valid||(o.color=\"var(--tw-shadow-color)\");return{\"@defaults box-shadow\":{},\"--tw-shadow\":a===\"none\"?\"0 0 #0000\":a,\"--tw-shadow-colored\":a===\"none\"?\"0 0 #0000\":Vu(s),\"box-shadow\":e}}},{values:i(\"boxShadow\"),type:[\"shadow\"]})}})(),boxShadowColor:({matchUtilities:t,theme:e})=>{t({shadow:r=>({\"--tw-shadow-color\":M(r),\"--tw-shadow\":\"var(--tw-shadow-colored)\"})},{values:Q(e(\"boxShadowColor\")),type:[\"color\",\"any\"]})},outlineStyle:({addUtilities:t})=>{t({\".outline-none\":{outline:\"2px solid transparent\",\"outline-offset\":\"2px\"},\".outline\":{\"outline-style\":\"solid\"},\".outline-dashed\":{\"outline-style\":\"dashed\"},\".outline-dotted\":{\"outline-style\":\"dotted\"},\".outline-double\":{\"outline-style\":\"double\"}})},outlineWidth:T(\"outlineWidth\",[[\"outline\",[\"outline-width\"]]],{type:[\"length\",\"number\",\"percentage\"]}),outlineOffset:T(\"outlineOffset\",[[\"outline-offset\",[\"outline-offset\"]]],{type:[\"length\",\"number\",\"percentage\",\"any\"],supportsNegativeValues:!0}),outlineColor:({matchUtilities:t,theme:e})=>{t({outline:r=>({\"outline-color\":M(r)})},{values:Q(e(\"outlineColor\")),type:[\"color\",\"any\"]})},ringWidth:({matchUtilities:t,addDefaults:e,addUtilities:r,theme:n,config:i})=>{let a=(()=>{var o,l;if(G(i(),\"respectDefaultRingColorOpacity\"))return n(\"ringColor.DEFAULT\");let s=n(\"ringOpacity.DEFAULT\",\"0.5\");return(o=n(\"ringColor\"))!=null&&o.DEFAULT?we((l=n(\"ringColor\"))==null?void 0:l.DEFAULT,s,`rgb(147 197 253 / ${s})`):`rgb(147 197 253 / ${s})`})();e(\"ring-width\",{\"--tw-ring-inset\":\" \",\"--tw-ring-offset-width\":n(\"ringOffsetWidth.DEFAULT\",\"0px\"),\"--tw-ring-offset-color\":n(\"ringOffsetColor.DEFAULT\",\"#fff\"),\"--tw-ring-color\":a,\"--tw-ring-offset-shadow\":\"0 0 #0000\",\"--tw-ring-shadow\":\"0 0 #0000\",\"--tw-shadow\":\"0 0 #0000\",\"--tw-shadow-colored\":\"0 0 #0000\"}),t({ring:s=>({\"@defaults ring-width\":{},\"--tw-ring-offset-shadow\":\"var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)\",\"--tw-ring-shadow\":`var(--tw-ring-inset) 0 0 0 calc(${s} + var(--tw-ring-offset-width)) var(--tw-ring-color)`,\"box-shadow\":[\"var(--tw-ring-offset-shadow)\",\"var(--tw-ring-shadow)\",\"var(--tw-shadow, 0 0 #0000)\"].join(\", \")})},{values:n(\"ringWidth\"),type:\"length\"}),r({\".ring-inset\":{\"@defaults ring-width\":{},\"--tw-ring-inset\":\"inset\"}})},ringColor:({matchUtilities:t,theme:e,corePlugins:r})=>{t({ring:n=>r(\"ringOpacity\")?Z({color:n,property:\"--tw-ring-color\",variable:\"--tw-ring-opacity\"}):{\"--tw-ring-color\":M(n)}},{values:Object.fromEntries(Object.entries(Q(e(\"ringColor\"))).filter(([n])=>n!==\"DEFAULT\")),type:[\"color\",\"any\"]})},ringOpacity:t=>{let{config:e}=t;return T(\"ringOpacity\",[[\"ring-opacity\",[\"--tw-ring-opacity\"]]],{filterDefault:!G(e(),\"respectDefaultRingColorOpacity\")})(t)},ringOffsetWidth:T(\"ringOffsetWidth\",[[\"ring-offset\",[\"--tw-ring-offset-width\"]]],{type:\"length\"}),ringOffsetColor:({matchUtilities:t,theme:e})=>{t({\"ring-offset\":r=>({\"--tw-ring-offset-color\":M(r)})},{values:Q(e(\"ringOffsetColor\")),type:[\"color\",\"any\"]})},blur:({matchUtilities:t,theme:e})=>{t({blur:r=>({\"--tw-blur\":`blur(${r})`,\"@defaults filter\":{},filter:xe})},{values:e(\"blur\")})},brightness:({matchUtilities:t,theme:e})=>{t({brightness:r=>({\"--tw-brightness\":`brightness(${r})`,\"@defaults filter\":{},filter:xe})},{values:e(\"brightness\")})},contrast:({matchUtilities:t,theme:e})=>{t({contrast:r=>({\"--tw-contrast\":`contrast(${r})`,\"@defaults filter\":{},filter:xe})},{values:e(\"contrast\")})},dropShadow:({matchUtilities:t,theme:e})=>{t({\"drop-shadow\":r=>({\"--tw-drop-shadow\":Array.isArray(r)?r.map(n=>`drop-shadow(${n})`).join(\" \"):`drop-shadow(${r})`,\"@defaults filter\":{},filter:xe})},{values:e(\"dropShadow\")})},grayscale:({matchUtilities:t,theme:e})=>{t({grayscale:r=>({\"--tw-grayscale\":`grayscale(${r})`,\"@defaults filter\":{},filter:xe})},{values:e(\"grayscale\")})},hueRotate:({matchUtilities:t,theme:e})=>{t({\"hue-rotate\":r=>({\"--tw-hue-rotate\":`hue-rotate(${r})`,\"@defaults filter\":{},filter:xe})},{values:e(\"hueRotate\"),supportsNegativeValues:!0})},invert:({matchUtilities:t,theme:e})=>{t({invert:r=>({\"--tw-invert\":`invert(${r})`,\"@defaults filter\":{},filter:xe})},{values:e(\"invert\")})},saturate:({matchUtilities:t,theme:e})=>{t({saturate:r=>({\"--tw-saturate\":`saturate(${r})`,\"@defaults filter\":{},filter:xe})},{values:e(\"saturate\")})},sepia:({matchUtilities:t,theme:e})=>{t({sepia:r=>({\"--tw-sepia\":`sepia(${r})`,\"@defaults filter\":{},filter:xe})},{values:e(\"sepia\")})},filter:({addDefaults:t,addUtilities:e})=>{t(\"filter\",{\"--tw-blur\":\" \",\"--tw-brightness\":\" \",\"--tw-contrast\":\" \",\"--tw-grayscale\":\" \",\"--tw-hue-rotate\":\" \",\"--tw-invert\":\" \",\"--tw-saturate\":\" \",\"--tw-sepia\":\" \",\"--tw-drop-shadow\":\" \"}),e({\".filter\":{\"@defaults filter\":{},filter:xe},\".filter-none\":{filter:\"none\"}})},backdropBlur:({matchUtilities:t,theme:e})=>{t({\"backdrop-blur\":r=>({\"--tw-backdrop-blur\":`blur(${r})`,\"@defaults backdrop-filter\":{},\"backdrop-filter\":Se})},{values:e(\"backdropBlur\")})},backdropBrightness:({matchUtilities:t,theme:e})=>{t({\"backdrop-brightness\":r=>({\"--tw-backdrop-brightness\":`brightness(${r})`,\"@defaults backdrop-filter\":{},\"backdrop-filter\":Se})},{values:e(\"backdropBrightness\")})},backdropContrast:({matchUtilities:t,theme:e})=>{t({\"backdrop-contrast\":r=>({\"--tw-backdrop-contrast\":`contrast(${r})`,\"@defaults backdrop-filter\":{},\"backdrop-filter\":Se})},{values:e(\"backdropContrast\")})},backdropGrayscale:({matchUtilities:t,theme:e})=>{t({\"backdrop-grayscale\":r=>({\"--tw-backdrop-grayscale\":`grayscale(${r})`,\"@defaults backdrop-filter\":{},\"backdrop-filter\":Se})},{values:e(\"backdropGrayscale\")})},backdropHueRotate:({matchUtilities:t,theme:e})=>{t({\"backdrop-hue-rotate\":r=>({\"--tw-backdrop-hue-rotate\":`hue-rotate(${r})`,\"@defaults backdrop-filter\":{},\"backdrop-filter\":Se})},{values:e(\"backdropHueRotate\"),supportsNegativeValues:!0})},backdropInvert:({matchUtilities:t,theme:e})=>{t({\"backdrop-invert\":r=>({\"--tw-backdrop-invert\":`invert(${r})`,\"@defaults backdrop-filter\":{},\"backdrop-filter\":Se})},{values:e(\"backdropInvert\")})},backdropOpacity:({matchUtilities:t,theme:e})=>{t({\"backdrop-opacity\":r=>({\"--tw-backdrop-opacity\":`opacity(${r})`,\"@defaults backdrop-filter\":{},\"backdrop-filter\":Se})},{values:e(\"backdropOpacity\")})},backdropSaturate:({matchUtilities:t,theme:e})=>{t({\"backdrop-saturate\":r=>({\"--tw-backdrop-saturate\":`saturate(${r})`,\"@defaults backdrop-filter\":{},\"backdrop-filter\":Se})},{values:e(\"backdropSaturate\")})},backdropSepia:({matchUtilities:t,theme:e})=>{t({\"backdrop-sepia\":r=>({\"--tw-backdrop-sepia\":`sepia(${r})`,\"@defaults backdrop-filter\":{},\"backdrop-filter\":Se})},{values:e(\"backdropSepia\")})},backdropFilter:({addDefaults:t,addUtilities:e})=>{t(\"backdrop-filter\",{\"--tw-backdrop-blur\":\" \",\"--tw-backdrop-brightness\":\" \",\"--tw-backdrop-contrast\":\" \",\"--tw-backdrop-grayscale\":\" \",\"--tw-backdrop-hue-rotate\":\" \",\"--tw-backdrop-invert\":\" \",\"--tw-backdrop-opacity\":\" \",\"--tw-backdrop-saturate\":\" \",\"--tw-backdrop-sepia\":\" \"}),e({\".backdrop-filter\":{\"@defaults backdrop-filter\":{},\"backdrop-filter\":Se},\".backdrop-filter-none\":{\"backdrop-filter\":\"none\"}})},transitionProperty:({matchUtilities:t,theme:e})=>{let r=e(\"transitionTimingFunction.DEFAULT\"),n=e(\"transitionDuration.DEFAULT\");t({transition:i=>({\"transition-property\":i,...i===\"none\"?{}:{\"transition-timing-function\":r,\"transition-duration\":n}})},{values:e(\"transitionProperty\")})},transitionDelay:T(\"transitionDelay\",[[\"delay\",[\"transitionDelay\"]]]),transitionDuration:T(\"transitionDuration\",[[\"duration\",[\"transitionDuration\"]]],{filterDefault:!0}),transitionTimingFunction:T(\"transitionTimingFunction\",[[\"ease\",[\"transitionTimingFunction\"]]],{filterDefault:!0}),willChange:T(\"willChange\",[[\"will-change\",[\"will-change\"]]]),content:T(\"content\",[[\"content\",[\"--tw-content\",[\"content\",\"var(--tw-content)\"]]]])};function Le(t){if(Array.isArray(t))return t;let e=t.split(\"[\").length-1,r=t.split(\"]\").length-1;if(e!==r)throw new Error(`Path is invalid. Has unbalanced brackets: ${t}`);return t.split(/\\.(?![^\\[]*\\])|[\\[\\]]/g).filter(Boolean)}var xf=new Map([[\"{\",\"}\"],[\"[\",\"]\"],[\"(\",\")\"]]),bf=new Map(Array.from(xf.entries()).map(([t,e])=>[e,t])),av=new Set(['\"',\"'\",\"`\"]);function lt(t){let e=[],r=!1;for(let n=0;n<t.length;n++){let i=t[n];if(i===\":\"&&!r&&e.length===0)return!1;if(av.has(i)&&t[n-1]!==\"\\\\\"&&(r=!r),!r&&t[n-1]!==\"\\\\\"){if(xf.has(i))e.push(i);else if(bf.has(i)){let a=bf.get(i);if(e.length<=0||e.pop()!==a)return!1}}}return!(e.length>0)}function pn(t){return(t>0n)-(t<0n)}function Sf(t,e){let r=0n,n=0n;for(let[i,a]of e)t&i&&(r=r|i,n=n|a);return t&~r|n}var dn=class{constructor(){this.offsets={defaults:0n,base:0n,components:0n,utilities:0n,variants:0n,user:0n},this.layerPositions={defaults:0n,base:1n,components:2n,utilities:3n,user:4n,variants:5n},this.reservedVariantBits=0n,this.variantOffsets=new Map}create(e){return{layer:e,parentLayer:e,arbitrary:0n,variants:0n,parallelIndex:0n,index:this.offsets[e]++,options:[]}}arbitraryProperty(){return{...this.create(\"utilities\"),arbitrary:1n}}forVariant(e,r=0){let n=this.variantOffsets.get(e);if(n===void 0)throw new Error(`Cannot find offset for unknown variant ${e}`);return{...this.create(\"variants\"),variants:n<<BigInt(r)}}applyVariantOffset(e,r,n){return n.variant=r.variants,{...e,layer:\"variants\",parentLayer:e.layer===\"variants\"?e.parentLayer:e.layer,variants:e.variants|r.variants,options:n.sort?[].concat(n,e.options):e.options,parallelIndex:kf([e.parallelIndex,r.parallelIndex])}}applyParallelOffset(e,r){return{...e,parallelIndex:BigInt(r)}}recordVariants(e,r){for(let n of e)this.recordVariant(n,r(n))}recordVariant(e,r=1){return this.variantOffsets.set(e,1n<<this.reservedVariantBits),this.reservedVariantBits+=BigInt(r),{...this.create(\"variants\"),variants:this.variantOffsets.get(e)}}compare(e,r){var n;if(e.layer!==r.layer)return this.layerPositions[e.layer]-this.layerPositions[r.layer];if(e.parentLayer!==r.parentLayer)return this.layerPositions[e.parentLayer]-this.layerPositions[r.parentLayer];for(let i of e.options)for(let a of r.options){if(i.id!==a.id||!i.sort||!a.sort)continue;let s=(n=kf([i.variant,a.variant]))!=null?n:0n,o=~(s|s-1n),l=e.variants&o,u=r.variants&o;if(l!==u)continue;let f=i.sort({value:i.value,modifier:i.modifier},{value:a.value,modifier:a.modifier});if(f!==0)return f}return e.variants!==r.variants?e.variants-r.variants:e.parallelIndex!==r.parallelIndex?e.parallelIndex-r.parallelIndex:e.arbitrary!==r.arbitrary?e.arbitrary-r.arbitrary:e.index-r.index}recalculateVariantOffsets(){let e=Array.from(this.variantOffsets.entries()).filter(([i])=>i.startsWith(\"[\")).sort(([i],[a])=>ov(i,a)),r=e.map(([,i])=>i).sort((i,a)=>pn(i-a));return e.map(([,i],a)=>[i,r[a]]).filter(([i,a])=>i!==a)}remapArbitraryVariantOffsets(e){let r=this.recalculateVariantOffsets();return r.length===0?e:e.map(n=>{let[i,a]=n;return i={...i,variants:Sf(i.variants,r)},[i,a]})}sort(e){return e=this.remapArbitraryVariantOffsets(e),e.sort(([r],[n])=>pn(this.compare(r,n)))}};function kf(t){let e=null;for(let r of t)e=e!=null?e:r,e=e>r?e:r;return e}function ov(t,e){let r=t.length,n=e.length,i=r<n?r:n;for(let a=0;a<i;a++){let s=t.charCodeAt(a)-e.charCodeAt(a);if(s!==0)return s}return r-n}var Us={AddVariant:Symbol.for(\"ADD_VARIANT\"),MatchVariant:Symbol.for(\"MATCH_VARIANT\")},zs={Base:1<<0,Dynamic:1<<1};function js(t,e){let r=t.tailwindConfig.prefix;return typeof r==\"function\"?r(e):r+e}function Of({type:t=\"any\",...e}){let r=[].concat(t);return{...e,types:r.map(n=>Array.isArray(n)?{type:n[0],...n[1]}:{type:n,preferOnConflict:!1})}}function lv(t){let e=[],r=\"\",n=0;for(let i=0;i<t.length;i++){let a=t[i];if(a===\"\\\\\")r+=\"\\\\\"+t[++i];else if(a===\"{\")++n,e.push(r.trim()),r=\"\";else if(a===\"}\"){if(--n<0)throw new Error(\"Your { and } are unbalanced.\");e.push(r.trim()),r=\"\"}else r+=a}return r.length>0&&e.push(r.trim()),e=e.filter(i=>i!==\"\"),e}function uv(t,e,{before:r=[]}={}){if(r=[].concat(r),r.length<=0){t.push(e);return}let n=t.length-1;for(let i of r){let a=t.indexOf(i);a!==-1&&(n=Math.min(n,a))}t.splice(n,0,e)}function Af(t){return Array.isArray(t)?t.flatMap(e=>!Array.isArray(e)&&!X(e)?e:nt(e)):Af([t])}function Ef(t,e){return(0,Vs.default)(n=>{let i=[];return e&&e(n),n.walkClasses(a=>{i.push(a.value)}),i}).transformSync(t)}function fv(t,e={containsNonOnDemandable:!1},r=0){let n=[];if(t.type===\"rule\"){let i=function(a){a.walkPseudos(s=>{s.value===\":not\"&&s.remove()})};for(let a of t.selectors){let s=Ef(a,i);s.length===0&&(e.containsNonOnDemandable=!0);for(let o of s)n.push(o)}}else t.type===\"atrule\"&&t.walkRules(i=>{for(let a of i.selectors.flatMap(s=>Ef(s)))n.push(a)});return r===0?[e.containsNonOnDemandable||n.length===0,n]:n}function hn(t){return Af(t).flatMap(e=>{let r=new Map,[n,i]=fv(e);return n&&i.unshift(ke),i.map(a=>(r.has(e)||r.set(e,e),[a,r.get(e)]))})}function mn(t){return t.startsWith(\"@\")||t.includes(\"&\")}function lr(t){t=t.replace(/\\n+/g,\"\").replace(/\\s{1,}/g,\" \").trim();let e=lv(t).map(r=>{if(!r.startsWith(\"@\"))return({format:a})=>a(r);let[,n,i]=/@(.*?)( .+|[({].*)/g.exec(r);return({wrap:a})=>a(R.atRule({name:n,params:i.trim()}))}).reverse();return r=>{for(let n of e)n(r)}}function cv(t,e,{variantList:r,variantMap:n,offsets:i,classList:a}){function s(c,d){return c?(0,Cf.default)(t,c,d):t}function o(c){return it(t.prefix,c)}function l(c,d){return c===ke?ke:d.respectPrefix?e.tailwindConfig.prefix+c:c}function u(c,d,h={}){let y=Le(c),m=s([\"theme\",...y],d);return Ce(y[0])(m,h)}let f=0,p={postcss:R,prefix:o,e:re,config:s,theme:u,corePlugins:c=>Array.isArray(t.corePlugins)?t.corePlugins.includes(c):s([\"corePlugins\",c],!0),variants:()=>[],addBase(c){for(let[d,h]of hn(c)){let y=l(d,{}),m=i.create(\"base\");e.candidateRuleMap.has(y)||e.candidateRuleMap.set(y,[]),e.candidateRuleMap.get(y).push([{sort:m,layer:\"base\"},h])}},addDefaults(c,d){let h={[`@defaults ${c}`]:d};for(let[y,m]of hn(h)){let g=l(y,{});e.candidateRuleMap.has(g)||e.candidateRuleMap.set(g,[]),e.candidateRuleMap.get(g).push([{sort:i.create(\"defaults\"),layer:\"defaults\"},m])}},addComponents(c,d){d=Object.assign({},{preserveSource:!1,respectPrefix:!0,respectImportant:!1},Array.isArray(d)?{}:d);for(let[y,m]of hn(c)){let g=l(y,d);a.add(g),e.candidateRuleMap.has(g)||e.candidateRuleMap.set(g,[]),e.candidateRuleMap.get(g).push([{sort:i.create(\"components\"),layer:\"components\",options:d},m])}},addUtilities(c,d){d=Object.assign({},{preserveSource:!1,respectPrefix:!0,respectImportant:!0},Array.isArray(d)?{}:d);for(let[y,m]of hn(c)){let g=l(y,d);a.add(g),e.candidateRuleMap.has(g)||e.candidateRuleMap.set(g,[]),e.candidateRuleMap.get(g).push([{sort:i.create(\"utilities\"),layer:\"utilities\",options:d},m])}},matchUtilities:function(c,d){d=Of({...{respectPrefix:!0,respectImportant:!0,modifiers:!1},...d});let y=i.create(\"utilities\");for(let m in c){let b=function(O,{isOnlyPlugin:x}){let[A,E,I]=Ts(d.types,O,d,t);if(A===void 0)return[];if(!d.types.some(({type:B})=>B===E))if(x)L.warn([`Unnecessary typehint \\`${E}\\` in \\`${m}-${O}\\`.`,`You can safely update it to \\`${m}-${O.replace(E+\":\",\"\")}\\`.`]);else return[];if(!lt(A))return[];let F={get modifier(){return d.modifiers||L.warn(`modifier-used-without-options-for-${m}`,[\"Your plugin must set `modifiers: true` in its options to support modifiers.\"]),I}},Y=G(t,\"generalizedModifiers\");return[].concat(Y?w(A,F):w(A)).filter(Boolean).map(B=>({[ln(m,O)]:B}))},g=l(m,d),w=c[m];a.add([g,d]);let v=[{sort:y,layer:\"utilities\",options:d},b];e.candidateRuleMap.has(g)||e.candidateRuleMap.set(g,[]),e.candidateRuleMap.get(g).push(v)}},matchComponents:function(c,d){d=Of({...{respectPrefix:!0,respectImportant:!1,modifiers:!1},...d});let y=i.create(\"components\");for(let m in c){let b=function(O,{isOnlyPlugin:x}){let[A,E,I]=Ts(d.types,O,d,t);if(A===void 0)return[];if(!d.types.some(({type:B})=>B===E))if(x)L.warn([`Unnecessary typehint \\`${E}\\` in \\`${m}-${O}\\`.`,`You can safely update it to \\`${m}-${O.replace(E+\":\",\"\")}\\`.`]);else return[];if(!lt(A))return[];let F={get modifier(){return d.modifiers||L.warn(`modifier-used-without-options-for-${m}`,[\"Your plugin must set `modifiers: true` in its options to support modifiers.\"]),I}},Y=G(t,\"generalizedModifiers\");return[].concat(Y?w(A,F):w(A)).filter(Boolean).map(B=>({[ln(m,O)]:B}))},g=l(m,d),w=c[m];a.add([g,d]);let v=[{sort:y,layer:\"components\",options:d},b];e.candidateRuleMap.has(g)||e.candidateRuleMap.set(g,[]),e.candidateRuleMap.get(g).push(v)}},addVariant(c,d,h={}){d=[].concat(d).map(y=>{if(typeof y!=\"string\")return(m={})=>{let{args:g,modifySelectors:w,container:b,separator:v,wrap:O,format:x}=m,A=y(Object.assign({modifySelectors:w,container:b,separator:v},h.type===Us.MatchVariant&&{args:g,wrap:O,format:x}));if(typeof A==\"string\"&&!mn(A))throw new Error(`Your custom variant \\`${c}\\` has an invalid format string. Make sure it's an at-rule or contains a \\`&\\` placeholder.`);return Array.isArray(A)?A.filter(E=>typeof E==\"string\").map(E=>lr(E)):A&&typeof A==\"string\"&&lr(A)(m)};if(!mn(y))throw new Error(`Your custom variant \\`${c}\\` has an invalid format string. Make sure it's an at-rule or contains a \\`&\\` placeholder.`);return lr(y)}),uv(r,c,h),n.set(c,d),e.variantOptions.set(c,h)},matchVariant(c,d,h){var b,v,O;let y=(b=h==null?void 0:h.id)!=null?b:++f,m=c===\"@\",g=G(t,\"generalizedModifiers\");for(let[x,A]of Object.entries((v=h==null?void 0:h.values)!=null?v:{}))x!==\"DEFAULT\"&&p.addVariant(m?`${c}${x}`:`${c}-${x}`,({args:E,container:I})=>d(A,g?{modifier:E==null?void 0:E.modifier,container:I}:{container:I}),{...h,value:A,id:y,type:Us.MatchVariant,variantInfo:zs.Base});let w=\"DEFAULT\"in((O=h==null?void 0:h.values)!=null?O:{});p.addVariant(c,({args:x,container:A})=>{var E;return(x==null?void 0:x.value)===mt&&!w?null:d((x==null?void 0:x.value)===mt?h.values.DEFAULT:(E=x==null?void 0:x.value)!=null?E:typeof x==\"string\"?x:\"\",g?{modifier:x==null?void 0:x.modifier,container:A}:{container:A})},{...h,id:y,type:Us.MatchVariant,variantInfo:zs.Dynamic})}};return p}function _f(t){t.walkAtRules(e=>{[\"responsive\",\"variants\"].includes(e.name)&&(_f(e),e.before(e.nodes),e.remove())})}function pv(t){let e=[];return t.each(r=>{r.type===\"atrule\"&&[\"responsive\",\"variants\"].includes(r.name)&&(r.name=\"layer\",r.params=\"utilities\")}),t.walkAtRules(\"layer\",r=>{if(_f(r),r.params===\"base\"){for(let n of r.nodes)e.push(function({addBase:i}){i(n,{respectPrefix:!1})});r.remove()}else if(r.params===\"components\"){for(let n of r.nodes)e.push(function({addComponents:i}){i(n,{respectPrefix:!1,preserveSource:!0})});r.remove()}else if(r.params===\"utilities\"){for(let n of r.nodes)e.push(function({addUtilities:i}){i(n,{respectPrefix:!1,preserveSource:!0})});r.remove()}}),e}function dv(t,e){let r=Object.entries({...ne,...wf}).map(([o,l])=>t.tailwindConfig.corePlugins.includes(o)?l:null).filter(Boolean),n=t.tailwindConfig.plugins.map(o=>(o.__isOptionsFunction&&(o=o()),typeof o==\"function\"?o:o.handler)),i=pv(e),a=[ne.pseudoElementVariants,ne.pseudoClassVariants,ne.ariaVariants,ne.dataVariants],s=[ne.supportsVariants,ne.directionVariants,ne.reducedMotionVariants,ne.prefersContrastVariants,ne.darkVariants,ne.printVariant,ne.screenVariants,ne.orientationVariants];return[...r,...a,...n,...s,...i]}function hv(t,e){var f,p,c;let r=[],n=new Map;e.variantMap=n;let i=new dn;e.offsets=i;let a=new Set,s=cv(e.tailwindConfig,e,{variantList:r,variantMap:n,offsets:i,classList:a});for(let d of t)if(Array.isArray(d))for(let h of d)h(s);else d==null||d(s);i.recordVariants(r,d=>n.get(d).length);for(let[d,h]of n.entries())e.variantMap.set(d,h.map((y,m)=>[i.forVariant(d,m),y]));let o=((f=e.tailwindConfig.safelist)!=null?f:[]).filter(Boolean);if(o.length>0){let d=[];for(let h of o){if(typeof h==\"string\"){e.changedContent.push({content:h,extension:\"html\"});continue}if(h instanceof RegExp){L.warn(\"root-regex\",[\"Regular expressions in `safelist` work differently in Tailwind CSS v3.0.\",\"Update your `safelist` configuration to eliminate this warning.\",\"https://tailwindcss.com/docs/content-configuration#safelisting-classes\"]);continue}d.push(h)}if(d.length>0){let h=new Map,y=e.tailwindConfig.prefix.length,m=d.some(g=>g.pattern.source.includes(\"!\"));for(let g of a){let w=Array.isArray(g)?(()=>{var A;let[b,v]=g,x=Object.keys((A=v==null?void 0:v.values)!=null?A:{}).map(E=>or(b,E));return v!=null&&v.supportsNegativeValues&&(x=[...x,...x.map(E=>\"-\"+E)],x=[...x,...x.map(E=>E.slice(0,y)+\"-\"+E.slice(y))]),v.types.some(({type:E})=>E===\"color\")&&(x=[...x,...x.flatMap(E=>Object.keys(e.tailwindConfig.theme.opacity).map(I=>`${E}/${I}`))]),m&&(v==null?void 0:v.respectImportant)&&(x=[...x,...x.map(E=>\"!\"+E)]),x})():[g];for(let b of w)for(let{pattern:v,variants:O=[]}of d)if(v.lastIndex=0,h.has(v)||h.set(v,0),!!v.test(b)){h.set(v,h.get(v)+1),e.changedContent.push({content:b,extension:\"html\"});for(let x of O)e.changedContent.push({content:x+e.tailwindConfig.separator+b,extension:\"html\"})}}for(let[g,w]of h.entries())w===0&&L.warn([`The safelist pattern \\`${g}\\` doesn't match any Tailwind CSS classes.`,\"Fix this pattern or remove it from your `safelist` configuration.\",\"https://tailwindcss.com/docs/content-configuration#safelisting-classes\"])}}let l=(c=[].concat((p=e.tailwindConfig.darkMode)!=null?p:\"media\")[1])!=null?c:\"dark\",u=[js(e,l),js(e,\"group\"),js(e,\"peer\")];e.getClassOrder=function(h){let y=[...h].sort((b,v)=>b===v?0:b<v?-1:1),m=new Map(y.map(b=>[b,null])),g=gn(new Set(y),e);g=e.offsets.sort(g);let w=BigInt(u.length);for(let[,b]of g)m.set(b.raws.tailwind.candidate,w++);return h.map(b=>{var x;let v=(x=m.get(b))!=null?x:null,O=u.indexOf(b);return v===null&&O!==-1&&(v=BigInt(O)),[b,v]})},e.getClassList=function(h={}){var m,g,w,b;let y=[];for(let v of a)if(Array.isArray(v)){let[O,x]=v,A=[],E=Object.keys((m=x==null?void 0:x.modifiers)!=null?m:{});(g=x==null?void 0:x.types)!=null&&g.some(({type:Y})=>Y===\"color\")&&E.push(...Object.keys((w=e.tailwindConfig.theme.opacity)!=null?w:{}));let I={modifiers:E},F=h.includeMetadata&&E.length>0;for(let[Y,K]of Object.entries((b=x==null?void 0:x.values)!=null?b:{})){if(K==null)continue;let B=or(O,Y);if(y.push(F?[B,I]:B),(x==null?void 0:x.supportsNegativeValues)&&Re(K)){let qe=or(O,`-${Y}`);A.push(F?[qe,I]:qe)}}y.push(...A)}else y.push(v);return y},e.getVariants=function(){var y;let h=[];for(let[m,g]of e.variantOptions.entries())g.variantInfo!==zs.Base&&h.push({name:m,isArbitrary:g.type===Symbol.for(\"MATCH_VARIANT\"),values:Object.keys((y=g.values)!=null?y:{}),hasDash:m!==\"@\",selectors({modifier:w,value:b}={}){var Ca,Aa,_a,Ta;let v=\"__TAILWIND_PLACEHOLDER__\",O=R.rule({selector:`.${v}`}),x=R.root({nodes:[O.clone()]}),A=x.toString(),E=((Ca=e.variantMap.get(m))!=null?Ca:[]).flatMap(([ie,se])=>se),I=[];for(let ie of E){let se=[],hr={args:{modifier:w,value:(_a=(Aa=g.values)==null?void 0:Aa[b])!=null?_a:b},separator:e.tailwindConfig.separator,modifySelectors(pe){return x.each(qn=>{qn.type===\"rule\"&&(qn.selectors=qn.selectors.map(Pa=>pe({get className(){return Ws(Pa)},selector:Pa})))}),x},format(pe){se.push(pe)},wrap(pe){se.push(`@${pe.name} ${pe.params} { & }`)},container:x},mr=ie(hr);if(se.length>0&&I.push(se),Array.isArray(mr))for(let pe of mr)se=[],pe(hr),I.push(se)}let F=[],Y=x.toString();A!==Y&&(x.walkRules(ie=>{let se=ie.selector,hr=(0,Vs.default)(mr=>{mr.walkClasses(pe=>{pe.value=`${m}${e.tailwindConfig.separator}${pe.value}`})}).processSync(se);F.push(se.replace(hr,\"&\").replace(v,\"&\"))}),x.walkAtRules(ie=>{F.push(`@${ie.name} (${ie.params}) { & }`)}));let K=!(b in((Ta=g.values)!=null?Ta:{}));I=I.map(ie=>ie.map(se=>({format:se,isArbitraryVariant:K}))),F=F.map(ie=>({format:ie,isArbitraryVariant:K}));let B={candidate:v,context:e},qe=I.map(ie=>on(`.${v}`,ot(ie,B),B).replace(`.${v}`,\"&\").replace(\"{ & }\",\"\").trim());return F.length>0&&qe.push(ot(F,B).toString().replace(`.${v}`,\"&\")),qe}});return h}}function Tf(t,e){!t.classCache.has(e)||(t.notClassCache.add(e),t.classCache.delete(e),t.applyClassCache.delete(e),t.candidateRuleMap.delete(e),t.candidateRuleCache.delete(e),t.stylesheetCache=null)}function mv(t,e){let r=e.raws.tailwind.candidate;if(!!r){for(let n of t.ruleCache)n[1].raws.tailwind.candidate===r&&t.ruleCache.delete(n);Tf(t,r)}}function Pf(t,e=[],r=R.root()){var a;let n={disposables:[],ruleCache:new Set,candidateRuleCache:new Map,classCache:new Map,applyClassCache:new Map,notClassCache:new Set((a=t.blocklist)!=null?a:[]),postCssNodeCache:new Map,candidateRuleMap:new Map,tailwindConfig:t,changedContent:e,variantMap:new Map,stylesheetCache:null,variantOptions:new Map,markInvalidUtilityCandidate:s=>Tf(n,s),markInvalidUtilityNode:s=>mv(n,s)},i=dv(n,r);return hv(i,n),n}var Bs=H(ve());function yn(t,e){let r=(0,Bs.default)().astSync(t);return r.each(n=>{n.nodes[0].type===\"pseudo\"&&n.nodes[0].value===\":is\"&&n.nodes.every(a=>a.type!==\"combinator\")||(n.nodes=[Bs.default.pseudo({value:\":is\",nodes:[n.clone()]})]),at(n)}),`${e} ${r.toString()}`}var gv=(0,wn.default)(t=>t.first.filter(({type:e})=>e===\"class\").pop().value);function Ws(t){return gv.transformSync(t)}function*yv(t){let e=1/0;for(;e>=0;){let r,n=!1;if(e===1/0&&t.endsWith(\"]\")){let s=t.indexOf(\"[\");t[s-1]===\"-\"?r=s-1:t[s-1]===\"/\"?(r=s-1,n=!0):r=-1}else e===1/0&&t.includes(\"/\")?(r=t.lastIndexOf(\"/\"),n=!0):r=t.lastIndexOf(\"-\",e);if(r<0)break;let i=t.slice(0,r),a=t.slice(n?r:r+1);e=r-1,!(i===\"\"||a===\"/\")&&(yield[i,a])}}function vv(t,e){if(t.length===0||e.tailwindConfig.prefix===\"\")return t;for(let r of t){let[n]=r;if(n.options.respectPrefix){let i=R.root({nodes:[r[1].clone()]}),a=r[1].raws.tailwind.classCandidate;i.walkRules(s=>{let o=a.startsWith(\"-\");s.selector=it(e.tailwindConfig.prefix,s.selector,o)}),r[1]=i.nodes[0]}}return t}function wv(t,e){if(t.length===0)return t;let r=[];for(let[n,i]of t){let a=R.root({nodes:[i.clone()]});a.walkRules(s=>{let o=(0,wn.default)().astSync(s.selector);o.each(l=>Ms(l,e)),af(o,l=>l===e?`!${l}`:l),s.selector=o.toString(),s.walkDecls(l=>l.important=!0)}),r.push([{...n,important:!0},a.nodes[0]])}return r}function bv(t,e,r){var i;if(e.length===0)return e;let n={modifier:null,value:mt};{let[a,...s]=ee(t,\"/\");if(s.length>1&&(a=a+\"/\"+s.slice(0,-1).join(\"/\"),s=s.slice(-1)),s.length&&!r.variantMap.has(t)&&(t=a,n.modifier=s[0],!G(r.tailwindConfig,\"generalizedModifiers\")))return[]}if(t.endsWith(\"]\")&&!t.startsWith(\"[\")){let a=/(.)(-?)\\[(.*)\\]/g.exec(t);if(a){let[,s,o,l]=a;if(s===\"@\"&&o===\"-\")return[];if(s!==\"@\"&&o===\"\")return[];t=t.replace(`${o}[${l}]`,\"\"),n.value=l}}if(Ys(t)&&!r.variantMap.has(t)){let a=r.offsets.recordVariant(t),s=z(t.slice(1,-1)),o=ee(s,\",\");if(o.length>1)return[];if(!o.every(mn))return[];let l=o.map((u,f)=>[r.offsets.applyParallelOffset(a,f),lr(u.trim())]);r.variantMap.set(t,l)}if(r.variantMap.has(t)){let a=Ys(t),s=r.variantMap.get(t).slice(),o=[];for(let[l,u]of e){if(l.layer===\"user\")continue;let f=R.root({nodes:[u.clone()]});for(let[p,c,d]of s){let m=function(){h.raws.neededBackup||(h.raws.neededBackup=!0,h.walkRules(v=>v.raws.originalSelector=v.selector))},g=function(v){return m(),h.each(O=>{O.type===\"rule\"&&(O.selectors=O.selectors.map(x=>v({get className(){return Ws(x)},selector:x})))}),h},h=(d!=null?d:f).clone(),y=[],w=c({get container(){return m(),h},separator:r.tailwindConfig.separator,modifySelectors:g,wrap(v){let O=h.nodes;h.removeAll(),v.append(O),h.append(v)},format(v){y.push({format:v,isArbitraryVariant:a})},args:n});if(Array.isArray(w)){for(let[v,O]of w.entries())s.push([r.offsets.applyParallelOffset(p,v),O,h.clone()]);continue}if(typeof w==\"string\"&&y.push({format:w,isArbitraryVariant:a}),w===null)continue;h.raws.neededBackup&&(delete h.raws.neededBackup,h.walkRules(v=>{let O=v.raws.originalSelector;if(!O||(delete v.raws.originalSelector,O===v.selector))return;let x=v.selector,A=(0,wn.default)(E=>{E.walkClasses(I=>{I.value=`${t}${r.tailwindConfig.separator}${I.value}`})}).processSync(O);y.push({format:x.replace(A,\"&\"),isArbitraryVariant:a}),v.selector=O})),h.nodes[0].raws.tailwind={...h.nodes[0].raws.tailwind,parentLayer:l.layer};let b=[{...l,sort:r.offsets.applyVariantOffset(l.sort,p,Object.assign(n,r.variantOptions.get(t))),collectedFormats:((i=l.collectedFormats)!=null?i:[]).concat(y)},h.nodes[0]];o.push(b)}}return o}return[]}function Gs(t,e,r={}){return!X(t)&&!Array.isArray(t)?[[t],r]:Array.isArray(t)?Gs(t[0],e,t[1]):(e.has(t)||e.set(t,nt(t)),[e.get(t),r])}var xv=/^[a-z_-]/;function Sv(t){return xv.test(t)}function kv(t){if(!t.includes(\"://\"))return!1;try{let e=new URL(t);return e.scheme!==\"\"&&e.host!==\"\"}catch{return!1}}function If(t){let e=!0;return t.walkDecls(r=>{if(!Rf(r.prop,r.value))return e=!1,!1}),e}function Rf(t,e){if(kv(`${t}:${e}`))return!1;try{return R.parse(`a{${t}:${e}}`).toResult(),!0}catch{return!1}}function Ov(t,e){var s;let[,r,n]=(s=t.match(/^\\[([a-zA-Z0-9-_]+):(\\S+)\\]$/))!=null?s:[];if(n===void 0||!Sv(r)||!lt(n))return null;let i=z(n);return Rf(r,i)?[[{sort:e.offsets.arbitraryProperty(),layer:\"utilities\"},()=>({[Fs(t)]:{[r]:i}})]]:null}function*Ev(t,e){e.candidateRuleMap.has(t)&&(yield[e.candidateRuleMap.get(t),\"DEFAULT\"]),yield*function*(o){o!==null&&(yield[o,\"DEFAULT\"])}(Ov(t,e));let r=t,n=!1,i=e.tailwindConfig.prefix,a=i.length,s=r.startsWith(i)||r.startsWith(`-${i}`);r[a]===\"-\"&&s&&(n=!0,r=i+r.slice(a+1)),n&&e.candidateRuleMap.has(r)&&(yield[e.candidateRuleMap.get(r),\"-DEFAULT\"]);for(let[o,l]of yv(r))e.candidateRuleMap.has(o)&&(yield[e.candidateRuleMap.get(o),n?`-${l}`:l])}function Cv(t,e){return t===ke?[ke]:ee(t,e)}function*Av(t,e){var r,n;for(let i of t)i[1].raws.tailwind={...i[1].raws.tailwind,classCandidate:e,preserveSource:(n=(r=i[0].options)==null?void 0:r.preserveSource)!=null?n:!1},yield i}function*bn(t,e,r=t){var o,l,u,f;let n=e.tailwindConfig.separator,[i,...a]=Cv(t,n).reverse(),s=!1;if(i.startsWith(\"!\")&&(s=!0,i=i.slice(1)),G(e.tailwindConfig,\"variantGrouping\")&&i.startsWith(\"(\")&&i.endsWith(\")\")){let p=a.slice().reverse().join(n);for(let c of ee(i.slice(1,-1),\",\"))yield*bn(p+n+c,e,r)}for(let p of Ev(i,e)){let c=[],d=new Map,[h,y]=p,m=h.length===1;for(let[g,w]of h){let b=[];if(typeof w==\"function\")for(let v of[].concat(w(y,{isOnlyPlugin:m}))){let[O,x]=Gs(v,e.postCssNodeCache);for(let A of O)b.push([{...g,options:{...g.options,...x}},A])}else if(y===\"DEFAULT\"||y===\"-DEFAULT\"){let v=w,[O,x]=Gs(v,e.postCssNodeCache);for(let A of O)b.push([{...g,options:{...g.options,...x}},A])}if(b.length>0){let v=Array.from(Ps((l=(o=g.options)==null?void 0:o.types)!=null?l:[],y,(u=g.options)!=null?u:{},e.tailwindConfig)).map(([O,x])=>x);v.length>0&&d.set(b,v),c.push(b)}}if(Ys(y)){if(c.length>1){let b=function(O){return O.length===1?O[0]:O.find(x=>{let A=d.get(x);return x.some(([{options:E},I])=>If(I)?E.types.some(({type:F,preferOnConflict:Y})=>A.includes(F)&&Y):!1)})},[g,w]=c.reduce((O,x)=>(x.some(([{options:E}])=>E.types.some(({type:I})=>I===\"any\"))?O[0].push(x):O[1].push(x),O),[[],[]]),v=(f=b(w))!=null?f:b(g);if(v)c=[v];else{let O=c.map(A=>{var E;return new Set([...(E=d.get(A))!=null?E:[]])});for(let A of O)for(let E of A){let I=!1;for(let F of O)A!==F&&F.has(E)&&(F.delete(E),I=!0);I&&A.delete(E)}let x=[];for(let[A,E]of O.entries())for(let I of E){let F=c[A].map(([,Y])=>Y).flat().map(Y=>Y.toString().split(`\n`).slice(1,-1).map(K=>K.trim()).map(K=>`      ${K}`).join(`\n`)).join(`\n\n`);x.push(`  Use \\`${t.replace(\"[\",`[${I}:`)}\\` for \\`${F.trim()}\\``);break}L.warn([`The class \\`${t}\\` is ambiguous and matches multiple utilities.`,...x,`If this is content and not a class, replace it with \\`${t.replace(\"[\",\"&lsqb;\").replace(\"]\",\"&rsqb;\")}\\` to silence this warning.`]);continue}}c=c.map(g=>g.filter(w=>If(w[1])))}c=c.flat(),c=Array.from(Av(c,i)),c=vv(c,e),s&&(c=wv(c,i));for(let g of a)c=bv(g,c,e);for(let g of c)g[1].raws.tailwind={...g[1].raws.tailwind,candidate:t},g=_v(g,{context:e,candidate:t,original:r}),g!==null&&(yield g)}}function _v(t,{context:e,candidate:r,original:n}){if(!t[0].collectedFormats)return t;let i=!0,a;try{a=ot(t[0].collectedFormats,{context:e,candidate:r})}catch{return null}let s=R.root({nodes:[t[1].clone()]});return s.walkRules(o=>{if(!vn(o))try{o.selector=on(o.selector,a,{candidate:n,context:e})}catch{return i=!1,!1}}),i?(t[1]=s.nodes[0],t):null}function vn(t){return t.parent&&t.parent.type===\"atrule\"&&t.parent.name===\"keyframes\"}function Tv(t){if(t===!0)return e=>{vn(e)||e.walkDecls(r=>{r.parent.type===\"rule\"&&!vn(r.parent)&&(r.important=!0)})};if(typeof t==\"string\")return e=>{vn(e)||(e.selectors=e.selectors.map(r=>yn(r,t)))}}function gn(t,e){var i;let r=[],n=Tv(e.tailwindConfig.important);for(let a of t){if(e.notClassCache.has(a))continue;if(e.candidateRuleCache.has(a)){r=r.concat(Array.from(e.candidateRuleCache.get(a)));continue}let s=Array.from(bn(a,e));if(s.length===0){e.notClassCache.add(a);continue}e.classCache.set(a,s);let o=(i=e.candidateRuleCache.get(a))!=null?i:new Set;e.candidateRuleCache.set(a,o);for(let l of s){let[{sort:u,options:f},p]=l;if(f.respectImportant&&n){let d=R.root({nodes:[p.clone()]});d.walkRules(n),p=d.nodes[0]}let c=[u,p];o.add(c),e.ruleCache.add(c),r.push(c)}}return r}function Ys(t){return t.startsWith(\"[\")&&t.endsWith(\"]\")}function Ge(t,e=void 0,r=void 0){return t.map(n=>{var s;let i=n.clone(),a=((s=n.raws.tailwind)==null?void 0:s.preserveSource)!==!0||!i.source;return e!==void 0&&a&&(i.source=e,\"walk\"in i&&i.walk(o=>{o.source=e})),r!==void 0&&(i.raws.tailwind={...i.raws.tailwind,...r}),i})}var Df=/[\\\\^$.*+?()[\\]{}|]/g,Pv=RegExp(Df.source);function xn(t){return t=Array.isArray(t)?t:[t],t=t.map(e=>e instanceof RegExp?e.source:e),t.join(\"\")}function ce(t){return new RegExp(xn(t),\"g\")}function ut(t){return`(?:${t.map(xn).join(\"|\")})`}function Hs(t){return`(?:${xn(t)})?`}function Mf(t){return`(?:${xn(t)})*`}function Ff(t){return t&&Pv.test(t)?t.replace(Df,\"\\\\$&\"):t||\"\"}function Lf(t){let e=Array.from(Rv(t));return r=>{var i;let n=[];for(let a of e)n=[...n,...(i=r.match(a))!=null?i:[]];return n.filter(a=>a!==void 0).map(Fv)}}function*Rv(t){let e=t.tailwindConfig.separator,r=G(t.tailwindConfig,\"variantGrouping\"),n=t.tailwindConfig.prefix!==\"\"?Hs(ce([/-?/,Ff(t.tailwindConfig.prefix)])):\"\",i=ut([/\\[[^\\s:'\"`]+:[^\\s\\[\\]]+\\]/,/\\[[^\\s:'\"`]+:[^\\s]+?\\[[^\\s]+\\][^\\s]+?\\]/,ce([/-?(?:\\w+)/,Hs(ut([ce([/-(?:\\w+-)*\\[[^\\s:]+\\]/,/(?![{([]])/,/(?:\\/[^\\s'\"`\\\\><$]*)?/]),ce([/-(?:\\w+-)*\\[[^\\s]+\\]/,/(?![{([]])/,/(?:\\/[^\\s'\"`\\\\$]*)?/]),/[-\\/][^\\s'\"`\\\\$={><]*/]))])]),a=[ut([ce([/@\\[[^\\s\"'`]+\\](\\/[^\\s\"'`]+)?/,e]),ce([/([^\\s\"'`\\[\\\\]+-)?\\[[^\\s\"'`]+\\]/,e]),ce([/[^\\s\"'`\\[\\\\]+/,e])]),ut([ce([/([^\\s\"'`\\[\\\\]+-)?\\[[^\\s`]+\\]/,e]),ce([/[^\\s`\\[\\\\]+/,e])])];for(let s of a)yield ce([\"((?=((\",s,\")+))\\\\2)?\",/!?/,n,r?ut([ce([/\\(/,i,Mf([/,/,i]),/\\)/]),i]):i]);yield/[^<>\"'`\\s.(){}[\\]#=%$]*[^<>\"'`\\s.(){}[\\]#=%:$]/g}var Dv=/([\\[\\]'\"`])([^\\[\\]'\"`])?/g,Mv=/[^\"'`\\s<>\\]]+/;function Fv(t){if(!t.includes(\"-[\"))return t;let e=0,r=[],n=t.matchAll(Dv);n=Array.from(n).flatMap(i=>{let[,...a]=i;return a.map((s,o)=>Object.assign([],i,{index:i.index+o,0:s}))});for(let i of n){let a=i[0],s=r[r.length-1];if(a===s?r.pop():(a===\"'\"||a==='\"'||a===\"`\")&&r.push(a),!s){if(a===\"[\"){e++;continue}else if(a===\"]\"){e--;continue}if(e<0)return t.substring(0,i.index-1);if(e===0&&!Mv.test(a))return t.substring(0,i.index)}}return t}var Ae=Vn,Nf={DEFAULT:Lf},qf={DEFAULT:t=>t,svelte:t=>t.replace(/(?:^|\\s)class:/g,\" \")};function Lv(t,e){let r=t.tailwindConfig.content.extract;return r[e]||r.DEFAULT||Nf[e]||Nf.DEFAULT(t)}function Nv(t,e){let r=t.content.transform;return r[e]||r.DEFAULT||qf[e]||qf.DEFAULT}var ur=new WeakMap;function qv(t,e,r,n){ur.has(e)||ur.set(e,new $f.default({maxSize:25e3}));for(let i of t.split(`\n`))if(i=i.trim(),!n.has(i))if(n.add(i),ur.get(e).has(i))for(let a of ur.get(e).get(i))r.add(a);else{let a=e(i).filter(o=>o!==\"!*\"),s=new Set(a);for(let o of s)r.add(o);ur.get(e).set(i,s)}}function $v(t,e){let r=e.offsets.sort(t),n={base:new Set,defaults:new Set,components:new Set,utilities:new Set,variants:new Set};for(let[i,a]of r)n[i.layer].add(a);return n}function Qs(t){return e=>{var h;let r={base:null,components:null,utilities:null,variants:null};if(e.walkAtRules(y=>{y.name===\"tailwind\"&&Object.keys(r).includes(y.params)&&(r[y.params]=y)}),Object.values(r).every(y=>y===null))return e;let n=new Set([...(h=t.candidates)!=null?h:[],ke]),i=new Set;Ae.DEBUG&&console.time(\"Reading changed files\");for(let{file:y,content:m,extension:g}of t.changedContent){let w=Nv(t.tailwindConfig,g),b=Lv(t,g);m=y?ht.readFileSync(y,\"utf8\"):m,qv(w(m),b,n,i)}Ae.DEBUG&&console.timeEnd(\"Reading changed files\");let a=t.classCache.size;Ae.DEBUG&&console.time(\"Generate rules\"),Ae.DEBUG&&console.time(\"Sorting candidates\");let s=new Set([...n].sort((y,m)=>y===m?0:y<m?-1:1));Ae.DEBUG&&console.timeEnd(\"Sorting candidates\"),gn(s,t),Ae.DEBUG&&console.timeEnd(\"Generate rules\"),Ae.DEBUG&&console.time(\"Build stylesheet\"),(t.stylesheetCache===null||t.classCache.size!==a)&&(t.stylesheetCache=$v([...t.ruleCache],t)),Ae.DEBUG&&console.timeEnd(\"Build stylesheet\");let{defaults:o,base:l,components:u,utilities:f,variants:p}=t.stylesheetCache;r.base&&(r.base.before(Ge([...l,...o],r.base.source,{layer:\"base\"})),r.base.remove()),r.components&&(r.components.before(Ge([...u],r.components.source,{layer:\"components\"})),r.components.remove()),r.utilities&&(r.utilities.before(Ge([...f],r.utilities.source,{layer:\"utilities\"})),r.utilities.remove());let c=Array.from(p).filter(y=>{var g;let m=(g=y.raws.tailwind)==null?void 0:g.parentLayer;return m===\"components\"?r.components!==null:m===\"utilities\"?r.utilities!==null:!0});r.variants?(r.variants.before(Ge(c,r.variants.source,{layer:\"variants\"})),r.variants.remove()):c.length>0&&e.append(Ge(c,e.source,{layer:\"variants\"}));let d=c.some(y=>{var m;return((m=y.raws.tailwind)==null?void 0:m.parentLayer)===\"utilities\"});r.utilities&&f.size===0&&!d&&L.warn(\"content-problems\",[\"No utility classes were detected in your source files. If this is unexpected, double-check the `content` option in your Tailwind CSS configuration.\",\"https://tailwindcss.com/docs/content-configuration\"]),Ae.DEBUG&&(console.log(\"Potential classes: \",n.size),console.log(\"Active contexts: \",Wn.size)),t.changedContent=[],e.walkAtRules(\"layer\",y=>{Object.keys(r).includes(y.params)&&y.remove()})}}var kn=H(ve());function Sn(t){let e=new Map;R.root({nodes:[t.clone()]}).walkRules(a=>{(0,kn.default)(s=>{s.walkClasses(o=>{let l=o.parent.toString(),u=e.get(l);u||e.set(l,u=new Set),u.add(o.value)})}).processSync(a.selector)});let n=Array.from(e.values(),a=>Array.from(a)),i=n.flat();return Object.assign(i,{groups:n})}var Uv=(0,kn.default)();function Js(t){return Uv.astSync(t)}function Uf(t,e){let r=new Set;for(let n of t)r.add(n.split(e).pop());return Array.from(r)}function jf(t,e){let r=t.tailwindConfig.prefix;return typeof r==\"function\"?r(e):r+e}function*Vf(t){for(yield t;t.parent;)yield t.parent,t=t.parent}function jv(t,e={}){let r=t.nodes;t.nodes=[];let n=t.clone(e);return t.nodes=r,n}function zv(t){for(let e of Vf(t))if(t!==e){if(e.type===\"root\")break;t=jv(e,{nodes:[t]})}return t}function Vv(t,e){let r=new Map;return t.walkRules(n=>{var s;for(let o of Vf(n))if(((s=o.raws.tailwind)==null?void 0:s.layer)!==void 0)return;let i=zv(n),a=e.offsets.create(\"user\");for(let o of Sn(n)){let l=r.get(o)||[];r.set(o,l),l.push([{layer:\"user\",sort:a,important:!1},i])}}),r}function Wv(t,e){for(let r of t){if(e.notClassCache.has(r)||e.applyClassCache.has(r))continue;if(e.classCache.has(r)){e.applyClassCache.set(r,e.classCache.get(r).map(([i,a])=>[i,a.clone()]));continue}let n=Array.from(bn(r,e));if(n.length===0){e.notClassCache.add(r);continue}e.applyClassCache.set(r,n)}return e.applyClassCache}function Bv(t){let e=null;return{get:r=>(e=e||t(),e.get(r)),has:r=>(e=e||t(),e.has(r))}}function Gv(t){return{get:e=>t.flatMap(r=>r.get(e)||[]),has:e=>t.some(r=>r.has(e))}}function zf(t){let e=t.split(/[\\s\\t\\n]+/g);return e[e.length-1]===\"!important\"?[e.slice(0,-1),!0]:[e,!1]}function Wf(t,e,r){let n=new Set,i=[];if(t.walkAtRules(\"apply\",l=>{let[u]=zf(l.params);for(let f of u)n.add(f);i.push(l)}),i.length===0)return;let a=Gv([r,Wv(n,e)]);function s(l,u,f){let p=Js(l),c=Js(u),h=Js(`.${re(f)}`).nodes[0].nodes[0];return p.each(y=>{let m=new Set;c.each(g=>{let w=!1;g=g.clone(),g.walkClasses(b=>{b.value===h.value&&(w||(b.replaceWith(...y.nodes.map(v=>v.clone())),m.add(g),w=!0))})});for(let g of m){let w=[[]];for(let b of g.nodes)b.type===\"combinator\"?(w.push(b),w.push([])):w[w.length-1].push(b);g.nodes=[];for(let b of w)Array.isArray(b)&&b.sort((v,O)=>v.type===\"tag\"&&O.type===\"class\"?-1:v.type===\"class\"&&O.type===\"tag\"?1:v.type===\"class\"&&O.type===\"pseudo\"&&O.value.startsWith(\"::\")?-1:v.type===\"pseudo\"&&v.value.startsWith(\"::\")&&O.type===\"class\"?1:0),g.nodes=g.nodes.concat(b)}y.replaceWith(...m)}),p.toString()}let o=new Map;for(let l of i){let[u]=o.get(l.parent)||[[],l.source];o.set(l.parent,[u,l.source]);let[f,p]=zf(l.params);if(l.parent.type===\"atrule\"){if(l.parent.name===\"screen\"){let c=l.parent.params;throw l.error(`@apply is not supported within nested at-rules like @screen. We suggest you write this as @apply ${f.map(d=>`${c}:${d}`).join(\" \")} instead.`)}throw l.error(`@apply is not supported within nested at-rules like @${l.parent.name}. You can fix this by un-nesting @${l.parent.name}.`)}for(let c of f){if([jf(e,\"group\"),jf(e,\"peer\")].includes(c))throw l.error(`@apply should not be used with the '${c}' utility`);if(!a.has(c))throw l.error(`The \\`${c}\\` class does not exist. If \\`${c}\\` is a custom class, make sure it is defined within a \\`@layer\\` directive.`);let d=a.get(c);u.push([c,p,d])}}for(let[l,[u,f]]of o){let p=[];for(let[d,h,y]of u){let m=[d,...Uf([d],e.tailwindConfig.separator)];for(let[g,w]of y){let b=Sn(l),v=Sn(w);if(v=v.groups.filter(E=>E.some(I=>m.includes(I))).flat(),v=v.concat(Uf(v,e.tailwindConfig.separator)),b.some(E=>v.includes(E)))throw w.error(`You cannot \\`@apply\\` the \\`${d}\\` utility here because it creates a circular dependency.`);let x=R.root({nodes:[w.clone()]});x.walk(E=>{E.source=f}),(w.type!==\"atrule\"||w.type===\"atrule\"&&w.name!==\"keyframes\")&&x.walkRules(E=>{if(!Sn(E).some(B=>B===d)){E.remove();return}let I=typeof e.tailwindConfig.important==\"string\"?e.tailwindConfig.important:null,Y=l.raws.tailwind!==void 0&&I&&l.selector.indexOf(I)===0?l.selector.slice(I.length):l.selector;E.selector=s(Y,E.selector,d),I&&Y!==l.selector&&(E.selector=yn(E.selector,I)),E.walkDecls(B=>{B.important=g.important||h});let K=(0,kn.default)().astSync(E.selector);K.each(B=>at(B)),E.selector=K.toString()}),x.nodes[0]&&p.push([g.sort,x.nodes[0]])}}let c=e.offsets.sort(p).map(d=>d[1]);l.after(c)}for(let l of i)l.parent.nodes.length>1?l.remove():l.parent.remove();Wf(t,e,r)}function Xs(t){return e=>{let r=Bv(()=>Vv(e,t));Wf(e,t,r)}}var fr=H(qs()),oc=H(Bf());var oa=H(sc());function sa(t){return typeof t==\"object\"&&t!==null}function tw(t,e){let r=Le(e);do if(r.pop(),(0,fr.default)(t,r)!==void 0)break;while(r.length);return r.length?r:void 0}function ct(t){return typeof t==\"string\"?t:t.reduce((e,r,n)=>r.includes(\".\")?`${e}[${r}]`:n===0?r:`${e}.${r}`,\"\")}function lc(t){return t.map(e=>`'${e}'`).join(\", \")}function ac(t){return lc(Object.keys(t))}function aa(t,e,r,n={}){let i=Array.isArray(e)?ct(e):e.replace(/^['\"]+|['\"]+$/g,\"\"),a=Array.isArray(e)?e:Le(i),s=(0,fr.default)(t.theme,a,r);if(s===void 0){let l=`'${i}' does not exist in your theme config.`,u=a.slice(0,-1),f=(0,fr.default)(t.theme,u);if(sa(f)){let p=Object.keys(f).filter(d=>aa(t,[...u,d]).isValid),c=(0,oc.default)(a[a.length-1],p);c?l+=` Did you mean '${ct([...u,c])}'?`:p.length>0&&(l+=` '${ct(u)}' has the following valid keys: ${lc(p)}`)}else{let p=tw(t.theme,i);if(p){let c=(0,fr.default)(t.theme,p);sa(c)?l+=` '${ct(p)}' has the following keys: ${ac(c)}`:l+=` '${ct(p)}' is not an object.`}else l+=` Your theme has the following top-level keys: ${ac(t.theme)}`}return{isValid:!1,error:l}}if(!(typeof s==\"string\"||typeof s==\"number\"||typeof s==\"function\"||s instanceof String||s instanceof Number||Array.isArray(s))){let l=`'${i}' was found but does not resolve to a string.`;if(sa(s)){let u=Object.keys(s).filter(f=>aa(t,[...a,f]).isValid);u.length&&(l+=` Did you mean something like '${ct([...a,u[0]])}'?`)}return{isValid:!1,error:l}}let[o]=a;return{isValid:!0,value:Ce(o)(s,n)}}function rw(t,e,r){e=e.map(i=>uc(t,i,r));let n=[\"\"];for(let i of e)i.type===\"div\"&&i.value===\",\"?n.push(\"\"):n[n.length-1]+=oa.default.stringify(i);return n}function uc(t,e,r){if(e.type===\"function\"&&r[e.value]!==void 0){let n=rw(t,e.nodes,r);e.type=\"word\",e.value=r[e.value](t,...n)}return e}function nw(t,e,r){return(0,oa.default)(e).walk(n=>{uc(t,n,r)}).toString()}var iw={atrule:\"params\",decl:\"value\"};function*sw(t){t=t.replace(/^['\"]+|['\"]+$/g,\"\");let e=t.match(/^([^\\s]+)(?![^\\[]*\\])(?:\\s*\\/\\s*([^\\/\\s]+))$/),r;yield[t,void 0],e&&(t=e[1],r=e[2],yield[t,r])}function aw(t,e,r){var i;let n=Array.from(sw(e)).map(([a,s])=>Object.assign(aa(t,a,r,{opacityValue:s}),{resolvedPath:a,alpha:s}));return(i=n.find(a=>a.isValid))!=null?i:n[0]}function fc(t){let e=t.tailwindConfig,r={theme:(n,i,...a)=>{var c;let{isValid:s,value:o,error:l,alpha:u}=aw(e,i,a.length?a:void 0);if(!s){let d=n.parent,h=(c=d==null?void 0:d.raws.tailwind)==null?void 0:c.candidate;if(d&&h!==void 0){t.markInvalidUtilityNode(d),d.remove(),L.warn(\"invalid-theme-key-in-class\",[`The utility \\`${h}\\` contains an invalid theme value and was not generated.`]);return}throw n.error(l)}let f=st(o);return(u!==void 0||f!==void 0&&typeof f==\"function\")&&(u===void 0&&(u=1),o=we(f,u,f)),o},screen:(n,i)=>{i=i.replace(/^['\"]+/g,\"\").replace(/['\"]+$/g,\"\");let s=Fe(e.theme.screens).find(({name:o})=>o===i);if(!s)throw n.error(`The '${i}' screen does not exist in your theme.`);return Me(s)}};return n=>{n.walk(i=>{let a=iw[i.type];a!==void 0&&(i[a]=nw(i,i[a],r))})}}function cc({tailwindConfig:{theme:t}}){return function(e){e.walkAtRules(\"screen\",r=>{let n=r.params,a=Fe(t.screens).find(({name:s})=>s===n);if(!a)throw r.error(`No \\`${n}\\` screen found.`);r.name=\"media\",r.params=Me(a)})}}var Tn=H(ve());var pc={id(t){return Tn.default.attribute({attribute:\"id\",operator:\"=\",value:t.value,quoteMark:'\"'})}};function ow(t){let e=t.filter(o=>o.type!==\"pseudo\"||o.nodes.length>0?!0:o.value.startsWith(\"::\")||[\":before\",\":after\",\":first-line\",\":first-letter\"].includes(o.value)).reverse(),r=new Set([\"tag\",\"class\",\"id\",\"attribute\"]),n=e.findIndex(o=>r.has(o.type));if(n===-1)return e.reverse().join(\"\").trim();let i=e[n],a=pc[i.type]?pc[i.type](i):i;e=e.slice(0,n);let s=e.findIndex(o=>o.type===\"combinator\"&&o.value===\">\");return s!==-1&&(e.splice(0,s),e.unshift(Tn.default.universal())),[a,...e.reverse()].join(\"\").trim()}var lw=(0,Tn.default)(t=>t.map(e=>{let r=e.split(n=>n.type===\"combinator\"&&n.value===\" \").pop();return ow(r)})),la=new Map;function uw(t){return la.has(t)||la.set(t,lw.transformSync(t)),la.get(t)}function ua({tailwindConfig:t}){return e=>{var i,a;let r=new Map,n=new Set;if(e.walkAtRules(\"defaults\",s=>{if(s.nodes&&s.nodes.length>0){n.add(s);return}let o=s.params;r.has(o)||r.set(o,new Set),r.get(o).add(s.parent),s.remove()}),G(t,\"optimizeUniversalDefaults\"))for(let s of n){let o=new Map,l=(i=r.get(s.params))!=null?i:[];for(let u of l)for(let f of uw(u.selector)){let p=f.includes(\":-\")||f.includes(\"::-\")?f:\"__DEFAULT__\",c=(a=o.get(p))!=null?a:new Set;o.set(p,c),c.add(f)}if(G(t,\"optimizeUniversalDefaults\")){if(o.size===0){s.remove();continue}for(let[,u]of o){let f=R.rule({source:s.source});f.selectors=[...u],f.append(s.nodes.map(p=>p.clone())),s.before(f)}}s.remove()}else if(n.size){let s=R.rule({selectors:[\"*\",\"::before\",\"::after\"]});for(let l of n)s.append(l.nodes),s.parent||l.before(s),s.source||(s.source=l.source),l.remove();let o=s.clone({selectors:[\"::backdrop\"]});s.after(o)}}}var dc={atrule:[\"name\",\"params\"],rule:[\"selector\"]},fw=new Set(Object.keys(dc));function fa(){function t(e){let r=null;e.each(n=>{if(!fw.has(n.type)){r=null;return}if(r===null){r=n;return}let i=dc[n.type];n.type===\"atrule\"&&n.name===\"font-face\"?r=n:i.every(a=>{var s,o;return((s=n[a])!=null?s:\"\").replace(/\\s+/g,\" \")===((o=r[a])!=null?o:\"\").replace(/\\s+/g,\" \")})?(n.nodes&&r.append(n.nodes),n.remove()):r=n}),e.each(n=>{n.type===\"atrule\"&&t(n)})}return e=>{t(e)}}function ca(){return t=>{t.walkRules(e=>{let r=new Map,n=new Set([]),i=new Map;e.walkDecls(a=>{if(a.parent===e){if(r.has(a.prop)){if(r.get(a.prop).value===a.value){n.add(r.get(a.prop)),r.set(a.prop,a);return}i.has(a.prop)||i.set(a.prop,new Set),i.get(a.prop).add(r.get(a.prop)),i.get(a.prop).add(a)}r.set(a.prop,a)}});for(let a of n)a.remove();for(let a of i.values()){let s=new Map;for(let o of a){let l=pw(o.value);l!==null&&(s.has(l)||s.set(l,new Set),s.get(l).add(o))}for(let o of s.values()){let l=Array.from(o).slice(0,-1);for(let u of l)u.remove()}}})}}var cw=Symbol(\"unitless-number\");function pw(t){var r;let e=/^-?\\d*.?\\d+([\\w%]+)?$/g.exec(t);return e?(r=e[1])!=null?r:cw:null}function dw(t){if(!t.walkAtRules)return;let e=new Set;if(t.walkAtRules(\"apply\",r=>{e.add(r.parent)}),e.size!==0)for(let r of e){let n=[],i=[];for(let a of r.nodes)a.type===\"atrule\"&&a.name===\"apply\"?(i.length>0&&(n.push(i),i=[]),n.push([a])):i.push(a);if(i.length>0&&n.push(i),n.length!==1){for(let a of[...n].reverse()){let s=r.clone({nodes:[]});s.append(a),r.after(s)}r.remove()}}}function Pn(){return t=>{dw(t)}}function hw(t){return t.type===\"root\"}function mw(t){return t.type===\"atrule\"&&t.name===\"layer\"}function hc(t){return(e,r)=>{let n=!1;e.walkAtRules(\"tailwind\",i=>{if(n)return!1;if(i.parent&&!(hw(i.parent)||mw(i.parent)))return n=!0,i.warn(r,[\"Nested @tailwind rules were detected, but are not supported.\",\"Consider using a prefix to scope Tailwind's classes: https://tailwindcss.com/docs/configuration#prefix\",\"Alternatively, use the important selector strategy: https://tailwindcss.com/docs/configuration#selector-strategy\"].join(`\n`)),!1}),e.walkRules(i=>{if(n)return!1;i.walkRules(a=>(n=!0,a.warn(r,[\"Nested CSS was detected, but CSS nesting has not been configured correctly.\",\"Please enable a CSS nesting plugin *before* Tailwind in your configuration.\",\"See how here: https://tailwindcss.com/docs/using-with-preprocessors#nesting\"].join(`\n`)),!1))})}}function pa(t){return function(e,r){let{tailwindDirectives:n,applyDirectives:i}=Un(e);hc()(e,r),Pn()(e,r);let a=t({tailwindDirectives:n,applyDirectives:i,registerDependency(s){r.messages.push({plugin:\"tailwindcss\",parent:r.opts.from,...s})},createContext(s,o){return Pf(s,o,e)}})(e,r);if(a.tailwindConfig.separator===\"-\")throw new Error(\"The '-' character cannot be used as a custom separator in JIT mode due to parsing ambiguity. Please use another character like '_' instead.\");nf(a.tailwindConfig),Qs(a)(e,r),Pn()(e,r),Xs(a)(e,r),fc(a)(e,r),cc(a)(e,r),ua(a)(e,r),fa(a)(e,r),ca(a)(e,r)}}var mc=[\"preflight\",\"container\",\"accessibility\",\"pointerEvents\",\"visibility\",\"position\",\"inset\",\"isolation\",\"zIndex\",\"order\",\"gridColumn\",\"gridColumnStart\",\"gridColumnEnd\",\"gridRow\",\"gridRowStart\",\"gridRowEnd\",\"float\",\"clear\",\"margin\",\"boxSizing\",\"lineClamp\",\"display\",\"aspectRatio\",\"height\",\"maxHeight\",\"minHeight\",\"width\",\"minWidth\",\"maxWidth\",\"flex\",\"flexShrink\",\"flexGrow\",\"flexBasis\",\"tableLayout\",\"captionSide\",\"borderCollapse\",\"borderSpacing\",\"transformOrigin\",\"translate\",\"rotate\",\"skew\",\"scale\",\"transform\",\"animation\",\"cursor\",\"touchAction\",\"userSelect\",\"resize\",\"scrollSnapType\",\"scrollSnapAlign\",\"scrollSnapStop\",\"scrollMargin\",\"scrollPadding\",\"listStylePosition\",\"listStyleType\",\"listStyleImage\",\"appearance\",\"columns\",\"breakBefore\",\"breakInside\",\"breakAfter\",\"gridAutoColumns\",\"gridAutoFlow\",\"gridAutoRows\",\"gridTemplateColumns\",\"gridTemplateRows\",\"flexDirection\",\"flexWrap\",\"placeContent\",\"placeItems\",\"alignContent\",\"alignItems\",\"justifyContent\",\"justifyItems\",\"gap\",\"space\",\"divideWidth\",\"divideStyle\",\"divideColor\",\"divideOpacity\",\"placeSelf\",\"alignSelf\",\"justifySelf\",\"overflow\",\"overscrollBehavior\",\"scrollBehavior\",\"textOverflow\",\"hyphens\",\"whitespace\",\"wordBreak\",\"borderRadius\",\"borderWidth\",\"borderStyle\",\"borderColor\",\"borderOpacity\",\"backgroundColor\",\"backgroundOpacity\",\"backgroundImage\",\"gradientColorStops\",\"boxDecorationBreak\",\"backgroundSize\",\"backgroundAttachment\",\"backgroundClip\",\"backgroundPosition\",\"backgroundRepeat\",\"backgroundOrigin\",\"fill\",\"stroke\",\"strokeWidth\",\"objectFit\",\"objectPosition\",\"padding\",\"textAlign\",\"textIndent\",\"verticalAlign\",\"fontFamily\",\"fontSize\",\"fontWeight\",\"textTransform\",\"fontStyle\",\"fontVariantNumeric\",\"lineHeight\",\"letterSpacing\",\"textColor\",\"textOpacity\",\"textDecoration\",\"textDecorationColor\",\"textDecorationStyle\",\"textDecorationThickness\",\"textUnderlineOffset\",\"fontSmoothing\",\"placeholderColor\",\"placeholderOpacity\",\"caretColor\",\"accentColor\",\"opacity\",\"backgroundBlendMode\",\"mixBlendMode\",\"boxShadow\",\"boxShadowColor\",\"outlineStyle\",\"outlineWidth\",\"outlineOffset\",\"outlineColor\",\"ringWidth\",\"ringColor\",\"ringOpacity\",\"ringOffsetWidth\",\"ringOffsetColor\",\"blur\",\"brightness\",\"contrast\",\"dropShadow\",\"grayscale\",\"hueRotate\",\"invert\",\"saturate\",\"sepia\",\"filter\",\"backdropBlur\",\"backdropBrightness\",\"backdropContrast\",\"backdropGrayscale\",\"backdropHueRotate\",\"backdropInvert\",\"backdropOpacity\",\"backdropSaturate\",\"backdropSepia\",\"backdropFilter\",\"transitionProperty\",\"transitionDelay\",\"transitionDuration\",\"transitionTimingFunction\",\"willChange\",\"content\"];function gc(t,e){return t===void 0?e:Array.isArray(t)?t:[...new Set(e.filter(n=>t!==!1&&t[n]!==!1).concat(Object.keys(t).filter(n=>t[n]!==!1)))]}function cr({version:t,from:e,to:r}){L.warn(`${e}-color-renamed`,[`As of Tailwind CSS ${t}, \\`${e}\\` has been renamed to \\`${r}\\`.`,\"Update your configuration file to silence this warning.\"])}var yc={inherit:\"inherit\",current:\"currentColor\",transparent:\"transparent\",black:\"#000\",white:\"#fff\",slate:{50:\"#f8fafc\",100:\"#f1f5f9\",200:\"#e2e8f0\",300:\"#cbd5e1\",400:\"#94a3b8\",500:\"#64748b\",600:\"#475569\",700:\"#334155\",800:\"#1e293b\",900:\"#0f172a\",950:\"#020617\"},gray:{50:\"#f9fafb\",100:\"#f3f4f6\",200:\"#e5e7eb\",300:\"#d1d5db\",400:\"#9ca3af\",500:\"#6b7280\",600:\"#4b5563\",700:\"#374151\",800:\"#1f2937\",900:\"#111827\",950:\"#030712\"},zinc:{50:\"#fafafa\",100:\"#f4f4f5\",200:\"#e4e4e7\",300:\"#d4d4d8\",400:\"#a1a1aa\",500:\"#71717a\",600:\"#52525b\",700:\"#3f3f46\",800:\"#27272a\",900:\"#18181b\",950:\"#09090b\"},neutral:{50:\"#fafafa\",100:\"#f5f5f5\",200:\"#e5e5e5\",300:\"#d4d4d4\",400:\"#a3a3a3\",500:\"#737373\",600:\"#525252\",700:\"#404040\",800:\"#262626\",900:\"#171717\",950:\"#0a0a0a\"},stone:{50:\"#fafaf9\",100:\"#f5f5f4\",200:\"#e7e5e4\",300:\"#d6d3d1\",400:\"#a8a29e\",500:\"#78716c\",600:\"#57534e\",700:\"#44403c\",800:\"#292524\",900:\"#1c1917\",950:\"#0c0a09\"},red:{50:\"#fef2f2\",100:\"#fee2e2\",200:\"#fecaca\",300:\"#fca5a5\",400:\"#f87171\",500:\"#ef4444\",600:\"#dc2626\",700:\"#b91c1c\",800:\"#991b1b\",900:\"#7f1d1d\",950:\"#450a0a\"},orange:{50:\"#fff7ed\",100:\"#ffedd5\",200:\"#fed7aa\",300:\"#fdba74\",400:\"#fb923c\",500:\"#f97316\",600:\"#ea580c\",700:\"#c2410c\",800:\"#9a3412\",900:\"#7c2d12\",950:\"#431407\"},amber:{50:\"#fffbeb\",100:\"#fef3c7\",200:\"#fde68a\",300:\"#fcd34d\",400:\"#fbbf24\",500:\"#f59e0b\",600:\"#d97706\",700:\"#b45309\",800:\"#92400e\",900:\"#78350f\",950:\"#451a03\"},yellow:{50:\"#fefce8\",100:\"#fef9c3\",200:\"#fef08a\",300:\"#fde047\",400:\"#facc15\",500:\"#eab308\",600:\"#ca8a04\",700:\"#a16207\",800:\"#854d0e\",900:\"#713f12\",950:\"#422006\"},lime:{50:\"#f7fee7\",100:\"#ecfccb\",200:\"#d9f99d\",300:\"#bef264\",400:\"#a3e635\",500:\"#84cc16\",600:\"#65a30d\",700:\"#4d7c0f\",800:\"#3f6212\",900:\"#365314\",950:\"#1a2e05\"},green:{50:\"#f0fdf4\",100:\"#dcfce7\",200:\"#bbf7d0\",300:\"#86efac\",400:\"#4ade80\",500:\"#22c55e\",600:\"#16a34a\",700:\"#15803d\",800:\"#166534\",900:\"#14532d\",950:\"#052e16\"},emerald:{50:\"#ecfdf5\",100:\"#d1fae5\",200:\"#a7f3d0\",300:\"#6ee7b7\",400:\"#34d399\",500:\"#10b981\",600:\"#059669\",700:\"#047857\",800:\"#065f46\",900:\"#064e3b\",950:\"#022c22\"},teal:{50:\"#f0fdfa\",100:\"#ccfbf1\",200:\"#99f6e4\",300:\"#5eead4\",400:\"#2dd4bf\",500:\"#14b8a6\",600:\"#0d9488\",700:\"#0f766e\",800:\"#115e59\",900:\"#134e4a\",950:\"#042f2e\"},cyan:{50:\"#ecfeff\",100:\"#cffafe\",200:\"#a5f3fc\",300:\"#67e8f9\",400:\"#22d3ee\",500:\"#06b6d4\",600:\"#0891b2\",700:\"#0e7490\",800:\"#155e75\",900:\"#164e63\",950:\"#083344\"},sky:{50:\"#f0f9ff\",100:\"#e0f2fe\",200:\"#bae6fd\",300:\"#7dd3fc\",400:\"#38bdf8\",500:\"#0ea5e9\",600:\"#0284c7\",700:\"#0369a1\",800:\"#075985\",900:\"#0c4a6e\",950:\"#082f49\"},blue:{50:\"#eff6ff\",100:\"#dbeafe\",200:\"#bfdbfe\",300:\"#93c5fd\",400:\"#60a5fa\",500:\"#3b82f6\",600:\"#2563eb\",700:\"#1d4ed8\",800:\"#1e40af\",900:\"#1e3a8a\",950:\"#172554\"},indigo:{50:\"#eef2ff\",100:\"#e0e7ff\",200:\"#c7d2fe\",300:\"#a5b4fc\",400:\"#818cf8\",500:\"#6366f1\",600:\"#4f46e5\",700:\"#4338ca\",800:\"#3730a3\",900:\"#312e81\",950:\"#1e1b4b\"},violet:{50:\"#f5f3ff\",100:\"#ede9fe\",200:\"#ddd6fe\",300:\"#c4b5fd\",400:\"#a78bfa\",500:\"#8b5cf6\",600:\"#7c3aed\",700:\"#6d28d9\",800:\"#5b21b6\",900:\"#4c1d95\",950:\"#2e1065\"},purple:{50:\"#faf5ff\",100:\"#f3e8ff\",200:\"#e9d5ff\",300:\"#d8b4fe\",400:\"#c084fc\",500:\"#a855f7\",600:\"#9333ea\",700:\"#7e22ce\",800:\"#6b21a8\",900:\"#581c87\",950:\"#3b0764\"},fuchsia:{50:\"#fdf4ff\",100:\"#fae8ff\",200:\"#f5d0fe\",300:\"#f0abfc\",400:\"#e879f9\",500:\"#d946ef\",600:\"#c026d3\",700:\"#a21caf\",800:\"#86198f\",900:\"#701a75\",950:\"#4a044e\"},pink:{50:\"#fdf2f8\",100:\"#fce7f3\",200:\"#fbcfe8\",300:\"#f9a8d4\",400:\"#f472b6\",500:\"#ec4899\",600:\"#db2777\",700:\"#be185d\",800:\"#9d174d\",900:\"#831843\",950:\"#500724\"},rose:{50:\"#fff1f2\",100:\"#ffe4e6\",200:\"#fecdd3\",300:\"#fda4af\",400:\"#fb7185\",500:\"#f43f5e\",600:\"#e11d48\",700:\"#be123c\",800:\"#9f1239\",900:\"#881337\",950:\"#4c0519\"},get lightBlue(){return cr({version:\"v2.2\",from:\"lightBlue\",to:\"sky\"}),this.sky},get warmGray(){return cr({version:\"v3.0\",from:\"warmGray\",to:\"stone\"}),this.stone},get trueGray(){return cr({version:\"v3.0\",from:\"trueGray\",to:\"neutral\"}),this.neutral},get coolGray(){return cr({version:\"v3.0\",from:\"coolGray\",to:\"gray\"}),this.gray},get blueGray(){return cr({version:\"v3.0\",from:\"blueGray\",to:\"slate\"}),this.slate}};function da(t,...e){var r,n;for(let i of e){for(let a in i)(r=t==null?void 0:t.hasOwnProperty)!=null&&r.call(t,a)||(t[a]=i[a]);for(let a of Object.getOwnPropertySymbols(i))(n=t==null?void 0:t.hasOwnProperty)!=null&&n.call(t,a)||(t[a]=i[a])}return t}function vc(t){var r;(()=>{if(t.purge||!t.content||!Array.isArray(t.content)&&!(typeof t.content==\"object\"&&t.content!==null))return!1;if(Array.isArray(t.content))return t.content.every(n=>typeof n==\"string\"?!0:!(typeof(n==null?void 0:n.raw)!=\"string\"||(n==null?void 0:n.extension)&&typeof(n==null?void 0:n.extension)!=\"string\"));if(typeof t.content==\"object\"&&t.content!==null){if(Object.keys(t.content).some(n=>![\"files\",\"relative\",\"extract\",\"transform\"].includes(n)))return!1;if(Array.isArray(t.content.files)){if(!t.content.files.every(n=>typeof n==\"string\"?!0:!(typeof(n==null?void 0:n.raw)!=\"string\"||(n==null?void 0:n.extension)&&typeof(n==null?void 0:n.extension)!=\"string\")))return!1;if(typeof t.content.extract==\"object\"){for(let n of Object.values(t.content.extract))if(typeof n!=\"function\")return!1}else if(!(t.content.extract===void 0||typeof t.content.extract==\"function\"))return!1;if(typeof t.content.transform==\"object\"){for(let n of Object.values(t.content.transform))if(typeof n!=\"function\")return!1}else if(!(t.content.transform===void 0||typeof t.content.transform==\"function\"))return!1;if(typeof t.content.relative!=\"boolean\"&&typeof t.content.relative<\"u\")return!1}return!0}return!1})()||L.warn(\"purge-deprecation\",[\"The `purge`/`content` options have changed in Tailwind CSS v3.0.\",\"Update your configuration file to eliminate this warning.\",\"https://tailwindcss.com/docs/upgrade-guide#configure-content-sources\"]),t.safelist=(()=>{var s;let{content:n,purge:i,safelist:a}=t;return Array.isArray(a)?a:Array.isArray(n==null?void 0:n.safelist)?n.safelist:Array.isArray(i==null?void 0:i.safelist)?i.safelist:Array.isArray((s=i==null?void 0:i.options)==null?void 0:s.safelist)?i.options.safelist:[]})(),t.blocklist=(()=>{let{blocklist:n}=t;if(Array.isArray(n)){if(n.every(i=>typeof i==\"string\"))return n;L.warn(\"blocklist-invalid\",[\"The `blocklist` option must be an array of strings.\",\"https://tailwindcss.com/docs/content-configuration#discarding-classes\"])}return[]})(),typeof t.prefix==\"function\"?(L.warn(\"prefix-function\",[\"As of Tailwind CSS v3.0, `prefix` cannot be a function.\",\"Update `prefix` in your configuration to be a string to eliminate this warning.\",\"https://tailwindcss.com/docs/upgrade-guide#prefix-cannot-be-a-function\"]),t.prefix=\"\"):t.prefix=(r=t.prefix)!=null?r:\"\",t.content={relative:(()=>{let{content:n}=t;return n!=null&&n.relative?n.relative:G(t,\"relativeContentPathsByDefault\")})(),files:(()=>{let{content:n,purge:i}=t;return Array.isArray(i)?i:Array.isArray(i==null?void 0:i.content)?i.content:Array.isArray(n)?n:Array.isArray(n==null?void 0:n.content)?n.content:Array.isArray(n==null?void 0:n.files)?n.files:[]})(),extract:(()=>{let n=(()=>{var s,o,l,u,f,p,c,d,h,y;return(s=t.purge)!=null&&s.extract?t.purge.extract:(o=t.content)!=null&&o.extract?t.content.extract:(u=(l=t.purge)==null?void 0:l.extract)!=null&&u.DEFAULT?t.purge.extract.DEFAULT:(p=(f=t.content)==null?void 0:f.extract)!=null&&p.DEFAULT?t.content.extract.DEFAULT:(d=(c=t.purge)==null?void 0:c.options)!=null&&d.extractors?t.purge.options.extractors:(y=(h=t.content)==null?void 0:h.options)!=null&&y.extractors?t.content.options.extractors:{}})(),i={},a=(()=>{var s,o,l,u;if((o=(s=t.purge)==null?void 0:s.options)!=null&&o.defaultExtractor)return t.purge.options.defaultExtractor;if((u=(l=t.content)==null?void 0:l.options)!=null&&u.defaultExtractor)return t.content.options.defaultExtractor})();if(a!==void 0&&(i.DEFAULT=a),typeof n==\"function\")i.DEFAULT=n;else if(Array.isArray(n))for(let{extensions:s,extractor:o}of n!=null?n:[])for(let l of s)i[l]=o;else typeof n==\"object\"&&n!==null&&Object.assign(i,n);return i})(),transform:(()=>{let n=(()=>{var a,s,o,l,u,f;return(a=t.purge)!=null&&a.transform?t.purge.transform:(s=t.content)!=null&&s.transform?t.content.transform:(l=(o=t.purge)==null?void 0:o.transform)!=null&&l.DEFAULT?t.purge.transform.DEFAULT:(f=(u=t.content)==null?void 0:u.transform)!=null&&f.DEFAULT?t.content.transform.DEFAULT:{}})(),i={};return typeof n==\"function\"&&(i.DEFAULT=n),typeof n==\"object\"&&n!==null&&Object.assign(i,n),i})()};for(let n of t.content.files)if(typeof n==\"string\"&&/{([^,]*?)}/g.test(n)){L.warn(\"invalid-glob-braces\",[`The glob pattern ${n} in your Tailwind CSS configuration is invalid.`,`Update it to ${n.replace(/{([^,]*?)}/g,\"$1\")} to silence this warning.`]);break}return t}function In(t){return Array.isArray(t)?t.map(e=>In(e)):typeof t==\"object\"&&t!==null?Object.fromEntries(Object.entries(t).map(([e,r])=>[e,In(r)])):t}function pt(t){return typeof t==\"function\"}function pr(t,...e){let r=e.pop();for(let n of e)for(let i in n){let a=r(t[i],n[i]);a===void 0?X(t[i])&&X(n[i])?t[i]=pr({},t[i],n[i],r):t[i]=n[i]:t[i]=a}return t}var ha={colors:yc,negative(t){return Object.keys(t).filter(e=>t[e]!==\"0\").reduce((e,r)=>{let n=Re(t[r]);return n!==void 0&&(e[`-${r}`]=n),e},{})},breakpoints(t){return Object.keys(t).filter(e=>typeof t[e]==\"string\").reduce((e,r)=>({...e,[`screen-${r}`]:t[r]}),{})}};function gw(t,...e){return pt(t)?t(...e):t}function yw(t){return t.reduce((e,{extend:r})=>pr(e,r,(n,i)=>n===void 0?[i]:Array.isArray(n)?[i,...n]:[i,n]),{})}function vw(t){return{...t.reduce((e,r)=>da(e,r),{}),extend:yw(t)}}function wc(t,e){if(Array.isArray(t)&&X(t[0]))return t.concat(e);if(Array.isArray(e)&&X(e[0])&&X(t))return[t,...e];if(Array.isArray(e))return e}function ww({extend:t,...e}){return pr(e,t,(r,n)=>!pt(r)&&!n.some(pt)?pr({},r,...n,wc):(i,a)=>pr({},...[r,...n].map(s=>gw(s,i,a)),wc))}function*bw(t){let e=Le(t);if(e.length===0||(yield e,Array.isArray(t)))return;let r=/^(.*?)\\s*\\/\\s*([^/]+)$/,n=t.match(r);if(n!==null){let[,i,a]=n,s=Le(i);s.alpha=a,yield s}}function xw(t){let e=(r,n)=>{for(let i of bw(r)){let a=0,s=t;for(;s!=null&&a<i.length;)s=s[i[a++]],s=pt(s)&&(i.alpha===void 0||a<=i.length-1)?s(e,ha):s;if(s!==void 0){if(i.alpha!==void 0){let o=st(s);return we(o,i.alpha,M(o))}return X(s)?In(s):s}}return n};return Object.assign(e,{theme:e,...ha}),Object.keys(t).reduce((r,n)=>(r[n]=pt(t[n])?t[n](e,ha):t[n],r),{})}function bc(t){let e=[];return t.forEach(r=>{var i;e=[...e,r];let n=(i=r==null?void 0:r.plugins)!=null?i:[];n.length!==0&&n.forEach(a=>{var s;a.__isOptionsFunction&&(a=a()),e=[...e,...bc([(s=a==null?void 0:a.config)!=null?s:{}])]})}),e}function Sw(t){return[...t].reduceRight((r,n)=>pt(n)?n({corePlugins:r}):gc(n,r),mc)}function kw(t){return[...t].reduceRight((r,n)=>[...r,...n],[])}function ma(t){let e=[...bc(t),{prefix:\"\",important:!1,separator:\":\"}];return vc(da({theme:xw(ww(vw(e.map(r=>{var n;return(n=r==null?void 0:r.theme)!=null?n:{}})))),corePlugins:Sw(e.map(r=>r.corePlugins)),plugins:kw(t.map(r=>{var n;return(n=r==null?void 0:r.plugins)!=null?n:[]}))},...e))}var kc=H(Sc());function Rn(t){var i;let e=((i=t==null?void 0:t.presets)!=null?i:[kc.default]).slice().reverse().flatMap(a=>Rn(a instanceof Function?a():a)),r={respectDefaultRingColorOpacity:{theme:{ringColor:({theme:a})=>({DEFAULT:\"#3b82f67f\",...a(\"colors\")})}},disableColorOpacityUtilitiesByDefault:{corePlugins:{backgroundOpacity:!1,borderOpacity:!1,divideOpacity:!1,placeholderOpacity:!1,ringOpacity:!1,textOpacity:!1}}},n=Object.keys(r).filter(a=>G(t,a)).map(a=>r[a]);return[t,...n,...e]}function ga(...t){let[,...e]=Rn(t[0]);return ma([...t,...e])}var Oc=t=>{var n;let e=ga((n=t.config)!=null?n:{});return pa(i=>()=>i.createContext(e,[{content:t.content}]))};var wp=H(vp(),1);var bp=t=>{let e=Oc({config:t.config,content:t.content});return R([e,(0,wp.default)()]).process(xp,{from:void 0}).css};var xp=String.raw`\n  @tailwind base;\n  @tailwind components;\n  @tailwind utilities;\n`;function kp(t){let e=R.parse(t);return tn.objectify(e)}var sb=(t,e)=>{var i,a;let r=(a=(i=e==null?void 0:e.corePlugins)==null?void 0:i.preflight)!=null?a:!1,n=(e==null?void 0:e.corePlugins)||{};return bp({config:{...e,corePlugins:{...n,preflight:r}},content:t})},Op=({config:t,options:e})=>({twi:Ea(t,e),twj:Cp(t,e)}),Ep=(...t)=>{let e=\"\";return typeof t[0]==\"string\"?e=t[0]:Array.isArray(t[0])?e=t.flat(1/0).map(r=>Ep(r)).join(\" \"):typeof t[0]==\"object\"&&(e=Object.entries(t[0]).filter(r=>!!r[1]).map(r=>r[0]).join(\" \")),e=e.replace(/\\s+/g,\" \"),e},Ea=(t,e)=>(...r)=>{let n=Ep(r),{1:i}=r||{},s={...{merge:!0,minify:!0,ignoreMediaQueries:!0},...e,...i},o=Ra(sb(n,t));return s!=null&&s.ignoreMediaQueries?o.removeMediaQueries():(o.removeUndefined(),o.combineMediaQueries()),o.fixRGB(),s!=null&&s.merge&&o.merge(),s!=null&&s.minify&&o.minify(),o.get()},Cp=(t,e)=>(...r)=>kp(Ea(t,e)(r)),Sp=Ea(),ab=Cp(),ob=Op;\n/*! https://mths.be/cssesc v3.0.0 by @mathias */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdHctdG8tY3NzL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxxQkFBcUIsNkJBQTZCLHVDQUF1QyxrQ0FBa0MsZ0VBQWdFLG9DQUFvQywyQkFBMkIsV0FBVyxtQ0FBbUMsdUJBQXVCLHVCQUF1QixFQUFFLGdCQUFnQixnR0FBZ0csbURBQW1ELEVBQUUsVUFBVSxzQ0FBc0MseUNBQXlDLHNCQUFzQixzQkFBc0IsZUFBZSxTQUFTLEtBQUssa0JBQWtCLHFCQUFxQixzQkFBc0IsZUFBZSxtQkFBbUIsdURBQXVELGVBQWUsaUJBQWlCLEtBQUssZ0JBQWdCLDhCQUE4QixnQkFBZ0IsV0FBVyx3T0FBd08sNkVBQTZFLGlGQUFpRixLQUFLLFNBQVMsb0JBQW9CLEdBQUcsU0FBUyxjQUFjLHFCQUFxQixvQkFBb0IsaUNBQWlDLGtCQUFrQixrQkFBa0Isb0JBQW9CLEVBQUUsY0FBYyx3QkFBd0IsU0FBUyxtQkFBbUIsa0JBQWtCLGlJQUFpSSxjQUFjLE1BQU0sY0FBYyxRQUFRLGNBQWMsY0FBYyxrQkFBa0Isd0JBQXdCLElBQUksY0FBYyxJQUFJLFVBQVUsTUFBTSxjQUFjLHFCQUFxQix5QkFBeUIsc0NBQXNDLG9CQUFvQixlQUFlLG9CQUFvQixvQkFBb0IsY0FBYyxTQUFTLFVBQVUsY0FBYyxvQkFBb0IsZ0RBQWdELDBCQUEwQiw2QkFBNkIsc0JBQXNCLGdCQUFnQixhQUFhLGlCQUFpQixnQkFBZ0IsU0FBUyx3QkFBd0Isd0RBQXdELFlBQVksY0FBYyw2QkFBNkIsb0JBQW9CLDRCQUE0Qix3QkFBd0IsNkJBQTZCLDBCQUEwQixhQUFhLFFBQVEsa0JBQWtCLG1EQUFtRCxTQUFTLFNBQVMsU0FBUyxVQUFVLE9BQU8sVUFBVSxXQUFXLGdCQUFnQixTQUFTLFVBQVUsU0FBUyxnQkFBZ0IseUNBQXlDLFVBQVUsdUNBQXVDLHFCQUFxQixlQUFlLFVBQVUsZUFBZSwrQ0FBK0MsY0FBYyxzQkFBc0IsVUFBVSxlQUFlLFlB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a0VBQWtFLE1BQU0sOENBQThDLEdBQUcsUUFBUSxlQUFlLGVBQWUsTUFBTSwySEFBMkgsZ0NBQWdDLE9BQU8sWUFBWSxRQUFRLEtBQUssbUNBQW1DLEdBQUcsd0NBQXdDLGFBQWEsNkdBQTZHLGlEQUFpRCxvQkFBb0Isa0JBQWtCLG9CQUFvQix1QkFBdUIsV0FBVyxNQUFNLGdDQUFnQyxFQUFFLHFDQUFxQyxrQkFBa0IsS0FBSyxpQkFBaUIsV0FBVyxVQUFVLGtDQUFrQyxFQUFFLDJDQUEyQyxZQUFZLE9BQU87QUFDaDRkO0FBQ0E7QUFDQTtBQUNBLEVBQUUsZUFBZSxpQkFBaUIsdUJBQXVCLGVBQWUsUUFBUSxvSEFBb0gsV0FBVyxRQUFRLGtCQUFrQixrQkFBa0IsV0FBVyxFQUFFLE1BQU0sbUJBQW1CLEtBQUssd0JBQXdCLGNBQWMsU0FBUyxpTkFBaU4sb0JBQW9CLGFBQWEsSUFBSSxNQUFNLElBQUksSUFBSSx5Q0FBeUMsV0FBVyxlQUFlLHVMQUF1TCx3REFBc0g7QUFDejhCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW52b2lmeS8uL25vZGVfbW9kdWxlcy90dy10by1jc3MvZGlzdC9pbmRleC5tanM/OTRiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQXA9T2JqZWN0LmNyZWF0ZTt2YXIgZ3I9T2JqZWN0LmRlZmluZVByb3BlcnR5O3ZhciBfcD1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO3ZhciBUcD1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lczt2YXIgUHA9T2JqZWN0LmdldFByb3RvdHlwZU9mLElwPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7dmFyIGR0PSh0LGUpPT4oKT0+KHQmJihlPXQodD0wKSksZSk7dmFyIFM9KHQsZSk9PigpPT4oZXx8dCgoZT17ZXhwb3J0czp7fX0pLmV4cG9ydHMsZSksZS5leHBvcnRzKSx5cj0odCxlKT0+e2Zvcih2YXIgciBpbiBlKWdyKHQscix7Z2V0OmVbcl0sZW51bWVyYWJsZTohMH0pfSxJYT0odCxlLHIsbik9PntpZihlJiZ0eXBlb2YgZT09XCJvYmplY3RcInx8dHlwZW9mIGU9PVwiZnVuY3Rpb25cIilmb3IobGV0IGkgb2YgVHAoZSkpIUlwLmNhbGwodCxpKSYmaSE9PXImJmdyKHQsaSx7Z2V0OigpPT5lW2ldLGVudW1lcmFibGU6IShuPV9wKGUsaSkpfHxuLmVudW1lcmFibGV9KTtyZXR1cm4gdH07dmFyIEg9KHQsZSxyKT0+KHI9dCE9bnVsbD9BcChQcCh0KSk6e30sSWEoZXx8IXR8fCF0Ll9fZXNNb2R1bGU/Z3IocixcImRlZmF1bHRcIix7dmFsdWU6dCxlbnVtZXJhYmxlOiEwfSk6cix0KSksJGU9dD0+SWEoZ3Ioe30sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksdCk7dmFyIE1hLERhPWR0KCgpPT57TWE9YCosOmJlZm9yZSw6YWZ0ZXJ7Ym94LXNpemluZzpib3JkZXItYm94O2JvcmRlci13aWR0aDowO2JvcmRlci1zdHlsZTpzb2xpZDtib3JkZXItY29sb3I6dGhlbWUoXCJib3JkZXJDb2xvci5ERUZBVUxUXCIsY3VycmVudENvbG9yKX06YmVmb3JlLDphZnRlcnstLXR3LWNvbnRlbnQ6IFwiXCJ9aHRtbHtsaW5lLWhlaWdodDoxLjU7LXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OjEwMCU7LW1vei10YWItc2l6ZTo0O3RhYi1zaXplOjQ7Zm9udC1mYW1pbHk6dGhlbWUoXCJmb250RmFtaWx5LnNhbnNcIix1aS1zYW5zLXNlcmlmLHN5c3RlbS11aSwtYXBwbGUtc3lzdGVtLEJsaW5rTWFjU3lzdGVtRm9udCxcIlNlZ29lIFVJXCIsUm9ib3RvLFwiSGVsdmV0aWNhIE5ldWVcIixBcmlhbCxcIk5vdG8gU2Fuc1wiLHNhbnMtc2VyaWYsXCJBcHBsZSBDb2xvciBFbW9qaVwiLFwiU2Vnb2UgVUkgRW1vamlcIixcIlNlZ29lIFVJIFN5bWJvbFwiLFwiTm90byBDb2xvciBFbW9qaVwiKTtmb250LWZlYXR1cmUtc2V0dGluZ3M6dGhlbWUoXCJmb250RmFtaWx5LnNhbnNbMV0uZm9udEZlYXR1cmVTZXR0aW5nc1wiLG5vcm1hbCk7Zm9udC12YXJpYXRpb24tc2V0dGluZ3M6dGhlbWUoXCJmb250RmFtaWx5LnNhbnNbMV0uZm9udFZhcmlhdGlvblNldHRpbmdzXCIsbm9ybWFsKX1ib2R5e21hcmdpbjowO2xpbmUtaGVpZ2h0OmluaGVyaXR9aHJ7aGVpZ2h0OjA7Y29sb3I6aW5oZXJpdDtib3JkZXItdG9wLXdpZHRoOjFweH1hYmJyOndoZXJlKFt0aXRsZV0pe3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmUgZG90dGVkfWgxLGgyLGgzLGg0LGg1LGg2e2ZvbnQtc2l6ZTppbmhlcml0O2ZvbnQtd2VpZ2h0OmluaGVyaXR9YXtjb2xvcjppbmhlcml0O3RleHQtZGVjb3JhdGlvbjppbmhlcml0fWIsc3Ryb25ne2ZvbnQtd2VpZ2h0OmJvbGRlcn1jb2RlLGtiZCxzYW1wLHByZXtmb250LWZhbWlseTp0aGVtZShcImZvbnRGYW1pbHkubW9ub1wiLHVpLW1vbm9zcGFjZSxTRk1vbm8tUmVndWxhcixNZW5sbyxNb25hY28sQ29uc29sYXMsXCJMaWJlcmF0aW9uIE1vbm9cIixcIkNvdXJpZXIgTmV3XCIsbW9ub3NwYWNlKTtmb250LXNpemU6MWVtfXNtYWxse2ZvbnQtc2l6ZTo4MCV9c3ViLHN1cHtmb250LXNpemU6NzUlO2xpbmUtaGVpZ2h0OjA7cG9zaXRpb246cmVsYXRpdmU7dmVydGljYWwtYWxpZ246YmFzZWxpbmV9c3Vie2JvdHRvbTotLjI1ZW19c3Vwe3RvcDotLjVlbX10YWJsZXt0ZXh0LWluZGVudDowO2JvcmRlci1jb2xvcjppbmhlcml0O2JvcmRlci1jb2xsYXBzZTpjb2xsYXBzZX1idXR0b24saW5wdXQsb3B0Z3JvdXAsc2VsZWN0LHRleHRhcmVhe2ZvbnQtZmFtaWx5OmluaGVyaXQ7Zm9udC1zaXplOjEwMCU7Zm9udC13ZWlnaHQ6aW5oZXJpdDtsaW5lLWhlaWdodDppbmhlcml0O2NvbG9yOmluaGVyaXQ7bWFyZ2luOjA7cGFkZGluZzowfWJ1dHRvbixzZWxlY3R7dGV4dC10cmFuc2Zvcm06bm9uZX1idXR0b24sW3R5cGU9YnV0dG9uXSxbdHlwZT1yZXNldF0sW3R5cGU9c3VibWl0XXstd2Via2l0LWFwcGVhcmFuY2U6YnV0dG9uO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7YmFja2dyb3VuZC1pbWFnZTpub25lfTotbW96LWZvY3VzcmluZ3tvdXRsaW5lOmF1dG99Oi1tb3otdWktaW52YWxpZHtib3gtc2hhZG93Om5vbmV9cHJvZ3Jlc3N7dmVydGljYWwtYWxpZ246YmFzZWxpbmV9Ojotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbntoZWlnaHQ6YXV0b31bdHlwZT1zZWFyY2hdey13ZWJraXQtYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7b3V0bGluZS1vZmZzZXQ6LTJweH06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb257LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmV9Ojotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbnstd2Via2l0LWFwcGVhcmFuY2U6YnV0dG9uO2ZvbnQ6aW5oZXJpdH1zdW1tYXJ5e2Rpc3BsYXk6bGlzdC1pdGVtfWJsb2NrcXVvdGUsZGwsZGQsaDEsaDIsaDMsaDQsaDUsaDYsaHIsZmlndXJlLHAscHJle21hcmdpbjowfWZpZWxkc2V0e21hcmdpbjowO3BhZGRpbmc6MH1sZWdlbmR7cGFkZGluZzowfW9sLHVsLG1lbnV7bGlzdC1zdHlsZTpub25lO21hcmdpbjowO3BhZGRpbmc6MH10ZXh0YXJlYXtyZXNpemU6dmVydGljYWx9aW5wdXQ6OnBsYWNlaG9sZGVyLHRleHRhcmVhOjpwbGFjZWhvbGRlcntvcGFjaXR5OjE7Y29sb3I6dGhlbWUoXCJjb2xvcnMuZ3JheS40MDBcIiwjOWNhM2FmKX1idXR0b24sW3JvbGU9YnV0dG9uXXtjdXJzb3I6cG9pbnRlcn06ZGlzYWJsZWR7Y3Vyc29yOmRlZmF1bHR9aW1nLHN2Zyx2aWRlbyxjYW52YXMsYXVkaW8saWZyYW1lLGVtYmVkLG9iamVjdHtkaXNwbGF5OmJsb2NrO3ZlcnRpY2FsLWFsaWduOm1pZGRsZX1pbWcsdmlkZW97bWF4LXdpZHRoOjEwMCU7aGVpZ2h0OmF1dG99W2hpZGRlbl17ZGlzcGxheTpub25lfVxuYH0pO3ZhciBGYT17fTt5cihGYSx7ZGVmYXVsdDooKT0+aHR9KTt2YXIgaHQsdnI9ZHQoKCk9PntEYSgpO2h0PXtyZWFkRmlsZVN5bmM6KCk9Pk1hfX0pO3ZhciBOYT1TKChtYixMYSk9PntcInVzZSBzdHJpY3RcIjt2YXIgam49Y2xhc3N7Y29uc3RydWN0b3IoZT17fSl7aWYoIShlLm1heFNpemUmJmUubWF4U2l6ZT4wKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiYG1heFNpemVgIG11c3QgYmUgYSBudW1iZXIgZ3JlYXRlciB0aGFuIDBcIik7aWYodHlwZW9mIGUubWF4QWdlPT1cIm51bWJlclwiJiZlLm1heEFnZT09PTApdGhyb3cgbmV3IFR5cGVFcnJvcihcImBtYXhBZ2VgIG11c3QgYmUgYSBudW1iZXIgZ3JlYXRlciB0aGFuIDBcIik7dGhpcy5tYXhTaXplPWUubWF4U2l6ZSx0aGlzLm1heEFnZT1lLm1heEFnZXx8MS8wLHRoaXMub25FdmljdGlvbj1lLm9uRXZpY3Rpb24sdGhpcy5jYWNoZT1uZXcgTWFwLHRoaXMub2xkQ2FjaGU9bmV3IE1hcCx0aGlzLl9zaXplPTB9X2VtaXRFdmljdGlvbnMoZSl7aWYodHlwZW9mIHRoaXMub25FdmljdGlvbj09XCJmdW5jdGlvblwiKWZvcihsZXRbcixuXW9mIGUpdGhpcy5vbkV2aWN0aW9uKHIsbi52YWx1ZSl9X2RlbGV0ZUlmRXhwaXJlZChlLHIpe3JldHVybiB0eXBlb2Ygci5leHBpcnk9PVwibnVtYmVyXCImJnIuZXhwaXJ5PD1EYXRlLm5vdygpPyh0eXBlb2YgdGhpcy5vbkV2aWN0aW9uPT1cImZ1bmN0aW9uXCImJnRoaXMub25FdmljdGlvbihlLHIudmFsdWUpLHRoaXMuZGVsZXRlKGUpKTohMX1fZ2V0T3JEZWxldGVJZkV4cGlyZWQoZSxyKXtpZih0aGlzLl9kZWxldGVJZkV4cGlyZWQoZSxyKT09PSExKXJldHVybiByLnZhbHVlfV9nZXRJdGVtVmFsdWUoZSxyKXtyZXR1cm4gci5leHBpcnk/dGhpcy5fZ2V0T3JEZWxldGVJZkV4cGlyZWQoZSxyKTpyLnZhbHVlfV9wZWVrKGUscil7bGV0IG49ci5nZXQoZSk7cmV0dXJuIHRoaXMuX2dldEl0ZW1WYWx1ZShlLG4pfV9zZXQoZSxyKXt0aGlzLmNhY2hlLnNldChlLHIpLHRoaXMuX3NpemUrKyx0aGlzLl9zaXplPj10aGlzLm1heFNpemUmJih0aGlzLl9zaXplPTAsdGhpcy5fZW1pdEV2aWN0aW9ucyh0aGlzLm9sZENhY2hlKSx0aGlzLm9sZENhY2hlPXRoaXMuY2FjaGUsdGhpcy5jYWNoZT1uZXcgTWFwKX1fbW92ZVRvUmVjZW50KGUscil7dGhpcy5vbGRDYWNoZS5kZWxldGUoZSksdGhpcy5fc2V0KGUscil9Kl9lbnRyaWVzQXNjZW5kaW5nKCl7Zm9yKGxldCBlIG9mIHRoaXMub2xkQ2FjaGUpe2xldFtyLG5dPWU7dGhpcy5jYWNoZS5oYXMocil8fHRoaXMuX2RlbGV0ZUlmRXhwaXJlZChyLG4pPT09ITEmJih5aWVsZCBlKX1mb3IobGV0IGUgb2YgdGhpcy5jYWNoZSl7bGV0W3Isbl09ZTt0aGlzLl9kZWxldGVJZkV4cGlyZWQocixuKT09PSExJiYoeWllbGQgZSl9fWdldChlKXtpZih0aGlzLmNhY2hlLmhhcyhlKSl7bGV0IHI9dGhpcy5jYWNoZS5nZXQoZSk7cmV0dXJuIHRoaXMuX2dldEl0ZW1WYWx1ZShlLHIpfWlmKHRoaXMub2xkQ2FjaGUuaGFzKGUpKXtsZXQgcj10aGlzLm9sZENhY2hlLmdldChlKTtpZih0aGlzLl9kZWxldGVJZkV4cGlyZWQoZSxyKT09PSExKXJldHVybiB0aGlzLl9tb3ZlVG9SZWNlbnQoZSxyKSxyLnZhbHVlfX1zZXQoZSxyLHttYXhBZ2U6bj10aGlzLm1heEFnZT09PTEvMD92b2lkIDA6RGF0ZS5ub3coKSt0aGlzLm1heEFnZX09e30pe3RoaXMuY2FjaGUuaGFzKGUpP3RoaXMuY2FjaGUuc2V0KGUse3ZhbHVlOnIsbWF4QWdlOm59KTp0aGlzLl9zZXQoZSx7dmFsdWU6cixleHBpcnk6bn0pfWhhcyhlKXtyZXR1cm4gdGhpcy5jYWNoZS5oYXMoZSk/IXRoaXMuX2RlbGV0ZUlmRXhwaXJlZChlLHRoaXMuY2FjaGUuZ2V0KGUpKTp0aGlzLm9sZENhY2hlLmhhcyhlKT8hdGhpcy5fZGVsZXRlSWZFeHBpcmVkKGUsdGhpcy5vbGRDYWNoZS5nZXQoZSkpOiExfXBlZWsoZSl7aWYodGhpcy5jYWNoZS5oYXMoZSkpcmV0dXJuIHRoaXMuX3BlZWsoZSx0aGlzLmNhY2hlKTtpZih0aGlzLm9sZENhY2hlLmhhcyhlKSlyZXR1cm4gdGhpcy5fcGVlayhlLHRoaXMub2xkQ2FjaGUpfWRlbGV0ZShlKXtsZXQgcj10aGlzLmNhY2hlLmRlbGV0ZShlKTtyZXR1cm4gciYmdGhpcy5fc2l6ZS0tLHRoaXMub2xkQ2FjaGUuZGVsZXRlKGUpfHxyfWNsZWFyKCl7dGhpcy5jYWNoZS5jbGVhcigpLHRoaXMub2xkQ2FjaGUuY2xlYXIoKSx0aGlzLl9zaXplPTB9cmVzaXplKGUpe2lmKCEoZSYmZT4wKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiYG1heFNpemVgIG11c3QgYmUgYSBudW1iZXIgZ3JlYXRlciB0aGFuIDBcIik7bGV0IHI9Wy4uLnRoaXMuX2VudHJpZXNBc2NlbmRpbmcoKV0sbj1yLmxlbmd0aC1lO248MD8odGhpcy5jYWNoZT1uZXcgTWFwKHIpLHRoaXMub2xkQ2FjaGU9bmV3IE1hcCx0aGlzLl9zaXplPXIubGVuZ3RoKToobj4wJiZ0aGlzLl9lbWl0RXZpY3Rpb25zKHIuc2xpY2UoMCxuKSksdGhpcy5vbGRDYWNoZT1uZXcgTWFwKHIuc2xpY2UobikpLHRoaXMuY2FjaGU9bmV3IE1hcCx0aGlzLl9zaXplPTApLHRoaXMubWF4U2l6ZT1lfSprZXlzKCl7Zm9yKGxldFtlXW9mIHRoaXMpeWllbGQgZX0qdmFsdWVzKCl7Zm9yKGxldFssZV1vZiB0aGlzKXlpZWxkIGV9KltTeW1ib2wuaXRlcmF0b3JdKCl7Zm9yKGxldCBlIG9mIHRoaXMuY2FjaGUpe2xldFtyLG5dPWU7dGhpcy5fZGVsZXRlSWZFeHBpcmVkKHIsbik9PT0hMSYmKHlpZWxkW3Isbi52YWx1ZV0pfWZvcihsZXQgZSBvZiB0aGlzLm9sZENhY2hlKXtsZXRbcixuXT1lO3RoaXMuY2FjaGUuaGFzKHIpfHx0aGlzLl9kZWxldGVJZkV4cGlyZWQocixuKT09PSExJiYoeWllbGRbcixuLnZhbHVlXSl9fSplbnRyaWVzRGVzY2VuZGluZygpe2xldCBlPVsuLi50aGlzLmNhY2hlXTtmb3IobGV0IHI9ZS5sZW5ndGgtMTtyPj0wOy0tcil7bGV0IG49ZVtyXSxbaSxhXT1uO3RoaXMuX2RlbGV0ZUlmRXhwaXJlZChpLGEpPT09ITEmJih5aWVsZFtpLGEudmFsdWVdKX1lPVsuLi50aGlzLm9sZENhY2hlXTtmb3IobGV0IHI9ZS5sZW5ndGgtMTtyPj0wOy0tcil7bGV0IG49ZVtyXSxbaSxhXT1uO3RoaXMuY2FjaGUuaGFzKGkpfHx0aGlzLl9kZWxldGVJZkV4cGlyZWQoaSxhKT09PSExJiYoeWllbGRbaSxhLnZhbHVlXSl9fSplbnRyaWVzQXNjZW5kaW5nKCl7Zm9yKGxldFtlLHJdb2YgdGhpcy5fZW50cmllc0FzY2VuZGluZygpKXlpZWxkW2Usci52YWx1ZV19Z2V0IHNpemUoKXtpZighdGhpcy5fc2l6ZSlyZXR1cm4gdGhpcy5vbGRDYWNoZS5zaXplO2xldCBlPTA7Zm9yKGxldCByIG9mIHRoaXMub2xkQ2FjaGUua2V5cygpKXRoaXMuY2FjaGUuaGFzKHIpfHxlKys7cmV0dXJuIE1hdGgubWluKHRoaXMuX3NpemUrZSx0aGlzLm1heFNpemUpfX07TGEuZXhwb3J0cz1qbn0pO3ZhciBVYT17fTt5cihVYSx7ZGVmYXVsdDooKT0+Qm59KTt2YXIgQm4sR249ZHQoKCk9PntCbj17eWVsbG93OnQ9PnR9fSk7dmFyIFluPVMoKCk9Pnt9KTt2YXIgYnI9UygoYmIsVmEpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIGphPShHbigpLCRlKFVhKSksemE9WW4oKSxVZT1jbGFzcyBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKGUscixuLGksYSxzKXtzdXBlcihlKSx0aGlzLm5hbWU9XCJDc3NTeW50YXhFcnJvclwiLHRoaXMucmVhc29uPWUsYSYmKHRoaXMuZmlsZT1hKSxpJiYodGhpcy5zb3VyY2U9aSkscyYmKHRoaXMucGx1Z2luPXMpLHR5cGVvZiByPFwidVwiJiZ0eXBlb2YgbjxcInVcIiYmKHR5cGVvZiByPT1cIm51bWJlclwiPyh0aGlzLmxpbmU9cix0aGlzLmNvbHVtbj1uKToodGhpcy5saW5lPXIubGluZSx0aGlzLmNvbHVtbj1yLmNvbHVtbix0aGlzLmVuZExpbmU9bi5saW5lLHRoaXMuZW5kQ29sdW1uPW4uY29sdW1uKSksdGhpcy5zZXRNZXNzYWdlKCksRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UmJkVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsVWUpfXNldE1lc3NhZ2UoKXt0aGlzLm1lc3NhZ2U9dGhpcy5wbHVnaW4/dGhpcy5wbHVnaW4rXCI6IFwiOlwiXCIsdGhpcy5tZXNzYWdlKz10aGlzLmZpbGU/dGhpcy5maWxlOlwiPGNzcyBpbnB1dD5cIix0eXBlb2YgdGhpcy5saW5lPFwidVwiJiYodGhpcy5tZXNzYWdlKz1cIjpcIit0aGlzLmxpbmUrXCI6XCIrdGhpcy5jb2x1bW4pLHRoaXMubWVzc2FnZSs9XCI6IFwiK3RoaXMucmVhc29ufXNob3dTb3VyY2VDb2RlKGUpe2lmKCF0aGlzLnNvdXJjZSlyZXR1cm5cIlwiO2xldCByPXRoaXMuc291cmNlO2U9PW51bGwmJihlPWphLmlzQ29sb3JTdXBwb3J0ZWQpLHphJiZlJiYocj16YShyKSk7bGV0IG49ci5zcGxpdCgvXFxyP1xcbi8pLGk9TWF0aC5tYXgodGhpcy5saW5lLTMsMCksYT1NYXRoLm1pbih0aGlzLmxpbmUrMixuLmxlbmd0aCkscz1TdHJpbmcoYSkubGVuZ3RoLG8sbDtpZihlKXtsZXR7Ym9sZDp1LGdyYXk6ZixyZWQ6cH09amEuY3JlYXRlQ29sb3JzKCEwKTtvPWM9PnUocChjKSksbD1jPT5mKGMpfWVsc2Ugbz1sPXU9PnU7cmV0dXJuIG4uc2xpY2UoaSxhKS5tYXAoKHUsZik9PntsZXQgcD1pKzErZixjPVwiIFwiKyhcIiBcIitwKS5zbGljZSgtcykrXCIgfCBcIjtpZihwPT09dGhpcy5saW5lKXtsZXQgZD1sKGMucmVwbGFjZSgvXFxkL2csXCIgXCIpKSt1LnNsaWNlKDAsdGhpcy5jb2x1bW4tMSkucmVwbGFjZSgvW15cXHRdL2csXCIgXCIpO3JldHVybiBvKFwiPlwiKStsKGMpK3UrYFxuIGArZCtvKFwiXlwiKX1yZXR1cm5cIiBcIitsKGMpK3V9KS5qb2luKGBcbmApfXRvU3RyaW5nKCl7bGV0IGU9dGhpcy5zaG93U291cmNlQ29kZSgpO3JldHVybiBlJiYoZT1gXG5cbmArZStgXG5gKSx0aGlzLm5hbWUrXCI6IFwiK3RoaXMubWVzc2FnZStlfX07VmEuZXhwb3J0cz1VZTtVZS5kZWZhdWx0PVVlfSk7dmFyIHhyPVMoKHhiLEhuKT0+e1widXNlIHN0cmljdFwiO0huLmV4cG9ydHMuaXNDbGVhbj1TeW1ib2woXCJpc0NsZWFuXCIpO0huLmV4cG9ydHMubXk9U3ltYm9sKFwibXlcIil9KTt2YXIgUW49UygoU2IsQmEpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIFdhPXthZnRlcjpgXG5gLGJlZm9yZUNsb3NlOmBcbmAsYmVmb3JlQ29tbWVudDpgXG5gLGJlZm9yZURlY2w6YFxuYCxiZWZvcmVPcGVuOlwiIFwiLGJlZm9yZVJ1bGU6YFxuYCxjb2xvbjpcIjogXCIsY29tbWVudExlZnQ6XCIgXCIsY29tbWVudFJpZ2h0OlwiIFwiLGVtcHR5Qm9keTpcIlwiLGluZGVudDpcIiAgICBcIixzZW1pY29sb246ITF9O2Z1bmN0aW9uIE1wKHQpe3JldHVybiB0WzBdLnRvVXBwZXJDYXNlKCkrdC5zbGljZSgxKX12YXIgZ3Q9Y2xhc3N7Y29uc3RydWN0b3IoZSl7dGhpcy5idWlsZGVyPWV9YXRydWxlKGUscil7bGV0IG49XCJAXCIrZS5uYW1lLGk9ZS5wYXJhbXM/dGhpcy5yYXdWYWx1ZShlLFwicGFyYW1zXCIpOlwiXCI7aWYodHlwZW9mIGUucmF3cy5hZnRlck5hbWU8XCJ1XCI/bis9ZS5yYXdzLmFmdGVyTmFtZTppJiYobis9XCIgXCIpLGUubm9kZXMpdGhpcy5ibG9jayhlLG4raSk7ZWxzZXtsZXQgYT0oZS5yYXdzLmJldHdlZW58fFwiXCIpKyhyP1wiO1wiOlwiXCIpO3RoaXMuYnVpbGRlcihuK2krYSxlKX19YmVmb3JlQWZ0ZXIoZSxyKXtsZXQgbjtlLnR5cGU9PT1cImRlY2xcIj9uPXRoaXMucmF3KGUsbnVsbCxcImJlZm9yZURlY2xcIik6ZS50eXBlPT09XCJjb21tZW50XCI/bj10aGlzLnJhdyhlLG51bGwsXCJiZWZvcmVDb21tZW50XCIpOnI9PT1cImJlZm9yZVwiP249dGhpcy5yYXcoZSxudWxsLFwiYmVmb3JlUnVsZVwiKTpuPXRoaXMucmF3KGUsbnVsbCxcImJlZm9yZUNsb3NlXCIpO2xldCBpPWUucGFyZW50LGE9MDtmb3IoO2kmJmkudHlwZSE9PVwicm9vdFwiOylhKz0xLGk9aS5wYXJlbnQ7aWYobi5pbmNsdWRlcyhgXG5gKSl7bGV0IHM9dGhpcy5yYXcoZSxudWxsLFwiaW5kZW50XCIpO2lmKHMubGVuZ3RoKWZvcihsZXQgbz0wO288YTtvKyspbis9c31yZXR1cm4gbn1ibG9jayhlLHIpe2xldCBuPXRoaXMucmF3KGUsXCJiZXR3ZWVuXCIsXCJiZWZvcmVPcGVuXCIpO3RoaXMuYnVpbGRlcihyK24rXCJ7XCIsZSxcInN0YXJ0XCIpO2xldCBpO2Uubm9kZXMmJmUubm9kZXMubGVuZ3RoPyh0aGlzLmJvZHkoZSksaT10aGlzLnJhdyhlLFwiYWZ0ZXJcIikpOmk9dGhpcy5yYXcoZSxcImFmdGVyXCIsXCJlbXB0eUJvZHlcIiksaSYmdGhpcy5idWlsZGVyKGkpLHRoaXMuYnVpbGRlcihcIn1cIixlLFwiZW5kXCIpfWJvZHkoZSl7bGV0IHI9ZS5ub2Rlcy5sZW5ndGgtMTtmb3IoO3I+MCYmZS5ub2Rlc1tyXS50eXBlPT09XCJjb21tZW50XCI7KXItPTE7bGV0IG49dGhpcy5yYXcoZSxcInNlbWljb2xvblwiKTtmb3IobGV0IGk9MDtpPGUubm9kZXMubGVuZ3RoO2krKyl7bGV0IGE9ZS5ub2Rlc1tpXSxzPXRoaXMucmF3KGEsXCJiZWZvcmVcIik7cyYmdGhpcy5idWlsZGVyKHMpLHRoaXMuc3RyaW5naWZ5KGEsciE9PWl8fG4pfX1jb21tZW50KGUpe2xldCByPXRoaXMucmF3KGUsXCJsZWZ0XCIsXCJjb21tZW50TGVmdFwiKSxuPXRoaXMucmF3KGUsXCJyaWdodFwiLFwiY29tbWVudFJpZ2h0XCIpO3RoaXMuYnVpbGRlcihcIi8qXCIrcitlLnRleHQrbitcIiovXCIsZSl9ZGVjbChlLHIpe2xldCBuPXRoaXMucmF3KGUsXCJiZXR3ZWVuXCIsXCJjb2xvblwiKSxpPWUucHJvcCtuK3RoaXMucmF3VmFsdWUoZSxcInZhbHVlXCIpO2UuaW1wb3J0YW50JiYoaSs9ZS5yYXdzLmltcG9ydGFudHx8XCIgIWltcG9ydGFudFwiKSxyJiYoaSs9XCI7XCIpLHRoaXMuYnVpbGRlcihpLGUpfWRvY3VtZW50KGUpe3RoaXMuYm9keShlKX1yYXcoZSxyLG4pe2xldCBpO2lmKG58fChuPXIpLHImJihpPWUucmF3c1tyXSx0eXBlb2YgaTxcInVcIikpcmV0dXJuIGk7bGV0IGE9ZS5wYXJlbnQ7aWYobj09PVwiYmVmb3JlXCImJighYXx8YS50eXBlPT09XCJyb290XCImJmEuZmlyc3Q9PT1lfHxhJiZhLnR5cGU9PT1cImRvY3VtZW50XCIpKXJldHVyblwiXCI7aWYoIWEpcmV0dXJuIFdhW25dO2xldCBzPWUucm9vdCgpO2lmKHMucmF3Q2FjaGV8fChzLnJhd0NhY2hlPXt9KSx0eXBlb2Ygcy5yYXdDYWNoZVtuXTxcInVcIilyZXR1cm4gcy5yYXdDYWNoZVtuXTtpZihuPT09XCJiZWZvcmVcInx8bj09PVwiYWZ0ZXJcIilyZXR1cm4gdGhpcy5iZWZvcmVBZnRlcihlLG4pO3tsZXQgbz1cInJhd1wiK01wKG4pO3RoaXNbb10/aT10aGlzW29dKHMsZSk6cy53YWxrKGw9PntpZihpPWwucmF3c1tyXSx0eXBlb2YgaTxcInVcIilyZXR1cm4hMX0pfXJldHVybiB0eXBlb2YgaT5cInVcIiYmKGk9V2Fbbl0pLHMucmF3Q2FjaGVbbl09aSxpfXJhd0JlZm9yZUNsb3NlKGUpe2xldCByO3JldHVybiBlLndhbGsobj0+e2lmKG4ubm9kZXMmJm4ubm9kZXMubGVuZ3RoPjAmJnR5cGVvZiBuLnJhd3MuYWZ0ZXI8XCJ1XCIpcmV0dXJuIHI9bi5yYXdzLmFmdGVyLHIuaW5jbHVkZXMoYFxuYCkmJihyPXIucmVwbGFjZSgvW15cXG5dKyQvLFwiXCIpKSwhMX0pLHImJihyPXIucmVwbGFjZSgvXFxTL2csXCJcIikpLHJ9cmF3QmVmb3JlQ29tbWVudChlLHIpe2xldCBuO3JldHVybiBlLndhbGtDb21tZW50cyhpPT57aWYodHlwZW9mIGkucmF3cy5iZWZvcmU8XCJ1XCIpcmV0dXJuIG49aS5yYXdzLmJlZm9yZSxuLmluY2x1ZGVzKGBcbmApJiYobj1uLnJlcGxhY2UoL1teXFxuXSskLyxcIlwiKSksITF9KSx0eXBlb2Ygbj5cInVcIj9uPXRoaXMucmF3KHIsbnVsbCxcImJlZm9yZURlY2xcIik6biYmKG49bi5yZXBsYWNlKC9cXFMvZyxcIlwiKSksbn1yYXdCZWZvcmVEZWNsKGUscil7bGV0IG47cmV0dXJuIGUud2Fsa0RlY2xzKGk9PntpZih0eXBlb2YgaS5yYXdzLmJlZm9yZTxcInVcIilyZXR1cm4gbj1pLnJhd3MuYmVmb3JlLG4uaW5jbHVkZXMoYFxuYCkmJihuPW4ucmVwbGFjZSgvW15cXG5dKyQvLFwiXCIpKSwhMX0pLHR5cGVvZiBuPlwidVwiP249dGhpcy5yYXcocixudWxsLFwiYmVmb3JlUnVsZVwiKTpuJiYobj1uLnJlcGxhY2UoL1xcUy9nLFwiXCIpKSxufXJhd0JlZm9yZU9wZW4oZSl7bGV0IHI7cmV0dXJuIGUud2FsayhuPT57aWYobi50eXBlIT09XCJkZWNsXCImJihyPW4ucmF3cy5iZXR3ZWVuLHR5cGVvZiByPFwidVwiKSlyZXR1cm4hMX0pLHJ9cmF3QmVmb3JlUnVsZShlKXtsZXQgcjtyZXR1cm4gZS53YWxrKG49PntpZihuLm5vZGVzJiYobi5wYXJlbnQhPT1lfHxlLmZpcnN0IT09bikmJnR5cGVvZiBuLnJhd3MuYmVmb3JlPFwidVwiKXJldHVybiByPW4ucmF3cy5iZWZvcmUsci5pbmNsdWRlcyhgXG5gKSYmKHI9ci5yZXBsYWNlKC9bXlxcbl0rJC8sXCJcIikpLCExfSksciYmKHI9ci5yZXBsYWNlKC9cXFMvZyxcIlwiKSkscn1yYXdDb2xvbihlKXtsZXQgcjtyZXR1cm4gZS53YWxrRGVjbHMobj0+e2lmKHR5cGVvZiBuLnJhd3MuYmV0d2VlbjxcInVcIilyZXR1cm4gcj1uLnJhd3MuYmV0d2Vlbi5yZXBsYWNlKC9bXlxcczpdL2csXCJcIiksITF9KSxyfXJhd0VtcHR5Qm9keShlKXtsZXQgcjtyZXR1cm4gZS53YWxrKG49PntpZihuLm5vZGVzJiZuLm5vZGVzLmxlbmd0aD09PTAmJihyPW4ucmF3cy5hZnRlcix0eXBlb2YgcjxcInVcIikpcmV0dXJuITF9KSxyfXJhd0luZGVudChlKXtpZihlLnJhd3MuaW5kZW50KXJldHVybiBlLnJhd3MuaW5kZW50O2xldCByO3JldHVybiBlLndhbGsobj0+e2xldCBpPW4ucGFyZW50O2lmKGkmJmkhPT1lJiZpLnBhcmVudCYmaS5wYXJlbnQ9PT1lJiZ0eXBlb2Ygbi5yYXdzLmJlZm9yZTxcInVcIil7bGV0IGE9bi5yYXdzLmJlZm9yZS5zcGxpdChgXG5gKTtyZXR1cm4gcj1hW2EubGVuZ3RoLTFdLHI9ci5yZXBsYWNlKC9cXFMvZyxcIlwiKSwhMX19KSxyfXJhd1NlbWljb2xvbihlKXtsZXQgcjtyZXR1cm4gZS53YWxrKG49PntpZihuLm5vZGVzJiZuLm5vZGVzLmxlbmd0aCYmbi5sYXN0LnR5cGU9PT1cImRlY2xcIiYmKHI9bi5yYXdzLnNlbWljb2xvbix0eXBlb2YgcjxcInVcIikpcmV0dXJuITF9KSxyfXJhd1ZhbHVlKGUscil7bGV0IG49ZVtyXSxpPWUucmF3c1tyXTtyZXR1cm4gaSYmaS52YWx1ZT09PW4/aS5yYXc6bn1yb290KGUpe3RoaXMuYm9keShlKSxlLnJhd3MuYWZ0ZXImJnRoaXMuYnVpbGRlcihlLnJhd3MuYWZ0ZXIpfXJ1bGUoZSl7dGhpcy5ibG9jayhlLHRoaXMucmF3VmFsdWUoZSxcInNlbGVjdG9yXCIpKSxlLnJhd3Mub3duU2VtaWNvbG9uJiZ0aGlzLmJ1aWxkZXIoZS5yYXdzLm93blNlbWljb2xvbixlLFwiZW5kXCIpfXN0cmluZ2lmeShlLHIpe2lmKCF0aGlzW2UudHlwZV0pdGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBBU1Qgbm9kZSB0eXBlIFwiK2UudHlwZStcIi4gTWF5YmUgeW91IG5lZWQgdG8gY2hhbmdlIFBvc3RDU1Mgc3RyaW5naWZpZXIuXCIpO3RoaXNbZS50eXBlXShlLHIpfX07QmEuZXhwb3J0cz1ndDtndC5kZWZhdWx0PWd0fSk7dmFyIHl0PVMoKGtiLEdhKT0+e1widXNlIHN0cmljdFwiO3ZhciBGcD1RbigpO2Z1bmN0aW9uIEpuKHQsZSl7bmV3IEZwKGUpLnN0cmluZ2lmeSh0KX1HYS5leHBvcnRzPUpuO0puLmRlZmF1bHQ9Sm59KTt2YXIgd3Q9UygoT2IsWWEpPT57XCJ1c2Ugc3RyaWN0XCI7dmFye2lzQ2xlYW46U3IsbXk6THB9PXhyKCksTnA9YnIoKSxxcD1RbigpLCRwPXl0KCk7ZnVuY3Rpb24gWG4odCxlKXtsZXQgcj1uZXcgdC5jb25zdHJ1Y3Rvcjtmb3IobGV0IG4gaW4gdCl7aWYoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LG4pfHxuPT09XCJwcm94eUNhY2hlXCIpY29udGludWU7bGV0IGk9dFtuXSxhPXR5cGVvZiBpO249PT1cInBhcmVudFwiJiZhPT09XCJvYmplY3RcIj9lJiYocltuXT1lKTpuPT09XCJzb3VyY2VcIj9yW25dPWk6QXJyYXkuaXNBcnJheShpKT9yW25dPWkubWFwKHM9PlhuKHMscikpOihhPT09XCJvYmplY3RcIiYmaSE9PW51bGwmJihpPVhuKGkpKSxyW25dPWkpfXJldHVybiByfXZhciB2dD1jbGFzc3tjb25zdHJ1Y3RvcihlPXt9KXt0aGlzLnJhd3M9e30sdGhpc1tTcl09ITEsdGhpc1tMcF09ITA7Zm9yKGxldCByIGluIGUpaWYocj09PVwibm9kZXNcIil7dGhpcy5ub2Rlcz1bXTtmb3IobGV0IG4gb2YgZVtyXSl0eXBlb2Ygbi5jbG9uZT09XCJmdW5jdGlvblwiP3RoaXMuYXBwZW5kKG4uY2xvbmUoKSk6dGhpcy5hcHBlbmQobil9ZWxzZSB0aGlzW3JdPWVbcl19YWRkVG9FcnJvcihlKXtpZihlLnBvc3Rjc3NOb2RlPXRoaXMsZS5zdGFjayYmdGhpcy5zb3VyY2UmJi9cXG5cXHN7NH1hdCAvLnRlc3QoZS5zdGFjaykpe2xldCByPXRoaXMuc291cmNlO2Uuc3RhY2s9ZS5zdGFjay5yZXBsYWNlKC9cXG5cXHN7NH1hdCAvLGAkJiR7ci5pbnB1dC5mcm9tfToke3Iuc3RhcnQubGluZX06JHtyLnN0YXJ0LmNvbHVtbn0kJmApfXJldHVybiBlfWFmdGVyKGUpe3JldHVybiB0aGlzLnBhcmVudC5pbnNlcnRBZnRlcih0aGlzLGUpLHRoaXN9YXNzaWduKGU9e30pe2ZvcihsZXQgciBpbiBlKXRoaXNbcl09ZVtyXTtyZXR1cm4gdGhpc31iZWZvcmUoZSl7cmV0dXJuIHRoaXMucGFyZW50Lmluc2VydEJlZm9yZSh0aGlzLGUpLHRoaXN9Y2xlYW5SYXdzKGUpe2RlbGV0ZSB0aGlzLnJhd3MuYmVmb3JlLGRlbGV0ZSB0aGlzLnJhd3MuYWZ0ZXIsZXx8ZGVsZXRlIHRoaXMucmF3cy5iZXR3ZWVufWNsb25lKGU9e30pe2xldCByPVhuKHRoaXMpO2ZvcihsZXQgbiBpbiBlKXJbbl09ZVtuXTtyZXR1cm4gcn1jbG9uZUFmdGVyKGU9e30pe2xldCByPXRoaXMuY2xvbmUoZSk7cmV0dXJuIHRoaXMucGFyZW50Lmluc2VydEFmdGVyKHRoaXMscikscn1jbG9uZUJlZm9yZShlPXt9KXtsZXQgcj10aGlzLmNsb25lKGUpO3JldHVybiB0aGlzLnBhcmVudC5pbnNlcnRCZWZvcmUodGhpcyxyKSxyfWVycm9yKGUscj17fSl7aWYodGhpcy5zb3VyY2Upe2xldHtlbmQ6bixzdGFydDppfT10aGlzLnJhbmdlQnkocik7cmV0dXJuIHRoaXMuc291cmNlLmlucHV0LmVycm9yKGUse2NvbHVtbjppLmNvbHVtbixsaW5lOmkubGluZX0se2NvbHVtbjpuLmNvbHVtbixsaW5lOm4ubGluZX0scil9cmV0dXJuIG5ldyBOcChlKX1nZXRQcm94eVByb2Nlc3Nvcigpe3JldHVybntnZXQoZSxyKXtyZXR1cm4gcj09PVwicHJveHlPZlwiP2U6cj09PVwicm9vdFwiPygpPT5lLnJvb3QoKS50b1Byb3h5KCk6ZVtyXX0sc2V0KGUscixuKXtyZXR1cm4gZVtyXT09PW58fChlW3JdPW4sKHI9PT1cInByb3BcInx8cj09PVwidmFsdWVcInx8cj09PVwibmFtZVwifHxyPT09XCJwYXJhbXNcInx8cj09PVwiaW1wb3J0YW50XCJ8fHI9PT1cInRleHRcIikmJmUubWFya0RpcnR5KCkpLCEwfX19bWFya0RpcnR5KCl7aWYodGhpc1tTcl0pe3RoaXNbU3JdPSExO2xldCBlPXRoaXM7Zm9yKDtlPWUucGFyZW50OyllW1NyXT0hMX19bmV4dCgpe2lmKCF0aGlzLnBhcmVudClyZXR1cm47bGV0IGU9dGhpcy5wYXJlbnQuaW5kZXgodGhpcyk7cmV0dXJuIHRoaXMucGFyZW50Lm5vZGVzW2UrMV19cG9zaXRpb25CeShlLHIpe2xldCBuPXRoaXMuc291cmNlLnN0YXJ0O2lmKGUuaW5kZXgpbj10aGlzLnBvc2l0aW9uSW5zaWRlKGUuaW5kZXgscik7ZWxzZSBpZihlLndvcmQpe3I9dGhpcy50b1N0cmluZygpO2xldCBpPXIuaW5kZXhPZihlLndvcmQpO2khPT0tMSYmKG49dGhpcy5wb3NpdGlvbkluc2lkZShpLHIpKX1yZXR1cm4gbn1wb3NpdGlvbkluc2lkZShlLHIpe2xldCBuPXJ8fHRoaXMudG9TdHJpbmcoKSxpPXRoaXMuc291cmNlLnN0YXJ0LmNvbHVtbixhPXRoaXMuc291cmNlLnN0YXJ0LmxpbmU7Zm9yKGxldCBzPTA7czxlO3MrKyluW3NdPT09YFxuYD8oaT0xLGErPTEpOmkrPTE7cmV0dXJue2NvbHVtbjppLGxpbmU6YX19cHJldigpe2lmKCF0aGlzLnBhcmVudClyZXR1cm47bGV0IGU9dGhpcy5wYXJlbnQuaW5kZXgodGhpcyk7cmV0dXJuIHRoaXMucGFyZW50Lm5vZGVzW2UtMV19cmFuZ2VCeShlKXtsZXQgcj17Y29sdW1uOnRoaXMuc291cmNlLnN0YXJ0LmNvbHVtbixsaW5lOnRoaXMuc291cmNlLnN0YXJ0LmxpbmV9LG49dGhpcy5zb3VyY2UuZW5kP3tjb2x1bW46dGhpcy5zb3VyY2UuZW5kLmNvbHVtbisxLGxpbmU6dGhpcy5zb3VyY2UuZW5kLmxpbmV9Ontjb2x1bW46ci5jb2x1bW4rMSxsaW5lOnIubGluZX07aWYoZS53b3JkKXtsZXQgaT10aGlzLnRvU3RyaW5nKCksYT1pLmluZGV4T2YoZS53b3JkKTthIT09LTEmJihyPXRoaXMucG9zaXRpb25JbnNpZGUoYSxpKSxuPXRoaXMucG9zaXRpb25JbnNpZGUoYStlLndvcmQubGVuZ3RoLGkpKX1lbHNlIGUuc3RhcnQ/cj17Y29sdW1uOmUuc3RhcnQuY29sdW1uLGxpbmU6ZS5zdGFydC5saW5lfTplLmluZGV4JiYocj10aGlzLnBvc2l0aW9uSW5zaWRlKGUuaW5kZXgpKSxlLmVuZD9uPXtjb2x1bW46ZS5lbmQuY29sdW1uLGxpbmU6ZS5lbmQubGluZX06ZS5lbmRJbmRleD9uPXRoaXMucG9zaXRpb25JbnNpZGUoZS5lbmRJbmRleCk6ZS5pbmRleCYmKG49dGhpcy5wb3NpdGlvbkluc2lkZShlLmluZGV4KzEpKTtyZXR1cm4obi5saW5lPHIubGluZXx8bi5saW5lPT09ci5saW5lJiZuLmNvbHVtbjw9ci5jb2x1bW4pJiYobj17Y29sdW1uOnIuY29sdW1uKzEsbGluZTpyLmxpbmV9KSx7ZW5kOm4sc3RhcnQ6cn19cmF3KGUscil7cmV0dXJuIG5ldyBxcCgpLnJhdyh0aGlzLGUscil9cmVtb3ZlKCl7cmV0dXJuIHRoaXMucGFyZW50JiZ0aGlzLnBhcmVudC5yZW1vdmVDaGlsZCh0aGlzKSx0aGlzLnBhcmVudD12b2lkIDAsdGhpc31yZXBsYWNlV2l0aCguLi5lKXtpZih0aGlzLnBhcmVudCl7bGV0IHI9dGhpcyxuPSExO2ZvcihsZXQgaSBvZiBlKWk9PT10aGlzP249ITA6bj8odGhpcy5wYXJlbnQuaW5zZXJ0QWZ0ZXIocixpKSxyPWkpOnRoaXMucGFyZW50Lmluc2VydEJlZm9yZShyLGkpO258fHRoaXMucmVtb3ZlKCl9cmV0dXJuIHRoaXN9cm9vdCgpe2xldCBlPXRoaXM7Zm9yKDtlLnBhcmVudCYmZS5wYXJlbnQudHlwZSE9PVwiZG9jdW1lbnRcIjspZT1lLnBhcmVudDtyZXR1cm4gZX10b0pTT04oZSxyKXtsZXQgbj17fSxpPXI9PW51bGw7cj1yfHxuZXcgTWFwO2xldCBhPTA7Zm9yKGxldCBzIGluIHRoaXMpe2lmKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodGhpcyxzKXx8cz09PVwicGFyZW50XCJ8fHM9PT1cInByb3h5Q2FjaGVcIiljb250aW51ZTtsZXQgbz10aGlzW3NdO2lmKEFycmF5LmlzQXJyYXkobykpbltzXT1vLm1hcChsPT50eXBlb2YgbD09XCJvYmplY3RcIiYmbC50b0pTT04/bC50b0pTT04obnVsbCxyKTpsKTtlbHNlIGlmKHR5cGVvZiBvPT1cIm9iamVjdFwiJiZvLnRvSlNPTiluW3NdPW8udG9KU09OKG51bGwscik7ZWxzZSBpZihzPT09XCJzb3VyY2VcIil7bGV0IGw9ci5nZXQoby5pbnB1dCk7bD09bnVsbCYmKGw9YSxyLnNldChvLmlucHV0LGEpLGErKyksbltzXT17ZW5kOm8uZW5kLGlucHV0SWQ6bCxzdGFydDpvLnN0YXJ0fX1lbHNlIG5bc109b31yZXR1cm4gaSYmKG4uaW5wdXRzPVsuLi5yLmtleXMoKV0ubWFwKHM9PnMudG9KU09OKCkpKSxufXRvUHJveHkoKXtyZXR1cm4gdGhpcy5wcm94eUNhY2hlfHwodGhpcy5wcm94eUNhY2hlPW5ldyBQcm94eSh0aGlzLHRoaXMuZ2V0UHJveHlQcm9jZXNzb3IoKSkpLHRoaXMucHJveHlDYWNoZX10b1N0cmluZyhlPSRwKXtlLnN0cmluZ2lmeSYmKGU9ZS5zdHJpbmdpZnkpO2xldCByPVwiXCI7cmV0dXJuIGUodGhpcyxuPT57cis9bn0pLHJ9d2FybihlLHIsbil7bGV0IGk9e25vZGU6dGhpc307Zm9yKGxldCBhIGluIG4paVthXT1uW2FdO3JldHVybiBlLndhcm4ocixpKX1nZXQgcHJveHlPZigpe3JldHVybiB0aGlzfX07WWEuZXhwb3J0cz12dDt2dC5kZWZhdWx0PXZ0fSk7dmFyIHh0PVMoKEViLEhhKT0+e1widXNlIHN0cmljdFwiO3ZhciBVcD13dCgpLGJ0PWNsYXNzIGV4dGVuZHMgVXB7Y29uc3RydWN0b3IoZSl7ZSYmdHlwZW9mIGUudmFsdWU8XCJ1XCImJnR5cGVvZiBlLnZhbHVlIT1cInN0cmluZ1wiJiYoZT17Li4uZSx2YWx1ZTpTdHJpbmcoZS52YWx1ZSl9KSxzdXBlcihlKSx0aGlzLnR5cGU9XCJkZWNsXCJ9Z2V0IHZhcmlhYmxlKCl7cmV0dXJuIHRoaXMucHJvcC5zdGFydHNXaXRoKFwiLS1cIil8fHRoaXMucHJvcFswXT09PVwiJFwifX07SGEuZXhwb3J0cz1idDtidC5kZWZhdWx0PWJ0fSk7dmFyIGtyPVMoKCk9Pnt9KTt2YXIgU3Q9e307eXIoU3Qse2pvaW46KCk9PktufSk7dmFyIEtuLGt0PWR0KCgpPT57S249KCk9PlwiXCJ9KTt2YXIgWm49e307eXIoWm4se2RlZmF1bHQ6KCk9PmpwfSk7dmFyIGpwLGVpPWR0KCgpPT57anA9bnVsbH0pO3ZhciBKYT1TKChfYixRYSk9Pnt2YXIgenA9XCJ1c2VhbmRvbS0yNlQxOTgzNDBQWDc1cHhKQUNLVkVSWU1JTkRCVVNIV09MRl9HUVpiZmdoamtscXZ3eXpyaWN0XCIsVnA9KHQsZT0yMSk9PihyPWUpPT57bGV0IG49XCJcIixpPXI7Zm9yKDtpLS07KW4rPXRbTWF0aC5yYW5kb20oKSp0Lmxlbmd0aHwwXTtyZXR1cm4gbn0sV3A9KHQ9MjEpPT57bGV0IGU9XCJcIixyPXQ7Zm9yKDtyLS07KWUrPXpwW01hdGgucmFuZG9tKCkqNjR8MF07cmV0dXJuIGV9O1FhLmV4cG9ydHM9e25hbm9pZDpXcCxjdXN0b21BbHBoYWJldDpWcH19KTt2YXIgcmk9UygoVGIsWmEpPT57XCJ1c2Ugc3RyaWN0XCI7dmFye1NvdXJjZU1hcENvbnN1bWVyOlhhLFNvdXJjZU1hcEdlbmVyYXRvcjpLYX09a3IoKSx7ZXhpc3RzU3luYzpCcCxyZWFkRmlsZVN5bmM6R3B9PSh2cigpLCRlKEZhKSkse2Rpcm5hbWU6dGksam9pbjpZcH09KGt0KCksJGUoU3QpKTtmdW5jdGlvbiBIcCh0KXtyZXR1cm4gQnVmZmVyP0J1ZmZlci5mcm9tKHQsXCJiYXNlNjRcIikudG9TdHJpbmcoKTp3aW5kb3cuYXRvYih0KX12YXIgT3Q9Y2xhc3N7Y29uc3RydWN0b3IoZSxyKXtpZihyLm1hcD09PSExKXJldHVybjt0aGlzLmxvYWRBbm5vdGF0aW9uKGUpLHRoaXMuaW5saW5lPXRoaXMuc3RhcnRXaXRoKHRoaXMuYW5ub3RhdGlvbixcImRhdGE6XCIpO2xldCBuPXIubWFwP3IubWFwLnByZXY6dm9pZCAwLGk9dGhpcy5sb2FkTWFwKHIuZnJvbSxuKTshdGhpcy5tYXBGaWxlJiZyLmZyb20mJih0aGlzLm1hcEZpbGU9ci5mcm9tKSx0aGlzLm1hcEZpbGUmJih0aGlzLnJvb3Q9dGkodGhpcy5tYXBGaWxlKSksaSYmKHRoaXMudGV4dD1pKX1jb25zdW1lcigpe3JldHVybiB0aGlzLmNvbnN1bWVyQ2FjaGV8fCh0aGlzLmNvbnN1bWVyQ2FjaGU9bmV3IFhhKHRoaXMudGV4dCkpLHRoaXMuY29uc3VtZXJDYWNoZX1kZWNvZGVJbmxpbmUoZSl7bGV0IHI9L15kYXRhOmFwcGxpY2F0aW9uXFwvanNvbjtjaGFyc2V0PXV0Zi0/ODtiYXNlNjQsLyxuPS9eZGF0YTphcHBsaWNhdGlvblxcL2pzb247YmFzZTY0LC8saT0vXmRhdGE6YXBwbGljYXRpb25cXC9qc29uO2NoYXJzZXQ9dXRmLT84LC8sYT0vXmRhdGE6YXBwbGljYXRpb25cXC9qc29uLC87aWYoaS50ZXN0KGUpfHxhLnRlc3QoZSkpcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChlLnN1YnN0cihSZWdFeHAubGFzdE1hdGNoLmxlbmd0aCkpO2lmKHIudGVzdChlKXx8bi50ZXN0KGUpKXJldHVybiBIcChlLnN1YnN0cihSZWdFeHAubGFzdE1hdGNoLmxlbmd0aCkpO2xldCBzPWUubWF0Y2goL2RhdGE6YXBwbGljYXRpb25cXC9qc29uOyhbXixdKyksLylbMV07dGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgc291cmNlIG1hcCBlbmNvZGluZyBcIitzKX1nZXRBbm5vdGF0aW9uVVJMKGUpe3JldHVybiBlLnJlcGxhY2UoL15cXC9cXCpcXHMqIyBzb3VyY2VNYXBwaW5nVVJMPS8sXCJcIikudHJpbSgpfWlzTWFwKGUpe3JldHVybiB0eXBlb2YgZSE9XCJvYmplY3RcIj8hMTp0eXBlb2YgZS5tYXBwaW5ncz09XCJzdHJpbmdcInx8dHlwZW9mIGUuX21hcHBpbmdzPT1cInN0cmluZ1wifHxBcnJheS5pc0FycmF5KGUuc2VjdGlvbnMpfWxvYWRBbm5vdGF0aW9uKGUpe2xldCByPWUubWF0Y2goL1xcL1xcKlxccyojIHNvdXJjZU1hcHBpbmdVUkw9L2dtKTtpZighcilyZXR1cm47bGV0IG49ZS5sYXN0SW5kZXhPZihyLnBvcCgpKSxpPWUuaW5kZXhPZihcIiovXCIsbik7bj4tMSYmaT4tMSYmKHRoaXMuYW5ub3RhdGlvbj10aGlzLmdldEFubm90YXRpb25VUkwoZS5zdWJzdHJpbmcobixpKSkpfWxvYWRGaWxlKGUpe2lmKHRoaXMucm9vdD10aShlKSxCcChlKSlyZXR1cm4gdGhpcy5tYXBGaWxlPWUsR3AoZSxcInV0Zi04XCIpLnRvU3RyaW5nKCkudHJpbSgpfWxvYWRNYXAoZSxyKXtpZihyPT09ITEpcmV0dXJuITE7aWYocil7aWYodHlwZW9mIHI9PVwic3RyaW5nXCIpcmV0dXJuIHI7aWYodHlwZW9mIHI9PVwiZnVuY3Rpb25cIil7bGV0IG49cihlKTtpZihuKXtsZXQgaT10aGlzLmxvYWRGaWxlKG4pO2lmKCFpKXRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byBsb2FkIHByZXZpb3VzIHNvdXJjZSBtYXA6IFwiK24udG9TdHJpbmcoKSk7cmV0dXJuIGl9fWVsc2V7aWYociBpbnN0YW5jZW9mIFhhKXJldHVybiBLYS5mcm9tU291cmNlTWFwKHIpLnRvU3RyaW5nKCk7aWYociBpbnN0YW5jZW9mIEthKXJldHVybiByLnRvU3RyaW5nKCk7aWYodGhpcy5pc01hcChyKSlyZXR1cm4gSlNPTi5zdHJpbmdpZnkocik7dGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgcHJldmlvdXMgc291cmNlIG1hcCBmb3JtYXQ6IFwiK3IudG9TdHJpbmcoKSl9fWVsc2V7aWYodGhpcy5pbmxpbmUpcmV0dXJuIHRoaXMuZGVjb2RlSW5saW5lKHRoaXMuYW5ub3RhdGlvbik7aWYodGhpcy5hbm5vdGF0aW9uKXtsZXQgbj10aGlzLmFubm90YXRpb247cmV0dXJuIGUmJihuPVlwKHRpKGUpLG4pKSx0aGlzLmxvYWRGaWxlKG4pfX19c3RhcnRXaXRoKGUscil7cmV0dXJuIGU/ZS5zdWJzdHIoMCxyLmxlbmd0aCk9PT1yOiExfXdpdGhDb250ZW50KCl7cmV0dXJuISEodGhpcy5jb25zdW1lcigpLnNvdXJjZXNDb250ZW50JiZ0aGlzLmNvbnN1bWVyKCkuc291cmNlc0NvbnRlbnQubGVuZ3RoPjApfX07WmEuZXhwb3J0cz1PdDtPdC5kZWZhdWx0PU90fSk7dmFyIEV0PVMoKFBiLG5vKT0+e1widXNlIHN0cmljdFwiO3ZhcntTb3VyY2VNYXBDb25zdW1lcjpRcCxTb3VyY2VNYXBHZW5lcmF0b3I6SnB9PWtyKCkse2ZpbGVVUkxUb1BhdGg6ZW8scGF0aFRvRmlsZVVSTDpPcn09KGVpKCksJGUoWm4pKSx7aXNBYnNvbHV0ZTpzaSxyZXNvbHZlOmFpfT0oa3QoKSwkZShTdCkpLHtuYW5vaWQ6WHB9PUphKCksbmk9WW4oKSx0bz1icigpLEtwPXJpKCksaWk9U3ltYm9sKFwiZnJvbU9mZnNldENhY2hlXCIpLFpwPUJvb2xlYW4oUXAmJkpwKSxybz1Cb29sZWFuKGFpJiZzaSksWWU9Y2xhc3N7Y29uc3RydWN0b3IoZSxyPXt9KXtpZihlPT09bnVsbHx8dHlwZW9mIGU+XCJ1XCJ8fHR5cGVvZiBlPT1cIm9iamVjdFwiJiYhZS50b1N0cmluZyl0aHJvdyBuZXcgRXJyb3IoYFBvc3RDU1MgcmVjZWl2ZWQgJHtlfSBpbnN0ZWFkIG9mIENTUyBzdHJpbmdgKTtpZih0aGlzLmNzcz1lLnRvU3RyaW5nKCksdGhpcy5jc3NbMF09PT1cIlxcdUZFRkZcInx8dGhpcy5jc3NbMF09PT1cIlxcdUZGRkVcIj8odGhpcy5oYXNCT009ITAsdGhpcy5jc3M9dGhpcy5jc3Muc2xpY2UoMSkpOnRoaXMuaGFzQk9NPSExLHIuZnJvbSYmKCFyb3x8L15cXHcrOlxcL1xcLy8udGVzdChyLmZyb20pfHxzaShyLmZyb20pP3RoaXMuZmlsZT1yLmZyb206dGhpcy5maWxlPWFpKHIuZnJvbSkpLHJvJiZacCl7bGV0IG49bmV3IEtwKHRoaXMuY3NzLHIpO2lmKG4udGV4dCl7dGhpcy5tYXA9bjtsZXQgaT1uLmNvbnN1bWVyKCkuZmlsZTshdGhpcy5maWxlJiZpJiYodGhpcy5maWxlPXRoaXMubWFwUmVzb2x2ZShpKSl9fXRoaXMuZmlsZXx8KHRoaXMuaWQ9XCI8aW5wdXQgY3NzIFwiK1hwKDYpK1wiPlwiKSx0aGlzLm1hcCYmKHRoaXMubWFwLmZpbGU9dGhpcy5mcm9tKX1lcnJvcihlLHIsbixpPXt9KXtsZXQgYSxzLG87aWYociYmdHlwZW9mIHI9PVwib2JqZWN0XCIpe2xldCB1PXIsZj1uO2lmKHR5cGVvZiB1Lm9mZnNldD09XCJudW1iZXJcIil7bGV0IHA9dGhpcy5mcm9tT2Zmc2V0KHUub2Zmc2V0KTtyPXAubGluZSxuPXAuY29sfWVsc2Ugcj11LmxpbmUsbj11LmNvbHVtbjtpZih0eXBlb2YgZi5vZmZzZXQ9PVwibnVtYmVyXCIpe2xldCBwPXRoaXMuZnJvbU9mZnNldChmLm9mZnNldCk7cz1wLmxpbmUsbz1wLmNvbH1lbHNlIHM9Zi5saW5lLG89Zi5jb2x1bW59ZWxzZSBpZighbil7bGV0IHU9dGhpcy5mcm9tT2Zmc2V0KHIpO3I9dS5saW5lLG49dS5jb2x9bGV0IGw9dGhpcy5vcmlnaW4ocixuLHMsbyk7cmV0dXJuIGw/YT1uZXcgdG8oZSxsLmVuZExpbmU9PT12b2lkIDA/bC5saW5lOntjb2x1bW46bC5jb2x1bW4sbGluZTpsLmxpbmV9LGwuZW5kTGluZT09PXZvaWQgMD9sLmNvbHVtbjp7Y29sdW1uOmwuZW5kQ29sdW1uLGxpbmU6bC5lbmRMaW5lfSxsLnNvdXJjZSxsLmZpbGUsaS5wbHVnaW4pOmE9bmV3IHRvKGUscz09PXZvaWQgMD9yOntjb2x1bW46bixsaW5lOnJ9LHM9PT12b2lkIDA/bjp7Y29sdW1uOm8sbGluZTpzfSx0aGlzLmNzcyx0aGlzLmZpbGUsaS5wbHVnaW4pLGEuaW5wdXQ9e2NvbHVtbjpuLGVuZENvbHVtbjpvLGVuZExpbmU6cyxsaW5lOnIsc291cmNlOnRoaXMuY3NzfSx0aGlzLmZpbGUmJihPciYmKGEuaW5wdXQudXJsPU9yKHRoaXMuZmlsZSkudG9TdHJpbmcoKSksYS5pbnB1dC5maWxlPXRoaXMuZmlsZSksYX1mcm9tT2Zmc2V0KGUpe2xldCByLG47aWYodGhpc1tpaV0pbj10aGlzW2lpXTtlbHNle2xldCBhPXRoaXMuY3NzLnNwbGl0KGBcbmApO249bmV3IEFycmF5KGEubGVuZ3RoKTtsZXQgcz0wO2ZvcihsZXQgbz0wLGw9YS5sZW5ndGg7bzxsO28rKyluW29dPXMscys9YVtvXS5sZW5ndGgrMTt0aGlzW2lpXT1ufXI9bltuLmxlbmd0aC0xXTtsZXQgaT0wO2lmKGU+PXIpaT1uLmxlbmd0aC0xO2Vsc2V7bGV0IGE9bi5sZW5ndGgtMixzO2Zvcig7aTxhOylpZihzPWkrKGEtaT4+MSksZTxuW3NdKWE9cy0xO2Vsc2UgaWYoZT49bltzKzFdKWk9cysxO2Vsc2V7aT1zO2JyZWFrfX1yZXR1cm57Y29sOmUtbltpXSsxLGxpbmU6aSsxfX1tYXBSZXNvbHZlKGUpe3JldHVybi9eXFx3KzpcXC9cXC8vLnRlc3QoZSk/ZTphaSh0aGlzLm1hcC5jb25zdW1lcigpLnNvdXJjZVJvb3R8fHRoaXMubWFwLnJvb3R8fFwiLlwiLGUpfW9yaWdpbihlLHIsbixpKXtpZighdGhpcy5tYXApcmV0dXJuITE7bGV0IGE9dGhpcy5tYXAuY29uc3VtZXIoKSxzPWEub3JpZ2luYWxQb3NpdGlvbkZvcih7Y29sdW1uOnIsbGluZTplfSk7aWYoIXMuc291cmNlKXJldHVybiExO2xldCBvO3R5cGVvZiBuPT1cIm51bWJlclwiJiYobz1hLm9yaWdpbmFsUG9zaXRpb25Gb3Ioe2NvbHVtbjppLGxpbmU6bn0pKTtsZXQgbDtzaShzLnNvdXJjZSk/bD1PcihzLnNvdXJjZSk6bD1uZXcgVVJMKHMuc291cmNlLHRoaXMubWFwLmNvbnN1bWVyKCkuc291cmNlUm9vdHx8T3IodGhpcy5tYXAubWFwRmlsZSkpO2xldCB1PXtjb2x1bW46cy5jb2x1bW4sZW5kQ29sdW1uOm8mJm8uY29sdW1uLGVuZExpbmU6byYmby5saW5lLGxpbmU6cy5saW5lLHVybDpsLnRvU3RyaW5nKCl9O2lmKGwucHJvdG9jb2w9PT1cImZpbGU6XCIpaWYoZW8pdS5maWxlPWVvKGwpO2Vsc2UgdGhyb3cgbmV3IEVycm9yKFwiZmlsZTogcHJvdG9jb2wgaXMgbm90IGF2YWlsYWJsZSBpbiB0aGlzIFBvc3RDU1MgYnVpbGRcIik7bGV0IGY9YS5zb3VyY2VDb250ZW50Rm9yKHMuc291cmNlKTtyZXR1cm4gZiYmKHUuc291cmNlPWYpLHV9dG9KU09OKCl7bGV0IGU9e307Zm9yKGxldCByIG9mW1wiaGFzQk9NXCIsXCJjc3NcIixcImZpbGVcIixcImlkXCJdKXRoaXNbcl0hPW51bGwmJihlW3JdPXRoaXNbcl0pO3JldHVybiB0aGlzLm1hcCYmKGUubWFwPXsuLi50aGlzLm1hcH0sZS5tYXAuY29uc3VtZXJDYWNoZSYmKGUubWFwLmNvbnN1bWVyQ2FjaGU9dm9pZCAwKSksZX1nZXQgZnJvbSgpe3JldHVybiB0aGlzLmZpbGV8fHRoaXMuaWR9fTtuby5leHBvcnRzPVllO1llLmRlZmF1bHQ9WWU7bmkmJm5pLnJlZ2lzdGVySW5wdXQmJm5pLnJlZ2lzdGVySW5wdXQoWWUpfSk7dmFyIGxpPVMoKEliLHVvKT0+e1widXNlIHN0cmljdFwiO3ZhcntTb3VyY2VNYXBDb25zdW1lcjpzbyxTb3VyY2VNYXBHZW5lcmF0b3I6RXJ9PWtyKCkse2Rpcm5hbWU6Q3IscmVsYXRpdmU6YW8scmVzb2x2ZTpvbyxzZXA6bG99PShrdCgpLCRlKFN0KSkse3BhdGhUb0ZpbGVVUkw6aW99PShlaSgpLCRlKFpuKSksZWQ9RXQoKSx0ZD1Cb29sZWFuKHNvJiZFcikscmQ9Qm9vbGVhbihDciYmb28mJmFvJiZsbyksb2k9Y2xhc3N7Y29uc3RydWN0b3IoZSxyLG4saSl7dGhpcy5zdHJpbmdpZnk9ZSx0aGlzLm1hcE9wdHM9bi5tYXB8fHt9LHRoaXMucm9vdD1yLHRoaXMub3B0cz1uLHRoaXMuY3NzPWksdGhpcy51c2VzRmlsZVVybHM9IXRoaXMubWFwT3B0cy5mcm9tJiZ0aGlzLm1hcE9wdHMuYWJzb2x1dGUsdGhpcy5tZW1vaXplZEZpbGVVUkxzPW5ldyBNYXAsdGhpcy5tZW1vaXplZFBhdGhzPW5ldyBNYXAsdGhpcy5tZW1vaXplZFVSTHM9bmV3IE1hcH1hZGRBbm5vdGF0aW9uKCl7bGV0IGU7dGhpcy5pc0lubGluZSgpP2U9XCJkYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiK3RoaXMudG9CYXNlNjQodGhpcy5tYXAudG9TdHJpbmcoKSk6dHlwZW9mIHRoaXMubWFwT3B0cy5hbm5vdGF0aW9uPT1cInN0cmluZ1wiP2U9dGhpcy5tYXBPcHRzLmFubm90YXRpb246dHlwZW9mIHRoaXMubWFwT3B0cy5hbm5vdGF0aW9uPT1cImZ1bmN0aW9uXCI/ZT10aGlzLm1hcE9wdHMuYW5ub3RhdGlvbih0aGlzLm9wdHMudG8sdGhpcy5yb290KTplPXRoaXMub3V0cHV0RmlsZSgpK1wiLm1hcFwiO2xldCByPWBcbmA7dGhpcy5jc3MuaW5jbHVkZXMoYFxcclxuYCkmJihyPWBcXHJcbmApLHRoaXMuY3NzKz1yK1wiLyojIHNvdXJjZU1hcHBpbmdVUkw9XCIrZStcIiAqL1wifWFwcGx5UHJldk1hcHMoKXtmb3IobGV0IGUgb2YgdGhpcy5wcmV2aW91cygpKXtsZXQgcj10aGlzLnRvVXJsKHRoaXMucGF0aChlLmZpbGUpKSxuPWUucm9vdHx8Q3IoZS5maWxlKSxpO3RoaXMubWFwT3B0cy5zb3VyY2VzQ29udGVudD09PSExPyhpPW5ldyBzbyhlLnRleHQpLGkuc291cmNlc0NvbnRlbnQmJihpLnNvdXJjZXNDb250ZW50PWkuc291cmNlc0NvbnRlbnQubWFwKCgpPT5udWxsKSkpOmk9ZS5jb25zdW1lcigpLHRoaXMubWFwLmFwcGx5U291cmNlTWFwKGkscix0aGlzLnRvVXJsKHRoaXMucGF0aChuKSkpfX1jbGVhckFubm90YXRpb24oKXtpZih0aGlzLm1hcE9wdHMuYW5ub3RhdGlvbiE9PSExKWlmKHRoaXMucm9vdCl7bGV0IGU7Zm9yKGxldCByPXRoaXMucm9vdC5ub2Rlcy5sZW5ndGgtMTtyPj0wO3ItLSllPXRoaXMucm9vdC5ub2Rlc1tyXSxlLnR5cGU9PT1cImNvbW1lbnRcIiYmZS50ZXh0LmluZGV4T2YoXCIjIHNvdXJjZU1hcHBpbmdVUkw9XCIpPT09MCYmdGhpcy5yb290LnJlbW92ZUNoaWxkKHIpfWVsc2UgdGhpcy5jc3MmJih0aGlzLmNzcz10aGlzLmNzcy5yZXBsYWNlKC8oXFxuKT9cXC9cXCojW1xcU1xcc10qP1xcKlxcLyQvZ20sXCJcIikpfWdlbmVyYXRlKCl7aWYodGhpcy5jbGVhckFubm90YXRpb24oKSxyZCYmdGQmJnRoaXMuaXNNYXAoKSlyZXR1cm4gdGhpcy5nZW5lcmF0ZU1hcCgpO3tsZXQgZT1cIlwiO3JldHVybiB0aGlzLnN0cmluZ2lmeSh0aGlzLnJvb3Qscj0+e2UrPXJ9KSxbZV19fWdlbmVyYXRlTWFwKCl7aWYodGhpcy5yb290KXRoaXMuZ2VuZXJhdGVTdHJpbmcoKTtlbHNlIGlmKHRoaXMucHJldmlvdXMoKS5sZW5ndGg9PT0xKXtsZXQgZT10aGlzLnByZXZpb3VzKClbMF0uY29uc3VtZXIoKTtlLmZpbGU9dGhpcy5vdXRwdXRGaWxlKCksdGhpcy5tYXA9RXIuZnJvbVNvdXJjZU1hcChlKX1lbHNlIHRoaXMubWFwPW5ldyBFcih7ZmlsZTp0aGlzLm91dHB1dEZpbGUoKX0pLHRoaXMubWFwLmFkZE1hcHBpbmcoe2dlbmVyYXRlZDp7Y29sdW1uOjAsbGluZToxfSxvcmlnaW5hbDp7Y29sdW1uOjAsbGluZToxfSxzb3VyY2U6dGhpcy5vcHRzLmZyb20/dGhpcy50b1VybCh0aGlzLnBhdGgodGhpcy5vcHRzLmZyb20pKTpcIjxubyBzb3VyY2U+XCJ9KTtyZXR1cm4gdGhpcy5pc1NvdXJjZXNDb250ZW50KCkmJnRoaXMuc2V0U291cmNlc0NvbnRlbnQoKSx0aGlzLnJvb3QmJnRoaXMucHJldmlvdXMoKS5sZW5ndGg+MCYmdGhpcy5hcHBseVByZXZNYXBzKCksdGhpcy5pc0Fubm90YXRpb24oKSYmdGhpcy5hZGRBbm5vdGF0aW9uKCksdGhpcy5pc0lubGluZSgpP1t0aGlzLmNzc106W3RoaXMuY3NzLHRoaXMubWFwXX1nZW5lcmF0ZVN0cmluZygpe3RoaXMuY3NzPVwiXCIsdGhpcy5tYXA9bmV3IEVyKHtmaWxlOnRoaXMub3V0cHV0RmlsZSgpfSk7bGV0IGU9MSxyPTEsbj1cIjxubyBzb3VyY2U+XCIsaT17Z2VuZXJhdGVkOntjb2x1bW46MCxsaW5lOjB9LG9yaWdpbmFsOntjb2x1bW46MCxsaW5lOjB9LHNvdXJjZTpcIlwifSxhLHM7dGhpcy5zdHJpbmdpZnkodGhpcy5yb290LChvLGwsdSk9PntpZih0aGlzLmNzcys9byxsJiZ1IT09XCJlbmRcIiYmKGkuZ2VuZXJhdGVkLmxpbmU9ZSxpLmdlbmVyYXRlZC5jb2x1bW49ci0xLGwuc291cmNlJiZsLnNvdXJjZS5zdGFydD8oaS5zb3VyY2U9dGhpcy5zb3VyY2VQYXRoKGwpLGkub3JpZ2luYWwubGluZT1sLnNvdXJjZS5zdGFydC5saW5lLGkub3JpZ2luYWwuY29sdW1uPWwuc291cmNlLnN0YXJ0LmNvbHVtbi0xLHRoaXMubWFwLmFkZE1hcHBpbmcoaSkpOihpLnNvdXJjZT1uLGkub3JpZ2luYWwubGluZT0xLGkub3JpZ2luYWwuY29sdW1uPTAsdGhpcy5tYXAuYWRkTWFwcGluZyhpKSkpLGE9by5tYXRjaCgvXFxuL2cpLGE/KGUrPWEubGVuZ3RoLHM9by5sYXN0SW5kZXhPZihgXG5gKSxyPW8ubGVuZ3RoLXMpOnIrPW8ubGVuZ3RoLGwmJnUhPT1cInN0YXJ0XCIpe2xldCBmPWwucGFyZW50fHx7cmF3czp7fX07KCEobC50eXBlPT09XCJkZWNsXCJ8fGwudHlwZT09PVwiYXRydWxlXCImJiFsLm5vZGVzKXx8bCE9PWYubGFzdHx8Zi5yYXdzLnNlbWljb2xvbikmJihsLnNvdXJjZSYmbC5zb3VyY2UuZW5kPyhpLnNvdXJjZT10aGlzLnNvdXJjZVBhdGgobCksaS5vcmlnaW5hbC5saW5lPWwuc291cmNlLmVuZC5saW5lLGkub3JpZ2luYWwuY29sdW1uPWwuc291cmNlLmVuZC5jb2x1bW4tMSxpLmdlbmVyYXRlZC5saW5lPWUsaS5nZW5lcmF0ZWQuY29sdW1uPXItMix0aGlzLm1hcC5hZGRNYXBwaW5nKGkpKTooaS5zb3VyY2U9bixpLm9yaWdpbmFsLmxpbmU9MSxpLm9yaWdpbmFsLmNvbHVtbj0wLGkuZ2VuZXJhdGVkLmxpbmU9ZSxpLmdlbmVyYXRlZC5jb2x1bW49ci0xLHRoaXMubWFwLmFkZE1hcHBpbmcoaSkpKX19KX1pc0Fubm90YXRpb24oKXtyZXR1cm4gdGhpcy5pc0lubGluZSgpPyEwOnR5cGVvZiB0aGlzLm1hcE9wdHMuYW5ub3RhdGlvbjxcInVcIj90aGlzLm1hcE9wdHMuYW5ub3RhdGlvbjp0aGlzLnByZXZpb3VzKCkubGVuZ3RoP3RoaXMucHJldmlvdXMoKS5zb21lKGU9PmUuYW5ub3RhdGlvbik6ITB9aXNJbmxpbmUoKXtpZih0eXBlb2YgdGhpcy5tYXBPcHRzLmlubGluZTxcInVcIilyZXR1cm4gdGhpcy5tYXBPcHRzLmlubGluZTtsZXQgZT10aGlzLm1hcE9wdHMuYW5ub3RhdGlvbjtyZXR1cm4gdHlwZW9mIGU8XCJ1XCImJmUhPT0hMD8hMTp0aGlzLnByZXZpb3VzKCkubGVuZ3RoP3RoaXMucHJldmlvdXMoKS5zb21lKHI9PnIuaW5saW5lKTohMH1pc01hcCgpe3JldHVybiB0eXBlb2YgdGhpcy5vcHRzLm1hcDxcInVcIj8hIXRoaXMub3B0cy5tYXA6dGhpcy5wcmV2aW91cygpLmxlbmd0aD4wfWlzU291cmNlc0NvbnRlbnQoKXtyZXR1cm4gdHlwZW9mIHRoaXMubWFwT3B0cy5zb3VyY2VzQ29udGVudDxcInVcIj90aGlzLm1hcE9wdHMuc291cmNlc0NvbnRlbnQ6dGhpcy5wcmV2aW91cygpLmxlbmd0aD90aGlzLnByZXZpb3VzKCkuc29tZShlPT5lLndpdGhDb250ZW50KCkpOiEwfW91dHB1dEZpbGUoKXtyZXR1cm4gdGhpcy5vcHRzLnRvP3RoaXMucGF0aCh0aGlzLm9wdHMudG8pOnRoaXMub3B0cy5mcm9tP3RoaXMucGF0aCh0aGlzLm9wdHMuZnJvbSk6XCJ0by5jc3NcIn1wYXRoKGUpe2lmKHRoaXMubWFwT3B0cy5hYnNvbHV0ZXx8ZS5jaGFyQ29kZUF0KDApPT09NjB8fC9eXFx3KzpcXC9cXC8vLnRlc3QoZSkpcmV0dXJuIGU7bGV0IHI9dGhpcy5tZW1vaXplZFBhdGhzLmdldChlKTtpZihyKXJldHVybiByO2xldCBuPXRoaXMub3B0cy50bz9Dcih0aGlzLm9wdHMudG8pOlwiLlwiO3R5cGVvZiB0aGlzLm1hcE9wdHMuYW5ub3RhdGlvbj09XCJzdHJpbmdcIiYmKG49Q3Iob28obix0aGlzLm1hcE9wdHMuYW5ub3RhdGlvbikpKTtsZXQgaT1hbyhuLGUpO3JldHVybiB0aGlzLm1lbW9pemVkUGF0aHMuc2V0KGUsaSksaX1wcmV2aW91cygpe2lmKCF0aGlzLnByZXZpb3VzTWFwcylpZih0aGlzLnByZXZpb3VzTWFwcz1bXSx0aGlzLnJvb3QpdGhpcy5yb290LndhbGsoZT0+e2lmKGUuc291cmNlJiZlLnNvdXJjZS5pbnB1dC5tYXApe2xldCByPWUuc291cmNlLmlucHV0Lm1hcDt0aGlzLnByZXZpb3VzTWFwcy5pbmNsdWRlcyhyKXx8dGhpcy5wcmV2aW91c01hcHMucHVzaChyKX19KTtlbHNle2xldCBlPW5ldyBlZCh0aGlzLmNzcyx0aGlzLm9wdHMpO2UubWFwJiZ0aGlzLnByZXZpb3VzTWFwcy5wdXNoKGUubWFwKX1yZXR1cm4gdGhpcy5wcmV2aW91c01hcHN9c2V0U291cmNlc0NvbnRlbnQoKXtsZXQgZT17fTtpZih0aGlzLnJvb3QpdGhpcy5yb290LndhbGsocj0+e2lmKHIuc291cmNlKXtsZXQgbj1yLnNvdXJjZS5pbnB1dC5mcm9tO2lmKG4mJiFlW25dKXtlW25dPSEwO2xldCBpPXRoaXMudXNlc0ZpbGVVcmxzP3RoaXMudG9GaWxlVXJsKG4pOnRoaXMudG9VcmwodGhpcy5wYXRoKG4pKTt0aGlzLm1hcC5zZXRTb3VyY2VDb250ZW50KGksci5zb3VyY2UuaW5wdXQuY3NzKX19fSk7ZWxzZSBpZih0aGlzLmNzcyl7bGV0IHI9dGhpcy5vcHRzLmZyb20/dGhpcy50b1VybCh0aGlzLnBhdGgodGhpcy5vcHRzLmZyb20pKTpcIjxubyBzb3VyY2U+XCI7dGhpcy5tYXAuc2V0U291cmNlQ29udGVudChyLHRoaXMuY3NzKX19c291cmNlUGF0aChlKXtyZXR1cm4gdGhpcy5tYXBPcHRzLmZyb20/dGhpcy50b1VybCh0aGlzLm1hcE9wdHMuZnJvbSk6dGhpcy51c2VzRmlsZVVybHM/dGhpcy50b0ZpbGVVcmwoZS5zb3VyY2UuaW5wdXQuZnJvbSk6dGhpcy50b1VybCh0aGlzLnBhdGgoZS5zb3VyY2UuaW5wdXQuZnJvbSkpfXRvQmFzZTY0KGUpe3JldHVybiBCdWZmZXI/QnVmZmVyLmZyb20oZSkudG9TdHJpbmcoXCJiYXNlNjRcIik6d2luZG93LmJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KGUpKSl9dG9GaWxlVXJsKGUpe2xldCByPXRoaXMubWVtb2l6ZWRGaWxlVVJMcy5nZXQoZSk7aWYocilyZXR1cm4gcjtpZihpbyl7bGV0IG49aW8oZSkudG9TdHJpbmcoKTtyZXR1cm4gdGhpcy5tZW1vaXplZEZpbGVVUkxzLnNldChlLG4pLG59ZWxzZSB0aHJvdyBuZXcgRXJyb3IoXCJgbWFwLmFic29sdXRlYCBvcHRpb24gaXMgbm90IGF2YWlsYWJsZSBpbiB0aGlzIFBvc3RDU1MgYnVpbGRcIil9dG9VcmwoZSl7bGV0IHI9dGhpcy5tZW1vaXplZFVSTHMuZ2V0KGUpO2lmKHIpcmV0dXJuIHI7bG89PT1cIlxcXFxcIiYmKGU9ZS5yZXBsYWNlKC9cXFxcL2csXCIvXCIpKTtsZXQgbj1lbmNvZGVVUkkoZSkucmVwbGFjZSgvWyM/XS9nLGVuY29kZVVSSUNvbXBvbmVudCk7cmV0dXJuIHRoaXMubWVtb2l6ZWRVUkxzLnNldChlLG4pLG59fTt1by5leHBvcnRzPW9pfSk7dmFyIEF0PVMoKFJiLGZvKT0+e1widXNlIHN0cmljdFwiO3ZhciBuZD13dCgpLEN0PWNsYXNzIGV4dGVuZHMgbmR7Y29uc3RydWN0b3IoZSl7c3VwZXIoZSksdGhpcy50eXBlPVwiY29tbWVudFwifX07Zm8uZXhwb3J0cz1DdDtDdC5kZWZhdWx0PUN0fSk7dmFyIF9lPVMoKERiLGJvKT0+e1widXNlIHN0cmljdFwiO3Zhcntpc0NsZWFuOmNvLG15OnBvfT14cigpLGhvPXh0KCksbW89QXQoKSxpZD13dCgpLGdvLHVpLGZpLHlvO2Z1bmN0aW9uIHZvKHQpe3JldHVybiB0Lm1hcChlPT4oZS5ub2RlcyYmKGUubm9kZXM9dm8oZS5ub2RlcykpLGRlbGV0ZSBlLnNvdXJjZSxlKSl9ZnVuY3Rpb24gd28odCl7aWYodFtjb109ITEsdC5wcm94eU9mLm5vZGVzKWZvcihsZXQgZSBvZiB0LnByb3h5T2Yubm9kZXMpd28oZSl9dmFyIGFlPWNsYXNzIGV4dGVuZHMgaWR7YXBwZW5kKC4uLmUpe2ZvcihsZXQgciBvZiBlKXtsZXQgbj10aGlzLm5vcm1hbGl6ZShyLHRoaXMubGFzdCk7Zm9yKGxldCBpIG9mIG4pdGhpcy5wcm94eU9mLm5vZGVzLnB1c2goaSl9cmV0dXJuIHRoaXMubWFya0RpcnR5KCksdGhpc31jbGVhblJhd3MoZSl7aWYoc3VwZXIuY2xlYW5SYXdzKGUpLHRoaXMubm9kZXMpZm9yKGxldCByIG9mIHRoaXMubm9kZXMpci5jbGVhblJhd3MoZSl9ZWFjaChlKXtpZighdGhpcy5wcm94eU9mLm5vZGVzKXJldHVybjtsZXQgcj10aGlzLmdldEl0ZXJhdG9yKCksbixpO2Zvcig7dGhpcy5pbmRleGVzW3JdPHRoaXMucHJveHlPZi5ub2Rlcy5sZW5ndGgmJihuPXRoaXMuaW5kZXhlc1tyXSxpPWUodGhpcy5wcm94eU9mLm5vZGVzW25dLG4pLGkhPT0hMSk7KXRoaXMuaW5kZXhlc1tyXSs9MTtyZXR1cm4gZGVsZXRlIHRoaXMuaW5kZXhlc1tyXSxpfWV2ZXJ5KGUpe3JldHVybiB0aGlzLm5vZGVzLmV2ZXJ5KGUpfWdldEl0ZXJhdG9yKCl7dGhpcy5sYXN0RWFjaHx8KHRoaXMubGFzdEVhY2g9MCksdGhpcy5pbmRleGVzfHwodGhpcy5pbmRleGVzPXt9KSx0aGlzLmxhc3RFYWNoKz0xO2xldCBlPXRoaXMubGFzdEVhY2g7cmV0dXJuIHRoaXMuaW5kZXhlc1tlXT0wLGV9Z2V0UHJveHlQcm9jZXNzb3IoKXtyZXR1cm57Z2V0KGUscil7cmV0dXJuIHI9PT1cInByb3h5T2ZcIj9lOmVbcl0/cj09PVwiZWFjaFwifHx0eXBlb2Ygcj09XCJzdHJpbmdcIiYmci5zdGFydHNXaXRoKFwid2Fsa1wiKT8oLi4ubik9PmVbcl0oLi4ubi5tYXAoaT0+dHlwZW9mIGk9PVwiZnVuY3Rpb25cIj8oYSxzKT0+aShhLnRvUHJveHkoKSxzKTppKSk6cj09PVwiZXZlcnlcInx8cj09PVwic29tZVwiP249PmVbcl0oKGksLi4uYSk9Pm4oaS50b1Byb3h5KCksLi4uYSkpOnI9PT1cInJvb3RcIj8oKT0+ZS5yb290KCkudG9Qcm94eSgpOnI9PT1cIm5vZGVzXCI/ZS5ub2Rlcy5tYXAobj0+bi50b1Byb3h5KCkpOnI9PT1cImZpcnN0XCJ8fHI9PT1cImxhc3RcIj9lW3JdLnRvUHJveHkoKTplW3JdOmVbcl19LHNldChlLHIsbil7cmV0dXJuIGVbcl09PT1ufHwoZVtyXT1uLChyPT09XCJuYW1lXCJ8fHI9PT1cInBhcmFtc1wifHxyPT09XCJzZWxlY3RvclwiKSYmZS5tYXJrRGlydHkoKSksITB9fX1pbmRleChlKXtyZXR1cm4gdHlwZW9mIGU9PVwibnVtYmVyXCI/ZTooZS5wcm94eU9mJiYoZT1lLnByb3h5T2YpLHRoaXMucHJveHlPZi5ub2Rlcy5pbmRleE9mKGUpKX1pbnNlcnRBZnRlcihlLHIpe2xldCBuPXRoaXMuaW5kZXgoZSksaT10aGlzLm5vcm1hbGl6ZShyLHRoaXMucHJveHlPZi5ub2Rlc1tuXSkucmV2ZXJzZSgpO249dGhpcy5pbmRleChlKTtmb3IobGV0IHMgb2YgaSl0aGlzLnByb3h5T2Yubm9kZXMuc3BsaWNlKG4rMSwwLHMpO2xldCBhO2ZvcihsZXQgcyBpbiB0aGlzLmluZGV4ZXMpYT10aGlzLmluZGV4ZXNbc10sbjxhJiYodGhpcy5pbmRleGVzW3NdPWEraS5sZW5ndGgpO3JldHVybiB0aGlzLm1hcmtEaXJ0eSgpLHRoaXN9aW5zZXJ0QmVmb3JlKGUscil7bGV0IG49dGhpcy5pbmRleChlKSxpPW49PT0wP1wicHJlcGVuZFwiOiExLGE9dGhpcy5ub3JtYWxpemUocix0aGlzLnByb3h5T2Yubm9kZXNbbl0saSkucmV2ZXJzZSgpO249dGhpcy5pbmRleChlKTtmb3IobGV0IG8gb2YgYSl0aGlzLnByb3h5T2Yubm9kZXMuc3BsaWNlKG4sMCxvKTtsZXQgcztmb3IobGV0IG8gaW4gdGhpcy5pbmRleGVzKXM9dGhpcy5pbmRleGVzW29dLG48PXMmJih0aGlzLmluZGV4ZXNbb109cythLmxlbmd0aCk7cmV0dXJuIHRoaXMubWFya0RpcnR5KCksdGhpc31ub3JtYWxpemUoZSxyKXtpZih0eXBlb2YgZT09XCJzdHJpbmdcIillPXZvKGdvKGUpLm5vZGVzKTtlbHNlIGlmKEFycmF5LmlzQXJyYXkoZSkpe2U9ZS5zbGljZSgwKTtmb3IobGV0IGkgb2YgZSlpLnBhcmVudCYmaS5wYXJlbnQucmVtb3ZlQ2hpbGQoaSxcImlnbm9yZVwiKX1lbHNlIGlmKGUudHlwZT09PVwicm9vdFwiJiZ0aGlzLnR5cGUhPT1cImRvY3VtZW50XCIpe2U9ZS5ub2Rlcy5zbGljZSgwKTtmb3IobGV0IGkgb2YgZSlpLnBhcmVudCYmaS5wYXJlbnQucmVtb3ZlQ2hpbGQoaSxcImlnbm9yZVwiKX1lbHNlIGlmKGUudHlwZSllPVtlXTtlbHNlIGlmKGUucHJvcCl7aWYodHlwZW9mIGUudmFsdWU+XCJ1XCIpdGhyb3cgbmV3IEVycm9yKFwiVmFsdWUgZmllbGQgaXMgbWlzc2VkIGluIG5vZGUgY3JlYXRpb25cIik7dHlwZW9mIGUudmFsdWUhPVwic3RyaW5nXCImJihlLnZhbHVlPVN0cmluZyhlLnZhbHVlKSksZT1bbmV3IGhvKGUpXX1lbHNlIGlmKGUuc2VsZWN0b3IpZT1bbmV3IHVpKGUpXTtlbHNlIGlmKGUubmFtZSllPVtuZXcgZmkoZSldO2Vsc2UgaWYoZS50ZXh0KWU9W25ldyBtbyhlKV07ZWxzZSB0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIG5vZGUgdHlwZSBpbiBub2RlIGNyZWF0aW9uXCIpO3JldHVybiBlLm1hcChpPT4oaVtwb118fGFlLnJlYnVpbGQoaSksaT1pLnByb3h5T2YsaS5wYXJlbnQmJmkucGFyZW50LnJlbW92ZUNoaWxkKGkpLGlbY29dJiZ3byhpKSx0eXBlb2YgaS5yYXdzLmJlZm9yZT5cInVcIiYmciYmdHlwZW9mIHIucmF3cy5iZWZvcmU8XCJ1XCImJihpLnJhd3MuYmVmb3JlPXIucmF3cy5iZWZvcmUucmVwbGFjZSgvXFxTL2csXCJcIikpLGkucGFyZW50PXRoaXMucHJveHlPZixpKSl9cHJlcGVuZCguLi5lKXtlPWUucmV2ZXJzZSgpO2ZvcihsZXQgciBvZiBlKXtsZXQgbj10aGlzLm5vcm1hbGl6ZShyLHRoaXMuZmlyc3QsXCJwcmVwZW5kXCIpLnJldmVyc2UoKTtmb3IobGV0IGkgb2Ygbil0aGlzLnByb3h5T2Yubm9kZXMudW5zaGlmdChpKTtmb3IobGV0IGkgaW4gdGhpcy5pbmRleGVzKXRoaXMuaW5kZXhlc1tpXT10aGlzLmluZGV4ZXNbaV0rbi5sZW5ndGh9cmV0dXJuIHRoaXMubWFya0RpcnR5KCksdGhpc31wdXNoKGUpe3JldHVybiBlLnBhcmVudD10aGlzLHRoaXMucHJveHlPZi5ub2Rlcy5wdXNoKGUpLHRoaXN9cmVtb3ZlQWxsKCl7Zm9yKGxldCBlIG9mIHRoaXMucHJveHlPZi5ub2RlcyllLnBhcmVudD12b2lkIDA7cmV0dXJuIHRoaXMucHJveHlPZi5ub2Rlcz1bXSx0aGlzLm1hcmtEaXJ0eSgpLHRoaXN9cmVtb3ZlQ2hpbGQoZSl7ZT10aGlzLmluZGV4KGUpLHRoaXMucHJveHlPZi5ub2Rlc1tlXS5wYXJlbnQ9dm9pZCAwLHRoaXMucHJveHlPZi5ub2Rlcy5zcGxpY2UoZSwxKTtsZXQgcjtmb3IobGV0IG4gaW4gdGhpcy5pbmRleGVzKXI9dGhpcy5pbmRleGVzW25dLHI+PWUmJih0aGlzLmluZGV4ZXNbbl09ci0xKTtyZXR1cm4gdGhpcy5tYXJrRGlydHkoKSx0aGlzfXJlcGxhY2VWYWx1ZXMoZSxyLG4pe3JldHVybiBufHwobj1yLHI9e30pLHRoaXMud2Fsa0RlY2xzKGk9PntyLnByb3BzJiYhci5wcm9wcy5pbmNsdWRlcyhpLnByb3ApfHxyLmZhc3QmJiFpLnZhbHVlLmluY2x1ZGVzKHIuZmFzdCl8fChpLnZhbHVlPWkudmFsdWUucmVwbGFjZShlLG4pKX0pLHRoaXMubWFya0RpcnR5KCksdGhpc31zb21lKGUpe3JldHVybiB0aGlzLm5vZGVzLnNvbWUoZSl9d2FsayhlKXtyZXR1cm4gdGhpcy5lYWNoKChyLG4pPT57bGV0IGk7dHJ5e2k9ZShyLG4pfWNhdGNoKGEpe3Rocm93IHIuYWRkVG9FcnJvcihhKX1yZXR1cm4gaSE9PSExJiZyLndhbGsmJihpPXIud2FsayhlKSksaX0pfXdhbGtBdFJ1bGVzKGUscil7cmV0dXJuIHI/ZSBpbnN0YW5jZW9mIFJlZ0V4cD90aGlzLndhbGsoKG4saSk9PntpZihuLnR5cGU9PT1cImF0cnVsZVwiJiZlLnRlc3Qobi5uYW1lKSlyZXR1cm4gcihuLGkpfSk6dGhpcy53YWxrKChuLGkpPT57aWYobi50eXBlPT09XCJhdHJ1bGVcIiYmbi5uYW1lPT09ZSlyZXR1cm4gcihuLGkpfSk6KHI9ZSx0aGlzLndhbGsoKG4saSk9PntpZihuLnR5cGU9PT1cImF0cnVsZVwiKXJldHVybiByKG4saSl9KSl9d2Fsa0NvbW1lbnRzKGUpe3JldHVybiB0aGlzLndhbGsoKHIsbik9PntpZihyLnR5cGU9PT1cImNvbW1lbnRcIilyZXR1cm4gZShyLG4pfSl9d2Fsa0RlY2xzKGUscil7cmV0dXJuIHI/ZSBpbnN0YW5jZW9mIFJlZ0V4cD90aGlzLndhbGsoKG4saSk9PntpZihuLnR5cGU9PT1cImRlY2xcIiYmZS50ZXN0KG4ucHJvcCkpcmV0dXJuIHIobixpKX0pOnRoaXMud2FsaygobixpKT0+e2lmKG4udHlwZT09PVwiZGVjbFwiJiZuLnByb3A9PT1lKXJldHVybiByKG4saSl9KToocj1lLHRoaXMud2FsaygobixpKT0+e2lmKG4udHlwZT09PVwiZGVjbFwiKXJldHVybiByKG4saSl9KSl9d2Fsa1J1bGVzKGUscil7cmV0dXJuIHI/ZSBpbnN0YW5jZW9mIFJlZ0V4cD90aGlzLndhbGsoKG4saSk9PntpZihuLnR5cGU9PT1cInJ1bGVcIiYmZS50ZXN0KG4uc2VsZWN0b3IpKXJldHVybiByKG4saSl9KTp0aGlzLndhbGsoKG4saSk9PntpZihuLnR5cGU9PT1cInJ1bGVcIiYmbi5zZWxlY3Rvcj09PWUpcmV0dXJuIHIobixpKX0pOihyPWUsdGhpcy53YWxrKChuLGkpPT57aWYobi50eXBlPT09XCJydWxlXCIpcmV0dXJuIHIobixpKX0pKX1nZXQgZmlyc3QoKXtpZighIXRoaXMucHJveHlPZi5ub2RlcylyZXR1cm4gdGhpcy5wcm94eU9mLm5vZGVzWzBdfWdldCBsYXN0KCl7aWYoISF0aGlzLnByb3h5T2Yubm9kZXMpcmV0dXJuIHRoaXMucHJveHlPZi5ub2Rlc1t0aGlzLnByb3h5T2Yubm9kZXMubGVuZ3RoLTFdfX07YWUucmVnaXN0ZXJQYXJzZT10PT57Z289dH07YWUucmVnaXN0ZXJSdWxlPXQ9Pnt1aT10fTthZS5yZWdpc3RlckF0UnVsZT10PT57Zmk9dH07YWUucmVnaXN0ZXJSb290PXQ9Pnt5bz10fTtiby5leHBvcnRzPWFlO2FlLmRlZmF1bHQ9YWU7YWUucmVidWlsZD10PT57dC50eXBlPT09XCJhdHJ1bGVcIj9PYmplY3Quc2V0UHJvdG90eXBlT2YodCxmaS5wcm90b3R5cGUpOnQudHlwZT09PVwicnVsZVwiP09iamVjdC5zZXRQcm90b3R5cGVPZih0LHVpLnByb3RvdHlwZSk6dC50eXBlPT09XCJkZWNsXCI/T2JqZWN0LnNldFByb3RvdHlwZU9mKHQsaG8ucHJvdG90eXBlKTp0LnR5cGU9PT1cImNvbW1lbnRcIj9PYmplY3Quc2V0UHJvdG90eXBlT2YodCxtby5wcm90b3R5cGUpOnQudHlwZT09PVwicm9vdFwiJiZPYmplY3Quc2V0UHJvdG90eXBlT2YodCx5by5wcm90b3R5cGUpLHRbcG9dPSEwLHQubm9kZXMmJnQubm9kZXMuZm9yRWFjaChlPT57YWUucmVidWlsZChlKX0pfX0pO3ZhciBBcj1TKChNYixrbyk9PntcInVzZSBzdHJpY3RcIjt2YXIgc2Q9X2UoKSx4byxTbyxqZT1jbGFzcyBleHRlbmRzIHNke2NvbnN0cnVjdG9yKGUpe3N1cGVyKHt0eXBlOlwiZG9jdW1lbnRcIiwuLi5lfSksdGhpcy5ub2Rlc3x8KHRoaXMubm9kZXM9W10pfXRvUmVzdWx0KGU9e30pe3JldHVybiBuZXcgeG8obmV3IFNvLHRoaXMsZSkuc3RyaW5naWZ5KCl9fTtqZS5yZWdpc3RlckxhenlSZXN1bHQ9dD0+e3hvPXR9O2plLnJlZ2lzdGVyUHJvY2Vzc29yPXQ9PntTbz10fTtrby5leHBvcnRzPWplO2plLmRlZmF1bHQ9amV9KTt2YXIgY2k9UygoRmIsRW8pPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIE9vPXt9O0VvLmV4cG9ydHM9ZnVuY3Rpb24oZSl7T29bZV18fChPb1tlXT0hMCx0eXBlb2YgY29uc29sZTxcInVcIiYmY29uc29sZS53YXJuJiZjb25zb2xlLndhcm4oZSkpfX0pO3ZhciBwaT1TKChMYixDbyk9PntcInVzZSBzdHJpY3RcIjt2YXIgX3Q9Y2xhc3N7Y29uc3RydWN0b3IoZSxyPXt9KXtpZih0aGlzLnR5cGU9XCJ3YXJuaW5nXCIsdGhpcy50ZXh0PWUsci5ub2RlJiZyLm5vZGUuc291cmNlKXtsZXQgbj1yLm5vZGUucmFuZ2VCeShyKTt0aGlzLmxpbmU9bi5zdGFydC5saW5lLHRoaXMuY29sdW1uPW4uc3RhcnQuY29sdW1uLHRoaXMuZW5kTGluZT1uLmVuZC5saW5lLHRoaXMuZW5kQ29sdW1uPW4uZW5kLmNvbHVtbn1mb3IobGV0IG4gaW4gcil0aGlzW25dPXJbbl19dG9TdHJpbmcoKXtyZXR1cm4gdGhpcy5ub2RlP3RoaXMubm9kZS5lcnJvcih0aGlzLnRleHQse2luZGV4OnRoaXMuaW5kZXgscGx1Z2luOnRoaXMucGx1Z2luLHdvcmQ6dGhpcy53b3JkfSkubWVzc2FnZTp0aGlzLnBsdWdpbj90aGlzLnBsdWdpbitcIjogXCIrdGhpcy50ZXh0OnRoaXMudGV4dH19O0NvLmV4cG9ydHM9X3Q7X3QuZGVmYXVsdD1fdH0pO3ZhciBfcj1TKChOYixBbyk9PntcInVzZSBzdHJpY3RcIjt2YXIgYWQ9cGkoKSxUdD1jbGFzc3tjb25zdHJ1Y3RvcihlLHIsbil7dGhpcy5wcm9jZXNzb3I9ZSx0aGlzLm1lc3NhZ2VzPVtdLHRoaXMucm9vdD1yLHRoaXMub3B0cz1uLHRoaXMuY3NzPXZvaWQgMCx0aGlzLm1hcD12b2lkIDB9dG9TdHJpbmcoKXtyZXR1cm4gdGhpcy5jc3N9d2FybihlLHI9e30pe3IucGx1Z2lufHx0aGlzLmxhc3RQbHVnaW4mJnRoaXMubGFzdFBsdWdpbi5wb3N0Y3NzUGx1Z2luJiYoci5wbHVnaW49dGhpcy5sYXN0UGx1Z2luLnBvc3Rjc3NQbHVnaW4pO2xldCBuPW5ldyBhZChlLHIpO3JldHVybiB0aGlzLm1lc3NhZ2VzLnB1c2gobiksbn13YXJuaW5ncygpe3JldHVybiB0aGlzLm1lc3NhZ2VzLmZpbHRlcihlPT5lLnR5cGU9PT1cIndhcm5pbmdcIil9Z2V0IGNvbnRlbnQoKXtyZXR1cm4gdGhpcy5jc3N9fTtBby5leHBvcnRzPVR0O1R0LmRlZmF1bHQ9VHR9KTt2YXIgUm89UygocWIsSW8pPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIGRpPVwiJ1wiLmNoYXJDb2RlQXQoMCksX289J1wiJy5jaGFyQ29kZUF0KDApLFRyPVwiXFxcXFwiLmNoYXJDb2RlQXQoMCksVG89XCIvXCIuY2hhckNvZGVBdCgwKSxQcj1gXG5gLmNoYXJDb2RlQXQoMCksUHQ9XCIgXCIuY2hhckNvZGVBdCgwKSxJcj1cIlxcZlwiLmNoYXJDb2RlQXQoMCksUnI9XCJcdFwiLmNoYXJDb2RlQXQoMCksRHI9XCJcXHJcIi5jaGFyQ29kZUF0KDApLG9kPVwiW1wiLmNoYXJDb2RlQXQoMCksbGQ9XCJdXCIuY2hhckNvZGVBdCgwKSx1ZD1cIihcIi5jaGFyQ29kZUF0KDApLGZkPVwiKVwiLmNoYXJDb2RlQXQoMCksY2Q9XCJ7XCIuY2hhckNvZGVBdCgwKSxwZD1cIn1cIi5jaGFyQ29kZUF0KDApLGRkPVwiO1wiLmNoYXJDb2RlQXQoMCksaGQ9XCIqXCIuY2hhckNvZGVBdCgwKSxtZD1cIjpcIi5jaGFyQ29kZUF0KDApLGdkPVwiQFwiLmNoYXJDb2RlQXQoMCksTXI9L1tcXHRcXG5cXGZcXHIgXCIjJygpLztbXFxcXFxcXXt9XS9nLEZyPS9bXFx0XFxuXFxmXFxyICFcIiMnKCk6O0BbXFxcXFxcXXt9XXxcXC8oPz1cXCopL2cseWQ9Ly5bXFxyXFxuXCInKC9cXFxcXS8sUG89L1tcXGRhLWZdL2k7SW8uZXhwb3J0cz1mdW5jdGlvbihlLHI9e30pe2xldCBuPWUuY3NzLnZhbHVlT2YoKSxpPXIuaWdub3JlRXJyb3JzLGEscyxvLGwsdSxmLHAsYyxkLGgseT1uLmxlbmd0aCxtPTAsZz1bXSx3PVtdO2Z1bmN0aW9uIGIoKXtyZXR1cm4gbX1mdW5jdGlvbiB2KEUpe3Rocm93IGUuZXJyb3IoXCJVbmNsb3NlZCBcIitFLG0pfWZ1bmN0aW9uIE8oKXtyZXR1cm4gdy5sZW5ndGg9PT0wJiZtPj15fWZ1bmN0aW9uIHgoRSl7aWYody5sZW5ndGgpcmV0dXJuIHcucG9wKCk7aWYobT49eSlyZXR1cm47bGV0IEk9RT9FLmlnbm9yZVVuY2xvc2VkOiExO3N3aXRjaChhPW4uY2hhckNvZGVBdChtKSxhKXtjYXNlIFByOmNhc2UgUHQ6Y2FzZSBScjpjYXNlIERyOmNhc2UgSXI6e3M9bTtkbyBzKz0xLGE9bi5jaGFyQ29kZUF0KHMpO3doaWxlKGE9PT1QdHx8YT09PVByfHxhPT09UnJ8fGE9PT1Ecnx8YT09PUlyKTtoPVtcInNwYWNlXCIsbi5zbGljZShtLHMpXSxtPXMtMTticmVha31jYXNlIG9kOmNhc2UgbGQ6Y2FzZSBjZDpjYXNlIHBkOmNhc2UgbWQ6Y2FzZSBkZDpjYXNlIGZkOntsZXQgRj1TdHJpbmcuZnJvbUNoYXJDb2RlKGEpO2g9W0YsRixtXTticmVha31jYXNlIHVkOntpZihjPWcubGVuZ3RoP2cucG9wKClbMV06XCJcIixkPW4uY2hhckNvZGVBdChtKzEpLGM9PT1cInVybFwiJiZkIT09ZGkmJmQhPT1fbyYmZCE9PVB0JiZkIT09UHImJmQhPT1SciYmZCE9PUlyJiZkIT09RHIpe3M9bTtkb3tpZihmPSExLHM9bi5pbmRleE9mKFwiKVwiLHMrMSkscz09PS0xKWlmKGl8fEkpe3M9bTticmVha31lbHNlIHYoXCJicmFja2V0XCIpO2ZvcihwPXM7bi5jaGFyQ29kZUF0KHAtMSk9PT1UcjspcC09MSxmPSFmfXdoaWxlKGYpO2g9W1wiYnJhY2tldHNcIixuLnNsaWNlKG0scysxKSxtLHNdLG09c31lbHNlIHM9bi5pbmRleE9mKFwiKVwiLG0rMSksbD1uLnNsaWNlKG0scysxKSxzPT09LTF8fHlkLnRlc3QobCk/aD1bXCIoXCIsXCIoXCIsbV06KGg9W1wiYnJhY2tldHNcIixsLG0sc10sbT1zKTticmVha31jYXNlIGRpOmNhc2UgX286e289YT09PWRpP1wiJ1wiOidcIicscz1tO2Rve2lmKGY9ITEscz1uLmluZGV4T2YobyxzKzEpLHM9PT0tMSlpZihpfHxJKXtzPW0rMTticmVha31lbHNlIHYoXCJzdHJpbmdcIik7Zm9yKHA9cztuLmNoYXJDb2RlQXQocC0xKT09PVRyOylwLT0xLGY9IWZ9d2hpbGUoZik7aD1bXCJzdHJpbmdcIixuLnNsaWNlKG0scysxKSxtLHNdLG09czticmVha31jYXNlIGdkOntNci5sYXN0SW5kZXg9bSsxLE1yLnRlc3QobiksTXIubGFzdEluZGV4PT09MD9zPW4ubGVuZ3RoLTE6cz1Nci5sYXN0SW5kZXgtMixoPVtcImF0LXdvcmRcIixuLnNsaWNlKG0scysxKSxtLHNdLG09czticmVha31jYXNlIFRyOntmb3Iocz1tLHU9ITA7bi5jaGFyQ29kZUF0KHMrMSk9PT1Ucjspcys9MSx1PSF1O2lmKGE9bi5jaGFyQ29kZUF0KHMrMSksdSYmYSE9PVRvJiZhIT09UHQmJmEhPT1QciYmYSE9PVJyJiZhIT09RHImJmEhPT1JciYmKHMrPTEsUG8udGVzdChuLmNoYXJBdChzKSkpKXtmb3IoO1BvLnRlc3Qobi5jaGFyQXQocysxKSk7KXMrPTE7bi5jaGFyQ29kZUF0KHMrMSk9PT1QdCYmKHMrPTEpfWg9W1wid29yZFwiLG4uc2xpY2UobSxzKzEpLG0sc10sbT1zO2JyZWFrfWRlZmF1bHQ6e2E9PT1UbyYmbi5jaGFyQ29kZUF0KG0rMSk9PT1oZD8ocz1uLmluZGV4T2YoXCIqL1wiLG0rMikrMSxzPT09MCYmKGl8fEk/cz1uLmxlbmd0aDp2KFwiY29tbWVudFwiKSksaD1bXCJjb21tZW50XCIsbi5zbGljZShtLHMrMSksbSxzXSxtPXMpOihGci5sYXN0SW5kZXg9bSsxLEZyLnRlc3QobiksRnIubGFzdEluZGV4PT09MD9zPW4ubGVuZ3RoLTE6cz1Gci5sYXN0SW5kZXgtMixoPVtcIndvcmRcIixuLnNsaWNlKG0scysxKSxtLHNdLGcucHVzaChoKSxtPXMpO2JyZWFrfX1yZXR1cm4gbSsrLGh9ZnVuY3Rpb24gQShFKXt3LnB1c2goRSl9cmV0dXJue2JhY2s6QSxlbmRPZkZpbGU6TyxuZXh0VG9rZW46eCxwb3NpdGlvbjpifX19KTt2YXIgTHI9UygoJGIsTW8pPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIERvPV9lKCksSGU9Y2xhc3MgZXh0ZW5kcyBEb3tjb25zdHJ1Y3RvcihlKXtzdXBlcihlKSx0aGlzLnR5cGU9XCJhdHJ1bGVcIn1hcHBlbmQoLi4uZSl7cmV0dXJuIHRoaXMucHJveHlPZi5ub2Rlc3x8KHRoaXMubm9kZXM9W10pLHN1cGVyLmFwcGVuZCguLi5lKX1wcmVwZW5kKC4uLmUpe3JldHVybiB0aGlzLnByb3h5T2Yubm9kZXN8fCh0aGlzLm5vZGVzPVtdKSxzdXBlci5wcmVwZW5kKC4uLmUpfX07TW8uZXhwb3J0cz1IZTtIZS5kZWZhdWx0PUhlO0RvLnJlZ2lzdGVyQXRSdWxlKEhlKX0pO3ZhciBRZT1TKChVYixxbyk9PntcInVzZSBzdHJpY3RcIjt2YXIgRm89X2UoKSxMbyxObyxUZT1jbGFzcyBleHRlbmRzIEZve2NvbnN0cnVjdG9yKGUpe3N1cGVyKGUpLHRoaXMudHlwZT1cInJvb3RcIix0aGlzLm5vZGVzfHwodGhpcy5ub2Rlcz1bXSl9bm9ybWFsaXplKGUscixuKXtsZXQgaT1zdXBlci5ub3JtYWxpemUoZSk7aWYocil7aWYobj09PVwicHJlcGVuZFwiKXRoaXMubm9kZXMubGVuZ3RoPjE/ci5yYXdzLmJlZm9yZT10aGlzLm5vZGVzWzFdLnJhd3MuYmVmb3JlOmRlbGV0ZSByLnJhd3MuYmVmb3JlO2Vsc2UgaWYodGhpcy5maXJzdCE9PXIpZm9yKGxldCBhIG9mIGkpYS5yYXdzLmJlZm9yZT1yLnJhd3MuYmVmb3JlfXJldHVybiBpfXJlbW92ZUNoaWxkKGUscil7bGV0IG49dGhpcy5pbmRleChlKTtyZXR1cm4hciYmbj09PTAmJnRoaXMubm9kZXMubGVuZ3RoPjEmJih0aGlzLm5vZGVzWzFdLnJhd3MuYmVmb3JlPXRoaXMubm9kZXNbbl0ucmF3cy5iZWZvcmUpLHN1cGVyLnJlbW92ZUNoaWxkKGUpfXRvUmVzdWx0KGU9e30pe3JldHVybiBuZXcgTG8obmV3IE5vLHRoaXMsZSkuc3RyaW5naWZ5KCl9fTtUZS5yZWdpc3RlckxhenlSZXN1bHQ9dD0+e0xvPXR9O1RlLnJlZ2lzdGVyUHJvY2Vzc29yPXQ9PntObz10fTtxby5leHBvcnRzPVRlO1RlLmRlZmF1bHQ9VGU7Rm8ucmVnaXN0ZXJSb290KFRlKX0pO3ZhciBoaT1TKChqYiwkbyk9PntcInVzZSBzdHJpY3RcIjt2YXIgSXQ9e2NvbW1hKHQpe3JldHVybiBJdC5zcGxpdCh0LFtcIixcIl0sITApfSxzcGFjZSh0KXtsZXQgZT1bXCIgXCIsYFxuYCxcIlx0XCJdO3JldHVybiBJdC5zcGxpdCh0LGUpfSxzcGxpdCh0LGUscil7bGV0IG49W10saT1cIlwiLGE9ITEscz0wLG89ITEsbD1cIlwiLHU9ITE7Zm9yKGxldCBmIG9mIHQpdT91PSExOmY9PT1cIlxcXFxcIj91PSEwOm8/Zj09PWwmJihvPSExKTpmPT09J1wiJ3x8Zj09PVwiJ1wiPyhvPSEwLGw9Zik6Zj09PVwiKFwiP3MrPTE6Zj09PVwiKVwiP3M+MCYmKHMtPTEpOnM9PT0wJiZlLmluY2x1ZGVzKGYpJiYoYT0hMCksYT8oaSE9PVwiXCImJm4ucHVzaChpLnRyaW0oKSksaT1cIlwiLGE9ITEpOmkrPWY7cmV0dXJuKHJ8fGkhPT1cIlwiKSYmbi5wdXNoKGkudHJpbSgpKSxufX07JG8uZXhwb3J0cz1JdDtJdC5kZWZhdWx0PUl0fSk7dmFyIE5yPVMoKHpiLGpvKT0+e1widXNlIHN0cmljdFwiO3ZhciBVbz1fZSgpLHZkPWhpKCksSmU9Y2xhc3MgZXh0ZW5kcyBVb3tjb25zdHJ1Y3RvcihlKXtzdXBlcihlKSx0aGlzLnR5cGU9XCJydWxlXCIsdGhpcy5ub2Rlc3x8KHRoaXMubm9kZXM9W10pfWdldCBzZWxlY3RvcnMoKXtyZXR1cm4gdmQuY29tbWEodGhpcy5zZWxlY3Rvcil9c2V0IHNlbGVjdG9ycyhlKXtsZXQgcj10aGlzLnNlbGVjdG9yP3RoaXMuc2VsZWN0b3IubWF0Y2goLyxcXHMqLyk6bnVsbCxuPXI/clswXTpcIixcIit0aGlzLnJhdyhcImJldHdlZW5cIixcImJlZm9yZU9wZW5cIik7dGhpcy5zZWxlY3Rvcj1lLmpvaW4obil9fTtqby5leHBvcnRzPUplO0plLmRlZmF1bHQ9SmU7VW8ucmVnaXN0ZXJSdWxlKEplKX0pO3ZhciBCbz1TKChWYixXbyk9PntcInVzZSBzdHJpY3RcIjt2YXIgd2Q9eHQoKSxiZD1SbygpLHhkPUF0KCksU2Q9THIoKSxrZD1RZSgpLHpvPU5yKCksVm89e2VtcHR5OiEwLHNwYWNlOiEwfTtmdW5jdGlvbiBPZCh0KXtmb3IobGV0IGU9dC5sZW5ndGgtMTtlPj0wO2UtLSl7bGV0IHI9dFtlXSxuPXJbM118fHJbMl07aWYobilyZXR1cm4gbn19dmFyIG1pPWNsYXNze2NvbnN0cnVjdG9yKGUpe3RoaXMuaW5wdXQ9ZSx0aGlzLnJvb3Q9bmV3IGtkLHRoaXMuY3VycmVudD10aGlzLnJvb3QsdGhpcy5zcGFjZXM9XCJcIix0aGlzLnNlbWljb2xvbj0hMSx0aGlzLmN1c3RvbVByb3BlcnR5PSExLHRoaXMuY3JlYXRlVG9rZW5pemVyKCksdGhpcy5yb290LnNvdXJjZT17aW5wdXQ6ZSxzdGFydDp7Y29sdW1uOjEsbGluZToxLG9mZnNldDowfX19YXRydWxlKGUpe2xldCByPW5ldyBTZDtyLm5hbWU9ZVsxXS5zbGljZSgxKSxyLm5hbWU9PT1cIlwiJiZ0aGlzLnVubmFtZWRBdHJ1bGUocixlKSx0aGlzLmluaXQocixlWzJdKTtsZXQgbixpLGEscz0hMSxvPSExLGw9W10sdT1bXTtmb3IoOyF0aGlzLnRva2VuaXplci5lbmRPZkZpbGUoKTspe2lmKGU9dGhpcy50b2tlbml6ZXIubmV4dFRva2VuKCksbj1lWzBdLG49PT1cIihcInx8bj09PVwiW1wiP3UucHVzaChuPT09XCIoXCI/XCIpXCI6XCJdXCIpOm49PT1cIntcIiYmdS5sZW5ndGg+MD91LnB1c2goXCJ9XCIpOm49PT11W3UubGVuZ3RoLTFdJiZ1LnBvcCgpLHUubGVuZ3RoPT09MClpZihuPT09XCI7XCIpe3Iuc291cmNlLmVuZD10aGlzLmdldFBvc2l0aW9uKGVbMl0pLHIuc291cmNlLmVuZC5vZmZzZXQrKyx0aGlzLnNlbWljb2xvbj0hMDticmVha31lbHNlIGlmKG49PT1cIntcIil7bz0hMDticmVha31lbHNlIGlmKG49PT1cIn1cIil7aWYobC5sZW5ndGg+MCl7Zm9yKGE9bC5sZW5ndGgtMSxpPWxbYV07aSYmaVswXT09PVwic3BhY2VcIjspaT1sWy0tYV07aSYmKHIuc291cmNlLmVuZD10aGlzLmdldFBvc2l0aW9uKGlbM118fGlbMl0pLHIuc291cmNlLmVuZC5vZmZzZXQrKyl9dGhpcy5lbmQoZSk7YnJlYWt9ZWxzZSBsLnB1c2goZSk7ZWxzZSBsLnB1c2goZSk7aWYodGhpcy50b2tlbml6ZXIuZW5kT2ZGaWxlKCkpe3M9ITA7YnJlYWt9fXIucmF3cy5iZXR3ZWVuPXRoaXMuc3BhY2VzQW5kQ29tbWVudHNGcm9tRW5kKGwpLGwubGVuZ3RoPyhyLnJhd3MuYWZ0ZXJOYW1lPXRoaXMuc3BhY2VzQW5kQ29tbWVudHNGcm9tU3RhcnQobCksdGhpcy5yYXcocixcInBhcmFtc1wiLGwpLHMmJihlPWxbbC5sZW5ndGgtMV0sci5zb3VyY2UuZW5kPXRoaXMuZ2V0UG9zaXRpb24oZVszXXx8ZVsyXSksci5zb3VyY2UuZW5kLm9mZnNldCsrLHRoaXMuc3BhY2VzPXIucmF3cy5iZXR3ZWVuLHIucmF3cy5iZXR3ZWVuPVwiXCIpKTooci5yYXdzLmFmdGVyTmFtZT1cIlwiLHIucGFyYW1zPVwiXCIpLG8mJihyLm5vZGVzPVtdLHRoaXMuY3VycmVudD1yKX1jaGVja01pc3NlZFNlbWljb2xvbihlKXtsZXQgcj10aGlzLmNvbG9uKGUpO2lmKHI9PT0hMSlyZXR1cm47bGV0IG49MCxpO2ZvcihsZXQgYT1yLTE7YT49MCYmKGk9ZVthXSwhKGlbMF0hPT1cInNwYWNlXCImJihuKz0xLG49PT0yKSkpO2EtLSk7dGhyb3cgdGhpcy5pbnB1dC5lcnJvcihcIk1pc3NlZCBzZW1pY29sb25cIixpWzBdPT09XCJ3b3JkXCI/aVszXSsxOmlbMl0pfWNvbG9uKGUpe2xldCByPTAsbixpLGE7Zm9yKGxldFtzLG9db2YgZS5lbnRyaWVzKCkpe2lmKG49byxpPW5bMF0saT09PVwiKFwiJiYocis9MSksaT09PVwiKVwiJiYoci09MSkscj09PTAmJmk9PT1cIjpcIilpZighYSl0aGlzLmRvdWJsZUNvbG9uKG4pO2Vsc2V7aWYoYVswXT09PVwid29yZFwiJiZhWzFdPT09XCJwcm9naWRcIiljb250aW51ZTtyZXR1cm4gc31hPW59cmV0dXJuITF9Y29tbWVudChlKXtsZXQgcj1uZXcgeGQ7dGhpcy5pbml0KHIsZVsyXSksci5zb3VyY2UuZW5kPXRoaXMuZ2V0UG9zaXRpb24oZVszXXx8ZVsyXSksci5zb3VyY2UuZW5kLm9mZnNldCsrO2xldCBuPWVbMV0uc2xpY2UoMiwtMik7aWYoL15cXHMqJC8udGVzdChuKSlyLnRleHQ9XCJcIixyLnJhd3MubGVmdD1uLHIucmF3cy5yaWdodD1cIlwiO2Vsc2V7bGV0IGk9bi5tYXRjaCgvXihcXHMqKShbXl0qXFxTKShcXHMqKSQvKTtyLnRleHQ9aVsyXSxyLnJhd3MubGVmdD1pWzFdLHIucmF3cy5yaWdodD1pWzNdfX1jcmVhdGVUb2tlbml6ZXIoKXt0aGlzLnRva2VuaXplcj1iZCh0aGlzLmlucHV0KX1kZWNsKGUscil7bGV0IG49bmV3IHdkO3RoaXMuaW5pdChuLGVbMF1bMl0pO2xldCBpPWVbZS5sZW5ndGgtMV07Zm9yKGlbMF09PT1cIjtcIiYmKHRoaXMuc2VtaWNvbG9uPSEwLGUucG9wKCkpLG4uc291cmNlLmVuZD10aGlzLmdldFBvc2l0aW9uKGlbM118fGlbMl18fE9kKGUpKSxuLnNvdXJjZS5lbmQub2Zmc2V0Kys7ZVswXVswXSE9PVwid29yZFwiOyllLmxlbmd0aD09PTEmJnRoaXMudW5rbm93bldvcmQoZSksbi5yYXdzLmJlZm9yZSs9ZS5zaGlmdCgpWzFdO2ZvcihuLnNvdXJjZS5zdGFydD10aGlzLmdldFBvc2l0aW9uKGVbMF1bMl0pLG4ucHJvcD1cIlwiO2UubGVuZ3RoOyl7bGV0IHU9ZVswXVswXTtpZih1PT09XCI6XCJ8fHU9PT1cInNwYWNlXCJ8fHU9PT1cImNvbW1lbnRcIilicmVhaztuLnByb3ArPWUuc2hpZnQoKVsxXX1uLnJhd3MuYmV0d2Vlbj1cIlwiO2xldCBhO2Zvcig7ZS5sZW5ndGg7KWlmKGE9ZS5zaGlmdCgpLGFbMF09PT1cIjpcIil7bi5yYXdzLmJldHdlZW4rPWFbMV07YnJlYWt9ZWxzZSBhWzBdPT09XCJ3b3JkXCImJi9cXHcvLnRlc3QoYVsxXSkmJnRoaXMudW5rbm93bldvcmQoW2FdKSxuLnJhd3MuYmV0d2Vlbis9YVsxXTsobi5wcm9wWzBdPT09XCJfXCJ8fG4ucHJvcFswXT09PVwiKlwiKSYmKG4ucmF3cy5iZWZvcmUrPW4ucHJvcFswXSxuLnByb3A9bi5wcm9wLnNsaWNlKDEpKTtsZXQgcz1bXSxvO2Zvcig7ZS5sZW5ndGgmJihvPWVbMF1bMF0sIShvIT09XCJzcGFjZVwiJiZvIT09XCJjb21tZW50XCIpKTspcy5wdXNoKGUuc2hpZnQoKSk7dGhpcy5wcmVjaGVja01pc3NlZFNlbWljb2xvbihlKTtmb3IobGV0IHU9ZS5sZW5ndGgtMTt1Pj0wO3UtLSl7aWYoYT1lW3VdLGFbMV0udG9Mb3dlckNhc2UoKT09PVwiIWltcG9ydGFudFwiKXtuLmltcG9ydGFudD0hMDtsZXQgZj10aGlzLnN0cmluZ0Zyb20oZSx1KTtmPXRoaXMuc3BhY2VzRnJvbUVuZChlKStmLGYhPT1cIiAhaW1wb3J0YW50XCImJihuLnJhd3MuaW1wb3J0YW50PWYpO2JyZWFrfWVsc2UgaWYoYVsxXS50b0xvd2VyQ2FzZSgpPT09XCJpbXBvcnRhbnRcIil7bGV0IGY9ZS5zbGljZSgwKSxwPVwiXCI7Zm9yKGxldCBjPXU7Yz4wO2MtLSl7bGV0IGQ9ZltjXVswXTtpZihwLnRyaW0oKS5pbmRleE9mKFwiIVwiKT09PTAmJmQhPT1cInNwYWNlXCIpYnJlYWs7cD1mLnBvcCgpWzFdK3B9cC50cmltKCkuaW5kZXhPZihcIiFcIik9PT0wJiYobi5pbXBvcnRhbnQ9ITAsbi5yYXdzLmltcG9ydGFudD1wLGU9Zil9aWYoYVswXSE9PVwic3BhY2VcIiYmYVswXSE9PVwiY29tbWVudFwiKWJyZWFrfWUuc29tZSh1PT51WzBdIT09XCJzcGFjZVwiJiZ1WzBdIT09XCJjb21tZW50XCIpJiYobi5yYXdzLmJldHdlZW4rPXMubWFwKHU9PnVbMV0pLmpvaW4oXCJcIikscz1bXSksdGhpcy5yYXcobixcInZhbHVlXCIscy5jb25jYXQoZSksciksbi52YWx1ZS5pbmNsdWRlcyhcIjpcIikmJiFyJiZ0aGlzLmNoZWNrTWlzc2VkU2VtaWNvbG9uKGUpfWRvdWJsZUNvbG9uKGUpe3Rocm93IHRoaXMuaW5wdXQuZXJyb3IoXCJEb3VibGUgY29sb25cIix7b2Zmc2V0OmVbMl19LHtvZmZzZXQ6ZVsyXStlWzFdLmxlbmd0aH0pfWVtcHR5UnVsZShlKXtsZXQgcj1uZXcgem87dGhpcy5pbml0KHIsZVsyXSksci5zZWxlY3Rvcj1cIlwiLHIucmF3cy5iZXR3ZWVuPVwiXCIsdGhpcy5jdXJyZW50PXJ9ZW5kKGUpe3RoaXMuY3VycmVudC5ub2RlcyYmdGhpcy5jdXJyZW50Lm5vZGVzLmxlbmd0aCYmKHRoaXMuY3VycmVudC5yYXdzLnNlbWljb2xvbj10aGlzLnNlbWljb2xvbiksdGhpcy5zZW1pY29sb249ITEsdGhpcy5jdXJyZW50LnJhd3MuYWZ0ZXI9KHRoaXMuY3VycmVudC5yYXdzLmFmdGVyfHxcIlwiKSt0aGlzLnNwYWNlcyx0aGlzLnNwYWNlcz1cIlwiLHRoaXMuY3VycmVudC5wYXJlbnQ/KHRoaXMuY3VycmVudC5zb3VyY2UuZW5kPXRoaXMuZ2V0UG9zaXRpb24oZVsyXSksdGhpcy5jdXJyZW50LnNvdXJjZS5lbmQub2Zmc2V0KyssdGhpcy5jdXJyZW50PXRoaXMuY3VycmVudC5wYXJlbnQpOnRoaXMudW5leHBlY3RlZENsb3NlKGUpfWVuZEZpbGUoKXt0aGlzLmN1cnJlbnQucGFyZW50JiZ0aGlzLnVuY2xvc2VkQmxvY2soKSx0aGlzLmN1cnJlbnQubm9kZXMmJnRoaXMuY3VycmVudC5ub2Rlcy5sZW5ndGgmJih0aGlzLmN1cnJlbnQucmF3cy5zZW1pY29sb249dGhpcy5zZW1pY29sb24pLHRoaXMuY3VycmVudC5yYXdzLmFmdGVyPSh0aGlzLmN1cnJlbnQucmF3cy5hZnRlcnx8XCJcIikrdGhpcy5zcGFjZXMsdGhpcy5yb290LnNvdXJjZS5lbmQ9dGhpcy5nZXRQb3NpdGlvbih0aGlzLnRva2VuaXplci5wb3NpdGlvbigpKX1mcmVlU2VtaWNvbG9uKGUpe2lmKHRoaXMuc3BhY2VzKz1lWzFdLHRoaXMuY3VycmVudC5ub2Rlcyl7bGV0IHI9dGhpcy5jdXJyZW50Lm5vZGVzW3RoaXMuY3VycmVudC5ub2Rlcy5sZW5ndGgtMV07ciYmci50eXBlPT09XCJydWxlXCImJiFyLnJhd3Mub3duU2VtaWNvbG9uJiYoci5yYXdzLm93blNlbWljb2xvbj10aGlzLnNwYWNlcyx0aGlzLnNwYWNlcz1cIlwiKX19Z2V0UG9zaXRpb24oZSl7bGV0IHI9dGhpcy5pbnB1dC5mcm9tT2Zmc2V0KGUpO3JldHVybntjb2x1bW46ci5jb2wsbGluZTpyLmxpbmUsb2Zmc2V0OmV9fWluaXQoZSxyKXt0aGlzLmN1cnJlbnQucHVzaChlKSxlLnNvdXJjZT17aW5wdXQ6dGhpcy5pbnB1dCxzdGFydDp0aGlzLmdldFBvc2l0aW9uKHIpfSxlLnJhd3MuYmVmb3JlPXRoaXMuc3BhY2VzLHRoaXMuc3BhY2VzPVwiXCIsZS50eXBlIT09XCJjb21tZW50XCImJih0aGlzLnNlbWljb2xvbj0hMSl9b3RoZXIoZSl7bGV0IHI9ITEsbj1udWxsLGk9ITEsYT1udWxsLHM9W10sbz1lWzFdLnN0YXJ0c1dpdGgoXCItLVwiKSxsPVtdLHU9ZTtmb3IoO3U7KXtpZihuPXVbMF0sbC5wdXNoKHUpLG49PT1cIihcInx8bj09PVwiW1wiKWF8fChhPXUpLHMucHVzaChuPT09XCIoXCI/XCIpXCI6XCJdXCIpO2Vsc2UgaWYobyYmaSYmbj09PVwie1wiKWF8fChhPXUpLHMucHVzaChcIn1cIik7ZWxzZSBpZihzLmxlbmd0aD09PTApaWYobj09PVwiO1wiKWlmKGkpe3RoaXMuZGVjbChsLG8pO3JldHVybn1lbHNlIGJyZWFrO2Vsc2UgaWYobj09PVwie1wiKXt0aGlzLnJ1bGUobCk7cmV0dXJufWVsc2UgaWYobj09PVwifVwiKXt0aGlzLnRva2VuaXplci5iYWNrKGwucG9wKCkpLHI9ITA7YnJlYWt9ZWxzZSBuPT09XCI6XCImJihpPSEwKTtlbHNlIG49PT1zW3MubGVuZ3RoLTFdJiYocy5wb3AoKSxzLmxlbmd0aD09PTAmJihhPW51bGwpKTt1PXRoaXMudG9rZW5pemVyLm5leHRUb2tlbigpfWlmKHRoaXMudG9rZW5pemVyLmVuZE9mRmlsZSgpJiYocj0hMCkscy5sZW5ndGg+MCYmdGhpcy51bmNsb3NlZEJyYWNrZXQoYSksciYmaSl7aWYoIW8pZm9yKDtsLmxlbmd0aCYmKHU9bFtsLmxlbmd0aC0xXVswXSwhKHUhPT1cInNwYWNlXCImJnUhPT1cImNvbW1lbnRcIikpOyl0aGlzLnRva2VuaXplci5iYWNrKGwucG9wKCkpO3RoaXMuZGVjbChsLG8pfWVsc2UgdGhpcy51bmtub3duV29yZChsKX1wYXJzZSgpe2xldCBlO2Zvcig7IXRoaXMudG9rZW5pemVyLmVuZE9mRmlsZSgpOylzd2l0Y2goZT10aGlzLnRva2VuaXplci5uZXh0VG9rZW4oKSxlWzBdKXtjYXNlXCJzcGFjZVwiOnRoaXMuc3BhY2VzKz1lWzFdO2JyZWFrO2Nhc2VcIjtcIjp0aGlzLmZyZWVTZW1pY29sb24oZSk7YnJlYWs7Y2FzZVwifVwiOnRoaXMuZW5kKGUpO2JyZWFrO2Nhc2VcImNvbW1lbnRcIjp0aGlzLmNvbW1lbnQoZSk7YnJlYWs7Y2FzZVwiYXQtd29yZFwiOnRoaXMuYXRydWxlKGUpO2JyZWFrO2Nhc2VcIntcIjp0aGlzLmVtcHR5UnVsZShlKTticmVhaztkZWZhdWx0OnRoaXMub3RoZXIoZSk7YnJlYWt9dGhpcy5lbmRGaWxlKCl9cHJlY2hlY2tNaXNzZWRTZW1pY29sb24oKXt9cmF3KGUscixuLGkpe2xldCBhLHMsbz1uLmxlbmd0aCxsPVwiXCIsdT0hMCxmLHA7Zm9yKGxldCBjPTA7YzxvO2MrPTEpYT1uW2NdLHM9YVswXSxzPT09XCJzcGFjZVwiJiZjPT09by0xJiYhaT91PSExOnM9PT1cImNvbW1lbnRcIj8ocD1uW2MtMV0/bltjLTFdWzBdOlwiZW1wdHlcIixmPW5bYysxXT9uW2MrMV1bMF06XCJlbXB0eVwiLCFWb1twXSYmIVZvW2ZdP2wuc2xpY2UoLTEpPT09XCIsXCI/dT0hMTpsKz1hWzFdOnU9ITEpOmwrPWFbMV07aWYoIXUpe2xldCBjPW4ucmVkdWNlKChkLGgpPT5kK2hbMV0sXCJcIik7ZS5yYXdzW3JdPXtyYXc6Yyx2YWx1ZTpsfX1lW3JdPWx9cnVsZShlKXtlLnBvcCgpO2xldCByPW5ldyB6bzt0aGlzLmluaXQocixlWzBdWzJdKSxyLnJhd3MuYmV0d2Vlbj10aGlzLnNwYWNlc0FuZENvbW1lbnRzRnJvbUVuZChlKSx0aGlzLnJhdyhyLFwic2VsZWN0b3JcIixlKSx0aGlzLmN1cnJlbnQ9cn1zcGFjZXNBbmRDb21tZW50c0Zyb21FbmQoZSl7bGV0IHIsbj1cIlwiO2Zvcig7ZS5sZW5ndGgmJihyPWVbZS5sZW5ndGgtMV1bMF0sIShyIT09XCJzcGFjZVwiJiZyIT09XCJjb21tZW50XCIpKTspbj1lLnBvcCgpWzFdK247cmV0dXJuIG59c3BhY2VzQW5kQ29tbWVudHNGcm9tU3RhcnQoZSl7bGV0IHIsbj1cIlwiO2Zvcig7ZS5sZW5ndGgmJihyPWVbMF1bMF0sIShyIT09XCJzcGFjZVwiJiZyIT09XCJjb21tZW50XCIpKTspbis9ZS5zaGlmdCgpWzFdO3JldHVybiBufXNwYWNlc0Zyb21FbmQoZSl7bGV0IHIsbj1cIlwiO2Zvcig7ZS5sZW5ndGgmJihyPWVbZS5sZW5ndGgtMV1bMF0scj09PVwic3BhY2VcIik7KW49ZS5wb3AoKVsxXStuO3JldHVybiBufXN0cmluZ0Zyb20oZSxyKXtsZXQgbj1cIlwiO2ZvcihsZXQgaT1yO2k8ZS5sZW5ndGg7aSsrKW4rPWVbaV1bMV07cmV0dXJuIGUuc3BsaWNlKHIsZS5sZW5ndGgtciksbn11bmNsb3NlZEJsb2NrKCl7bGV0IGU9dGhpcy5jdXJyZW50LnNvdXJjZS5zdGFydDt0aHJvdyB0aGlzLmlucHV0LmVycm9yKFwiVW5jbG9zZWQgYmxvY2tcIixlLmxpbmUsZS5jb2x1bW4pfXVuY2xvc2VkQnJhY2tldChlKXt0aHJvdyB0aGlzLmlucHV0LmVycm9yKFwiVW5jbG9zZWQgYnJhY2tldFwiLHtvZmZzZXQ6ZVsyXX0se29mZnNldDplWzJdKzF9KX11bmV4cGVjdGVkQ2xvc2UoZSl7dGhyb3cgdGhpcy5pbnB1dC5lcnJvcihcIlVuZXhwZWN0ZWQgfVwiLHtvZmZzZXQ6ZVsyXX0se29mZnNldDplWzJdKzF9KX11bmtub3duV29yZChlKXt0aHJvdyB0aGlzLmlucHV0LmVycm9yKFwiVW5rbm93biB3b3JkXCIse29mZnNldDplWzBdWzJdfSx7b2Zmc2V0OmVbMF1bMl0rZVswXVsxXS5sZW5ndGh9KX11bm5hbWVkQXRydWxlKGUscil7dGhyb3cgdGhpcy5pbnB1dC5lcnJvcihcIkF0LXJ1bGUgd2l0aG91dCBuYW1lXCIse29mZnNldDpyWzJdfSx7b2Zmc2V0OnJbMl0rclsxXS5sZW5ndGh9KX19O1dvLmV4cG9ydHM9bWl9KTt2YXIgJHI9UygoV2IsR28pPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIEVkPV9lKCksQ2Q9Qm8oKSxBZD1FdCgpO2Z1bmN0aW9uIHFyKHQsZSl7bGV0IHI9bmV3IEFkKHQsZSksbj1uZXcgQ2Qocik7dHJ5e24ucGFyc2UoKX1jYXRjaChpKXt0aHJvdyBpfXJldHVybiBuLnJvb3R9R28uZXhwb3J0cz1xcjtxci5kZWZhdWx0PXFyO0VkLnJlZ2lzdGVyUGFyc2UocXIpfSk7dmFyIHZpPVMoKEdiLEpvKT0+e1widXNlIHN0cmljdFwiO3Zhcntpc0NsZWFuOm1lLG15Ol9kfT14cigpLFRkPWxpKCksUGQ9eXQoKSxJZD1fZSgpLFJkPUFyKCksQmI9Y2koKSxZbz1fcigpLERkPSRyKCksTWQ9UWUoKSxGZD17YXRydWxlOlwiQXRSdWxlXCIsY29tbWVudDpcIkNvbW1lbnRcIixkZWNsOlwiRGVjbGFyYXRpb25cIixkb2N1bWVudDpcIkRvY3VtZW50XCIscm9vdDpcIlJvb3RcIixydWxlOlwiUnVsZVwifSxMZD17QXRSdWxlOiEwLEF0UnVsZUV4aXQ6ITAsQ29tbWVudDohMCxDb21tZW50RXhpdDohMCxEZWNsYXJhdGlvbjohMCxEZWNsYXJhdGlvbkV4aXQ6ITAsRG9jdW1lbnQ6ITAsRG9jdW1lbnRFeGl0OiEwLE9uY2U6ITAsT25jZUV4aXQ6ITAscG9zdGNzc1BsdWdpbjohMCxwcmVwYXJlOiEwLFJvb3Q6ITAsUm9vdEV4aXQ6ITAsUnVsZTohMCxSdWxlRXhpdDohMH0sTmQ9e09uY2U6ITAscG9zdGNzc1BsdWdpbjohMCxwcmVwYXJlOiEwfSxYZT0wO2Z1bmN0aW9uIFJ0KHQpe3JldHVybiB0eXBlb2YgdD09XCJvYmplY3RcIiYmdHlwZW9mIHQudGhlbj09XCJmdW5jdGlvblwifWZ1bmN0aW9uIFFvKHQpe2xldCBlPSExLHI9RmRbdC50eXBlXTtyZXR1cm4gdC50eXBlPT09XCJkZWNsXCI/ZT10LnByb3AudG9Mb3dlckNhc2UoKTp0LnR5cGU9PT1cImF0cnVsZVwiJiYoZT10Lm5hbWUudG9Mb3dlckNhc2UoKSksZSYmdC5hcHBlbmQ/W3IscitcIi1cIitlLFhlLHIrXCJFeGl0XCIscitcIkV4aXQtXCIrZV06ZT9bcixyK1wiLVwiK2UscitcIkV4aXRcIixyK1wiRXhpdC1cIitlXTp0LmFwcGVuZD9bcixYZSxyK1wiRXhpdFwiXTpbcixyK1wiRXhpdFwiXX1mdW5jdGlvbiBIbyh0KXtsZXQgZTtyZXR1cm4gdC50eXBlPT09XCJkb2N1bWVudFwiP2U9W1wiRG9jdW1lbnRcIixYZSxcIkRvY3VtZW50RXhpdFwiXTp0LnR5cGU9PT1cInJvb3RcIj9lPVtcIlJvb3RcIixYZSxcIlJvb3RFeGl0XCJdOmU9UW8odCkse2V2ZW50SW5kZXg6MCxldmVudHM6ZSxpdGVyYXRvcjowLG5vZGU6dCx2aXNpdG9ySW5kZXg6MCx2aXNpdG9yczpbXX19ZnVuY3Rpb24gZ2kodCl7cmV0dXJuIHRbbWVdPSExLHQubm9kZXMmJnQubm9kZXMuZm9yRWFjaChlPT5naShlKSksdH12YXIgeWk9e30sZ2U9Y2xhc3N7Y29uc3RydWN0b3IoZSxyLG4pe3RoaXMuc3RyaW5naWZpZWQ9ITEsdGhpcy5wcm9jZXNzZWQ9ITE7bGV0IGk7aWYodHlwZW9mIHI9PVwib2JqZWN0XCImJnIhPT1udWxsJiYoci50eXBlPT09XCJyb290XCJ8fHIudHlwZT09PVwiZG9jdW1lbnRcIikpaT1naShyKTtlbHNlIGlmKHIgaW5zdGFuY2VvZiBnZXx8ciBpbnN0YW5jZW9mIFlvKWk9Z2koci5yb290KSxyLm1hcCYmKHR5cGVvZiBuLm1hcD5cInVcIiYmKG4ubWFwPXt9KSxuLm1hcC5pbmxpbmV8fChuLm1hcC5pbmxpbmU9ITEpLG4ubWFwLnByZXY9ci5tYXApO2Vsc2V7bGV0IGE9RGQ7bi5zeW50YXgmJihhPW4uc3ludGF4LnBhcnNlKSxuLnBhcnNlciYmKGE9bi5wYXJzZXIpLGEucGFyc2UmJihhPWEucGFyc2UpO3RyeXtpPWEocixuKX1jYXRjaChzKXt0aGlzLnByb2Nlc3NlZD0hMCx0aGlzLmVycm9yPXN9aSYmIWlbX2RdJiZJZC5yZWJ1aWxkKGkpfXRoaXMucmVzdWx0PW5ldyBZbyhlLGksbiksdGhpcy5oZWxwZXJzPXsuLi55aSxwb3N0Y3NzOnlpLHJlc3VsdDp0aGlzLnJlc3VsdH0sdGhpcy5wbHVnaW5zPXRoaXMucHJvY2Vzc29yLnBsdWdpbnMubWFwKGE9PnR5cGVvZiBhPT1cIm9iamVjdFwiJiZhLnByZXBhcmU/ey4uLmEsLi4uYS5wcmVwYXJlKHRoaXMucmVzdWx0KX06YSl9YXN5bmMoKXtyZXR1cm4gdGhpcy5lcnJvcj9Qcm9taXNlLnJlamVjdCh0aGlzLmVycm9yKTp0aGlzLnByb2Nlc3NlZD9Qcm9taXNlLnJlc29sdmUodGhpcy5yZXN1bHQpOih0aGlzLnByb2Nlc3Npbmd8fCh0aGlzLnByb2Nlc3Npbmc9dGhpcy5ydW5Bc3luYygpKSx0aGlzLnByb2Nlc3NpbmcpfWNhdGNoKGUpe3JldHVybiB0aGlzLmFzeW5jKCkuY2F0Y2goZSl9ZmluYWxseShlKXtyZXR1cm4gdGhpcy5hc3luYygpLnRoZW4oZSxlKX1nZXRBc3luY0Vycm9yKCl7dGhyb3cgbmV3IEVycm9yKFwiVXNlIHByb2Nlc3MoY3NzKS50aGVuKGNiKSB0byB3b3JrIHdpdGggYXN5bmMgcGx1Z2luc1wiKX1oYW5kbGVFcnJvcihlLHIpe2xldCBuPXRoaXMucmVzdWx0Lmxhc3RQbHVnaW47dHJ5e3ImJnIuYWRkVG9FcnJvcihlKSx0aGlzLmVycm9yPWUsZS5uYW1lPT09XCJDc3NTeW50YXhFcnJvclwiJiYhZS5wbHVnaW4/KGUucGx1Z2luPW4ucG9zdGNzc1BsdWdpbixlLnNldE1lc3NhZ2UoKSk6bi5wb3N0Y3NzVmVyc2lvbn1jYXRjaChpKXtjb25zb2xlJiZjb25zb2xlLmVycm9yJiZjb25zb2xlLmVycm9yKGkpfXJldHVybiBlfXByZXBhcmVWaXNpdG9ycygpe3RoaXMubGlzdGVuZXJzPXt9O2xldCBlPShyLG4saSk9Pnt0aGlzLmxpc3RlbmVyc1tuXXx8KHRoaXMubGlzdGVuZXJzW25dPVtdKSx0aGlzLmxpc3RlbmVyc1tuXS5wdXNoKFtyLGldKX07Zm9yKGxldCByIG9mIHRoaXMucGx1Z2lucylpZih0eXBlb2Ygcj09XCJvYmplY3RcIilmb3IobGV0IG4gaW4gcil7aWYoIUxkW25dJiYvXltBLVpdLy50ZXN0KG4pKXRocm93IG5ldyBFcnJvcihgVW5rbm93biBldmVudCAke259IGluICR7ci5wb3N0Y3NzUGx1Z2lufS4gVHJ5IHRvIHVwZGF0ZSBQb3N0Q1NTICgke3RoaXMucHJvY2Vzc29yLnZlcnNpb259IG5vdykuYCk7aWYoIU5kW25dKWlmKHR5cGVvZiByW25dPT1cIm9iamVjdFwiKWZvcihsZXQgaSBpbiByW25dKWk9PT1cIipcIj9lKHIsbixyW25dW2ldKTplKHIsbitcIi1cIitpLnRvTG93ZXJDYXNlKCkscltuXVtpXSk7ZWxzZSB0eXBlb2YgcltuXT09XCJmdW5jdGlvblwiJiZlKHIsbixyW25dKX10aGlzLmhhc0xpc3RlbmVyPU9iamVjdC5rZXlzKHRoaXMubGlzdGVuZXJzKS5sZW5ndGg+MH1hc3luYyBydW5Bc3luYygpe3RoaXMucGx1Z2luPTA7Zm9yKGxldCBlPTA7ZTx0aGlzLnBsdWdpbnMubGVuZ3RoO2UrKyl7bGV0IHI9dGhpcy5wbHVnaW5zW2VdLG49dGhpcy5ydW5PblJvb3Qocik7aWYoUnQobikpdHJ5e2F3YWl0IG59Y2F0Y2goaSl7dGhyb3cgdGhpcy5oYW5kbGVFcnJvcihpKX19aWYodGhpcy5wcmVwYXJlVmlzaXRvcnMoKSx0aGlzLmhhc0xpc3RlbmVyKXtsZXQgZT10aGlzLnJlc3VsdC5yb290O2Zvcig7IWVbbWVdOyl7ZVttZV09ITA7bGV0IHI9W0hvKGUpXTtmb3IoO3IubGVuZ3RoPjA7KXtsZXQgbj10aGlzLnZpc2l0VGljayhyKTtpZihSdChuKSl0cnl7YXdhaXQgbn1jYXRjaChpKXtsZXQgYT1yW3IubGVuZ3RoLTFdLm5vZGU7dGhyb3cgdGhpcy5oYW5kbGVFcnJvcihpLGEpfX19aWYodGhpcy5saXN0ZW5lcnMuT25jZUV4aXQpZm9yKGxldFtyLG5db2YgdGhpcy5saXN0ZW5lcnMuT25jZUV4aXQpe3RoaXMucmVzdWx0Lmxhc3RQbHVnaW49cjt0cnl7aWYoZS50eXBlPT09XCJkb2N1bWVudFwiKXtsZXQgaT1lLm5vZGVzLm1hcChhPT5uKGEsdGhpcy5oZWxwZXJzKSk7YXdhaXQgUHJvbWlzZS5hbGwoaSl9ZWxzZSBhd2FpdCBuKGUsdGhpcy5oZWxwZXJzKX1jYXRjaChpKXt0aHJvdyB0aGlzLmhhbmRsZUVycm9yKGkpfX19cmV0dXJuIHRoaXMucHJvY2Vzc2VkPSEwLHRoaXMuc3RyaW5naWZ5KCl9cnVuT25Sb290KGUpe3RoaXMucmVzdWx0Lmxhc3RQbHVnaW49ZTt0cnl7aWYodHlwZW9mIGU9PVwib2JqZWN0XCImJmUuT25jZSl7aWYodGhpcy5yZXN1bHQucm9vdC50eXBlPT09XCJkb2N1bWVudFwiKXtsZXQgcj10aGlzLnJlc3VsdC5yb290Lm5vZGVzLm1hcChuPT5lLk9uY2Uobix0aGlzLmhlbHBlcnMpKTtyZXR1cm4gUnQoclswXSk/UHJvbWlzZS5hbGwocik6cn1yZXR1cm4gZS5PbmNlKHRoaXMucmVzdWx0LnJvb3QsdGhpcy5oZWxwZXJzKX1lbHNlIGlmKHR5cGVvZiBlPT1cImZ1bmN0aW9uXCIpcmV0dXJuIGUodGhpcy5yZXN1bHQucm9vdCx0aGlzLnJlc3VsdCl9Y2F0Y2gocil7dGhyb3cgdGhpcy5oYW5kbGVFcnJvcihyKX19c3RyaW5naWZ5KCl7aWYodGhpcy5lcnJvcil0aHJvdyB0aGlzLmVycm9yO2lmKHRoaXMuc3RyaW5naWZpZWQpcmV0dXJuIHRoaXMucmVzdWx0O3RoaXMuc3RyaW5naWZpZWQ9ITAsdGhpcy5zeW5jKCk7bGV0IGU9dGhpcy5yZXN1bHQub3B0cyxyPVBkO2Uuc3ludGF4JiYocj1lLnN5bnRheC5zdHJpbmdpZnkpLGUuc3RyaW5naWZpZXImJihyPWUuc3RyaW5naWZpZXIpLHIuc3RyaW5naWZ5JiYocj1yLnN0cmluZ2lmeSk7bGV0IGk9bmV3IFRkKHIsdGhpcy5yZXN1bHQucm9vdCx0aGlzLnJlc3VsdC5vcHRzKS5nZW5lcmF0ZSgpO3JldHVybiB0aGlzLnJlc3VsdC5jc3M9aVswXSx0aGlzLnJlc3VsdC5tYXA9aVsxXSx0aGlzLnJlc3VsdH1zeW5jKCl7aWYodGhpcy5lcnJvcil0aHJvdyB0aGlzLmVycm9yO2lmKHRoaXMucHJvY2Vzc2VkKXJldHVybiB0aGlzLnJlc3VsdDtpZih0aGlzLnByb2Nlc3NlZD0hMCx0aGlzLnByb2Nlc3NpbmcpdGhyb3cgdGhpcy5nZXRBc3luY0Vycm9yKCk7Zm9yKGxldCBlIG9mIHRoaXMucGx1Z2lucyl7bGV0IHI9dGhpcy5ydW5PblJvb3QoZSk7aWYoUnQocikpdGhyb3cgdGhpcy5nZXRBc3luY0Vycm9yKCl9aWYodGhpcy5wcmVwYXJlVmlzaXRvcnMoKSx0aGlzLmhhc0xpc3RlbmVyKXtsZXQgZT10aGlzLnJlc3VsdC5yb290O2Zvcig7IWVbbWVdOyllW21lXT0hMCx0aGlzLndhbGtTeW5jKGUpO2lmKHRoaXMubGlzdGVuZXJzLk9uY2VFeGl0KWlmKGUudHlwZT09PVwiZG9jdW1lbnRcIilmb3IobGV0IHIgb2YgZS5ub2Rlcyl0aGlzLnZpc2l0U3luYyh0aGlzLmxpc3RlbmVycy5PbmNlRXhpdCxyKTtlbHNlIHRoaXMudmlzaXRTeW5jKHRoaXMubGlzdGVuZXJzLk9uY2VFeGl0LGUpfXJldHVybiB0aGlzLnJlc3VsdH10aGVuKGUscil7cmV0dXJuIHRoaXMuYXN5bmMoKS50aGVuKGUscil9dG9TdHJpbmcoKXtyZXR1cm4gdGhpcy5jc3N9dmlzaXRTeW5jKGUscil7Zm9yKGxldFtuLGldb2YgZSl7dGhpcy5yZXN1bHQubGFzdFBsdWdpbj1uO2xldCBhO3RyeXthPWkocix0aGlzLmhlbHBlcnMpfWNhdGNoKHMpe3Rocm93IHRoaXMuaGFuZGxlRXJyb3IocyxyLnByb3h5T2YpfWlmKHIudHlwZSE9PVwicm9vdFwiJiZyLnR5cGUhPT1cImRvY3VtZW50XCImJiFyLnBhcmVudClyZXR1cm4hMDtpZihSdChhKSl0aHJvdyB0aGlzLmdldEFzeW5jRXJyb3IoKX19dmlzaXRUaWNrKGUpe2xldCByPWVbZS5sZW5ndGgtMV0se25vZGU6bix2aXNpdG9yczppfT1yO2lmKG4udHlwZSE9PVwicm9vdFwiJiZuLnR5cGUhPT1cImRvY3VtZW50XCImJiFuLnBhcmVudCl7ZS5wb3AoKTtyZXR1cm59aWYoaS5sZW5ndGg+MCYmci52aXNpdG9ySW5kZXg8aS5sZW5ndGgpe2xldFtzLG9dPWlbci52aXNpdG9ySW5kZXhdO3IudmlzaXRvckluZGV4Kz0xLHIudmlzaXRvckluZGV4PT09aS5sZW5ndGgmJihyLnZpc2l0b3JzPVtdLHIudmlzaXRvckluZGV4PTApLHRoaXMucmVzdWx0Lmxhc3RQbHVnaW49czt0cnl7cmV0dXJuIG8obi50b1Byb3h5KCksdGhpcy5oZWxwZXJzKX1jYXRjaChsKXt0aHJvdyB0aGlzLmhhbmRsZUVycm9yKGwsbil9fWlmKHIuaXRlcmF0b3IhPT0wKXtsZXQgcz1yLml0ZXJhdG9yLG87Zm9yKDtvPW4ubm9kZXNbbi5pbmRleGVzW3NdXTspaWYobi5pbmRleGVzW3NdKz0xLCFvW21lXSl7b1ttZV09ITAsZS5wdXNoKEhvKG8pKTtyZXR1cm59ci5pdGVyYXRvcj0wLGRlbGV0ZSBuLmluZGV4ZXNbc119bGV0IGE9ci5ldmVudHM7Zm9yKDtyLmV2ZW50SW5kZXg8YS5sZW5ndGg7KXtsZXQgcz1hW3IuZXZlbnRJbmRleF07aWYoci5ldmVudEluZGV4Kz0xLHM9PT1YZSl7bi5ub2RlcyYmbi5ub2Rlcy5sZW5ndGgmJihuW21lXT0hMCxyLml0ZXJhdG9yPW4uZ2V0SXRlcmF0b3IoKSk7cmV0dXJufWVsc2UgaWYodGhpcy5saXN0ZW5lcnNbc10pe3IudmlzaXRvcnM9dGhpcy5saXN0ZW5lcnNbc107cmV0dXJufX1lLnBvcCgpfXdhbGtTeW5jKGUpe2VbbWVdPSEwO2xldCByPVFvKGUpO2ZvcihsZXQgbiBvZiByKWlmKG49PT1YZSllLm5vZGVzJiZlLmVhY2goaT0+e2lbbWVdfHx0aGlzLndhbGtTeW5jKGkpfSk7ZWxzZXtsZXQgaT10aGlzLmxpc3RlbmVyc1tuXTtpZihpJiZ0aGlzLnZpc2l0U3luYyhpLGUudG9Qcm94eSgpKSlyZXR1cm59fXdhcm5pbmdzKCl7cmV0dXJuIHRoaXMuc3luYygpLndhcm5pbmdzKCl9Z2V0IGNvbnRlbnQoKXtyZXR1cm4gdGhpcy5zdHJpbmdpZnkoKS5jb250ZW50fWdldCBjc3MoKXtyZXR1cm4gdGhpcy5zdHJpbmdpZnkoKS5jc3N9Z2V0IG1hcCgpe3JldHVybiB0aGlzLnN0cmluZ2lmeSgpLm1hcH1nZXQgbWVzc2FnZXMoKXtyZXR1cm4gdGhpcy5zeW5jKCkubWVzc2FnZXN9Z2V0IG9wdHMoKXtyZXR1cm4gdGhpcy5yZXN1bHQub3B0c31nZXQgcHJvY2Vzc29yKCl7cmV0dXJuIHRoaXMucmVzdWx0LnByb2Nlc3Nvcn1nZXQgcm9vdCgpe3JldHVybiB0aGlzLnN5bmMoKS5yb290fWdldFtTeW1ib2wudG9TdHJpbmdUYWddKCl7cmV0dXJuXCJMYXp5UmVzdWx0XCJ9fTtnZS5yZWdpc3RlclBvc3Rjc3M9dD0+e3lpPXR9O0pvLmV4cG9ydHM9Z2U7Z2UuZGVmYXVsdD1nZTtNZC5yZWdpc3RlckxhenlSZXN1bHQoZ2UpO1JkLnJlZ2lzdGVyTGF6eVJlc3VsdChnZSl9KTt2YXIgS289UygoSGIsWG8pPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIHFkPWxpKCksJGQ9eXQoKSxZYj1jaSgpLFVkPSRyKCksamQ9X3IoKSxEdD1jbGFzc3tjb25zdHJ1Y3RvcihlLHIsbil7cj1yLnRvU3RyaW5nKCksdGhpcy5zdHJpbmdpZmllZD0hMSx0aGlzLl9wcm9jZXNzb3I9ZSx0aGlzLl9jc3M9cix0aGlzLl9vcHRzPW4sdGhpcy5fbWFwPXZvaWQgMDtsZXQgaSxhPSRkO3RoaXMucmVzdWx0PW5ldyBqZCh0aGlzLl9wcm9jZXNzb3IsaSx0aGlzLl9vcHRzKSx0aGlzLnJlc3VsdC5jc3M9cjtsZXQgcz10aGlzO09iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLnJlc3VsdCxcInJvb3RcIix7Z2V0KCl7cmV0dXJuIHMucm9vdH19KTtsZXQgbz1uZXcgcWQoYSxpLHRoaXMuX29wdHMscik7aWYoby5pc01hcCgpKXtsZXRbbCx1XT1vLmdlbmVyYXRlKCk7bCYmKHRoaXMucmVzdWx0LmNzcz1sKSx1JiYodGhpcy5yZXN1bHQubWFwPXUpfX1hc3luYygpe3JldHVybiB0aGlzLmVycm9yP1Byb21pc2UucmVqZWN0KHRoaXMuZXJyb3IpOlByb21pc2UucmVzb2x2ZSh0aGlzLnJlc3VsdCl9Y2F0Y2goZSl7cmV0dXJuIHRoaXMuYXN5bmMoKS5jYXRjaChlKX1maW5hbGx5KGUpe3JldHVybiB0aGlzLmFzeW5jKCkudGhlbihlLGUpfXN5bmMoKXtpZih0aGlzLmVycm9yKXRocm93IHRoaXMuZXJyb3I7cmV0dXJuIHRoaXMucmVzdWx0fXRoZW4oZSxyKXtyZXR1cm4gdGhpcy5hc3luYygpLnRoZW4oZSxyKX10b1N0cmluZygpe3JldHVybiB0aGlzLl9jc3N9d2FybmluZ3MoKXtyZXR1cm5bXX1nZXQgY29udGVudCgpe3JldHVybiB0aGlzLnJlc3VsdC5jc3N9Z2V0IGNzcygpe3JldHVybiB0aGlzLnJlc3VsdC5jc3N9Z2V0IG1hcCgpe3JldHVybiB0aGlzLnJlc3VsdC5tYXB9Z2V0IG1lc3NhZ2VzKCl7cmV0dXJuW119Z2V0IG9wdHMoKXtyZXR1cm4gdGhpcy5yZXN1bHQub3B0c31nZXQgcHJvY2Vzc29yKCl7cmV0dXJuIHRoaXMucmVzdWx0LnByb2Nlc3Nvcn1nZXQgcm9vdCgpe2lmKHRoaXMuX3Jvb3QpcmV0dXJuIHRoaXMuX3Jvb3Q7bGV0IGUscj1VZDt0cnl7ZT1yKHRoaXMuX2Nzcyx0aGlzLl9vcHRzKX1jYXRjaChuKXt0aGlzLmVycm9yPW59aWYodGhpcy5lcnJvcil0aHJvdyB0aGlzLmVycm9yO3JldHVybiB0aGlzLl9yb290PWUsZX1nZXRbU3ltYm9sLnRvU3RyaW5nVGFnXSgpe3JldHVyblwiTm9Xb3JrUmVzdWx0XCJ9fTtYby5leHBvcnRzPUR0O0R0LmRlZmF1bHQ9RHR9KTt2YXIgZWw9UygoUWIsWm8pPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIHpkPUtvKCksVmQ9dmkoKSxXZD1BcigpLEJkPVFlKCksemU9Y2xhc3N7Y29uc3RydWN0b3IoZT1bXSl7dGhpcy52ZXJzaW9uPVwiOC40LjMxXCIsdGhpcy5wbHVnaW5zPXRoaXMubm9ybWFsaXplKGUpfW5vcm1hbGl6ZShlKXtsZXQgcj1bXTtmb3IobGV0IG4gb2YgZSlpZihuLnBvc3Rjc3M9PT0hMD9uPW4oKTpuLnBvc3Rjc3MmJihuPW4ucG9zdGNzcyksdHlwZW9mIG49PVwib2JqZWN0XCImJkFycmF5LmlzQXJyYXkobi5wbHVnaW5zKSlyPXIuY29uY2F0KG4ucGx1Z2lucyk7ZWxzZSBpZih0eXBlb2Ygbj09XCJvYmplY3RcIiYmbi5wb3N0Y3NzUGx1Z2luKXIucHVzaChuKTtlbHNlIGlmKHR5cGVvZiBuPT1cImZ1bmN0aW9uXCIpci5wdXNoKG4pO2Vsc2UgaWYoISh0eXBlb2Ygbj09XCJvYmplY3RcIiYmKG4ucGFyc2V8fG4uc3RyaW5naWZ5KSkpdGhyb3cgbmV3IEVycm9yKG4rXCIgaXMgbm90IGEgUG9zdENTUyBwbHVnaW5cIik7cmV0dXJuIHJ9cHJvY2VzcyhlLHI9e30pe3JldHVybiB0aGlzLnBsdWdpbnMubGVuZ3RoPT09MCYmdHlwZW9mIHIucGFyc2VyPlwidVwiJiZ0eXBlb2Ygci5zdHJpbmdpZmllcj5cInVcIiYmdHlwZW9mIHIuc3ludGF4PlwidVwiP25ldyB6ZCh0aGlzLGUscik6bmV3IFZkKHRoaXMsZSxyKX11c2UoZSl7cmV0dXJuIHRoaXMucGx1Z2lucz10aGlzLnBsdWdpbnMuY29uY2F0KHRoaXMubm9ybWFsaXplKFtlXSkpLHRoaXN9fTtaby5leHBvcnRzPXplO3plLmRlZmF1bHQ9emU7QmQucmVnaXN0ZXJQcm9jZXNzb3IoemUpO1dkLnJlZ2lzdGVyUHJvY2Vzc29yKHplKX0pO3ZhciBybD1TKChKYix0bCk9PntcInVzZSBzdHJpY3RcIjt2YXIgR2Q9eHQoKSxZZD1yaSgpLEhkPUF0KCksUWQ9THIoKSxKZD1FdCgpLFhkPVFlKCksS2Q9TnIoKTtmdW5jdGlvbiBNdCh0LGUpe2lmKEFycmF5LmlzQXJyYXkodCkpcmV0dXJuIHQubWFwKGk9Pk10KGkpKTtsZXR7aW5wdXRzOnIsLi4ubn09dDtpZihyKXtlPVtdO2ZvcihsZXQgaSBvZiByKXtsZXQgYT17Li4uaSxfX3Byb3RvX186SmQucHJvdG90eXBlfTthLm1hcCYmKGEubWFwPXsuLi5hLm1hcCxfX3Byb3RvX186WWQucHJvdG90eXBlfSksZS5wdXNoKGEpfX1pZihuLm5vZGVzJiYobi5ub2Rlcz10Lm5vZGVzLm1hcChpPT5NdChpLGUpKSksbi5zb3VyY2Upe2xldHtpbnB1dElkOmksLi4uYX09bi5zb3VyY2U7bi5zb3VyY2U9YSxpIT1udWxsJiYobi5zb3VyY2UuaW5wdXQ9ZVtpXSl9aWYobi50eXBlPT09XCJyb290XCIpcmV0dXJuIG5ldyBYZChuKTtpZihuLnR5cGU9PT1cImRlY2xcIilyZXR1cm4gbmV3IEdkKG4pO2lmKG4udHlwZT09PVwicnVsZVwiKXJldHVybiBuZXcgS2Qobik7aWYobi50eXBlPT09XCJjb21tZW50XCIpcmV0dXJuIG5ldyBIZChuKTtpZihuLnR5cGU9PT1cImF0cnVsZVwiKXJldHVybiBuZXcgUWQobik7dGhyb3cgbmV3IEVycm9yKFwiVW5rbm93biBub2RlIHR5cGU6IFwiK3QudHlwZSl9dGwuZXhwb3J0cz1NdDtNdC5kZWZhdWx0PU10fSk7dmFyIEtlPVMoKFhiLHVsKT0+e1widXNlIHN0cmljdFwiO3ZhciBaZD1icigpLG5sPXh0KCksZWg9dmkoKSx0aD1fZSgpLHdpPWVsKCkscmg9eXQoKSxuaD1ybCgpLGlsPUFyKCksaWg9cGkoKSxzbD1BdCgpLGFsPUxyKCksc2g9X3IoKSxhaD1FdCgpLG9oPSRyKCksbGg9aGkoKSxvbD1OcigpLGxsPVFlKCksdWg9d3QoKTtmdW5jdGlvbiBOKC4uLnQpe3JldHVybiB0Lmxlbmd0aD09PTEmJkFycmF5LmlzQXJyYXkodFswXSkmJih0PXRbMF0pLG5ldyB3aSh0KX1OLnBsdWdpbj1mdW5jdGlvbihlLHIpe2xldCBuPSExO2Z1bmN0aW9uIGkoLi4ucyl7Y29uc29sZSYmY29uc29sZS53YXJuJiYhbiYmKG49ITAsY29uc29sZS53YXJuKGUrYDogcG9zdGNzcy5wbHVnaW4gd2FzIGRlcHJlY2F0ZWQuIE1pZ3JhdGlvbiBndWlkZTpcbmh0dHBzOi8vZXZpbG1hcnRpYW5zLmNvbS9jaHJvbmljbGVzL3Bvc3Rjc3MtOC1wbHVnaW4tbWlncmF0aW9uYCkscHJvY2Vzcy5lbnYuTEFORyYmcHJvY2Vzcy5lbnYuTEFORy5zdGFydHNXaXRoKFwiY25cIikmJmNvbnNvbGUud2FybihlK2A6IFxcdTkxQ0NcXHU5NzYyIHBvc3Rjc3MucGx1Z2luIFxcdTg4QUJcXHU1RjAzXFx1NzUyOC4gXFx1OEZDMVxcdTc5RkJcXHU2MzA3XFx1NTM1Nzpcbmh0dHBzOi8vd3d3LnczY3RlY2guY29tL3RvcGljLzIyMjZgKSk7bGV0IG89ciguLi5zKTtyZXR1cm4gby5wb3N0Y3NzUGx1Z2luPWUsby5wb3N0Y3NzVmVyc2lvbj1uZXcgd2koKS52ZXJzaW9uLG99bGV0IGE7cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShpLFwicG9zdGNzc1wiLHtnZXQoKXtyZXR1cm4gYXx8KGE9aSgpKSxhfX0pLGkucHJvY2Vzcz1mdW5jdGlvbihzLG8sbCl7cmV0dXJuIE4oW2kobCldKS5wcm9jZXNzKHMsbyl9LGl9O04uc3RyaW5naWZ5PXJoO04ucGFyc2U9b2g7Ti5mcm9tSlNPTj1uaDtOLmxpc3Q9bGg7Ti5jb21tZW50PXQ9Pm5ldyBzbCh0KTtOLmF0UnVsZT10PT5uZXcgYWwodCk7Ti5kZWNsPXQ9Pm5ldyBubCh0KTtOLnJ1bGU9dD0+bmV3IG9sKHQpO04ucm9vdD10PT5uZXcgbGwodCk7Ti5kb2N1bWVudD10PT5uZXcgaWwodCk7Ti5Dc3NTeW50YXhFcnJvcj1aZDtOLkRlY2xhcmF0aW9uPW5sO04uQ29udGFpbmVyPXRoO04uUHJvY2Vzc29yPXdpO04uRG9jdW1lbnQ9aWw7Ti5Db21tZW50PXNsO04uV2FybmluZz1paDtOLkF0UnVsZT1hbDtOLlJlc3VsdD1zaDtOLklucHV0PWFoO04uUnVsZT1vbDtOLlJvb3Q9bGw7Ti5Ob2RlPXVoO2VoLnJlZ2lzdGVyUG9zdGNzcyhOKTt1bC5leHBvcnRzPU47Ti5kZWZhdWx0PU59KTt2YXIganI9UygoVXIsZmwpPT57XCJ1c2Ugc3RyaWN0XCI7VXIuX19lc01vZHVsZT0hMDtVci5kZWZhdWx0PXBoO2Z1bmN0aW9uIGZoKHQpe2Zvcih2YXIgZT10LnRvTG93ZXJDYXNlKCkscj1cIlwiLG49ITEsaT0wO2k8NiYmZVtpXSE9PXZvaWQgMDtpKyspe3ZhciBhPWUuY2hhckNvZGVBdChpKSxzPWE+PTk3JiZhPD0xMDJ8fGE+PTQ4JiZhPD01NztpZihuPWE9PT0zMiwhcylicmVhaztyKz1lW2ldfWlmKHIubGVuZ3RoIT09MCl7dmFyIG89cGFyc2VJbnQociwxNiksbD1vPj01NTI5NiYmbzw9NTczNDM7cmV0dXJuIGx8fG89PT0wfHxvPjExMTQxMTE/W1wiXFx1RkZGRFwiLHIubGVuZ3RoKyhuPzE6MCldOltTdHJpbmcuZnJvbUNvZGVQb2ludChvKSxyLmxlbmd0aCsobj8xOjApXX19dmFyIGNoPS9cXFxcLztmdW5jdGlvbiBwaCh0KXt2YXIgZT1jaC50ZXN0KHQpO2lmKCFlKXJldHVybiB0O2Zvcih2YXIgcj1cIlwiLG49MDtuPHQubGVuZ3RoO24rKyl7aWYodFtuXT09PVwiXFxcXFwiKXt2YXIgaT1maCh0LnNsaWNlKG4rMSxuKzcpKTtpZihpIT09dm9pZCAwKXtyKz1pWzBdLG4rPWlbMV07Y29udGludWV9aWYodFtuKzFdPT09XCJcXFxcXCIpe3IrPVwiXFxcXFwiLG4rKztjb250aW51ZX10Lmxlbmd0aD09PW4rMSYmKHIrPXRbbl0pO2NvbnRpbnVlfXIrPXRbbl19cmV0dXJuIHJ9ZmwuZXhwb3J0cz1Vci5kZWZhdWx0fSk7dmFyIHBsPVMoKHpyLGNsKT0+e1widXNlIHN0cmljdFwiO3pyLl9fZXNNb2R1bGU9ITA7enIuZGVmYXVsdD1kaDtmdW5jdGlvbiBkaCh0KXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCxyPW5ldyBBcnJheShlPjE/ZS0xOjApLG49MTtuPGU7bisrKXJbbi0xXT1hcmd1bWVudHNbbl07Zm9yKDtyLmxlbmd0aD4wOyl7dmFyIGk9ci5zaGlmdCgpO2lmKCF0W2ldKXJldHVybjt0PXRbaV19cmV0dXJuIHR9Y2wuZXhwb3J0cz16ci5kZWZhdWx0fSk7dmFyIGhsPVMoKFZyLGRsKT0+e1widXNlIHN0cmljdFwiO1ZyLl9fZXNNb2R1bGU9ITA7VnIuZGVmYXVsdD1oaDtmdW5jdGlvbiBoaCh0KXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCxyPW5ldyBBcnJheShlPjE/ZS0xOjApLG49MTtuPGU7bisrKXJbbi0xXT1hcmd1bWVudHNbbl07Zm9yKDtyLmxlbmd0aD4wOyl7dmFyIGk9ci5zaGlmdCgpO3RbaV18fCh0W2ldPXt9KSx0PXRbaV19fWRsLmV4cG9ydHM9VnIuZGVmYXVsdH0pO3ZhciBnbD1TKChXcixtbCk9PntcInVzZSBzdHJpY3RcIjtXci5fX2VzTW9kdWxlPSEwO1dyLmRlZmF1bHQ9bWg7ZnVuY3Rpb24gbWgodCl7Zm9yKHZhciBlPVwiXCIscj10LmluZGV4T2YoXCIvKlwiKSxuPTA7cj49MDspe2U9ZSt0LnNsaWNlKG4scik7dmFyIGk9dC5pbmRleE9mKFwiKi9cIixyKzIpO2lmKGk8MClyZXR1cm4gZTtuPWkrMixyPXQuaW5kZXhPZihcIi8qXCIsbil9cmV0dXJuIGU9ZSt0LnNsaWNlKG4pLGV9bWwuZXhwb3J0cz1Xci5kZWZhdWx0fSk7dmFyIEZ0PVMoeWU9PntcInVzZSBzdHJpY3RcIjt5ZS5fX2VzTW9kdWxlPSEwO3llLnVuZXNjPXllLnN0cmlwQ29tbWVudHM9eWUuZ2V0UHJvcD15ZS5lbnN1cmVPYmplY3Q9dm9pZCAwO3ZhciBnaD1CcihqcigpKTt5ZS51bmVzYz1naC5kZWZhdWx0O3ZhciB5aD1CcihwbCgpKTt5ZS5nZXRQcm9wPXloLmRlZmF1bHQ7dmFyIHZoPUJyKGhsKCkpO3llLmVuc3VyZU9iamVjdD12aC5kZWZhdWx0O3ZhciB3aD1CcihnbCgpKTt5ZS5zdHJpcENvbW1lbnRzPXdoLmRlZmF1bHQ7ZnVuY3Rpb24gQnIodCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OntkZWZhdWx0OnR9fX0pO3ZhciBPZT1TKChMdCx3bCk9PntcInVzZSBzdHJpY3RcIjtMdC5fX2VzTW9kdWxlPSEwO0x0LmRlZmF1bHQ9dm9pZCAwO3ZhciB5bD1GdCgpO2Z1bmN0aW9uIHZsKHQsZSl7Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe3ZhciBuPWVbcl07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbiYmKG4ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG4ua2V5LG4pfX1mdW5jdGlvbiBiaCh0LGUscil7cmV0dXJuIGUmJnZsKHQucHJvdG90eXBlLGUpLHImJnZsKHQsciksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSx0fXZhciB4aD1mdW5jdGlvbiB0KGUscil7aWYodHlwZW9mIGUhPVwib2JqZWN0XCJ8fGU9PT1udWxsKXJldHVybiBlO3ZhciBuPW5ldyBlLmNvbnN0cnVjdG9yO2Zvcih2YXIgaSBpbiBlKWlmKCEhZS5oYXNPd25Qcm9wZXJ0eShpKSl7dmFyIGE9ZVtpXSxzPXR5cGVvZiBhO2k9PT1cInBhcmVudFwiJiZzPT09XCJvYmplY3RcIj9yJiYobltpXT1yKTphIGluc3RhbmNlb2YgQXJyYXk/bltpXT1hLm1hcChmdW5jdGlvbihvKXtyZXR1cm4gdChvLG4pfSk6bltpXT10KGEsbil9cmV0dXJuIG59LFNoPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChyKXtyPT09dm9pZCAwJiYocj17fSksT2JqZWN0LmFzc2lnbih0aGlzLHIpLHRoaXMuc3BhY2VzPXRoaXMuc3BhY2VzfHx7fSx0aGlzLnNwYWNlcy5iZWZvcmU9dGhpcy5zcGFjZXMuYmVmb3JlfHxcIlwiLHRoaXMuc3BhY2VzLmFmdGVyPXRoaXMuc3BhY2VzLmFmdGVyfHxcIlwifXZhciBlPXQucHJvdG90eXBlO3JldHVybiBlLnJlbW92ZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnBhcmVudCYmdGhpcy5wYXJlbnQucmVtb3ZlQ2hpbGQodGhpcyksdGhpcy5wYXJlbnQ9dm9pZCAwLHRoaXN9LGUucmVwbGFjZVdpdGg9ZnVuY3Rpb24oKXtpZih0aGlzLnBhcmVudCl7Zm9yKHZhciBuIGluIGFyZ3VtZW50cyl0aGlzLnBhcmVudC5pbnNlcnRCZWZvcmUodGhpcyxhcmd1bWVudHNbbl0pO3RoaXMucmVtb3ZlKCl9cmV0dXJuIHRoaXN9LGUubmV4dD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnBhcmVudC5hdCh0aGlzLnBhcmVudC5pbmRleCh0aGlzKSsxKX0sZS5wcmV2PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGFyZW50LmF0KHRoaXMucGFyZW50LmluZGV4KHRoaXMpLTEpfSxlLmNsb25lPWZ1bmN0aW9uKG4pe249PT12b2lkIDAmJihuPXt9KTt2YXIgaT14aCh0aGlzKTtmb3IodmFyIGEgaW4gbilpW2FdPW5bYV07cmV0dXJuIGl9LGUuYXBwZW5kVG9Qcm9wZXJ0eUFuZEVzY2FwZT1mdW5jdGlvbihuLGksYSl7dGhpcy5yYXdzfHwodGhpcy5yYXdzPXt9KTt2YXIgcz10aGlzW25dLG89dGhpcy5yYXdzW25dO3RoaXNbbl09cytpLG98fGEhPT1pP3RoaXMucmF3c1tuXT0ob3x8cykrYTpkZWxldGUgdGhpcy5yYXdzW25dfSxlLnNldFByb3BlcnR5QW5kRXNjYXBlPWZ1bmN0aW9uKG4saSxhKXt0aGlzLnJhd3N8fCh0aGlzLnJhd3M9e30pLHRoaXNbbl09aSx0aGlzLnJhd3Nbbl09YX0sZS5zZXRQcm9wZXJ0eVdpdGhvdXRFc2NhcGU9ZnVuY3Rpb24obixpKXt0aGlzW25dPWksdGhpcy5yYXdzJiZkZWxldGUgdGhpcy5yYXdzW25dfSxlLmlzQXRQb3NpdGlvbj1mdW5jdGlvbihuLGkpe2lmKHRoaXMuc291cmNlJiZ0aGlzLnNvdXJjZS5zdGFydCYmdGhpcy5zb3VyY2UuZW5kKXJldHVybiEodGhpcy5zb3VyY2Uuc3RhcnQubGluZT5ufHx0aGlzLnNvdXJjZS5lbmQubGluZTxufHx0aGlzLnNvdXJjZS5zdGFydC5saW5lPT09biYmdGhpcy5zb3VyY2Uuc3RhcnQuY29sdW1uPml8fHRoaXMuc291cmNlLmVuZC5saW5lPT09biYmdGhpcy5zb3VyY2UuZW5kLmNvbHVtbjxpKX0sZS5zdHJpbmdpZnlQcm9wZXJ0eT1mdW5jdGlvbihuKXtyZXR1cm4gdGhpcy5yYXdzJiZ0aGlzLnJhd3Nbbl18fHRoaXNbbl19LGUudmFsdWVUb1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBTdHJpbmcodGhpcy5zdHJpbmdpZnlQcm9wZXJ0eShcInZhbHVlXCIpKX0sZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVyblt0aGlzLnJhd1NwYWNlQmVmb3JlLHRoaXMudmFsdWVUb1N0cmluZygpLHRoaXMucmF3U3BhY2VBZnRlcl0uam9pbihcIlwiKX0sYmgodCxbe2tleTpcInJhd1NwYWNlQmVmb3JlXCIsZ2V0OmZ1bmN0aW9uKCl7dmFyIG49dGhpcy5yYXdzJiZ0aGlzLnJhd3Muc3BhY2VzJiZ0aGlzLnJhd3Muc3BhY2VzLmJlZm9yZTtyZXR1cm4gbj09PXZvaWQgMCYmKG49dGhpcy5zcGFjZXMmJnRoaXMuc3BhY2VzLmJlZm9yZSksbnx8XCJcIn0sc2V0OmZ1bmN0aW9uKG4peygwLHlsLmVuc3VyZU9iamVjdCkodGhpcyxcInJhd3NcIixcInNwYWNlc1wiKSx0aGlzLnJhd3Muc3BhY2VzLmJlZm9yZT1ufX0se2tleTpcInJhd1NwYWNlQWZ0ZXJcIixnZXQ6ZnVuY3Rpb24oKXt2YXIgbj10aGlzLnJhd3MmJnRoaXMucmF3cy5zcGFjZXMmJnRoaXMucmF3cy5zcGFjZXMuYWZ0ZXI7cmV0dXJuIG49PT12b2lkIDAmJihuPXRoaXMuc3BhY2VzLmFmdGVyKSxufHxcIlwifSxzZXQ6ZnVuY3Rpb24obil7KDAseWwuZW5zdXJlT2JqZWN0KSh0aGlzLFwicmF3c1wiLFwic3BhY2VzXCIpLHRoaXMucmF3cy5zcGFjZXMuYWZ0ZXI9bn19XSksdH0oKTtMdC5kZWZhdWx0PVNoO3dsLmV4cG9ydHM9THQuZGVmYXVsdH0pO3ZhciBKPVMoVT0+e1widXNlIHN0cmljdFwiO1UuX19lc01vZHVsZT0hMDtVLlVOSVZFUlNBTD1VLlRBRz1VLlNUUklORz1VLlNFTEVDVE9SPVUuUk9PVD1VLlBTRVVETz1VLk5FU1RJTkc9VS5JRD1VLkNPTU1FTlQ9VS5DT01CSU5BVE9SPVUuQ0xBU1M9VS5BVFRSSUJVVEU9dm9pZCAwO3ZhciBraD1cInRhZ1wiO1UuVEFHPWtoO3ZhciBPaD1cInN0cmluZ1wiO1UuU1RSSU5HPU9oO3ZhciBFaD1cInNlbGVjdG9yXCI7VS5TRUxFQ1RPUj1FaDt2YXIgQ2g9XCJyb290XCI7VS5ST09UPUNoO3ZhciBBaD1cInBzZXVkb1wiO1UuUFNFVURPPUFoO3ZhciBfaD1cIm5lc3RpbmdcIjtVLk5FU1RJTkc9X2g7dmFyIFRoPVwiaWRcIjtVLklEPVRoO3ZhciBQaD1cImNvbW1lbnRcIjtVLkNPTU1FTlQ9UGg7dmFyIEloPVwiY29tYmluYXRvclwiO1UuQ09NQklOQVRPUj1JaDt2YXIgUmg9XCJjbGFzc1wiO1UuQ0xBU1M9Umg7dmFyIERoPVwiYXR0cmlidXRlXCI7VS5BVFRSSUJVVEU9RGg7dmFyIE1oPVwidW5pdmVyc2FsXCI7VS5VTklWRVJTQUw9TWh9KTt2YXIgR3I9UygoTnQsa2wpPT57XCJ1c2Ugc3RyaWN0XCI7TnQuX19lc01vZHVsZT0hMDtOdC5kZWZhdWx0PXZvaWQgMDt2YXIgRmg9TmgoT2UoKSksRWU9TGgoSigpKTtmdW5jdGlvbiBTbCh0KXtpZih0eXBlb2YgV2Vha01hcCE9XCJmdW5jdGlvblwiKXJldHVybiBudWxsO3ZhciBlPW5ldyBXZWFrTWFwLHI9bmV3IFdlYWtNYXA7cmV0dXJuKFNsPWZ1bmN0aW9uKGkpe3JldHVybiBpP3I6ZX0pKHQpfWZ1bmN0aW9uIExoKHQsZSl7aWYoIWUmJnQmJnQuX19lc01vZHVsZSlyZXR1cm4gdDtpZih0PT09bnVsbHx8dHlwZW9mIHQhPVwib2JqZWN0XCImJnR5cGVvZiB0IT1cImZ1bmN0aW9uXCIpcmV0dXJue2RlZmF1bHQ6dH07dmFyIHI9U2woZSk7aWYociYmci5oYXModCkpcmV0dXJuIHIuZ2V0KHQpO3ZhciBuPXt9LGk9T2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO2Zvcih2YXIgYSBpbiB0KWlmKGEhPT1cImRlZmF1bHRcIiYmT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsYSkpe3ZhciBzPWk/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LGEpOm51bGw7cyYmKHMuZ2V0fHxzLnNldCk/T2JqZWN0LmRlZmluZVByb3BlcnR5KG4sYSxzKTpuW2FdPXRbYV19cmV0dXJuIG4uZGVmYXVsdD10LHImJnIuc2V0KHQsbiksbn1mdW5jdGlvbiBOaCh0KXtyZXR1cm4gdCYmdC5fX2VzTW9kdWxlP3Q6e2RlZmF1bHQ6dH19ZnVuY3Rpb24gcWgodCxlKXt2YXIgcj10eXBlb2YgU3ltYm9sPFwidVwiJiZ0W1N5bWJvbC5pdGVyYXRvcl18fHRbXCJAQGl0ZXJhdG9yXCJdO2lmKHIpcmV0dXJuKHI9ci5jYWxsKHQpKS5uZXh0LmJpbmQocik7aWYoQXJyYXkuaXNBcnJheSh0KXx8KHI9JGgodCkpfHxlJiZ0JiZ0eXBlb2YgdC5sZW5ndGg9PVwibnVtYmVyXCIpe3ImJih0PXIpO3ZhciBuPTA7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG4+PXQubGVuZ3RoP3tkb25lOiEwfTp7ZG9uZTohMSx2YWx1ZTp0W24rK119fX10aHJvdyBuZXcgVHlwZUVycm9yKGBJbnZhbGlkIGF0dGVtcHQgdG8gaXRlcmF0ZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuYCl9ZnVuY3Rpb24gJGgodCxlKXtpZighIXQpe2lmKHR5cGVvZiB0PT1cInN0cmluZ1wiKXJldHVybiBibCh0LGUpO3ZhciByPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KS5zbGljZSg4LC0xKTtpZihyPT09XCJPYmplY3RcIiYmdC5jb25zdHJ1Y3RvciYmKHI9dC5jb25zdHJ1Y3Rvci5uYW1lKSxyPT09XCJNYXBcInx8cj09PVwiU2V0XCIpcmV0dXJuIEFycmF5LmZyb20odCk7aWYocj09PVwiQXJndW1lbnRzXCJ8fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KHIpKXJldHVybiBibCh0LGUpfX1mdW5jdGlvbiBibCh0LGUpeyhlPT1udWxsfHxlPnQubGVuZ3RoKSYmKGU9dC5sZW5ndGgpO2Zvcih2YXIgcj0wLG49bmV3IEFycmF5KGUpO3I8ZTtyKyspbltyXT10W3JdO3JldHVybiBufWZ1bmN0aW9uIHhsKHQsZSl7Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe3ZhciBuPWVbcl07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbiYmKG4ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG4ua2V5LG4pfX1mdW5jdGlvbiBVaCh0LGUscil7cmV0dXJuIGUmJnhsKHQucHJvdG90eXBlLGUpLHImJnhsKHQsciksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSx0fWZ1bmN0aW9uIGpoKHQsZSl7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLnByb3RvdHlwZSksdC5wcm90b3R5cGUuY29uc3RydWN0b3I9dCxiaSh0LGUpfWZ1bmN0aW9uIGJpKHQsZSl7cmV0dXJuIGJpPU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpOmZ1bmN0aW9uKG4saSl7cmV0dXJuIG4uX19wcm90b19fPWksbn0sYmkodCxlKX12YXIgemg9ZnVuY3Rpb24odCl7amgoZSx0KTtmdW5jdGlvbiBlKG4pe3ZhciBpO3JldHVybiBpPXQuY2FsbCh0aGlzLG4pfHx0aGlzLGkubm9kZXN8fChpLm5vZGVzPVtdKSxpfXZhciByPWUucHJvdG90eXBlO3JldHVybiByLmFwcGVuZD1mdW5jdGlvbihpKXtyZXR1cm4gaS5wYXJlbnQ9dGhpcyx0aGlzLm5vZGVzLnB1c2goaSksdGhpc30sci5wcmVwZW5kPWZ1bmN0aW9uKGkpe3JldHVybiBpLnBhcmVudD10aGlzLHRoaXMubm9kZXMudW5zaGlmdChpKSx0aGlzfSxyLmF0PWZ1bmN0aW9uKGkpe3JldHVybiB0aGlzLm5vZGVzW2ldfSxyLmluZGV4PWZ1bmN0aW9uKGkpe3JldHVybiB0eXBlb2YgaT09XCJudW1iZXJcIj9pOnRoaXMubm9kZXMuaW5kZXhPZihpKX0sci5yZW1vdmVDaGlsZD1mdW5jdGlvbihpKXtpPXRoaXMuaW5kZXgoaSksdGhpcy5hdChpKS5wYXJlbnQ9dm9pZCAwLHRoaXMubm9kZXMuc3BsaWNlKGksMSk7dmFyIGE7Zm9yKHZhciBzIGluIHRoaXMuaW5kZXhlcylhPXRoaXMuaW5kZXhlc1tzXSxhPj1pJiYodGhpcy5pbmRleGVzW3NdPWEtMSk7cmV0dXJuIHRoaXN9LHIucmVtb3ZlQWxsPWZ1bmN0aW9uKCl7Zm9yKHZhciBpPXFoKHRoaXMubm9kZXMpLGE7IShhPWkoKSkuZG9uZTspe3ZhciBzPWEudmFsdWU7cy5wYXJlbnQ9dm9pZCAwfXJldHVybiB0aGlzLm5vZGVzPVtdLHRoaXN9LHIuZW1wdHk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yZW1vdmVBbGwoKX0sci5pbnNlcnRBZnRlcj1mdW5jdGlvbihpLGEpe2EucGFyZW50PXRoaXM7dmFyIHM9dGhpcy5pbmRleChpKTt0aGlzLm5vZGVzLnNwbGljZShzKzEsMCxhKSxhLnBhcmVudD10aGlzO3ZhciBvO2Zvcih2YXIgbCBpbiB0aGlzLmluZGV4ZXMpbz10aGlzLmluZGV4ZXNbbF0sczw9byYmKHRoaXMuaW5kZXhlc1tsXT1vKzEpO3JldHVybiB0aGlzfSxyLmluc2VydEJlZm9yZT1mdW5jdGlvbihpLGEpe2EucGFyZW50PXRoaXM7dmFyIHM9dGhpcy5pbmRleChpKTt0aGlzLm5vZGVzLnNwbGljZShzLDAsYSksYS5wYXJlbnQ9dGhpczt2YXIgbztmb3IodmFyIGwgaW4gdGhpcy5pbmRleGVzKW89dGhpcy5pbmRleGVzW2xdLG88PXMmJih0aGlzLmluZGV4ZXNbbF09bysxKTtyZXR1cm4gdGhpc30sci5fZmluZENoaWxkQXRQb3NpdGlvbj1mdW5jdGlvbihpLGEpe3ZhciBzPXZvaWQgMDtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKG8pe2lmKG8uYXRQb3NpdGlvbil7dmFyIGw9by5hdFBvc2l0aW9uKGksYSk7aWYobClyZXR1cm4gcz1sLCExfWVsc2UgaWYoby5pc0F0UG9zaXRpb24oaSxhKSlyZXR1cm4gcz1vLCExfSksc30sci5hdFBvc2l0aW9uPWZ1bmN0aW9uKGksYSl7aWYodGhpcy5pc0F0UG9zaXRpb24oaSxhKSlyZXR1cm4gdGhpcy5fZmluZENoaWxkQXRQb3NpdGlvbihpLGEpfHx0aGlzfSxyLl9pbmZlckVuZFBvc2l0aW9uPWZ1bmN0aW9uKCl7dGhpcy5sYXN0JiZ0aGlzLmxhc3Quc291cmNlJiZ0aGlzLmxhc3Quc291cmNlLmVuZCYmKHRoaXMuc291cmNlPXRoaXMuc291cmNlfHx7fSx0aGlzLnNvdXJjZS5lbmQ9dGhpcy5zb3VyY2UuZW5kfHx7fSxPYmplY3QuYXNzaWduKHRoaXMuc291cmNlLmVuZCx0aGlzLmxhc3Quc291cmNlLmVuZCkpfSxyLmVhY2g9ZnVuY3Rpb24oaSl7dGhpcy5sYXN0RWFjaHx8KHRoaXMubGFzdEVhY2g9MCksdGhpcy5pbmRleGVzfHwodGhpcy5pbmRleGVzPXt9KSx0aGlzLmxhc3RFYWNoKys7dmFyIGE9dGhpcy5sYXN0RWFjaDtpZih0aGlzLmluZGV4ZXNbYV09MCwhIXRoaXMubGVuZ3RoKXtmb3IodmFyIHMsbzt0aGlzLmluZGV4ZXNbYV08dGhpcy5sZW5ndGgmJihzPXRoaXMuaW5kZXhlc1thXSxvPWkodGhpcy5hdChzKSxzKSxvIT09ITEpOyl0aGlzLmluZGV4ZXNbYV0rPTE7aWYoZGVsZXRlIHRoaXMuaW5kZXhlc1thXSxvPT09ITEpcmV0dXJuITF9fSxyLndhbGs9ZnVuY3Rpb24oaSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihhLHMpe3ZhciBvPWkoYSxzKTtpZihvIT09ITEmJmEubGVuZ3RoJiYobz1hLndhbGsoaSkpLG89PT0hMSlyZXR1cm4hMX0pfSxyLndhbGtBdHRyaWJ1dGVzPWZ1bmN0aW9uKGkpe3ZhciBhPXRoaXM7cmV0dXJuIHRoaXMud2FsayhmdW5jdGlvbihzKXtpZihzLnR5cGU9PT1FZS5BVFRSSUJVVEUpcmV0dXJuIGkuY2FsbChhLHMpfSl9LHIud2Fsa0NsYXNzZXM9ZnVuY3Rpb24oaSl7dmFyIGE9dGhpcztyZXR1cm4gdGhpcy53YWxrKGZ1bmN0aW9uKHMpe2lmKHMudHlwZT09PUVlLkNMQVNTKXJldHVybiBpLmNhbGwoYSxzKX0pfSxyLndhbGtDb21iaW5hdG9ycz1mdW5jdGlvbihpKXt2YXIgYT10aGlzO3JldHVybiB0aGlzLndhbGsoZnVuY3Rpb24ocyl7aWYocy50eXBlPT09RWUuQ09NQklOQVRPUilyZXR1cm4gaS5jYWxsKGEscyl9KX0sci53YWxrQ29tbWVudHM9ZnVuY3Rpb24oaSl7dmFyIGE9dGhpcztyZXR1cm4gdGhpcy53YWxrKGZ1bmN0aW9uKHMpe2lmKHMudHlwZT09PUVlLkNPTU1FTlQpcmV0dXJuIGkuY2FsbChhLHMpfSl9LHIud2Fsa0lkcz1mdW5jdGlvbihpKXt2YXIgYT10aGlzO3JldHVybiB0aGlzLndhbGsoZnVuY3Rpb24ocyl7aWYocy50eXBlPT09RWUuSUQpcmV0dXJuIGkuY2FsbChhLHMpfSl9LHIud2Fsa05lc3Rpbmc9ZnVuY3Rpb24oaSl7dmFyIGE9dGhpcztyZXR1cm4gdGhpcy53YWxrKGZ1bmN0aW9uKHMpe2lmKHMudHlwZT09PUVlLk5FU1RJTkcpcmV0dXJuIGkuY2FsbChhLHMpfSl9LHIud2Fsa1BzZXVkb3M9ZnVuY3Rpb24oaSl7dmFyIGE9dGhpcztyZXR1cm4gdGhpcy53YWxrKGZ1bmN0aW9uKHMpe2lmKHMudHlwZT09PUVlLlBTRVVETylyZXR1cm4gaS5jYWxsKGEscyl9KX0sci53YWxrVGFncz1mdW5jdGlvbihpKXt2YXIgYT10aGlzO3JldHVybiB0aGlzLndhbGsoZnVuY3Rpb24ocyl7aWYocy50eXBlPT09RWUuVEFHKXJldHVybiBpLmNhbGwoYSxzKX0pfSxyLndhbGtVbml2ZXJzYWxzPWZ1bmN0aW9uKGkpe3ZhciBhPXRoaXM7cmV0dXJuIHRoaXMud2FsayhmdW5jdGlvbihzKXtpZihzLnR5cGU9PT1FZS5VTklWRVJTQUwpcmV0dXJuIGkuY2FsbChhLHMpfSl9LHIuc3BsaXQ9ZnVuY3Rpb24oaSl7dmFyIGE9dGhpcyxzPVtdO3JldHVybiB0aGlzLnJlZHVjZShmdW5jdGlvbihvLGwsdSl7dmFyIGY9aS5jYWxsKGEsbCk7cmV0dXJuIHMucHVzaChsKSxmPyhvLnB1c2gocykscz1bXSk6dT09PWEubGVuZ3RoLTEmJm8ucHVzaChzKSxvfSxbXSl9LHIubWFwPWZ1bmN0aW9uKGkpe3JldHVybiB0aGlzLm5vZGVzLm1hcChpKX0sci5yZWR1Y2U9ZnVuY3Rpb24oaSxhKXtyZXR1cm4gdGhpcy5ub2Rlcy5yZWR1Y2UoaSxhKX0sci5ldmVyeT1mdW5jdGlvbihpKXtyZXR1cm4gdGhpcy5ub2Rlcy5ldmVyeShpKX0sci5zb21lPWZ1bmN0aW9uKGkpe3JldHVybiB0aGlzLm5vZGVzLnNvbWUoaSl9LHIuZmlsdGVyPWZ1bmN0aW9uKGkpe3JldHVybiB0aGlzLm5vZGVzLmZpbHRlcihpKX0sci5zb3J0PWZ1bmN0aW9uKGkpe3JldHVybiB0aGlzLm5vZGVzLnNvcnQoaSl9LHIudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoU3RyaW5nKS5qb2luKFwiXCIpfSxVaChlLFt7a2V5OlwiZmlyc3RcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hdCgwKX19LHtrZXk6XCJsYXN0XCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYXQodGhpcy5sZW5ndGgtMSl9fSx7a2V5OlwibGVuZ3RoXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubm9kZXMubGVuZ3RofX1dKSxlfShGaC5kZWZhdWx0KTtOdC5kZWZhdWx0PXpoO2tsLmV4cG9ydHM9TnQuZGVmYXVsdH0pO3ZhciBTaT1TKChxdCxFbCk9PntcInVzZSBzdHJpY3RcIjtxdC5fX2VzTW9kdWxlPSEwO3F0LmRlZmF1bHQ9dm9pZCAwO3ZhciBWaD1CaChHcigpKSxXaD1KKCk7ZnVuY3Rpb24gQmgodCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OntkZWZhdWx0OnR9fWZ1bmN0aW9uIE9sKHQsZSl7Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe3ZhciBuPWVbcl07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbiYmKG4ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG4ua2V5LG4pfX1mdW5jdGlvbiBHaCh0LGUscil7cmV0dXJuIGUmJk9sKHQucHJvdG90eXBlLGUpLHImJk9sKHQsciksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSx0fWZ1bmN0aW9uIFloKHQsZSl7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLnByb3RvdHlwZSksdC5wcm90b3R5cGUuY29uc3RydWN0b3I9dCx4aSh0LGUpfWZ1bmN0aW9uIHhpKHQsZSl7cmV0dXJuIHhpPU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpOmZ1bmN0aW9uKG4saSl7cmV0dXJuIG4uX19wcm90b19fPWksbn0seGkodCxlKX12YXIgSGg9ZnVuY3Rpb24odCl7WWgoZSx0KTtmdW5jdGlvbiBlKG4pe3ZhciBpO3JldHVybiBpPXQuY2FsbCh0aGlzLG4pfHx0aGlzLGkudHlwZT1XaC5ST09ULGl9dmFyIHI9ZS5wcm90b3R5cGU7cmV0dXJuIHIudG9TdHJpbmc9ZnVuY3Rpb24oKXt2YXIgaT10aGlzLnJlZHVjZShmdW5jdGlvbihhLHMpe3JldHVybiBhLnB1c2goU3RyaW5nKHMpKSxhfSxbXSkuam9pbihcIixcIik7cmV0dXJuIHRoaXMudHJhaWxpbmdDb21tYT9pK1wiLFwiOml9LHIuZXJyb3I9ZnVuY3Rpb24oaSxhKXtyZXR1cm4gdGhpcy5fZXJyb3I/dGhpcy5fZXJyb3IoaSxhKTpuZXcgRXJyb3IoaSl9LEdoKGUsW3trZXk6XCJlcnJvckdlbmVyYXRvclwiLHNldDpmdW5jdGlvbihpKXt0aGlzLl9lcnJvcj1pfX1dKSxlfShWaC5kZWZhdWx0KTtxdC5kZWZhdWx0PUhoO0VsLmV4cG9ydHM9cXQuZGVmYXVsdH0pO3ZhciBPaT1TKCgkdCxDbCk9PntcInVzZSBzdHJpY3RcIjskdC5fX2VzTW9kdWxlPSEwOyR0LmRlZmF1bHQ9dm9pZCAwO3ZhciBRaD1YaChHcigpKSxKaD1KKCk7ZnVuY3Rpb24gWGgodCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OntkZWZhdWx0OnR9fWZ1bmN0aW9uIEtoKHQsZSl7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLnByb3RvdHlwZSksdC5wcm90b3R5cGUuY29uc3RydWN0b3I9dCxraSh0LGUpfWZ1bmN0aW9uIGtpKHQsZSl7cmV0dXJuIGtpPU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpOmZ1bmN0aW9uKG4saSl7cmV0dXJuIG4uX19wcm90b19fPWksbn0sa2kodCxlKX12YXIgWmg9ZnVuY3Rpb24odCl7S2goZSx0KTtmdW5jdGlvbiBlKHIpe3ZhciBuO3JldHVybiBuPXQuY2FsbCh0aGlzLHIpfHx0aGlzLG4udHlwZT1KaC5TRUxFQ1RPUixufXJldHVybiBlfShRaC5kZWZhdWx0KTskdC5kZWZhdWx0PVpoO0NsLmV4cG9ydHM9JHQuZGVmYXVsdH0pO3ZhciBZcj1TKChFeCxBbCk9PntcInVzZSBzdHJpY3RcIjt2YXIgZW09e30sdG09ZW0uaGFzT3duUHJvcGVydHkscm09ZnVuY3Rpb24oZSxyKXtpZighZSlyZXR1cm4gcjt2YXIgbj17fTtmb3IodmFyIGkgaW4gciluW2ldPXRtLmNhbGwoZSxpKT9lW2ldOnJbaV07cmV0dXJuIG59LG5tPS9bIC0sXFwuXFwvOi1AXFxbLVxcXmBcXHstfl0vLGltPS9bIC0sXFwuXFwvOi1AXFxbXFxdXFxeYFxcey1+XS8sc209LyhefFxcXFwrKT8oXFxcXFtBLUYwLTldezEsNn0pXFx4MjAoPyFbYS1mQS1GMC05XFx4MjBdKS9nLEVpPWZ1bmN0aW9uIHQoZSxyKXtyPXJtKHIsdC5vcHRpb25zKSxyLnF1b3RlcyE9XCJzaW5nbGVcIiYmci5xdW90ZXMhPVwiZG91YmxlXCImJihyLnF1b3Rlcz1cInNpbmdsZVwiKTtmb3IodmFyIG49ci5xdW90ZXM9PVwiZG91YmxlXCI/J1wiJzpcIidcIixpPXIuaXNJZGVudGlmaWVyLGE9ZS5jaGFyQXQoMCkscz1cIlwiLG89MCxsPWUubGVuZ3RoO288bDspe3ZhciB1PWUuY2hhckF0KG8rKyksZj11LmNoYXJDb2RlQXQoKSxwPXZvaWQgMDtpZihmPDMyfHxmPjEyNil7aWYoZj49NTUyOTYmJmY8PTU2MzE5JiZvPGwpe3ZhciBjPWUuY2hhckNvZGVBdChvKyspOyhjJjY0NTEyKT09NTYzMjA/Zj0oKGYmMTAyMyk8PDEwKSsoYyYxMDIzKSs2NTUzNjpvLS19cD1cIlxcXFxcIitmLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpK1wiIFwifWVsc2Ugci5lc2NhcGVFdmVyeXRoaW5nP25tLnRlc3QodSk/cD1cIlxcXFxcIit1OnA9XCJcXFxcXCIrZi50b1N0cmluZygxNikudG9VcHBlckNhc2UoKStcIiBcIjovW1xcdFxcblxcZlxcclxceDBCXS8udGVzdCh1KT9wPVwiXFxcXFwiK2YudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCkrXCIgXCI6dT09XCJcXFxcXCJ8fCFpJiYodT09J1wiJyYmbj09dXx8dT09XCInXCImJm49PXUpfHxpJiZpbS50ZXN0KHUpP3A9XCJcXFxcXCIrdTpwPXU7cys9cH1yZXR1cm4gaSYmKC9eLVstXFxkXS8udGVzdChzKT9zPVwiXFxcXC1cIitzLnNsaWNlKDEpOi9cXGQvLnRlc3QoYSkmJihzPVwiXFxcXDNcIithK1wiIFwiK3Muc2xpY2UoMSkpKSxzPXMucmVwbGFjZShzbSxmdW5jdGlvbihkLGgseSl7cmV0dXJuIGgmJmgubGVuZ3RoJTI/ZDooaHx8XCJcIikreX0pLCFpJiZyLndyYXA/bitzK246c307RWkub3B0aW9ucz17ZXNjYXBlRXZlcnl0aGluZzohMSxpc0lkZW50aWZpZXI6ITEscXVvdGVzOlwic2luZ2xlXCIsd3JhcDohMX07RWkudmVyc2lvbj1cIjMuMC4wXCI7QWwuZXhwb3J0cz1FaX0pO3ZhciBBaT1TKChVdCxQbCk9PntcInVzZSBzdHJpY3RcIjtVdC5fX2VzTW9kdWxlPSEwO1V0LmRlZmF1bHQ9dm9pZCAwO3ZhciBhbT1UbChZcigpKSxvbT1GdCgpLGxtPVRsKE9lKCkpLHVtPUooKTtmdW5jdGlvbiBUbCh0KXtyZXR1cm4gdCYmdC5fX2VzTW9kdWxlP3Q6e2RlZmF1bHQ6dH19ZnVuY3Rpb24gX2wodCxlKXtmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrKyl7dmFyIG49ZVtyXTtuLmVudW1lcmFibGU9bi5lbnVtZXJhYmxlfHwhMSxuLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBuJiYobi53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsbi5rZXksbil9fWZ1bmN0aW9uIGZtKHQsZSxyKXtyZXR1cm4gZSYmX2wodC5wcm90b3R5cGUsZSksciYmX2wodCxyKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcInByb3RvdHlwZVwiLHt3cml0YWJsZTohMX0pLHR9ZnVuY3Rpb24gY20odCxlKXt0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUucHJvdG90eXBlKSx0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj10LENpKHQsZSl9ZnVuY3Rpb24gQ2kodCxlKXtyZXR1cm4gQ2k9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCk6ZnVuY3Rpb24obixpKXtyZXR1cm4gbi5fX3Byb3RvX189aSxufSxDaSh0LGUpfXZhciBwbT1mdW5jdGlvbih0KXtjbShlLHQpO2Z1bmN0aW9uIGUobil7dmFyIGk7cmV0dXJuIGk9dC5jYWxsKHRoaXMsbil8fHRoaXMsaS50eXBlPXVtLkNMQVNTLGkuX2NvbnN0cnVjdGVkPSEwLGl9dmFyIHI9ZS5wcm90b3R5cGU7cmV0dXJuIHIudmFsdWVUb1N0cmluZz1mdW5jdGlvbigpe3JldHVyblwiLlwiK3QucHJvdG90eXBlLnZhbHVlVG9TdHJpbmcuY2FsbCh0aGlzKX0sZm0oZSxbe2tleTpcInZhbHVlXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3ZhbHVlfSxzZXQ6ZnVuY3Rpb24oaSl7aWYodGhpcy5fY29uc3RydWN0ZWQpe3ZhciBhPSgwLGFtLmRlZmF1bHQpKGkse2lzSWRlbnRpZmllcjohMH0pO2EhPT1pPygoMCxvbS5lbnN1cmVPYmplY3QpKHRoaXMsXCJyYXdzXCIpLHRoaXMucmF3cy52YWx1ZT1hKTp0aGlzLnJhd3MmJmRlbGV0ZSB0aGlzLnJhd3MudmFsdWV9dGhpcy5fdmFsdWU9aX19XSksZX0obG0uZGVmYXVsdCk7VXQuZGVmYXVsdD1wbTtQbC5leHBvcnRzPVV0LmRlZmF1bHR9KTt2YXIgVGk9UygoanQsSWwpPT57XCJ1c2Ugc3RyaWN0XCI7anQuX19lc01vZHVsZT0hMDtqdC5kZWZhdWx0PXZvaWQgMDt2YXIgZG09bW0oT2UoKSksaG09SigpO2Z1bmN0aW9uIG1tKHQpe3JldHVybiB0JiZ0Ll9fZXNNb2R1bGU/dDp7ZGVmYXVsdDp0fX1mdW5jdGlvbiBnbSh0LGUpe3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5wcm90b3R5cGUpLHQucHJvdG90eXBlLmNvbnN0cnVjdG9yPXQsX2kodCxlKX1mdW5jdGlvbiBfaSh0LGUpe3JldHVybiBfaT1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKTpmdW5jdGlvbihuLGkpe3JldHVybiBuLl9fcHJvdG9fXz1pLG59LF9pKHQsZSl9dmFyIHltPWZ1bmN0aW9uKHQpe2dtKGUsdCk7ZnVuY3Rpb24gZShyKXt2YXIgbjtyZXR1cm4gbj10LmNhbGwodGhpcyxyKXx8dGhpcyxuLnR5cGU9aG0uQ09NTUVOVCxufXJldHVybiBlfShkbS5kZWZhdWx0KTtqdC5kZWZhdWx0PXltO0lsLmV4cG9ydHM9anQuZGVmYXVsdH0pO3ZhciBJaT1TKCh6dCxSbCk9PntcInVzZSBzdHJpY3RcIjt6dC5fX2VzTW9kdWxlPSEwO3p0LmRlZmF1bHQ9dm9pZCAwO3ZhciB2bT1ibShPZSgpKSx3bT1KKCk7ZnVuY3Rpb24gYm0odCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OntkZWZhdWx0OnR9fWZ1bmN0aW9uIHhtKHQsZSl7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLnByb3RvdHlwZSksdC5wcm90b3R5cGUuY29uc3RydWN0b3I9dCxQaSh0LGUpfWZ1bmN0aW9uIFBpKHQsZSl7cmV0dXJuIFBpPU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpOmZ1bmN0aW9uKG4saSl7cmV0dXJuIG4uX19wcm90b19fPWksbn0sUGkodCxlKX12YXIgU209ZnVuY3Rpb24odCl7eG0oZSx0KTtmdW5jdGlvbiBlKG4pe3ZhciBpO3JldHVybiBpPXQuY2FsbCh0aGlzLG4pfHx0aGlzLGkudHlwZT13bS5JRCxpfXZhciByPWUucHJvdG90eXBlO3JldHVybiByLnZhbHVlVG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm5cIiNcIit0LnByb3RvdHlwZS52YWx1ZVRvU3RyaW5nLmNhbGwodGhpcyl9LGV9KHZtLmRlZmF1bHQpO3p0LmRlZmF1bHQ9U207UmwuZXhwb3J0cz16dC5kZWZhdWx0fSk7dmFyIEhyPVMoKFZ0LEZsKT0+e1widXNlIHN0cmljdFwiO1Z0Ll9fZXNNb2R1bGU9ITA7VnQuZGVmYXVsdD12b2lkIDA7dmFyIGttPU1sKFlyKCkpLE9tPUZ0KCksRW09TWwoT2UoKSk7ZnVuY3Rpb24gTWwodCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OntkZWZhdWx0OnR9fWZ1bmN0aW9uIERsKHQsZSl7Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe3ZhciBuPWVbcl07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbiYmKG4ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG4ua2V5LG4pfX1mdW5jdGlvbiBDbSh0LGUscil7cmV0dXJuIGUmJkRsKHQucHJvdG90eXBlLGUpLHImJkRsKHQsciksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSx0fWZ1bmN0aW9uIEFtKHQsZSl7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLnByb3RvdHlwZSksdC5wcm90b3R5cGUuY29uc3RydWN0b3I9dCxSaSh0LGUpfWZ1bmN0aW9uIFJpKHQsZSl7cmV0dXJuIFJpPU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpOmZ1bmN0aW9uKG4saSl7cmV0dXJuIG4uX19wcm90b19fPWksbn0sUmkodCxlKX12YXIgX209ZnVuY3Rpb24odCl7QW0oZSx0KTtmdW5jdGlvbiBlKCl7cmV0dXJuIHQuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfXZhciByPWUucHJvdG90eXBlO3JldHVybiByLnF1YWxpZmllZE5hbWU9ZnVuY3Rpb24oaSl7cmV0dXJuIHRoaXMubmFtZXNwYWNlP3RoaXMubmFtZXNwYWNlU3RyaW5nK1wifFwiK2k6aX0sci52YWx1ZVRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucXVhbGlmaWVkTmFtZSh0LnByb3RvdHlwZS52YWx1ZVRvU3RyaW5nLmNhbGwodGhpcykpfSxDbShlLFt7a2V5OlwibmFtZXNwYWNlXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX25hbWVzcGFjZX0sc2V0OmZ1bmN0aW9uKGkpe2lmKGk9PT0hMHx8aT09PVwiKlwifHxpPT09XCImXCIpe3RoaXMuX25hbWVzcGFjZT1pLHRoaXMucmF3cyYmZGVsZXRlIHRoaXMucmF3cy5uYW1lc3BhY2U7cmV0dXJufXZhciBhPSgwLGttLmRlZmF1bHQpKGkse2lzSWRlbnRpZmllcjohMH0pO3RoaXMuX25hbWVzcGFjZT1pLGEhPT1pPygoMCxPbS5lbnN1cmVPYmplY3QpKHRoaXMsXCJyYXdzXCIpLHRoaXMucmF3cy5uYW1lc3BhY2U9YSk6dGhpcy5yYXdzJiZkZWxldGUgdGhpcy5yYXdzLm5hbWVzcGFjZX19LHtrZXk6XCJuc1wiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9uYW1lc3BhY2V9LHNldDpmdW5jdGlvbihpKXt0aGlzLm5hbWVzcGFjZT1pfX0se2tleTpcIm5hbWVzcGFjZVN0cmluZ1wiLGdldDpmdW5jdGlvbigpe2lmKHRoaXMubmFtZXNwYWNlKXt2YXIgaT10aGlzLnN0cmluZ2lmeVByb3BlcnR5KFwibmFtZXNwYWNlXCIpO3JldHVybiBpPT09ITA/XCJcIjppfWVsc2UgcmV0dXJuXCJcIn19XSksZX0oRW0uZGVmYXVsdCk7VnQuZGVmYXVsdD1fbTtGbC5leHBvcnRzPVZ0LmRlZmF1bHR9KTt2YXIgTWk9UygoV3QsTGwpPT57XCJ1c2Ugc3RyaWN0XCI7V3QuX19lc01vZHVsZT0hMDtXdC5kZWZhdWx0PXZvaWQgMDt2YXIgVG09SW0oSHIoKSksUG09SigpO2Z1bmN0aW9uIEltKHQpe3JldHVybiB0JiZ0Ll9fZXNNb2R1bGU/dDp7ZGVmYXVsdDp0fX1mdW5jdGlvbiBSbSh0LGUpe3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5wcm90b3R5cGUpLHQucHJvdG90eXBlLmNvbnN0cnVjdG9yPXQsRGkodCxlKX1mdW5jdGlvbiBEaSh0LGUpe3JldHVybiBEaT1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKTpmdW5jdGlvbihuLGkpe3JldHVybiBuLl9fcHJvdG9fXz1pLG59LERpKHQsZSl9dmFyIERtPWZ1bmN0aW9uKHQpe1JtKGUsdCk7ZnVuY3Rpb24gZShyKXt2YXIgbjtyZXR1cm4gbj10LmNhbGwodGhpcyxyKXx8dGhpcyxuLnR5cGU9UG0uVEFHLG59cmV0dXJuIGV9KFRtLmRlZmF1bHQpO1d0LmRlZmF1bHQ9RG07TGwuZXhwb3J0cz1XdC5kZWZhdWx0fSk7dmFyIExpPVMoKEJ0LE5sKT0+e1widXNlIHN0cmljdFwiO0J0Ll9fZXNNb2R1bGU9ITA7QnQuZGVmYXVsdD12b2lkIDA7dmFyIE1tPUxtKE9lKCkpLEZtPUooKTtmdW5jdGlvbiBMbSh0KXtyZXR1cm4gdCYmdC5fX2VzTW9kdWxlP3Q6e2RlZmF1bHQ6dH19ZnVuY3Rpb24gTm0odCxlKXt0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUucHJvdG90eXBlKSx0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj10LEZpKHQsZSl9ZnVuY3Rpb24gRmkodCxlKXtyZXR1cm4gRmk9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCk6ZnVuY3Rpb24obixpKXtyZXR1cm4gbi5fX3Byb3RvX189aSxufSxGaSh0LGUpfXZhciBxbT1mdW5jdGlvbih0KXtObShlLHQpO2Z1bmN0aW9uIGUocil7dmFyIG47cmV0dXJuIG49dC5jYWxsKHRoaXMscil8fHRoaXMsbi50eXBlPUZtLlNUUklORyxufXJldHVybiBlfShNbS5kZWZhdWx0KTtCdC5kZWZhdWx0PXFtO05sLmV4cG9ydHM9QnQuZGVmYXVsdH0pO3ZhciBxaT1TKChHdCxxbCk9PntcInVzZSBzdHJpY3RcIjtHdC5fX2VzTW9kdWxlPSEwO0d0LmRlZmF1bHQ9dm9pZCAwO3ZhciAkbT1qbShHcigpKSxVbT1KKCk7ZnVuY3Rpb24gam0odCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OntkZWZhdWx0OnR9fWZ1bmN0aW9uIHptKHQsZSl7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLnByb3RvdHlwZSksdC5wcm90b3R5cGUuY29uc3RydWN0b3I9dCxOaSh0LGUpfWZ1bmN0aW9uIE5pKHQsZSl7cmV0dXJuIE5pPU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpOmZ1bmN0aW9uKG4saSl7cmV0dXJuIG4uX19wcm90b19fPWksbn0sTmkodCxlKX12YXIgVm09ZnVuY3Rpb24odCl7em0oZSx0KTtmdW5jdGlvbiBlKG4pe3ZhciBpO3JldHVybiBpPXQuY2FsbCh0aGlzLG4pfHx0aGlzLGkudHlwZT1VbS5QU0VVRE8saX12YXIgcj1lLnByb3RvdHlwZTtyZXR1cm4gci50b1N0cmluZz1mdW5jdGlvbigpe3ZhciBpPXRoaXMubGVuZ3RoP1wiKFwiK3RoaXMubWFwKFN0cmluZykuam9pbihcIixcIikrXCIpXCI6XCJcIjtyZXR1cm5bdGhpcy5yYXdTcGFjZUJlZm9yZSx0aGlzLnN0cmluZ2lmeVByb3BlcnR5KFwidmFsdWVcIiksaSx0aGlzLnJhd1NwYWNlQWZ0ZXJdLmpvaW4oXCJcIil9LGV9KCRtLmRlZmF1bHQpO0d0LmRlZmF1bHQ9Vm07cWwuZXhwb3J0cz1HdC5kZWZhdWx0fSk7dmFyIFVsPVMoKEN4LCRsKT0+eyRsLmV4cG9ydHM9V207ZnVuY3Rpb24gV20odCxlKXtpZigkaShcIm5vRGVwcmVjYXRpb25cIikpcmV0dXJuIHQ7dmFyIHI9ITE7ZnVuY3Rpb24gbigpe2lmKCFyKXtpZigkaShcInRocm93RGVwcmVjYXRpb25cIikpdGhyb3cgbmV3IEVycm9yKGUpOyRpKFwidHJhY2VEZXByZWNhdGlvblwiKT9jb25zb2xlLnRyYWNlKGUpOmNvbnNvbGUud2FybihlKSxyPSEwfXJldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gbn1mdW5jdGlvbiAkaSh0KXt0cnl7aWYoIWdsb2JhbC5sb2NhbFN0b3JhZ2UpcmV0dXJuITF9Y2F0Y2h7cmV0dXJuITF9dmFyIGU9Z2xvYmFsLmxvY2FsU3RvcmFnZVt0XTtyZXR1cm4gZT09bnVsbD8hMTpTdHJpbmcoZSkudG9Mb3dlckNhc2UoKT09PVwidHJ1ZVwifX0pO3ZhciBCaT1TKFF0PT57XCJ1c2Ugc3RyaWN0XCI7UXQuX19lc01vZHVsZT0hMDtRdC5kZWZhdWx0PXZvaWQgMDtRdC51bmVzY2FwZVZhbHVlPVdpO3ZhciBZdD1WaShZcigpKSxCbT1WaShqcigpKSxHbT1WaShIcigpKSxZbT1KKCksVWk7ZnVuY3Rpb24gVmkodCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OntkZWZhdWx0OnR9fWZ1bmN0aW9uIGpsKHQsZSl7Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe3ZhciBuPWVbcl07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbiYmKG4ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG4ua2V5LG4pfX1mdW5jdGlvbiBIbSh0LGUscil7cmV0dXJuIGUmJmpsKHQucHJvdG90eXBlLGUpLHImJmpsKHQsciksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSx0fWZ1bmN0aW9uIFFtKHQsZSl7dC5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLnByb3RvdHlwZSksdC5wcm90b3R5cGUuY29uc3RydWN0b3I9dCx6aSh0LGUpfWZ1bmN0aW9uIHppKHQsZSl7cmV0dXJuIHppPU9iamVjdC5zZXRQcm90b3R5cGVPZj9PYmplY3Quc2V0UHJvdG90eXBlT2YuYmluZCgpOmZ1bmN0aW9uKG4saSl7cmV0dXJuIG4uX19wcm90b19fPWksbn0semkodCxlKX12YXIgSHQ9VWwoKSxKbT0vXignfFwiKShbXl0qKVxcMSQvLFhtPUh0KGZ1bmN0aW9uKCl7fSxcIkFzc2lnbmluZyBhbiBhdHRyaWJ1dGUgYSB2YWx1ZSBjb250YWluaW5nIGNoYXJhY3RlcnMgdGhhdCBtaWdodCBuZWVkIHRvIGJlIGVzY2FwZWQgaXMgZGVwcmVjYXRlZC4gQ2FsbCBhdHRyaWJ1dGUuc2V0VmFsdWUoKSBpbnN0ZWFkLlwiKSxLbT1IdChmdW5jdGlvbigpe30sXCJBc3NpZ25pbmcgYXR0ci5xdW90ZWQgaXMgZGVwcmVjYXRlZCBhbmQgaGFzIG5vIGVmZmVjdC4gQXNzaWduIHRvIGF0dHIucXVvdGVNYXJrIGluc3RlYWQuXCIpLFptPUh0KGZ1bmN0aW9uKCl7fSxcIkNvbnN0cnVjdGluZyBhbiBBdHRyaWJ1dGUgc2VsZWN0b3Igd2l0aCBhIHZhbHVlIHdpdGhvdXQgc3BlY2lmeWluZyBxdW90ZU1hcmsgaXMgZGVwcmVjYXRlZC4gTm90ZTogVGhlIHZhbHVlIHNob3VsZCBiZSB1bmVzY2FwZWQgbm93LlwiKTtmdW5jdGlvbiBXaSh0KXt2YXIgZT0hMSxyPW51bGwsbj10LGk9bi5tYXRjaChKbSk7cmV0dXJuIGkmJihyPWlbMV0sbj1pWzJdKSxuPSgwLEJtLmRlZmF1bHQpKG4pLG4hPT10JiYoZT0hMCkse2RlcHJlY2F0ZWRVc2FnZTplLHVuZXNjYXBlZDpuLHF1b3RlTWFyazpyfX1mdW5jdGlvbiBlZyh0KXtpZih0LnF1b3RlTWFyayE9PXZvaWQgMHx8dC52YWx1ZT09PXZvaWQgMClyZXR1cm4gdDtabSgpO3ZhciBlPVdpKHQudmFsdWUpLHI9ZS5xdW90ZU1hcmssbj1lLnVuZXNjYXBlZDtyZXR1cm4gdC5yYXdzfHwodC5yYXdzPXt9KSx0LnJhd3MudmFsdWU9PT12b2lkIDAmJih0LnJhd3MudmFsdWU9dC52YWx1ZSksdC52YWx1ZT1uLHQucXVvdGVNYXJrPXIsdH12YXIgUXI9ZnVuY3Rpb24odCl7UW0oZSx0KTtmdW5jdGlvbiBlKG4pe3ZhciBpO3JldHVybiBuPT09dm9pZCAwJiYobj17fSksaT10LmNhbGwodGhpcyxlZyhuKSl8fHRoaXMsaS50eXBlPVltLkFUVFJJQlVURSxpLnJhd3M9aS5yYXdzfHx7fSxPYmplY3QuZGVmaW5lUHJvcGVydHkoaS5yYXdzLFwidW5xdW90ZWRcIix7Z2V0Okh0KGZ1bmN0aW9uKCl7cmV0dXJuIGkudmFsdWV9LFwiYXR0ci5yYXdzLnVucXVvdGVkIGlzIGRlcHJlY2F0ZWQuIENhbGwgYXR0ci52YWx1ZSBpbnN0ZWFkLlwiKSxzZXQ6SHQoZnVuY3Rpb24oKXtyZXR1cm4gaS52YWx1ZX0sXCJTZXR0aW5nIGF0dHIucmF3cy51bnF1b3RlZCBpcyBkZXByZWNhdGVkIGFuZCBoYXMgbm8gZWZmZWN0LiBhdHRyLnZhbHVlIGlzIHVuZXNjYXBlZCBieSBkZWZhdWx0IG5vdy5cIil9KSxpLl9jb25zdHJ1Y3RlZD0hMCxpfXZhciByPWUucHJvdG90eXBlO3JldHVybiByLmdldFF1b3RlZFZhbHVlPWZ1bmN0aW9uKGkpe2k9PT12b2lkIDAmJihpPXt9KTt2YXIgYT10aGlzLl9kZXRlcm1pbmVRdW90ZU1hcmsoaSkscz1qaVthXSxvPSgwLFl0LmRlZmF1bHQpKHRoaXMuX3ZhbHVlLHMpO3JldHVybiBvfSxyLl9kZXRlcm1pbmVRdW90ZU1hcms9ZnVuY3Rpb24oaSl7cmV0dXJuIGkuc21hcnQ/dGhpcy5zbWFydFF1b3RlTWFyayhpKTp0aGlzLnByZWZlcnJlZFF1b3RlTWFyayhpKX0sci5zZXRWYWx1ZT1mdW5jdGlvbihpLGEpe2E9PT12b2lkIDAmJihhPXt9KSx0aGlzLl92YWx1ZT1pLHRoaXMuX3F1b3RlTWFyaz10aGlzLl9kZXRlcm1pbmVRdW90ZU1hcmsoYSksdGhpcy5fc3luY1Jhd1ZhbHVlKCl9LHIuc21hcnRRdW90ZU1hcms9ZnVuY3Rpb24oaSl7dmFyIGE9dGhpcy52YWx1ZSxzPWEucmVwbGFjZSgvW14nXS9nLFwiXCIpLmxlbmd0aCxvPWEucmVwbGFjZSgvW15cIl0vZyxcIlwiKS5sZW5ndGg7aWYocytvPT09MCl7dmFyIGw9KDAsWXQuZGVmYXVsdCkoYSx7aXNJZGVudGlmaWVyOiEwfSk7aWYobD09PWEpcmV0dXJuIGUuTk9fUVVPVEU7dmFyIHU9dGhpcy5wcmVmZXJyZWRRdW90ZU1hcmsoaSk7aWYodT09PWUuTk9fUVVPVEUpe3ZhciBmPXRoaXMucXVvdGVNYXJrfHxpLnF1b3RlTWFya3x8ZS5ET1VCTEVfUVVPVEUscD1qaVtmXSxjPSgwLFl0LmRlZmF1bHQpKGEscCk7aWYoYy5sZW5ndGg8bC5sZW5ndGgpcmV0dXJuIGZ9cmV0dXJuIHV9ZWxzZSByZXR1cm4gbz09PXM/dGhpcy5wcmVmZXJyZWRRdW90ZU1hcmsoaSk6bzxzP2UuRE9VQkxFX1FVT1RFOmUuU0lOR0xFX1FVT1RFfSxyLnByZWZlcnJlZFF1b3RlTWFyaz1mdW5jdGlvbihpKXt2YXIgYT1pLnByZWZlckN1cnJlbnRRdW90ZU1hcms/dGhpcy5xdW90ZU1hcms6aS5xdW90ZU1hcms7cmV0dXJuIGE9PT12b2lkIDAmJihhPWkucHJlZmVyQ3VycmVudFF1b3RlTWFyaz9pLnF1b3RlTWFyazp0aGlzLnF1b3RlTWFyayksYT09PXZvaWQgMCYmKGE9ZS5ET1VCTEVfUVVPVEUpLGF9LHIuX3N5bmNSYXdWYWx1ZT1mdW5jdGlvbigpe3ZhciBpPSgwLFl0LmRlZmF1bHQpKHRoaXMuX3ZhbHVlLGppW3RoaXMucXVvdGVNYXJrXSk7aT09PXRoaXMuX3ZhbHVlP3RoaXMucmF3cyYmZGVsZXRlIHRoaXMucmF3cy52YWx1ZTp0aGlzLnJhd3MudmFsdWU9aX0sci5faGFuZGxlRXNjYXBlcz1mdW5jdGlvbihpLGEpe2lmKHRoaXMuX2NvbnN0cnVjdGVkKXt2YXIgcz0oMCxZdC5kZWZhdWx0KShhLHtpc0lkZW50aWZpZXI6ITB9KTtzIT09YT90aGlzLnJhd3NbaV09czpkZWxldGUgdGhpcy5yYXdzW2ldfX0sci5fc3BhY2VzRm9yPWZ1bmN0aW9uKGkpe3ZhciBhPXtiZWZvcmU6XCJcIixhZnRlcjpcIlwifSxzPXRoaXMuc3BhY2VzW2ldfHx7fSxvPXRoaXMucmF3cy5zcGFjZXMmJnRoaXMucmF3cy5zcGFjZXNbaV18fHt9O3JldHVybiBPYmplY3QuYXNzaWduKGEscyxvKX0sci5fc3RyaW5nRm9yPWZ1bmN0aW9uKGksYSxzKXthPT09dm9pZCAwJiYoYT1pKSxzPT09dm9pZCAwJiYocz16bCk7dmFyIG89dGhpcy5fc3BhY2VzRm9yKGEpO3JldHVybiBzKHRoaXMuc3RyaW5naWZ5UHJvcGVydHkoaSksbyl9LHIub2Zmc2V0T2Y9ZnVuY3Rpb24oaSl7dmFyIGE9MSxzPXRoaXMuX3NwYWNlc0ZvcihcImF0dHJpYnV0ZVwiKTtpZihhKz1zLmJlZm9yZS5sZW5ndGgsaT09PVwibmFtZXNwYWNlXCJ8fGk9PT1cIm5zXCIpcmV0dXJuIHRoaXMubmFtZXNwYWNlP2E6LTE7aWYoaT09PVwiYXR0cmlidXRlTlNcInx8KGErPXRoaXMubmFtZXNwYWNlU3RyaW5nLmxlbmd0aCx0aGlzLm5hbWVzcGFjZSYmKGErPTEpLGk9PT1cImF0dHJpYnV0ZVwiKSlyZXR1cm4gYTthKz10aGlzLnN0cmluZ2lmeVByb3BlcnR5KFwiYXR0cmlidXRlXCIpLmxlbmd0aCxhKz1zLmFmdGVyLmxlbmd0aDt2YXIgbz10aGlzLl9zcGFjZXNGb3IoXCJvcGVyYXRvclwiKTthKz1vLmJlZm9yZS5sZW5ndGg7dmFyIGw9dGhpcy5zdHJpbmdpZnlQcm9wZXJ0eShcIm9wZXJhdG9yXCIpO2lmKGk9PT1cIm9wZXJhdG9yXCIpcmV0dXJuIGw/YTotMTthKz1sLmxlbmd0aCxhKz1vLmFmdGVyLmxlbmd0aDt2YXIgdT10aGlzLl9zcGFjZXNGb3IoXCJ2YWx1ZVwiKTthKz11LmJlZm9yZS5sZW5ndGg7dmFyIGY9dGhpcy5zdHJpbmdpZnlQcm9wZXJ0eShcInZhbHVlXCIpO2lmKGk9PT1cInZhbHVlXCIpcmV0dXJuIGY/YTotMTthKz1mLmxlbmd0aCxhKz11LmFmdGVyLmxlbmd0aDt2YXIgcD10aGlzLl9zcGFjZXNGb3IoXCJpbnNlbnNpdGl2ZVwiKTtyZXR1cm4gYSs9cC5iZWZvcmUubGVuZ3RoLGk9PT1cImluc2Vuc2l0aXZlXCImJnRoaXMuaW5zZW5zaXRpdmU/YTotMX0sci50b1N0cmluZz1mdW5jdGlvbigpe3ZhciBpPXRoaXMsYT1bdGhpcy5yYXdTcGFjZUJlZm9yZSxcIltcIl07cmV0dXJuIGEucHVzaCh0aGlzLl9zdHJpbmdGb3IoXCJxdWFsaWZpZWRBdHRyaWJ1dGVcIixcImF0dHJpYnV0ZVwiKSksdGhpcy5vcGVyYXRvciYmKHRoaXMudmFsdWV8fHRoaXMudmFsdWU9PT1cIlwiKSYmKGEucHVzaCh0aGlzLl9zdHJpbmdGb3IoXCJvcGVyYXRvclwiKSksYS5wdXNoKHRoaXMuX3N0cmluZ0ZvcihcInZhbHVlXCIpKSxhLnB1c2godGhpcy5fc3RyaW5nRm9yKFwiaW5zZW5zaXRpdmVGbGFnXCIsXCJpbnNlbnNpdGl2ZVwiLGZ1bmN0aW9uKHMsbyl7cmV0dXJuIHMubGVuZ3RoPjAmJiFpLnF1b3RlZCYmby5iZWZvcmUubGVuZ3RoPT09MCYmIShpLnNwYWNlcy52YWx1ZSYmaS5zcGFjZXMudmFsdWUuYWZ0ZXIpJiYoby5iZWZvcmU9XCIgXCIpLHpsKHMsbyl9KSkpLGEucHVzaChcIl1cIiksYS5wdXNoKHRoaXMucmF3U3BhY2VBZnRlciksYS5qb2luKFwiXCIpfSxIbShlLFt7a2V5OlwicXVvdGVkXCIsZ2V0OmZ1bmN0aW9uKCl7dmFyIGk9dGhpcy5xdW90ZU1hcms7cmV0dXJuIGk9PT1cIidcInx8aT09PSdcIid9LHNldDpmdW5jdGlvbihpKXtLbSgpfX0se2tleTpcInF1b3RlTWFya1wiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9xdW90ZU1hcmt9LHNldDpmdW5jdGlvbihpKXtpZighdGhpcy5fY29uc3RydWN0ZWQpe3RoaXMuX3F1b3RlTWFyaz1pO3JldHVybn10aGlzLl9xdW90ZU1hcmshPT1pJiYodGhpcy5fcXVvdGVNYXJrPWksdGhpcy5fc3luY1Jhd1ZhbHVlKCkpfX0se2tleTpcInF1YWxpZmllZEF0dHJpYnV0ZVwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnF1YWxpZmllZE5hbWUodGhpcy5yYXdzLmF0dHJpYnV0ZXx8dGhpcy5hdHRyaWJ1dGUpfX0se2tleTpcImluc2Vuc2l0aXZlRmxhZ1wiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmluc2Vuc2l0aXZlP1wiaVwiOlwiXCJ9fSx7a2V5OlwidmFsdWVcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fdmFsdWV9LHNldDpmdW5jdGlvbihpKXtpZih0aGlzLl9jb25zdHJ1Y3RlZCl7dmFyIGE9V2koaSkscz1hLmRlcHJlY2F0ZWRVc2FnZSxvPWEudW5lc2NhcGVkLGw9YS5xdW90ZU1hcms7aWYocyYmWG0oKSxvPT09dGhpcy5fdmFsdWUmJmw9PT10aGlzLl9xdW90ZU1hcmspcmV0dXJuO3RoaXMuX3ZhbHVlPW8sdGhpcy5fcXVvdGVNYXJrPWwsdGhpcy5fc3luY1Jhd1ZhbHVlKCl9ZWxzZSB0aGlzLl92YWx1ZT1pfX0se2tleTpcImluc2Vuc2l0aXZlXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2luc2Vuc2l0aXZlfSxzZXQ6ZnVuY3Rpb24oaSl7aXx8KHRoaXMuX2luc2Vuc2l0aXZlPSExLHRoaXMucmF3cyYmKHRoaXMucmF3cy5pbnNlbnNpdGl2ZUZsYWc9PT1cIklcInx8dGhpcy5yYXdzLmluc2Vuc2l0aXZlRmxhZz09PVwiaVwiKSYmKHRoaXMucmF3cy5pbnNlbnNpdGl2ZUZsYWc9dm9pZCAwKSksdGhpcy5faW5zZW5zaXRpdmU9aX19LHtrZXk6XCJhdHRyaWJ1dGVcIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYXR0cmlidXRlfSxzZXQ6ZnVuY3Rpb24oaSl7dGhpcy5faGFuZGxlRXNjYXBlcyhcImF0dHJpYnV0ZVwiLGkpLHRoaXMuX2F0dHJpYnV0ZT1pfX1dKSxlfShHbS5kZWZhdWx0KTtRdC5kZWZhdWx0PVFyO1FyLk5PX1FVT1RFPW51bGw7UXIuU0lOR0xFX1FVT1RFPVwiJ1wiO1FyLkRPVUJMRV9RVU9URT0nXCInO3ZhciBqaT0oVWk9e1wiJ1wiOntxdW90ZXM6XCJzaW5nbGVcIix3cmFwOiEwfSwnXCInOntxdW90ZXM6XCJkb3VibGVcIix3cmFwOiEwfX0sVWlbbnVsbF09e2lzSWRlbnRpZmllcjohMH0sVWkpO2Z1bmN0aW9uIHpsKHQsZSl7cmV0dXJuXCJcIitlLmJlZm9yZSt0K2UuYWZ0ZXJ9fSk7dmFyIFlpPVMoKEp0LFZsKT0+e1widXNlIHN0cmljdFwiO0p0Ll9fZXNNb2R1bGU9ITA7SnQuZGVmYXVsdD12b2lkIDA7dmFyIHRnPW5nKEhyKCkpLHJnPUooKTtmdW5jdGlvbiBuZyh0KXtyZXR1cm4gdCYmdC5fX2VzTW9kdWxlP3Q6e2RlZmF1bHQ6dH19ZnVuY3Rpb24gaWcodCxlKXt0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUucHJvdG90eXBlKSx0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj10LEdpKHQsZSl9ZnVuY3Rpb24gR2kodCxlKXtyZXR1cm4gR2k9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCk6ZnVuY3Rpb24obixpKXtyZXR1cm4gbi5fX3Byb3RvX189aSxufSxHaSh0LGUpfXZhciBzZz1mdW5jdGlvbih0KXtpZyhlLHQpO2Z1bmN0aW9uIGUocil7dmFyIG47cmV0dXJuIG49dC5jYWxsKHRoaXMscil8fHRoaXMsbi50eXBlPXJnLlVOSVZFUlNBTCxuLnZhbHVlPVwiKlwiLG59cmV0dXJuIGV9KHRnLmRlZmF1bHQpO0p0LmRlZmF1bHQ9c2c7VmwuZXhwb3J0cz1KdC5kZWZhdWx0fSk7dmFyIFFpPVMoKFh0LFdsKT0+e1widXNlIHN0cmljdFwiO1h0Ll9fZXNNb2R1bGU9ITA7WHQuZGVmYXVsdD12b2lkIDA7dmFyIGFnPWxnKE9lKCkpLG9nPUooKTtmdW5jdGlvbiBsZyh0KXtyZXR1cm4gdCYmdC5fX2VzTW9kdWxlP3Q6e2RlZmF1bHQ6dH19ZnVuY3Rpb24gdWcodCxlKXt0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUucHJvdG90eXBlKSx0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj10LEhpKHQsZSl9ZnVuY3Rpb24gSGkodCxlKXtyZXR1cm4gSGk9T2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCk6ZnVuY3Rpb24obixpKXtyZXR1cm4gbi5fX3Byb3RvX189aSxufSxIaSh0LGUpfXZhciBmZz1mdW5jdGlvbih0KXt1ZyhlLHQpO2Z1bmN0aW9uIGUocil7dmFyIG47cmV0dXJuIG49dC5jYWxsKHRoaXMscil8fHRoaXMsbi50eXBlPW9nLkNPTUJJTkFUT1Isbn1yZXR1cm4gZX0oYWcuZGVmYXVsdCk7WHQuZGVmYXVsdD1mZztXbC5leHBvcnRzPVh0LmRlZmF1bHR9KTt2YXIgWGk9UygoS3QsQmwpPT57XCJ1c2Ugc3RyaWN0XCI7S3QuX19lc01vZHVsZT0hMDtLdC5kZWZhdWx0PXZvaWQgMDt2YXIgY2c9ZGcoT2UoKSkscGc9SigpO2Z1bmN0aW9uIGRnKHQpe3JldHVybiB0JiZ0Ll9fZXNNb2R1bGU/dDp7ZGVmYXVsdDp0fX1mdW5jdGlvbiBoZyh0LGUpe3QucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5wcm90b3R5cGUpLHQucHJvdG90eXBlLmNvbnN0cnVjdG9yPXQsSmkodCxlKX1mdW5jdGlvbiBKaSh0LGUpe3JldHVybiBKaT1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKTpmdW5jdGlvbihuLGkpe3JldHVybiBuLl9fcHJvdG9fXz1pLG59LEppKHQsZSl9dmFyIG1nPWZ1bmN0aW9uKHQpe2hnKGUsdCk7ZnVuY3Rpb24gZShyKXt2YXIgbjtyZXR1cm4gbj10LmNhbGwodGhpcyxyKXx8dGhpcyxuLnR5cGU9cGcuTkVTVElORyxuLnZhbHVlPVwiJlwiLG59cmV0dXJuIGV9KGNnLmRlZmF1bHQpO0t0LmRlZmF1bHQ9bWc7QmwuZXhwb3J0cz1LdC5kZWZhdWx0fSk7dmFyIFlsPVMoKEpyLEdsKT0+e1widXNlIHN0cmljdFwiO0pyLl9fZXNNb2R1bGU9ITA7SnIuZGVmYXVsdD1nZztmdW5jdGlvbiBnZyh0KXtyZXR1cm4gdC5zb3J0KGZ1bmN0aW9uKGUscil7cmV0dXJuIGUtcn0pfUdsLmV4cG9ydHM9SnIuZGVmYXVsdH0pO3ZhciBLaT1TKFA9PntcInVzZSBzdHJpY3RcIjtQLl9fZXNNb2R1bGU9ITA7UC53b3JkPVAudGlsZGU9UC50YWI9UC5zdHI9UC5zcGFjZT1QLnNsYXNoPVAuc2luZ2xlUXVvdGU9UC5zZW1pY29sb249UC5wbHVzPVAucGlwZT1QLm9wZW5TcXVhcmU9UC5vcGVuUGFyZW50aGVzaXM9UC5uZXdsaW5lPVAuZ3JlYXRlclRoYW49UC5mZWVkPVAuZXF1YWxzPVAuZG91YmxlUXVvdGU9UC5kb2xsYXI9UC5jcj1QLmNvbW1lbnQ9UC5jb21tYT1QLmNvbWJpbmF0b3I9UC5jb2xvbj1QLmNsb3NlU3F1YXJlPVAuY2xvc2VQYXJlbnRoZXNpcz1QLmNhcmV0PVAuYmFuZz1QLmJhY2tzbGFzaD1QLmF0PVAuYXN0ZXJpc2s9UC5hbXBlcnNhbmQ9dm9pZCAwO3ZhciB5Zz0zODtQLmFtcGVyc2FuZD15Zzt2YXIgdmc9NDI7UC5hc3Rlcmlzaz12Zzt2YXIgd2c9NjQ7UC5hdD13Zzt2YXIgYmc9NDQ7UC5jb21tYT1iZzt2YXIgeGc9NTg7UC5jb2xvbj14Zzt2YXIgU2c9NTk7UC5zZW1pY29sb249U2c7dmFyIGtnPTQwO1Aub3BlblBhcmVudGhlc2lzPWtnO3ZhciBPZz00MTtQLmNsb3NlUGFyZW50aGVzaXM9T2c7dmFyIEVnPTkxO1Aub3BlblNxdWFyZT1FZzt2YXIgQ2c9OTM7UC5jbG9zZVNxdWFyZT1DZzt2YXIgQWc9MzY7UC5kb2xsYXI9QWc7dmFyIF9nPTEyNjtQLnRpbGRlPV9nO3ZhciBUZz05NDtQLmNhcmV0PVRnO3ZhciBQZz00MztQLnBsdXM9UGc7dmFyIElnPTYxO1AuZXF1YWxzPUlnO3ZhciBSZz0xMjQ7UC5waXBlPVJnO3ZhciBEZz02MjtQLmdyZWF0ZXJUaGFuPURnO3ZhciBNZz0zMjtQLnNwYWNlPU1nO3ZhciBIbD0zOTtQLnNpbmdsZVF1b3RlPUhsO3ZhciBGZz0zNDtQLmRvdWJsZVF1b3RlPUZnO3ZhciBMZz00NztQLnNsYXNoPUxnO3ZhciBOZz0zMztQLmJhbmc9Tmc7dmFyIHFnPTkyO1AuYmFja3NsYXNoPXFnO3ZhciAkZz0xMztQLmNyPSRnO3ZhciBVZz0xMjtQLmZlZWQ9VWc7dmFyIGpnPTEwO1AubmV3bGluZT1qZzt2YXIgemc9OTtQLnRhYj16Zzt2YXIgVmc9SGw7UC5zdHI9Vmc7dmFyIFdnPS0xO1AuY29tbWVudD1XZzt2YXIgQmc9LTI7UC53b3JkPUJnO3ZhciBHZz0tMztQLmNvbWJpbmF0b3I9R2d9KTt2YXIgWGw9UyhadD0+e1widXNlIHN0cmljdFwiO1p0Ll9fZXNNb2R1bGU9ITA7WnQuRklFTERTPXZvaWQgMDtadC5kZWZhdWx0PVpnO3ZhciBDPVlnKEtpKCkpLFplLHE7ZnVuY3Rpb24gSmwodCl7aWYodHlwZW9mIFdlYWtNYXAhPVwiZnVuY3Rpb25cIilyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcCxyPW5ldyBXZWFrTWFwO3JldHVybihKbD1mdW5jdGlvbihpKXtyZXR1cm4gaT9yOmV9KSh0KX1mdW5jdGlvbiBZZyh0LGUpe2lmKCFlJiZ0JiZ0Ll9fZXNNb2R1bGUpcmV0dXJuIHQ7aWYodD09PW51bGx8fHR5cGVvZiB0IT1cIm9iamVjdFwiJiZ0eXBlb2YgdCE9XCJmdW5jdGlvblwiKXJldHVybntkZWZhdWx0OnR9O3ZhciByPUpsKGUpO2lmKHImJnIuaGFzKHQpKXJldHVybiByLmdldCh0KTt2YXIgbj17fSxpPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIGEgaW4gdClpZihhIT09XCJkZWZhdWx0XCImJk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGEpKXt2YXIgcz1pP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxhKTpudWxsO3MmJihzLmdldHx8cy5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShuLGEscyk6blthXT10W2FdfXJldHVybiBuLmRlZmF1bHQ9dCxyJiZyLnNldCh0LG4pLG59dmFyIEhnPShaZT17fSxaZVtDLnRhYl09ITAsWmVbQy5uZXdsaW5lXT0hMCxaZVtDLmNyXT0hMCxaZVtDLmZlZWRdPSEwLFplKSxRZz0ocT17fSxxW0Muc3BhY2VdPSEwLHFbQy50YWJdPSEwLHFbQy5uZXdsaW5lXT0hMCxxW0MuY3JdPSEwLHFbQy5mZWVkXT0hMCxxW0MuYW1wZXJzYW5kXT0hMCxxW0MuYXN0ZXJpc2tdPSEwLHFbQy5iYW5nXT0hMCxxW0MuY29tbWFdPSEwLHFbQy5jb2xvbl09ITAscVtDLnNlbWljb2xvbl09ITAscVtDLm9wZW5QYXJlbnRoZXNpc109ITAscVtDLmNsb3NlUGFyZW50aGVzaXNdPSEwLHFbQy5vcGVuU3F1YXJlXT0hMCxxW0MuY2xvc2VTcXVhcmVdPSEwLHFbQy5zaW5nbGVRdW90ZV09ITAscVtDLmRvdWJsZVF1b3RlXT0hMCxxW0MucGx1c109ITAscVtDLnBpcGVdPSEwLHFbQy50aWxkZV09ITAscVtDLmdyZWF0ZXJUaGFuXT0hMCxxW0MuZXF1YWxzXT0hMCxxW0MuZG9sbGFyXT0hMCxxW0MuY2FyZXRdPSEwLHFbQy5zbGFzaF09ITAscSksWmk9e30sUWw9XCIwMTIzNDU2Nzg5YWJjZGVmQUJDREVGXCI7Zm9yKFhyPTA7WHI8UWwubGVuZ3RoO1hyKyspWmlbUWwuY2hhckNvZGVBdChYcildPSEwO3ZhciBYcjtmdW5jdGlvbiBKZyh0LGUpe3ZhciByPWUsbjtkb3tpZihuPXQuY2hhckNvZGVBdChyKSxRZ1tuXSlyZXR1cm4gci0xO249PT1DLmJhY2tzbGFzaD9yPVhnKHQscikrMTpyKyt9d2hpbGUocjx0Lmxlbmd0aCk7cmV0dXJuIHItMX1mdW5jdGlvbiBYZyh0LGUpe3ZhciByPWUsbj10LmNoYXJDb2RlQXQocisxKTtpZighSGdbbl0paWYoWmlbbl0pe3ZhciBpPTA7ZG8gcisrLGkrKyxuPXQuY2hhckNvZGVBdChyKzEpO3doaWxlKFppW25dJiZpPDYpO2k8NiYmbj09PUMuc3BhY2UmJnIrK31lbHNlIHIrKztyZXR1cm4gcn12YXIgS2c9e1RZUEU6MCxTVEFSVF9MSU5FOjEsU1RBUlRfQ09MOjIsRU5EX0xJTkU6MyxFTkRfQ09MOjQsU1RBUlRfUE9TOjUsRU5EX1BPUzo2fTtadC5GSUVMRFM9S2c7ZnVuY3Rpb24gWmcodCl7dmFyIGU9W10scj10LmNzcy52YWx1ZU9mKCksbj1yLGk9bi5sZW5ndGgsYT0tMSxzPTEsbz0wLGw9MCx1LGYscCxjLGQsaCx5LG0sZyx3LGIsdixPO2Z1bmN0aW9uIHgoQSxFKXtpZih0LnNhZmUpcis9RSxnPXIubGVuZ3RoLTE7ZWxzZSB0aHJvdyB0LmVycm9yKFwiVW5jbG9zZWQgXCIrQSxzLG8tYSxvKX1mb3IoO288aTspe3N3aXRjaCh1PXIuY2hhckNvZGVBdChvKSx1PT09Qy5uZXdsaW5lJiYoYT1vLHMrPTEpLHUpe2Nhc2UgQy5zcGFjZTpjYXNlIEMudGFiOmNhc2UgQy5uZXdsaW5lOmNhc2UgQy5jcjpjYXNlIEMuZmVlZDpnPW87ZG8gZys9MSx1PXIuY2hhckNvZGVBdChnKSx1PT09Qy5uZXdsaW5lJiYoYT1nLHMrPTEpO3doaWxlKHU9PT1DLnNwYWNlfHx1PT09Qy5uZXdsaW5lfHx1PT09Qy50YWJ8fHU9PT1DLmNyfHx1PT09Qy5mZWVkKTtPPUMuc3BhY2UsYz1zLHA9Zy1hLTEsbD1nO2JyZWFrO2Nhc2UgQy5wbHVzOmNhc2UgQy5ncmVhdGVyVGhhbjpjYXNlIEMudGlsZGU6Y2FzZSBDLnBpcGU6Zz1vO2RvIGcrPTEsdT1yLmNoYXJDb2RlQXQoZyk7d2hpbGUodT09PUMucGx1c3x8dT09PUMuZ3JlYXRlclRoYW58fHU9PT1DLnRpbGRlfHx1PT09Qy5waXBlKTtPPUMuY29tYmluYXRvcixjPXMscD1vLWEsbD1nO2JyZWFrO2Nhc2UgQy5hc3RlcmlzazpjYXNlIEMuYW1wZXJzYW5kOmNhc2UgQy5iYW5nOmNhc2UgQy5jb21tYTpjYXNlIEMuZXF1YWxzOmNhc2UgQy5kb2xsYXI6Y2FzZSBDLmNhcmV0OmNhc2UgQy5vcGVuU3F1YXJlOmNhc2UgQy5jbG9zZVNxdWFyZTpjYXNlIEMuY29sb246Y2FzZSBDLnNlbWljb2xvbjpjYXNlIEMub3BlblBhcmVudGhlc2lzOmNhc2UgQy5jbG9zZVBhcmVudGhlc2lzOmc9byxPPXUsYz1zLHA9by1hLGw9ZysxO2JyZWFrO2Nhc2UgQy5zaW5nbGVRdW90ZTpjYXNlIEMuZG91YmxlUXVvdGU6dj11PT09Qy5zaW5nbGVRdW90ZT9cIidcIjonXCInLGc9bztkbyBmb3IoZD0hMSxnPXIuaW5kZXhPZih2LGcrMSksZz09PS0xJiZ4KFwicXVvdGVcIix2KSxoPWc7ci5jaGFyQ29kZUF0KGgtMSk9PT1DLmJhY2tzbGFzaDspaC09MSxkPSFkO3doaWxlKGQpO089Qy5zdHIsYz1zLHA9by1hLGw9ZysxO2JyZWFrO2RlZmF1bHQ6dT09PUMuc2xhc2gmJnIuY2hhckNvZGVBdChvKzEpPT09Qy5hc3Rlcmlzaz8oZz1yLmluZGV4T2YoXCIqL1wiLG8rMikrMSxnPT09MCYmeChcImNvbW1lbnRcIixcIiovXCIpLGY9ci5zbGljZShvLGcrMSksbT1mLnNwbGl0KGBcbmApLHk9bS5sZW5ndGgtMSx5PjA/KHc9cyt5LGI9Zy1tW3ldLmxlbmd0aCk6KHc9cyxiPWEpLE89Qy5jb21tZW50LHM9dyxjPXcscD1nLWIpOnU9PT1DLnNsYXNoPyhnPW8sTz11LGM9cyxwPW8tYSxsPWcrMSk6KGc9SmcocixvKSxPPUMud29yZCxjPXMscD1nLWEpLGw9ZysxO2JyZWFrfWUucHVzaChbTyxzLG8tYSxjLHAsbyxsXSksYiYmKGE9YixiPW51bGwpLG89bH1yZXR1cm4gZX19KTt2YXIgc3U9UygoZXIsaXUpPT57XCJ1c2Ugc3RyaWN0XCI7ZXIuX19lc01vZHVsZT0hMDtlci5kZWZhdWx0PXZvaWQgMDt2YXIgZXk9bGUoU2koKSksZXM9bGUoT2koKSksdHk9bGUoQWkoKSksS2w9bGUoVGkoKSkscnk9bGUoSWkoKSksbnk9bGUoTWkoKSksdHM9bGUoTGkoKSksaXk9bGUocWkoKSksWmw9S3IoQmkoKSksc3k9bGUoWWkoKSkscnM9bGUoUWkoKSksYXk9bGUoWGkoKSksb3k9bGUoWWwoKSksaz1LcihYbCgpKSxfPUtyKEtpKCkpLGx5PUtyKEooKSksVj1GdCgpLFZlLG5zO2Z1bmN0aW9uIG51KHQpe2lmKHR5cGVvZiBXZWFrTWFwIT1cImZ1bmN0aW9uXCIpcmV0dXJuIG51bGw7dmFyIGU9bmV3IFdlYWtNYXAscj1uZXcgV2Vha01hcDtyZXR1cm4obnU9ZnVuY3Rpb24oaSl7cmV0dXJuIGk/cjplfSkodCl9ZnVuY3Rpb24gS3IodCxlKXtpZighZSYmdCYmdC5fX2VzTW9kdWxlKXJldHVybiB0O2lmKHQ9PT1udWxsfHx0eXBlb2YgdCE9XCJvYmplY3RcIiYmdHlwZW9mIHQhPVwiZnVuY3Rpb25cIilyZXR1cm57ZGVmYXVsdDp0fTt2YXIgcj1udShlKTtpZihyJiZyLmhhcyh0KSlyZXR1cm4gci5nZXQodCk7dmFyIG49e30saT1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBhIGluIHQpaWYoYSE9PVwiZGVmYXVsdFwiJiZPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxhKSl7dmFyIHM9aT9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsYSk6bnVsbDtzJiYocy5nZXR8fHMuc2V0KT9PYmplY3QuZGVmaW5lUHJvcGVydHkobixhLHMpOm5bYV09dFthXX1yZXR1cm4gbi5kZWZhdWx0PXQsciYmci5zZXQodCxuKSxufWZ1bmN0aW9uIGxlKHQpe3JldHVybiB0JiZ0Ll9fZXNNb2R1bGU/dDp7ZGVmYXVsdDp0fX1mdW5jdGlvbiBldSh0LGUpe2Zvcih2YXIgcj0wO3I8ZS5sZW5ndGg7cisrKXt2YXIgbj1lW3JdO24uZW51bWVyYWJsZT1uLmVudW1lcmFibGV8fCExLG4uY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIG4mJihuLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxuLmtleSxuKX19ZnVuY3Rpb24gdXkodCxlLHIpe3JldHVybiBlJiZldSh0LnByb3RvdHlwZSxlKSxyJiZldSh0LHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwicHJvdG90eXBlXCIse3dyaXRhYmxlOiExfSksdH12YXIgYXM9KFZlPXt9LFZlW18uc3BhY2VdPSEwLFZlW18uY3JdPSEwLFZlW18uZmVlZF09ITAsVmVbXy5uZXdsaW5lXT0hMCxWZVtfLnRhYl09ITAsVmUpLGZ5PU9iamVjdC5hc3NpZ24oe30sYXMsKG5zPXt9LG5zW18uY29tbWVudF09ITAsbnMpKTtmdW5jdGlvbiB0dSh0KXtyZXR1cm57bGluZTp0W2suRklFTERTLlNUQVJUX0xJTkVdLGNvbHVtbjp0W2suRklFTERTLlNUQVJUX0NPTF19fWZ1bmN0aW9uIHJ1KHQpe3JldHVybntsaW5lOnRbay5GSUVMRFMuRU5EX0xJTkVdLGNvbHVtbjp0W2suRklFTERTLkVORF9DT0xdfX1mdW5jdGlvbiBXZSh0LGUscixuKXtyZXR1cm57c3RhcnQ6e2xpbmU6dCxjb2x1bW46ZX0sZW5kOntsaW5lOnIsY29sdW1uOm59fX1mdW5jdGlvbiBldCh0KXtyZXR1cm4gV2UodFtrLkZJRUxEUy5TVEFSVF9MSU5FXSx0W2suRklFTERTLlNUQVJUX0NPTF0sdFtrLkZJRUxEUy5FTkRfTElORV0sdFtrLkZJRUxEUy5FTkRfQ09MXSl9ZnVuY3Rpb24gaXModCxlKXtpZighIXQpcmV0dXJuIFdlKHRbay5GSUVMRFMuU1RBUlRfTElORV0sdFtrLkZJRUxEUy5TVEFSVF9DT0xdLGVbay5GSUVMRFMuRU5EX0xJTkVdLGVbay5GSUVMRFMuRU5EX0NPTF0pfWZ1bmN0aW9uIHR0KHQsZSl7dmFyIHI9dFtlXTtpZih0eXBlb2Ygcj09XCJzdHJpbmdcIilyZXR1cm4gci5pbmRleE9mKFwiXFxcXFwiKSE9PS0xJiYoKDAsVi5lbnN1cmVPYmplY3QpKHQsXCJyYXdzXCIpLHRbZV09KDAsVi51bmVzYykociksdC5yYXdzW2VdPT09dm9pZCAwJiYodC5yYXdzW2VdPXIpKSx0fWZ1bmN0aW9uIHNzKHQsZSl7Zm9yKHZhciByPS0xLG49W107KHI9dC5pbmRleE9mKGUscisxKSkhPT0tMTspbi5wdXNoKHIpO3JldHVybiBufWZ1bmN0aW9uIGN5KCl7dmFyIHQ9QXJyYXkucHJvdG90eXBlLmNvbmNhdC5hcHBseShbXSxhcmd1bWVudHMpO3JldHVybiB0LmZpbHRlcihmdW5jdGlvbihlLHIpe3JldHVybiByPT09dC5pbmRleE9mKGUpfSl9dmFyIHB5PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChyLG4pe249PT12b2lkIDAmJihuPXt9KSx0aGlzLnJ1bGU9cix0aGlzLm9wdGlvbnM9T2JqZWN0LmFzc2lnbih7bG9zc3k6ITEsc2FmZTohMX0sbiksdGhpcy5wb3NpdGlvbj0wLHRoaXMuY3NzPXR5cGVvZiB0aGlzLnJ1bGU9PVwic3RyaW5nXCI/dGhpcy5ydWxlOnRoaXMucnVsZS5zZWxlY3Rvcix0aGlzLnRva2Vucz0oMCxrLmRlZmF1bHQpKHtjc3M6dGhpcy5jc3MsZXJyb3I6dGhpcy5fZXJyb3JHZW5lcmF0b3IoKSxzYWZlOnRoaXMub3B0aW9ucy5zYWZlfSk7dmFyIGk9aXModGhpcy50b2tlbnNbMF0sdGhpcy50b2tlbnNbdGhpcy50b2tlbnMubGVuZ3RoLTFdKTt0aGlzLnJvb3Q9bmV3IGV5LmRlZmF1bHQoe3NvdXJjZTppfSksdGhpcy5yb290LmVycm9yR2VuZXJhdG9yPXRoaXMuX2Vycm9yR2VuZXJhdG9yKCk7dmFyIGE9bmV3IGVzLmRlZmF1bHQoe3NvdXJjZTp7c3RhcnQ6e2xpbmU6MSxjb2x1bW46MX19fSk7dGhpcy5yb290LmFwcGVuZChhKSx0aGlzLmN1cnJlbnQ9YSx0aGlzLmxvb3AoKX12YXIgZT10LnByb3RvdHlwZTtyZXR1cm4gZS5fZXJyb3JHZW5lcmF0b3I9ZnVuY3Rpb24oKXt2YXIgbj10aGlzO3JldHVybiBmdW5jdGlvbihpLGEpe3JldHVybiB0eXBlb2Ygbi5ydWxlPT1cInN0cmluZ1wiP25ldyBFcnJvcihpKTpuLnJ1bGUuZXJyb3IoaSxhKX19LGUuYXR0cmlidXRlPWZ1bmN0aW9uKCl7dmFyIG49W10saT10aGlzLmN1cnJUb2tlbjtmb3IodGhpcy5wb3NpdGlvbisrO3RoaXMucG9zaXRpb248dGhpcy50b2tlbnMubGVuZ3RoJiZ0aGlzLmN1cnJUb2tlbltrLkZJRUxEUy5UWVBFXSE9PV8uY2xvc2VTcXVhcmU7KW4ucHVzaCh0aGlzLmN1cnJUb2tlbiksdGhpcy5wb3NpdGlvbisrO2lmKHRoaXMuY3VyclRva2VuW2suRklFTERTLlRZUEVdIT09Xy5jbG9zZVNxdWFyZSlyZXR1cm4gdGhpcy5leHBlY3RlZChcImNsb3Npbmcgc3F1YXJlIGJyYWNrZXRcIix0aGlzLmN1cnJUb2tlbltrLkZJRUxEUy5TVEFSVF9QT1NdKTt2YXIgYT1uLmxlbmd0aCxzPXtzb3VyY2U6V2UoaVsxXSxpWzJdLHRoaXMuY3VyclRva2VuWzNdLHRoaXMuY3VyclRva2VuWzRdKSxzb3VyY2VJbmRleDppW2suRklFTERTLlNUQVJUX1BPU119O2lmKGE9PT0xJiYhfltfLndvcmRdLmluZGV4T2YoblswXVtrLkZJRUxEUy5UWVBFXSkpcmV0dXJuIHRoaXMuZXhwZWN0ZWQoXCJhdHRyaWJ1dGVcIixuWzBdW2suRklFTERTLlNUQVJUX1BPU10pO2Zvcih2YXIgbz0wLGw9XCJcIix1PVwiXCIsZj1udWxsLHA9ITE7bzxhOyl7dmFyIGM9bltvXSxkPXRoaXMuY29udGVudChjKSxoPW5bbysxXTtzd2l0Y2goY1trLkZJRUxEUy5UWVBFXSl7Y2FzZSBfLnNwYWNlOmlmKHA9ITAsdGhpcy5vcHRpb25zLmxvc3N5KWJyZWFrO2lmKGYpeygwLFYuZW5zdXJlT2JqZWN0KShzLFwic3BhY2VzXCIsZik7dmFyIHk9cy5zcGFjZXNbZl0uYWZ0ZXJ8fFwiXCI7cy5zcGFjZXNbZl0uYWZ0ZXI9eStkO3ZhciBtPSgwLFYuZ2V0UHJvcCkocyxcInJhd3NcIixcInNwYWNlc1wiLGYsXCJhZnRlclwiKXx8bnVsbDttJiYocy5yYXdzLnNwYWNlc1tmXS5hZnRlcj1tK2QpfWVsc2UgbD1sK2QsdT11K2Q7YnJlYWs7Y2FzZSBfLmFzdGVyaXNrOmlmKGhbay5GSUVMRFMuVFlQRV09PT1fLmVxdWFscylzLm9wZXJhdG9yPWQsZj1cIm9wZXJhdG9yXCI7ZWxzZSBpZigoIXMubmFtZXNwYWNlfHxmPT09XCJuYW1lc3BhY2VcIiYmIXApJiZoKXtsJiYoKDAsVi5lbnN1cmVPYmplY3QpKHMsXCJzcGFjZXNcIixcImF0dHJpYnV0ZVwiKSxzLnNwYWNlcy5hdHRyaWJ1dGUuYmVmb3JlPWwsbD1cIlwiKSx1JiYoKDAsVi5lbnN1cmVPYmplY3QpKHMsXCJyYXdzXCIsXCJzcGFjZXNcIixcImF0dHJpYnV0ZVwiKSxzLnJhd3Muc3BhY2VzLmF0dHJpYnV0ZS5iZWZvcmU9bCx1PVwiXCIpLHMubmFtZXNwYWNlPShzLm5hbWVzcGFjZXx8XCJcIikrZDt2YXIgZz0oMCxWLmdldFByb3ApKHMsXCJyYXdzXCIsXCJuYW1lc3BhY2VcIil8fG51bGw7ZyYmKHMucmF3cy5uYW1lc3BhY2UrPWQpLGY9XCJuYW1lc3BhY2VcIn1wPSExO2JyZWFrO2Nhc2UgXy5kb2xsYXI6aWYoZj09PVwidmFsdWVcIil7dmFyIHc9KDAsVi5nZXRQcm9wKShzLFwicmF3c1wiLFwidmFsdWVcIik7cy52YWx1ZSs9XCIkXCIsdyYmKHMucmF3cy52YWx1ZT13K1wiJFwiKTticmVha31jYXNlIF8uY2FyZXQ6aFtrLkZJRUxEUy5UWVBFXT09PV8uZXF1YWxzJiYocy5vcGVyYXRvcj1kLGY9XCJvcGVyYXRvclwiKSxwPSExO2JyZWFrO2Nhc2UgXy5jb21iaW5hdG9yOmlmKGQ9PT1cIn5cIiYmaFtrLkZJRUxEUy5UWVBFXT09PV8uZXF1YWxzJiYocy5vcGVyYXRvcj1kLGY9XCJvcGVyYXRvclwiKSxkIT09XCJ8XCIpe3A9ITE7YnJlYWt9aFtrLkZJRUxEUy5UWVBFXT09PV8uZXF1YWxzPyhzLm9wZXJhdG9yPWQsZj1cIm9wZXJhdG9yXCIpOiFzLm5hbWVzcGFjZSYmIXMuYXR0cmlidXRlJiYocy5uYW1lc3BhY2U9ITApLHA9ITE7YnJlYWs7Y2FzZSBfLndvcmQ6aWYoaCYmdGhpcy5jb250ZW50KGgpPT09XCJ8XCImJm5bbysyXSYmbltvKzJdW2suRklFTERTLlRZUEVdIT09Xy5lcXVhbHMmJiFzLm9wZXJhdG9yJiYhcy5uYW1lc3BhY2Upcy5uYW1lc3BhY2U9ZCxmPVwibmFtZXNwYWNlXCI7ZWxzZSBpZighcy5hdHRyaWJ1dGV8fGY9PT1cImF0dHJpYnV0ZVwiJiYhcCl7bCYmKCgwLFYuZW5zdXJlT2JqZWN0KShzLFwic3BhY2VzXCIsXCJhdHRyaWJ1dGVcIikscy5zcGFjZXMuYXR0cmlidXRlLmJlZm9yZT1sLGw9XCJcIiksdSYmKCgwLFYuZW5zdXJlT2JqZWN0KShzLFwicmF3c1wiLFwic3BhY2VzXCIsXCJhdHRyaWJ1dGVcIikscy5yYXdzLnNwYWNlcy5hdHRyaWJ1dGUuYmVmb3JlPXUsdT1cIlwiKSxzLmF0dHJpYnV0ZT0ocy5hdHRyaWJ1dGV8fFwiXCIpK2Q7dmFyIGI9KDAsVi5nZXRQcm9wKShzLFwicmF3c1wiLFwiYXR0cmlidXRlXCIpfHxudWxsO2ImJihzLnJhd3MuYXR0cmlidXRlKz1kKSxmPVwiYXR0cmlidXRlXCJ9ZWxzZSBpZighcy52YWx1ZSYmcy52YWx1ZSE9PVwiXCJ8fGY9PT1cInZhbHVlXCImJiEocHx8cy5xdW90ZU1hcmspKXt2YXIgdj0oMCxWLnVuZXNjKShkKSxPPSgwLFYuZ2V0UHJvcCkocyxcInJhd3NcIixcInZhbHVlXCIpfHxcIlwiLHg9cy52YWx1ZXx8XCJcIjtzLnZhbHVlPXgrdixzLnF1b3RlTWFyaz1udWxsLCh2IT09ZHx8TykmJigoMCxWLmVuc3VyZU9iamVjdCkocyxcInJhd3NcIikscy5yYXdzLnZhbHVlPShPfHx4KStkKSxmPVwidmFsdWVcIn1lbHNle3ZhciBBPWQ9PT1cImlcInx8ZD09PVwiSVwiOyhzLnZhbHVlfHxzLnZhbHVlPT09XCJcIikmJihzLnF1b3RlTWFya3x8cCk/KHMuaW5zZW5zaXRpdmU9QSwoIUF8fGQ9PT1cIklcIikmJigoMCxWLmVuc3VyZU9iamVjdCkocyxcInJhd3NcIikscy5yYXdzLmluc2Vuc2l0aXZlRmxhZz1kKSxmPVwiaW5zZW5zaXRpdmVcIixsJiYoKDAsVi5lbnN1cmVPYmplY3QpKHMsXCJzcGFjZXNcIixcImluc2Vuc2l0aXZlXCIpLHMuc3BhY2VzLmluc2Vuc2l0aXZlLmJlZm9yZT1sLGw9XCJcIiksdSYmKCgwLFYuZW5zdXJlT2JqZWN0KShzLFwicmF3c1wiLFwic3BhY2VzXCIsXCJpbnNlbnNpdGl2ZVwiKSxzLnJhd3Muc3BhY2VzLmluc2Vuc2l0aXZlLmJlZm9yZT11LHU9XCJcIikpOihzLnZhbHVlfHxzLnZhbHVlPT09XCJcIikmJihmPVwidmFsdWVcIixzLnZhbHVlKz1kLHMucmF3cy52YWx1ZSYmKHMucmF3cy52YWx1ZSs9ZCkpfXA9ITE7YnJlYWs7Y2FzZSBfLnN0cjppZighcy5hdHRyaWJ1dGV8fCFzLm9wZXJhdG9yKXJldHVybiB0aGlzLmVycm9yKFwiRXhwZWN0ZWQgYW4gYXR0cmlidXRlIGZvbGxvd2VkIGJ5IGFuIG9wZXJhdG9yIHByZWNlZGluZyB0aGUgc3RyaW5nLlwiLHtpbmRleDpjW2suRklFTERTLlNUQVJUX1BPU119KTt2YXIgRT0oMCxabC51bmVzY2FwZVZhbHVlKShkKSxJPUUudW5lc2NhcGVkLEY9RS5xdW90ZU1hcms7cy52YWx1ZT1JLHMucXVvdGVNYXJrPUYsZj1cInZhbHVlXCIsKDAsVi5lbnN1cmVPYmplY3QpKHMsXCJyYXdzXCIpLHMucmF3cy52YWx1ZT1kLHA9ITE7YnJlYWs7Y2FzZSBfLmVxdWFsczppZighcy5hdHRyaWJ1dGUpcmV0dXJuIHRoaXMuZXhwZWN0ZWQoXCJhdHRyaWJ1dGVcIixjW2suRklFTERTLlNUQVJUX1BPU10sZCk7aWYocy52YWx1ZSlyZXR1cm4gdGhpcy5lcnJvcignVW5leHBlY3RlZCBcIj1cIiBmb3VuZDsgYW4gb3BlcmF0b3Igd2FzIGFscmVhZHkgZGVmaW5lZC4nLHtpbmRleDpjW2suRklFTERTLlNUQVJUX1BPU119KTtzLm9wZXJhdG9yPXMub3BlcmF0b3I/cy5vcGVyYXRvcitkOmQsZj1cIm9wZXJhdG9yXCIscD0hMTticmVhaztjYXNlIF8uY29tbWVudDppZihmKWlmKHB8fGgmJmhbay5GSUVMRFMuVFlQRV09PT1fLnNwYWNlfHxmPT09XCJpbnNlbnNpdGl2ZVwiKXt2YXIgWT0oMCxWLmdldFByb3ApKHMsXCJzcGFjZXNcIixmLFwiYWZ0ZXJcIil8fFwiXCIsSz0oMCxWLmdldFByb3ApKHMsXCJyYXdzXCIsXCJzcGFjZXNcIixmLFwiYWZ0ZXJcIil8fFk7KDAsVi5lbnN1cmVPYmplY3QpKHMsXCJyYXdzXCIsXCJzcGFjZXNcIixmKSxzLnJhd3Muc3BhY2VzW2ZdLmFmdGVyPUsrZH1lbHNle3ZhciBCPXNbZl18fFwiXCIscWU9KDAsVi5nZXRQcm9wKShzLFwicmF3c1wiLGYpfHxCOygwLFYuZW5zdXJlT2JqZWN0KShzLFwicmF3c1wiKSxzLnJhd3NbZl09cWUrZH1lbHNlIHU9dStkO2JyZWFrO2RlZmF1bHQ6cmV0dXJuIHRoaXMuZXJyb3IoJ1VuZXhwZWN0ZWQgXCInK2QrJ1wiIGZvdW5kLicse2luZGV4OmNbay5GSUVMRFMuU1RBUlRfUE9TXX0pfW8rK310dChzLFwiYXR0cmlidXRlXCIpLHR0KHMsXCJuYW1lc3BhY2VcIiksdGhpcy5uZXdOb2RlKG5ldyBabC5kZWZhdWx0KHMpKSx0aGlzLnBvc2l0aW9uKyt9LGUucGFyc2VXaGl0ZXNwYWNlRXF1aXZhbGVudFRva2Vucz1mdW5jdGlvbihuKXtuPDAmJihuPXRoaXMudG9rZW5zLmxlbmd0aCk7dmFyIGk9dGhpcy5wb3NpdGlvbixhPVtdLHM9XCJcIixvPXZvaWQgMDtkbyBpZihhc1t0aGlzLmN1cnJUb2tlbltrLkZJRUxEUy5UWVBFXV0pdGhpcy5vcHRpb25zLmxvc3N5fHwocys9dGhpcy5jb250ZW50KCkpO2Vsc2UgaWYodGhpcy5jdXJyVG9rZW5bay5GSUVMRFMuVFlQRV09PT1fLmNvbW1lbnQpe3ZhciBsPXt9O3MmJihsLmJlZm9yZT1zLHM9XCJcIiksbz1uZXcgS2wuZGVmYXVsdCh7dmFsdWU6dGhpcy5jb250ZW50KCksc291cmNlOmV0KHRoaXMuY3VyclRva2VuKSxzb3VyY2VJbmRleDp0aGlzLmN1cnJUb2tlbltrLkZJRUxEUy5TVEFSVF9QT1NdLHNwYWNlczpsfSksYS5wdXNoKG8pfXdoaWxlKCsrdGhpcy5wb3NpdGlvbjxuKTtpZihzKXtpZihvKW8uc3BhY2VzLmFmdGVyPXM7ZWxzZSBpZighdGhpcy5vcHRpb25zLmxvc3N5KXt2YXIgdT10aGlzLnRva2Vuc1tpXSxmPXRoaXMudG9rZW5zW3RoaXMucG9zaXRpb24tMV07YS5wdXNoKG5ldyB0cy5kZWZhdWx0KHt2YWx1ZTpcIlwiLHNvdXJjZTpXZSh1W2suRklFTERTLlNUQVJUX0xJTkVdLHVbay5GSUVMRFMuU1RBUlRfQ09MXSxmW2suRklFTERTLkVORF9MSU5FXSxmW2suRklFTERTLkVORF9DT0xdKSxzb3VyY2VJbmRleDp1W2suRklFTERTLlNUQVJUX1BPU10sc3BhY2VzOntiZWZvcmU6cyxhZnRlcjpcIlwifX0pKX19cmV0dXJuIGF9LGUuY29udmVydFdoaXRlc3BhY2VOb2Rlc1RvU3BhY2U9ZnVuY3Rpb24obixpKXt2YXIgYT10aGlzO2k9PT12b2lkIDAmJihpPSExKTt2YXIgcz1cIlwiLG89XCJcIjtuLmZvckVhY2goZnVuY3Rpb24odSl7dmFyIGY9YS5sb3NzeVNwYWNlKHUuc3BhY2VzLmJlZm9yZSxpKSxwPWEubG9zc3lTcGFjZSh1LnJhd1NwYWNlQmVmb3JlLGkpO3MrPWYrYS5sb3NzeVNwYWNlKHUuc3BhY2VzLmFmdGVyLGkmJmYubGVuZ3RoPT09MCksbys9Zit1LnZhbHVlK2EubG9zc3lTcGFjZSh1LnJhd1NwYWNlQWZ0ZXIsaSYmcC5sZW5ndGg9PT0wKX0pLG89PT1zJiYobz12b2lkIDApO3ZhciBsPXtzcGFjZTpzLHJhd1NwYWNlOm99O3JldHVybiBsfSxlLmlzTmFtZWRDb21iaW5hdG9yPWZ1bmN0aW9uKG4pe3JldHVybiBuPT09dm9pZCAwJiYobj10aGlzLnBvc2l0aW9uKSx0aGlzLnRva2Vuc1tuKzBdJiZ0aGlzLnRva2Vuc1tuKzBdW2suRklFTERTLlRZUEVdPT09Xy5zbGFzaCYmdGhpcy50b2tlbnNbbisxXSYmdGhpcy50b2tlbnNbbisxXVtrLkZJRUxEUy5UWVBFXT09PV8ud29yZCYmdGhpcy50b2tlbnNbbisyXSYmdGhpcy50b2tlbnNbbisyXVtrLkZJRUxEUy5UWVBFXT09PV8uc2xhc2h9LGUubmFtZWRDb21iaW5hdG9yPWZ1bmN0aW9uKCl7aWYodGhpcy5pc05hbWVkQ29tYmluYXRvcigpKXt2YXIgbj10aGlzLmNvbnRlbnQodGhpcy50b2tlbnNbdGhpcy5wb3NpdGlvbisxXSksaT0oMCxWLnVuZXNjKShuKS50b0xvd2VyQ2FzZSgpLGE9e307aSE9PW4mJihhLnZhbHVlPVwiL1wiK24rXCIvXCIpO3ZhciBzPW5ldyBycy5kZWZhdWx0KHt2YWx1ZTpcIi9cIitpK1wiL1wiLHNvdXJjZTpXZSh0aGlzLmN1cnJUb2tlbltrLkZJRUxEUy5TVEFSVF9MSU5FXSx0aGlzLmN1cnJUb2tlbltrLkZJRUxEUy5TVEFSVF9DT0xdLHRoaXMudG9rZW5zW3RoaXMucG9zaXRpb24rMl1bay5GSUVMRFMuRU5EX0xJTkVdLHRoaXMudG9rZW5zW3RoaXMucG9zaXRpb24rMl1bay5GSUVMRFMuRU5EX0NPTF0pLHNvdXJjZUluZGV4OnRoaXMuY3VyclRva2VuW2suRklFTERTLlNUQVJUX1BPU10scmF3czphfSk7cmV0dXJuIHRoaXMucG9zaXRpb249dGhpcy5wb3NpdGlvbiszLHN9ZWxzZSB0aGlzLnVuZXhwZWN0ZWQoKX0sZS5jb21iaW5hdG9yPWZ1bmN0aW9uKCl7dmFyIG49dGhpcztpZih0aGlzLmNvbnRlbnQoKT09PVwifFwiKXJldHVybiB0aGlzLm5hbWVzcGFjZSgpO3ZhciBpPXRoaXMubG9jYXRlTmV4dE1lYW5pbmdmdWxUb2tlbih0aGlzLnBvc2l0aW9uKTtpZihpPDB8fHRoaXMudG9rZW5zW2ldW2suRklFTERTLlRZUEVdPT09Xy5jb21tYSl7dmFyIGE9dGhpcy5wYXJzZVdoaXRlc3BhY2VFcXVpdmFsZW50VG9rZW5zKGkpO2lmKGEubGVuZ3RoPjApe3ZhciBzPXRoaXMuY3VycmVudC5sYXN0O2lmKHMpe3ZhciBvPXRoaXMuY29udmVydFdoaXRlc3BhY2VOb2Rlc1RvU3BhY2UoYSksbD1vLnNwYWNlLHU9by5yYXdTcGFjZTt1IT09dm9pZCAwJiYocy5yYXdTcGFjZUFmdGVyKz11KSxzLnNwYWNlcy5hZnRlcis9bH1lbHNlIGEuZm9yRWFjaChmdW5jdGlvbihPKXtyZXR1cm4gbi5uZXdOb2RlKE8pfSl9cmV0dXJufXZhciBmPXRoaXMuY3VyclRva2VuLHA9dm9pZCAwO2k+dGhpcy5wb3NpdGlvbiYmKHA9dGhpcy5wYXJzZVdoaXRlc3BhY2VFcXVpdmFsZW50VG9rZW5zKGkpKTt2YXIgYztpZih0aGlzLmlzTmFtZWRDb21iaW5hdG9yKCk/Yz10aGlzLm5hbWVkQ29tYmluYXRvcigpOnRoaXMuY3VyclRva2VuW2suRklFTERTLlRZUEVdPT09Xy5jb21iaW5hdG9yPyhjPW5ldyBycy5kZWZhdWx0KHt2YWx1ZTp0aGlzLmNvbnRlbnQoKSxzb3VyY2U6ZXQodGhpcy5jdXJyVG9rZW4pLHNvdXJjZUluZGV4OnRoaXMuY3VyclRva2VuW2suRklFTERTLlNUQVJUX1BPU119KSx0aGlzLnBvc2l0aW9uKyspOmFzW3RoaXMuY3VyclRva2VuW2suRklFTERTLlRZUEVdXXx8cHx8dGhpcy51bmV4cGVjdGVkKCksYyl7aWYocCl7dmFyIGQ9dGhpcy5jb252ZXJ0V2hpdGVzcGFjZU5vZGVzVG9TcGFjZShwKSxoPWQuc3BhY2UseT1kLnJhd1NwYWNlO2Muc3BhY2VzLmJlZm9yZT1oLGMucmF3U3BhY2VCZWZvcmU9eX19ZWxzZXt2YXIgbT10aGlzLmNvbnZlcnRXaGl0ZXNwYWNlTm9kZXNUb1NwYWNlKHAsITApLGc9bS5zcGFjZSx3PW0ucmF3U3BhY2U7d3x8KHc9Zyk7dmFyIGI9e30sdj17c3BhY2VzOnt9fTtnLmVuZHNXaXRoKFwiIFwiKSYmdy5lbmRzV2l0aChcIiBcIik/KGIuYmVmb3JlPWcuc2xpY2UoMCxnLmxlbmd0aC0xKSx2LnNwYWNlcy5iZWZvcmU9dy5zbGljZSgwLHcubGVuZ3RoLTEpKTpnLnN0YXJ0c1dpdGgoXCIgXCIpJiZ3LnN0YXJ0c1dpdGgoXCIgXCIpPyhiLmFmdGVyPWcuc2xpY2UoMSksdi5zcGFjZXMuYWZ0ZXI9dy5zbGljZSgxKSk6di52YWx1ZT13LGM9bmV3IHJzLmRlZmF1bHQoe3ZhbHVlOlwiIFwiLHNvdXJjZTppcyhmLHRoaXMudG9rZW5zW3RoaXMucG9zaXRpb24tMV0pLHNvdXJjZUluZGV4OmZbay5GSUVMRFMuU1RBUlRfUE9TXSxzcGFjZXM6YixyYXdzOnZ9KX1yZXR1cm4gdGhpcy5jdXJyVG9rZW4mJnRoaXMuY3VyclRva2VuW2suRklFTERTLlRZUEVdPT09Xy5zcGFjZSYmKGMuc3BhY2VzLmFmdGVyPXRoaXMub3B0aW9uYWxTcGFjZSh0aGlzLmNvbnRlbnQoKSksdGhpcy5wb3NpdGlvbisrKSx0aGlzLm5ld05vZGUoYyl9LGUuY29tbWE9ZnVuY3Rpb24oKXtpZih0aGlzLnBvc2l0aW9uPT09dGhpcy50b2tlbnMubGVuZ3RoLTEpe3RoaXMucm9vdC50cmFpbGluZ0NvbW1hPSEwLHRoaXMucG9zaXRpb24rKztyZXR1cm59dGhpcy5jdXJyZW50Ll9pbmZlckVuZFBvc2l0aW9uKCk7dmFyIG49bmV3IGVzLmRlZmF1bHQoe3NvdXJjZTp7c3RhcnQ6dHUodGhpcy50b2tlbnNbdGhpcy5wb3NpdGlvbisxXSl9fSk7dGhpcy5jdXJyZW50LnBhcmVudC5hcHBlbmQobiksdGhpcy5jdXJyZW50PW4sdGhpcy5wb3NpdGlvbisrfSxlLmNvbW1lbnQ9ZnVuY3Rpb24oKXt2YXIgbj10aGlzLmN1cnJUb2tlbjt0aGlzLm5ld05vZGUobmV3IEtsLmRlZmF1bHQoe3ZhbHVlOnRoaXMuY29udGVudCgpLHNvdXJjZTpldChuKSxzb3VyY2VJbmRleDpuW2suRklFTERTLlNUQVJUX1BPU119KSksdGhpcy5wb3NpdGlvbisrfSxlLmVycm9yPWZ1bmN0aW9uKG4saSl7dGhyb3cgdGhpcy5yb290LmVycm9yKG4saSl9LGUubWlzc2luZ0JhY2tzbGFzaD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmVycm9yKFwiRXhwZWN0ZWQgYSBiYWNrc2xhc2ggcHJlY2VkaW5nIHRoZSBzZW1pY29sb24uXCIse2luZGV4OnRoaXMuY3VyclRva2VuW2suRklFTERTLlNUQVJUX1BPU119KX0sZS5taXNzaW5nUGFyZW50aGVzaXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5leHBlY3RlZChcIm9wZW5pbmcgcGFyZW50aGVzaXNcIix0aGlzLmN1cnJUb2tlbltrLkZJRUxEUy5TVEFSVF9QT1NdKX0sZS5taXNzaW5nU3F1YXJlQnJhY2tldD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmV4cGVjdGVkKFwib3BlbmluZyBzcXVhcmUgYnJhY2tldFwiLHRoaXMuY3VyclRva2VuW2suRklFTERTLlNUQVJUX1BPU10pfSxlLnVuZXhwZWN0ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lcnJvcihcIlVuZXhwZWN0ZWQgJ1wiK3RoaXMuY29udGVudCgpK1wiJy4gRXNjYXBpbmcgc3BlY2lhbCBjaGFyYWN0ZXJzIHdpdGggXFxcXCBtYXkgaGVscC5cIix0aGlzLmN1cnJUb2tlbltrLkZJRUxEUy5TVEFSVF9QT1NdKX0sZS51bmV4cGVjdGVkUGlwZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmVycm9yKFwiVW5leHBlY3RlZCAnfCcuXCIsdGhpcy5jdXJyVG9rZW5bay5GSUVMRFMuU1RBUlRfUE9TXSl9LGUubmFtZXNwYWNlPWZ1bmN0aW9uKCl7dmFyIG49dGhpcy5wcmV2VG9rZW4mJnRoaXMuY29udGVudCh0aGlzLnByZXZUb2tlbil8fCEwO2lmKHRoaXMubmV4dFRva2VuW2suRklFTERTLlRZUEVdPT09Xy53b3JkKXJldHVybiB0aGlzLnBvc2l0aW9uKyssdGhpcy53b3JkKG4pO2lmKHRoaXMubmV4dFRva2VuW2suRklFTERTLlRZUEVdPT09Xy5hc3RlcmlzaylyZXR1cm4gdGhpcy5wb3NpdGlvbisrLHRoaXMudW5pdmVyc2FsKG4pO3RoaXMudW5leHBlY3RlZFBpcGUoKX0sZS5uZXN0aW5nPWZ1bmN0aW9uKCl7aWYodGhpcy5uZXh0VG9rZW4pe3ZhciBuPXRoaXMuY29udGVudCh0aGlzLm5leHRUb2tlbik7aWYobj09PVwifFwiKXt0aGlzLnBvc2l0aW9uKys7cmV0dXJufX12YXIgaT10aGlzLmN1cnJUb2tlbjt0aGlzLm5ld05vZGUobmV3IGF5LmRlZmF1bHQoe3ZhbHVlOnRoaXMuY29udGVudCgpLHNvdXJjZTpldChpKSxzb3VyY2VJbmRleDppW2suRklFTERTLlNUQVJUX1BPU119KSksdGhpcy5wb3NpdGlvbisrfSxlLnBhcmVudGhlc2VzPWZ1bmN0aW9uKCl7dmFyIG49dGhpcy5jdXJyZW50Lmxhc3QsaT0xO2lmKHRoaXMucG9zaXRpb24rKyxuJiZuLnR5cGU9PT1seS5QU0VVRE8pe3ZhciBhPW5ldyBlcy5kZWZhdWx0KHtzb3VyY2U6e3N0YXJ0OnR1KHRoaXMudG9rZW5zW3RoaXMucG9zaXRpb24tMV0pfX0pLHM9dGhpcy5jdXJyZW50O2ZvcihuLmFwcGVuZChhKSx0aGlzLmN1cnJlbnQ9YTt0aGlzLnBvc2l0aW9uPHRoaXMudG9rZW5zLmxlbmd0aCYmaTspdGhpcy5jdXJyVG9rZW5bay5GSUVMRFMuVFlQRV09PT1fLm9wZW5QYXJlbnRoZXNpcyYmaSsrLHRoaXMuY3VyclRva2VuW2suRklFTERTLlRZUEVdPT09Xy5jbG9zZVBhcmVudGhlc2lzJiZpLS0saT90aGlzLnBhcnNlKCk6KHRoaXMuY3VycmVudC5zb3VyY2UuZW5kPXJ1KHRoaXMuY3VyclRva2VuKSx0aGlzLmN1cnJlbnQucGFyZW50LnNvdXJjZS5lbmQ9cnUodGhpcy5jdXJyVG9rZW4pLHRoaXMucG9zaXRpb24rKyk7dGhpcy5jdXJyZW50PXN9ZWxzZXtmb3IodmFyIG89dGhpcy5jdXJyVG9rZW4sbD1cIihcIix1O3RoaXMucG9zaXRpb248dGhpcy50b2tlbnMubGVuZ3RoJiZpOyl0aGlzLmN1cnJUb2tlbltrLkZJRUxEUy5UWVBFXT09PV8ub3BlblBhcmVudGhlc2lzJiZpKyssdGhpcy5jdXJyVG9rZW5bay5GSUVMRFMuVFlQRV09PT1fLmNsb3NlUGFyZW50aGVzaXMmJmktLSx1PXRoaXMuY3VyclRva2VuLGwrPXRoaXMucGFyc2VQYXJlbnRoZXNpc1Rva2VuKHRoaXMuY3VyclRva2VuKSx0aGlzLnBvc2l0aW9uKys7bj9uLmFwcGVuZFRvUHJvcGVydHlBbmRFc2NhcGUoXCJ2YWx1ZVwiLGwsbCk6dGhpcy5uZXdOb2RlKG5ldyB0cy5kZWZhdWx0KHt2YWx1ZTpsLHNvdXJjZTpXZShvW2suRklFTERTLlNUQVJUX0xJTkVdLG9bay5GSUVMRFMuU1RBUlRfQ09MXSx1W2suRklFTERTLkVORF9MSU5FXSx1W2suRklFTERTLkVORF9DT0xdKSxzb3VyY2VJbmRleDpvW2suRklFTERTLlNUQVJUX1BPU119KSl9aWYoaSlyZXR1cm4gdGhpcy5leHBlY3RlZChcImNsb3NpbmcgcGFyZW50aGVzaXNcIix0aGlzLmN1cnJUb2tlbltrLkZJRUxEUy5TVEFSVF9QT1NdKX0sZS5wc2V1ZG89ZnVuY3Rpb24oKXtmb3IodmFyIG49dGhpcyxpPVwiXCIsYT10aGlzLmN1cnJUb2tlbjt0aGlzLmN1cnJUb2tlbiYmdGhpcy5jdXJyVG9rZW5bay5GSUVMRFMuVFlQRV09PT1fLmNvbG9uOylpKz10aGlzLmNvbnRlbnQoKSx0aGlzLnBvc2l0aW9uKys7aWYoIXRoaXMuY3VyclRva2VuKXJldHVybiB0aGlzLmV4cGVjdGVkKFtcInBzZXVkby1jbGFzc1wiLFwicHNldWRvLWVsZW1lbnRcIl0sdGhpcy5wb3NpdGlvbi0xKTtpZih0aGlzLmN1cnJUb2tlbltrLkZJRUxEUy5UWVBFXT09PV8ud29yZCl0aGlzLnNwbGl0V29yZCghMSxmdW5jdGlvbihzLG8pe2krPXMsbi5uZXdOb2RlKG5ldyBpeS5kZWZhdWx0KHt2YWx1ZTppLHNvdXJjZTppcyhhLG4uY3VyclRva2VuKSxzb3VyY2VJbmRleDphW2suRklFTERTLlNUQVJUX1BPU119KSksbz4xJiZuLm5leHRUb2tlbiYmbi5uZXh0VG9rZW5bay5GSUVMRFMuVFlQRV09PT1fLm9wZW5QYXJlbnRoZXNpcyYmbi5lcnJvcihcIk1pc3BsYWNlZCBwYXJlbnRoZXNpcy5cIix7aW5kZXg6bi5uZXh0VG9rZW5bay5GSUVMRFMuU1RBUlRfUE9TXX0pfSk7ZWxzZSByZXR1cm4gdGhpcy5leHBlY3RlZChbXCJwc2V1ZG8tY2xhc3NcIixcInBzZXVkby1lbGVtZW50XCJdLHRoaXMuY3VyclRva2VuW2suRklFTERTLlNUQVJUX1BPU10pfSxlLnNwYWNlPWZ1bmN0aW9uKCl7dmFyIG49dGhpcy5jb250ZW50KCk7dGhpcy5wb3NpdGlvbj09PTB8fHRoaXMucHJldlRva2VuW2suRklFTERTLlRZUEVdPT09Xy5jb21tYXx8dGhpcy5wcmV2VG9rZW5bay5GSUVMRFMuVFlQRV09PT1fLm9wZW5QYXJlbnRoZXNpc3x8dGhpcy5jdXJyZW50Lm5vZGVzLmV2ZXJ5KGZ1bmN0aW9uKGkpe3JldHVybiBpLnR5cGU9PT1cImNvbW1lbnRcIn0pPyh0aGlzLnNwYWNlcz10aGlzLm9wdGlvbmFsU3BhY2UobiksdGhpcy5wb3NpdGlvbisrKTp0aGlzLnBvc2l0aW9uPT09dGhpcy50b2tlbnMubGVuZ3RoLTF8fHRoaXMubmV4dFRva2VuW2suRklFTERTLlRZUEVdPT09Xy5jb21tYXx8dGhpcy5uZXh0VG9rZW5bay5GSUVMRFMuVFlQRV09PT1fLmNsb3NlUGFyZW50aGVzaXM/KHRoaXMuY3VycmVudC5sYXN0LnNwYWNlcy5hZnRlcj10aGlzLm9wdGlvbmFsU3BhY2UobiksdGhpcy5wb3NpdGlvbisrKTp0aGlzLmNvbWJpbmF0b3IoKX0sZS5zdHJpbmc9ZnVuY3Rpb24oKXt2YXIgbj10aGlzLmN1cnJUb2tlbjt0aGlzLm5ld05vZGUobmV3IHRzLmRlZmF1bHQoe3ZhbHVlOnRoaXMuY29udGVudCgpLHNvdXJjZTpldChuKSxzb3VyY2VJbmRleDpuW2suRklFTERTLlNUQVJUX1BPU119KSksdGhpcy5wb3NpdGlvbisrfSxlLnVuaXZlcnNhbD1mdW5jdGlvbihuKXt2YXIgaT10aGlzLm5leHRUb2tlbjtpZihpJiZ0aGlzLmNvbnRlbnQoaSk9PT1cInxcIilyZXR1cm4gdGhpcy5wb3NpdGlvbisrLHRoaXMubmFtZXNwYWNlKCk7dmFyIGE9dGhpcy5jdXJyVG9rZW47dGhpcy5uZXdOb2RlKG5ldyBzeS5kZWZhdWx0KHt2YWx1ZTp0aGlzLmNvbnRlbnQoKSxzb3VyY2U6ZXQoYSksc291cmNlSW5kZXg6YVtrLkZJRUxEUy5TVEFSVF9QT1NdfSksbiksdGhpcy5wb3NpdGlvbisrfSxlLnNwbGl0V29yZD1mdW5jdGlvbihuLGkpe2Zvcih2YXIgYT10aGlzLHM9dGhpcy5uZXh0VG9rZW4sbz10aGlzLmNvbnRlbnQoKTtzJiZ+W18uZG9sbGFyLF8uY2FyZXQsXy5lcXVhbHMsXy53b3JkXS5pbmRleE9mKHNbay5GSUVMRFMuVFlQRV0pOyl7dGhpcy5wb3NpdGlvbisrO3ZhciBsPXRoaXMuY29udGVudCgpO2lmKG8rPWwsbC5sYXN0SW5kZXhPZihcIlxcXFxcIik9PT1sLmxlbmd0aC0xKXt2YXIgdT10aGlzLm5leHRUb2tlbjt1JiZ1W2suRklFTERTLlRZUEVdPT09Xy5zcGFjZSYmKG8rPXRoaXMucmVxdWlyZWRTcGFjZSh0aGlzLmNvbnRlbnQodSkpLHRoaXMucG9zaXRpb24rKyl9cz10aGlzLm5leHRUb2tlbn12YXIgZj1zcyhvLFwiLlwiKS5maWx0ZXIoZnVuY3Rpb24oaCl7dmFyIHk9b1toLTFdPT09XCJcXFxcXCIsbT0vXlxcZCtcXC5cXGQrJSQvLnRlc3Qobyk7cmV0dXJuIXkmJiFtfSkscD1zcyhvLFwiI1wiKS5maWx0ZXIoZnVuY3Rpb24oaCl7cmV0dXJuIG9baC0xXSE9PVwiXFxcXFwifSksYz1zcyhvLFwiI3tcIik7Yy5sZW5ndGgmJihwPXAuZmlsdGVyKGZ1bmN0aW9uKGgpe3JldHVybiF+Yy5pbmRleE9mKGgpfSkpO3ZhciBkPSgwLG95LmRlZmF1bHQpKGN5KFswXS5jb25jYXQoZixwKSkpO2QuZm9yRWFjaChmdW5jdGlvbihoLHkpe3ZhciBtPWRbeSsxXXx8by5sZW5ndGgsZz1vLnNsaWNlKGgsbSk7aWYoeT09PTAmJmkpcmV0dXJuIGkuY2FsbChhLGcsZC5sZW5ndGgpO3ZhciB3LGI9YS5jdXJyVG9rZW4sdj1iW2suRklFTERTLlNUQVJUX1BPU10rZFt5XSxPPVdlKGJbMV0sYlsyXStoLGJbM10sYlsyXSsobS0xKSk7aWYofmYuaW5kZXhPZihoKSl7dmFyIHg9e3ZhbHVlOmcuc2xpY2UoMSksc291cmNlOk8sc291cmNlSW5kZXg6dn07dz1uZXcgdHkuZGVmYXVsdCh0dCh4LFwidmFsdWVcIikpfWVsc2UgaWYofnAuaW5kZXhPZihoKSl7dmFyIEE9e3ZhbHVlOmcuc2xpY2UoMSksc291cmNlOk8sc291cmNlSW5kZXg6dn07dz1uZXcgcnkuZGVmYXVsdCh0dChBLFwidmFsdWVcIikpfWVsc2V7dmFyIEU9e3ZhbHVlOmcsc291cmNlOk8sc291cmNlSW5kZXg6dn07dHQoRSxcInZhbHVlXCIpLHc9bmV3IG55LmRlZmF1bHQoRSl9YS5uZXdOb2RlKHcsbiksbj1udWxsfSksdGhpcy5wb3NpdGlvbisrfSxlLndvcmQ9ZnVuY3Rpb24obil7dmFyIGk9dGhpcy5uZXh0VG9rZW47cmV0dXJuIGkmJnRoaXMuY29udGVudChpKT09PVwifFwiPyh0aGlzLnBvc2l0aW9uKyssdGhpcy5uYW1lc3BhY2UoKSk6dGhpcy5zcGxpdFdvcmQobil9LGUubG9vcD1mdW5jdGlvbigpe2Zvcig7dGhpcy5wb3NpdGlvbjx0aGlzLnRva2Vucy5sZW5ndGg7KXRoaXMucGFyc2UoITApO3JldHVybiB0aGlzLmN1cnJlbnQuX2luZmVyRW5kUG9zaXRpb24oKSx0aGlzLnJvb3R9LGUucGFyc2U9ZnVuY3Rpb24obil7c3dpdGNoKHRoaXMuY3VyclRva2VuW2suRklFTERTLlRZUEVdKXtjYXNlIF8uc3BhY2U6dGhpcy5zcGFjZSgpO2JyZWFrO2Nhc2UgXy5jb21tZW50OnRoaXMuY29tbWVudCgpO2JyZWFrO2Nhc2UgXy5vcGVuUGFyZW50aGVzaXM6dGhpcy5wYXJlbnRoZXNlcygpO2JyZWFrO2Nhc2UgXy5jbG9zZVBhcmVudGhlc2lzOm4mJnRoaXMubWlzc2luZ1BhcmVudGhlc2lzKCk7YnJlYWs7Y2FzZSBfLm9wZW5TcXVhcmU6dGhpcy5hdHRyaWJ1dGUoKTticmVhaztjYXNlIF8uZG9sbGFyOmNhc2UgXy5jYXJldDpjYXNlIF8uZXF1YWxzOmNhc2UgXy53b3JkOnRoaXMud29yZCgpO2JyZWFrO2Nhc2UgXy5jb2xvbjp0aGlzLnBzZXVkbygpO2JyZWFrO2Nhc2UgXy5jb21tYTp0aGlzLmNvbW1hKCk7YnJlYWs7Y2FzZSBfLmFzdGVyaXNrOnRoaXMudW5pdmVyc2FsKCk7YnJlYWs7Y2FzZSBfLmFtcGVyc2FuZDp0aGlzLm5lc3RpbmcoKTticmVhaztjYXNlIF8uc2xhc2g6Y2FzZSBfLmNvbWJpbmF0b3I6dGhpcy5jb21iaW5hdG9yKCk7YnJlYWs7Y2FzZSBfLnN0cjp0aGlzLnN0cmluZygpO2JyZWFrO2Nhc2UgXy5jbG9zZVNxdWFyZTp0aGlzLm1pc3NpbmdTcXVhcmVCcmFja2V0KCk7Y2FzZSBfLnNlbWljb2xvbjp0aGlzLm1pc3NpbmdCYWNrc2xhc2goKTtkZWZhdWx0OnRoaXMudW5leHBlY3RlZCgpfX0sZS5leHBlY3RlZD1mdW5jdGlvbihuLGksYSl7aWYoQXJyYXkuaXNBcnJheShuKSl7dmFyIHM9bi5wb3AoKTtuPW4uam9pbihcIiwgXCIpK1wiIG9yIFwiK3N9dmFyIG89L15bYWVpb3VdLy50ZXN0KG5bMF0pP1wiYW5cIjpcImFcIjtyZXR1cm4gYT90aGlzLmVycm9yKFwiRXhwZWN0ZWQgXCIrbytcIiBcIituKycsIGZvdW5kIFwiJythKydcIiBpbnN0ZWFkLicse2luZGV4Oml9KTp0aGlzLmVycm9yKFwiRXhwZWN0ZWQgXCIrbytcIiBcIituK1wiLlwiLHtpbmRleDppfSl9LGUucmVxdWlyZWRTcGFjZT1mdW5jdGlvbihuKXtyZXR1cm4gdGhpcy5vcHRpb25zLmxvc3N5P1wiIFwiOm59LGUub3B0aW9uYWxTcGFjZT1mdW5jdGlvbihuKXtyZXR1cm4gdGhpcy5vcHRpb25zLmxvc3N5P1wiXCI6bn0sZS5sb3NzeVNwYWNlPWZ1bmN0aW9uKG4saSl7cmV0dXJuIHRoaXMub3B0aW9ucy5sb3NzeT9pP1wiIFwiOlwiXCI6bn0sZS5wYXJzZVBhcmVudGhlc2lzVG9rZW49ZnVuY3Rpb24obil7dmFyIGk9dGhpcy5jb250ZW50KG4pO3JldHVybiBuW2suRklFTERTLlRZUEVdPT09Xy5zcGFjZT90aGlzLnJlcXVpcmVkU3BhY2UoaSk6aX0sZS5uZXdOb2RlPWZ1bmN0aW9uKG4saSl7cmV0dXJuIGkmJigvXiArJC8udGVzdChpKSYmKHRoaXMub3B0aW9ucy5sb3NzeXx8KHRoaXMuc3BhY2VzPSh0aGlzLnNwYWNlc3x8XCJcIikraSksaT0hMCksbi5uYW1lc3BhY2U9aSx0dChuLFwibmFtZXNwYWNlXCIpKSx0aGlzLnNwYWNlcyYmKG4uc3BhY2VzLmJlZm9yZT10aGlzLnNwYWNlcyx0aGlzLnNwYWNlcz1cIlwiKSx0aGlzLmN1cnJlbnQuYXBwZW5kKG4pfSxlLmNvbnRlbnQ9ZnVuY3Rpb24obil7cmV0dXJuIG49PT12b2lkIDAmJihuPXRoaXMuY3VyclRva2VuKSx0aGlzLmNzcy5zbGljZShuW2suRklFTERTLlNUQVJUX1BPU10sbltrLkZJRUxEUy5FTkRfUE9TXSl9LGUubG9jYXRlTmV4dE1lYW5pbmdmdWxUb2tlbj1mdW5jdGlvbihuKXtuPT09dm9pZCAwJiYobj10aGlzLnBvc2l0aW9uKzEpO2Zvcih2YXIgaT1uO2k8dGhpcy50b2tlbnMubGVuZ3RoOylpZihmeVt0aGlzLnRva2Vuc1tpXVtrLkZJRUxEUy5UWVBFXV0pe2krKztjb250aW51ZX1lbHNlIHJldHVybiBpO3JldHVybi0xfSx1eSh0LFt7a2V5OlwiY3VyclRva2VuXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudG9rZW5zW3RoaXMucG9zaXRpb25dfX0se2tleTpcIm5leHRUb2tlblwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnRva2Vuc1t0aGlzLnBvc2l0aW9uKzFdfX0se2tleTpcInByZXZUb2tlblwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnRva2Vuc1t0aGlzLnBvc2l0aW9uLTFdfX1dKSx0fSgpO2VyLmRlZmF1bHQ9cHk7aXUuZXhwb3J0cz1lci5kZWZhdWx0fSk7dmFyIG91PVMoKHRyLGF1KT0+e1widXNlIHN0cmljdFwiO3RyLl9fZXNNb2R1bGU9ITA7dHIuZGVmYXVsdD12b2lkIDA7dmFyIGR5PWh5KHN1KCkpO2Z1bmN0aW9uIGh5KHQpe3JldHVybiB0JiZ0Ll9fZXNNb2R1bGU/dDp7ZGVmYXVsdDp0fX12YXIgbXk9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHIsbil7dGhpcy5mdW5jPXJ8fGZ1bmN0aW9uKCl7fSx0aGlzLmZ1bmNSZXM9bnVsbCx0aGlzLm9wdGlvbnM9bn12YXIgZT10LnByb3RvdHlwZTtyZXR1cm4gZS5fc2hvdWxkVXBkYXRlU2VsZWN0b3I9ZnVuY3Rpb24obixpKXtpPT09dm9pZCAwJiYoaT17fSk7dmFyIGE9T2JqZWN0LmFzc2lnbih7fSx0aGlzLm9wdGlvbnMsaSk7cmV0dXJuIGEudXBkYXRlU2VsZWN0b3I9PT0hMT8hMTp0eXBlb2YgbiE9XCJzdHJpbmdcIn0sZS5faXNMb3NzeT1mdW5jdGlvbihuKXtuPT09dm9pZCAwJiYobj17fSk7dmFyIGk9T2JqZWN0LmFzc2lnbih7fSx0aGlzLm9wdGlvbnMsbik7cmV0dXJuIGkubG9zc2xlc3M9PT0hMX0sZS5fcm9vdD1mdW5jdGlvbihuLGkpe2k9PT12b2lkIDAmJihpPXt9KTt2YXIgYT1uZXcgZHkuZGVmYXVsdChuLHRoaXMuX3BhcnNlT3B0aW9ucyhpKSk7cmV0dXJuIGEucm9vdH0sZS5fcGFyc2VPcHRpb25zPWZ1bmN0aW9uKG4pe3JldHVybntsb3NzeTp0aGlzLl9pc0xvc3N5KG4pfX0sZS5fcnVuPWZ1bmN0aW9uKG4saSl7dmFyIGE9dGhpcztyZXR1cm4gaT09PXZvaWQgMCYmKGk9e30pLG5ldyBQcm9taXNlKGZ1bmN0aW9uKHMsbyl7dHJ5e3ZhciBsPWEuX3Jvb3QobixpKTtQcm9taXNlLnJlc29sdmUoYS5mdW5jKGwpKS50aGVuKGZ1bmN0aW9uKHUpe3ZhciBmPXZvaWQgMDtyZXR1cm4gYS5fc2hvdWxkVXBkYXRlU2VsZWN0b3IobixpKSYmKGY9bC50b1N0cmluZygpLG4uc2VsZWN0b3I9Zikse3RyYW5zZm9ybTp1LHJvb3Q6bCxzdHJpbmc6Zn19KS50aGVuKHMsbyl9Y2F0Y2godSl7byh1KTtyZXR1cm59fSl9LGUuX3J1blN5bmM9ZnVuY3Rpb24obixpKXtpPT09dm9pZCAwJiYoaT17fSk7dmFyIGE9dGhpcy5fcm9vdChuLGkpLHM9dGhpcy5mdW5jKGEpO2lmKHMmJnR5cGVvZiBzLnRoZW49PVwiZnVuY3Rpb25cIil0aHJvdyBuZXcgRXJyb3IoXCJTZWxlY3RvciBwcm9jZXNzb3IgcmV0dXJuZWQgYSBwcm9taXNlIHRvIGEgc3luY2hyb25vdXMgY2FsbC5cIik7dmFyIG89dm9pZCAwO3JldHVybiBpLnVwZGF0ZVNlbGVjdG9yJiZ0eXBlb2YgbiE9XCJzdHJpbmdcIiYmKG89YS50b1N0cmluZygpLG4uc2VsZWN0b3I9bykse3RyYW5zZm9ybTpzLHJvb3Q6YSxzdHJpbmc6b319LGUuYXN0PWZ1bmN0aW9uKG4saSl7cmV0dXJuIHRoaXMuX3J1bihuLGkpLnRoZW4oZnVuY3Rpb24oYSl7cmV0dXJuIGEucm9vdH0pfSxlLmFzdFN5bmM9ZnVuY3Rpb24obixpKXtyZXR1cm4gdGhpcy5fcnVuU3luYyhuLGkpLnJvb3R9LGUudHJhbnNmb3JtPWZ1bmN0aW9uKG4saSl7cmV0dXJuIHRoaXMuX3J1bihuLGkpLnRoZW4oZnVuY3Rpb24oYSl7cmV0dXJuIGEudHJhbnNmb3JtfSl9LGUudHJhbnNmb3JtU3luYz1mdW5jdGlvbihuLGkpe3JldHVybiB0aGlzLl9ydW5TeW5jKG4saSkudHJhbnNmb3JtfSxlLnByb2Nlc3M9ZnVuY3Rpb24obixpKXtyZXR1cm4gdGhpcy5fcnVuKG4saSkudGhlbihmdW5jdGlvbihhKXtyZXR1cm4gYS5zdHJpbmd8fGEucm9vdC50b1N0cmluZygpfSl9LGUucHJvY2Vzc1N5bmM9ZnVuY3Rpb24obixpKXt2YXIgYT10aGlzLl9ydW5TeW5jKG4saSk7cmV0dXJuIGEuc3RyaW5nfHxhLnJvb3QudG9TdHJpbmcoKX0sdH0oKTt0ci5kZWZhdWx0PW15O2F1LmV4cG9ydHM9dHIuZGVmYXVsdH0pO3ZhciBsdT1TKGo9PntcInVzZSBzdHJpY3RcIjtqLl9fZXNNb2R1bGU9ITA7ai51bml2ZXJzYWw9ai50YWc9ai5zdHJpbmc9ai5zZWxlY3Rvcj1qLnJvb3Q9ai5wc2V1ZG89ai5uZXN0aW5nPWouaWQ9ai5jb21tZW50PWouY29tYmluYXRvcj1qLmNsYXNzTmFtZT1qLmF0dHJpYnV0ZT12b2lkIDA7dmFyIGd5PXVlKEJpKCkpLHl5PXVlKEFpKCkpLHZ5PXVlKFFpKCkpLHd5PXVlKFRpKCkpLGJ5PXVlKElpKCkpLHh5PXVlKFhpKCkpLFN5PXVlKHFpKCkpLGt5PXVlKFNpKCkpLE95PXVlKE9pKCkpLEV5PXVlKExpKCkpLEN5PXVlKE1pKCkpLEF5PXVlKFlpKCkpO2Z1bmN0aW9uIHVlKHQpe3JldHVybiB0JiZ0Ll9fZXNNb2R1bGU/dDp7ZGVmYXVsdDp0fX12YXIgX3k9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBneS5kZWZhdWx0KGUpfTtqLmF0dHJpYnV0ZT1feTt2YXIgVHk9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyB5eS5kZWZhdWx0KGUpfTtqLmNsYXNzTmFtZT1UeTt2YXIgUHk9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyB2eS5kZWZhdWx0KGUpfTtqLmNvbWJpbmF0b3I9UHk7dmFyIEl5PWZ1bmN0aW9uKGUpe3JldHVybiBuZXcgd3kuZGVmYXVsdChlKX07ai5jb21tZW50PUl5O3ZhciBSeT1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IGJ5LmRlZmF1bHQoZSl9O2ouaWQ9Unk7dmFyIER5PWZ1bmN0aW9uKGUpe3JldHVybiBuZXcgeHkuZGVmYXVsdChlKX07ai5uZXN0aW5nPUR5O3ZhciBNeT1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IFN5LmRlZmF1bHQoZSl9O2oucHNldWRvPU15O3ZhciBGeT1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IGt5LmRlZmF1bHQoZSl9O2oucm9vdD1GeTt2YXIgTHk9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBPeS5kZWZhdWx0KGUpfTtqLnNlbGVjdG9yPUx5O3ZhciBOeT1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IEV5LmRlZmF1bHQoZSl9O2ouc3RyaW5nPU55O3ZhciBxeT1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IEN5LmRlZmF1bHQoZSl9O2oudGFnPXF5O3ZhciAkeT1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IEF5LmRlZmF1bHQoZSl9O2oudW5pdmVyc2FsPSR5fSk7dmFyIHB1PVMoRD0+e1widXNlIHN0cmljdFwiO0QuX19lc01vZHVsZT0hMDtELmlzQ29tbWVudD1ELmlzQ29tYmluYXRvcj1ELmlzQ2xhc3NOYW1lPUQuaXNBdHRyaWJ1dGU9dm9pZCAwO0QuaXNDb250YWluZXI9WHk7RC5pc0lkZW50aWZpZXI9dm9pZCAwO0QuaXNOYW1lc3BhY2U9S3k7RC5pc05lc3Rpbmc9dm9pZCAwO0QuaXNOb2RlPW9zO0QuaXNQc2V1ZG89dm9pZCAwO0QuaXNQc2V1ZG9DbGFzcz1KeTtELmlzUHNldWRvRWxlbWVudD1jdTtELmlzVW5pdmVyc2FsPUQuaXNUYWc9RC5pc1N0cmluZz1ELmlzU2VsZWN0b3I9RC5pc1Jvb3Q9dm9pZCAwO3ZhciBXPUooKSx0ZSxVeT0odGU9e30sdGVbVy5BVFRSSUJVVEVdPSEwLHRlW1cuQ0xBU1NdPSEwLHRlW1cuQ09NQklOQVRPUl09ITAsdGVbVy5DT01NRU5UXT0hMCx0ZVtXLklEXT0hMCx0ZVtXLk5FU1RJTkddPSEwLHRlW1cuUFNFVURPXT0hMCx0ZVtXLlJPT1RdPSEwLHRlW1cuU0VMRUNUT1JdPSEwLHRlW1cuU1RSSU5HXT0hMCx0ZVtXLlRBR109ITAsdGVbVy5VTklWRVJTQUxdPSEwLHRlKTtmdW5jdGlvbiBvcyh0KXtyZXR1cm4gdHlwZW9mIHQ9PVwib2JqZWN0XCImJlV5W3QudHlwZV19ZnVuY3Rpb24gZmUodCxlKXtyZXR1cm4gb3MoZSkmJmUudHlwZT09PXR9dmFyIHV1PWZlLmJpbmQobnVsbCxXLkFUVFJJQlVURSk7RC5pc0F0dHJpYnV0ZT11dTt2YXIgank9ZmUuYmluZChudWxsLFcuQ0xBU1MpO0QuaXNDbGFzc05hbWU9ank7dmFyIHp5PWZlLmJpbmQobnVsbCxXLkNPTUJJTkFUT1IpO0QuaXNDb21iaW5hdG9yPXp5O3ZhciBWeT1mZS5iaW5kKG51bGwsVy5DT01NRU5UKTtELmlzQ29tbWVudD1WeTt2YXIgV3k9ZmUuYmluZChudWxsLFcuSUQpO0QuaXNJZGVudGlmaWVyPVd5O3ZhciBCeT1mZS5iaW5kKG51bGwsVy5ORVNUSU5HKTtELmlzTmVzdGluZz1CeTt2YXIgbHM9ZmUuYmluZChudWxsLFcuUFNFVURPKTtELmlzUHNldWRvPWxzO3ZhciBHeT1mZS5iaW5kKG51bGwsVy5ST09UKTtELmlzUm9vdD1HeTt2YXIgWXk9ZmUuYmluZChudWxsLFcuU0VMRUNUT1IpO0QuaXNTZWxlY3Rvcj1ZeTt2YXIgSHk9ZmUuYmluZChudWxsLFcuU1RSSU5HKTtELmlzU3RyaW5nPUh5O3ZhciBmdT1mZS5iaW5kKG51bGwsVy5UQUcpO0QuaXNUYWc9ZnU7dmFyIFF5PWZlLmJpbmQobnVsbCxXLlVOSVZFUlNBTCk7RC5pc1VuaXZlcnNhbD1ReTtmdW5jdGlvbiBjdSh0KXtyZXR1cm4gbHModCkmJnQudmFsdWUmJih0LnZhbHVlLnN0YXJ0c1dpdGgoXCI6OlwiKXx8dC52YWx1ZS50b0xvd2VyQ2FzZSgpPT09XCI6YmVmb3JlXCJ8fHQudmFsdWUudG9Mb3dlckNhc2UoKT09PVwiOmFmdGVyXCJ8fHQudmFsdWUudG9Mb3dlckNhc2UoKT09PVwiOmZpcnN0LWxldHRlclwifHx0LnZhbHVlLnRvTG93ZXJDYXNlKCk9PT1cIjpmaXJzdC1saW5lXCIpfWZ1bmN0aW9uIEp5KHQpe3JldHVybiBscyh0KSYmIWN1KHQpfWZ1bmN0aW9uIFh5KHQpe3JldHVybiEhKG9zKHQpJiZ0LndhbGspfWZ1bmN0aW9uIEt5KHQpe3JldHVybiB1dSh0KXx8ZnUodCl9fSk7dmFyIGR1PVMoZGU9PntcInVzZSBzdHJpY3RcIjtkZS5fX2VzTW9kdWxlPSEwO3ZhciB1cz1KKCk7T2JqZWN0LmtleXModXMpLmZvckVhY2goZnVuY3Rpb24odCl7dD09PVwiZGVmYXVsdFwifHx0PT09XCJfX2VzTW9kdWxlXCJ8fHQgaW4gZGUmJmRlW3RdPT09dXNbdF18fChkZVt0XT11c1t0XSl9KTt2YXIgZnM9bHUoKTtPYmplY3Qua2V5cyhmcykuZm9yRWFjaChmdW5jdGlvbih0KXt0PT09XCJkZWZhdWx0XCJ8fHQ9PT1cIl9fZXNNb2R1bGVcInx8dCBpbiBkZSYmZGVbdF09PT1mc1t0XXx8KGRlW3RdPWZzW3RdKX0pO3ZhciBjcz1wdSgpO09iamVjdC5rZXlzKGNzKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3Q9PT1cImRlZmF1bHRcInx8dD09PVwiX19lc01vZHVsZVwifHx0IGluIGRlJiZkZVt0XT09PWNzW3RdfHwoZGVbdF09Y3NbdF0pfSl9KTt2YXIgdmU9UygocnIsbXUpPT57XCJ1c2Ugc3RyaWN0XCI7cnIuX19lc01vZHVsZT0hMDtyci5kZWZhdWx0PXZvaWQgMDt2YXIgWnk9cjAob3UoKSksZTA9dDAoZHUoKSk7ZnVuY3Rpb24gaHUodCl7aWYodHlwZW9mIFdlYWtNYXAhPVwiZnVuY3Rpb25cIilyZXR1cm4gbnVsbDt2YXIgZT1uZXcgV2Vha01hcCxyPW5ldyBXZWFrTWFwO3JldHVybihodT1mdW5jdGlvbihpKXtyZXR1cm4gaT9yOmV9KSh0KX1mdW5jdGlvbiB0MCh0LGUpe2lmKCFlJiZ0JiZ0Ll9fZXNNb2R1bGUpcmV0dXJuIHQ7aWYodD09PW51bGx8fHR5cGVvZiB0IT1cIm9iamVjdFwiJiZ0eXBlb2YgdCE9XCJmdW5jdGlvblwiKXJldHVybntkZWZhdWx0OnR9O3ZhciByPWh1KGUpO2lmKHImJnIuaGFzKHQpKXJldHVybiByLmdldCh0KTt2YXIgbj17fSxpPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSYmT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtmb3IodmFyIGEgaW4gdClpZihhIT09XCJkZWZhdWx0XCImJk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGEpKXt2YXIgcz1pP09iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCxhKTpudWxsO3MmJihzLmdldHx8cy5zZXQpP09iamVjdC5kZWZpbmVQcm9wZXJ0eShuLGEscyk6blthXT10W2FdfXJldHVybiBuLmRlZmF1bHQ9dCxyJiZyLnNldCh0LG4pLG59ZnVuY3Rpb24gcjAodCl7cmV0dXJuIHQmJnQuX19lc01vZHVsZT90OntkZWZhdWx0OnR9fXZhciBwcz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3IFp5LmRlZmF1bHQoZSl9O09iamVjdC5hc3NpZ24ocHMsZTApO2RlbGV0ZSBwcy5fX2VzTW9kdWxlO3ZhciBuMD1wcztyci5kZWZhdWx0PW4wO211LmV4cG9ydHM9cnIuZGVmYXVsdH0pO3ZhciBTdT1TKChEeCx5cyk9Pnt2YXJ7UnVsZTp5dSxBdFJ1bGU6aTB9PUtlKCksdnU9dmUoKTtmdW5jdGlvbiBtcyh0LGUpe2xldCByO3RyeXt2dShuPT57cj1ufSkucHJvY2Vzc1N5bmModCl9Y2F0Y2gobil7dGhyb3cgdC5pbmNsdWRlcyhcIjpcIik/ZT9lLmVycm9yKFwiTWlzc2VkIHNlbWljb2xvblwiKTpuOmU/ZS5lcnJvcihuLm1lc3NhZ2UpOm59cmV0dXJuIHIuYXQoMCl9ZnVuY3Rpb24gd3UodCxlKXtsZXQgcj0hMTtyZXR1cm4gdC5lYWNoKG49PntpZihuLnR5cGU9PT1cIm5lc3RpbmdcIil7bGV0IGk9ZS5jbG9uZSh7fSk7bi52YWx1ZSE9PVwiJlwiP24ucmVwbGFjZVdpdGgobXMobi52YWx1ZS5yZXBsYWNlKFwiJlwiLGkudG9TdHJpbmcoKSkpKTpuLnJlcGxhY2VXaXRoKGkpLHI9ITB9ZWxzZVwibm9kZXNcImluIG4mJm4ubm9kZXMmJnd1KG4sZSkmJihyPSEwKX0pLHJ9ZnVuY3Rpb24gYnUodCxlKXtsZXQgcj1bXTtyZXR1cm4gdC5zZWxlY3RvcnMuZm9yRWFjaChuPT57bGV0IGk9bXMobix0KTtlLnNlbGVjdG9ycy5mb3JFYWNoKGE9PntpZighYSlyZXR1cm47bGV0IHM9bXMoYSxlKTt3dShzLGkpfHwocy5wcmVwZW5kKHZ1LmNvbWJpbmF0b3Ioe3ZhbHVlOlwiIFwifSkpLHMucHJlcGVuZChpLmNsb25lKHt9KSkpLHIucHVzaChzLnRvU3RyaW5nKCkpfSl9KSxyfWZ1bmN0aW9uIFpyKHQsZSl7bGV0IHI9dC5wcmV2KCk7Zm9yKGUuYWZ0ZXIodCk7ciYmci50eXBlPT09XCJjb21tZW50XCI7KXtsZXQgbj1yLnByZXYoKTtlLmFmdGVyKHIpLHI9bn1yZXR1cm4gdH1mdW5jdGlvbiBzMCh0KXtyZXR1cm4gZnVuY3Rpb24gZShyLG4saSxhPWkpe2xldCBzPVtdO2lmKG4uZWFjaChvPT57by50eXBlPT09XCJydWxlXCImJmk/YSYmKG8uc2VsZWN0b3JzPWJ1KHIsbykpOm8udHlwZT09PVwiYXRydWxlXCImJm8ubm9kZXM/dFtvLm5hbWVdP2UocixvLGEpOm5bZ3NdIT09ITEmJnMucHVzaChvKTpzLnB1c2gobyl9KSxpJiZzLmxlbmd0aCl7bGV0IG89ci5jbG9uZSh7bm9kZXM6W119KTtmb3IobGV0IGwgb2YgcylvLmFwcGVuZChsKTtuLnByZXBlbmQobyl9fX1mdW5jdGlvbiBkcyh0LGUscil7bGV0IG49bmV3IHl1KHtzZWxlY3Rvcjp0LG5vZGVzOltdfSk7cmV0dXJuIG4uYXBwZW5kKGUpLHIuYWZ0ZXIobiksbn1mdW5jdGlvbiBndSh0LGUpe2xldCByPXt9O2ZvcihsZXQgbiBvZiB0KXJbbl09ITA7aWYoZSlmb3IobGV0IG4gb2YgZSlyW24ucmVwbGFjZSgvXkAvLFwiXCIpXT0hMDtyZXR1cm4gcn1mdW5jdGlvbiBhMCh0KXt0PXQudHJpbSgpO2xldCBlPXQubWF0Y2goL15cXCgoLiopXFwpJC8pO2lmKCFlKXJldHVybnt0eXBlOlwiYmFzaWNcIixzZWxlY3Rvcjp0fTtsZXQgcj1lWzFdLm1hdGNoKC9eKHdpdGgoPzpvdXQpPyk6KC4rKSQvKTtpZihyKXtsZXQgbj1yWzFdPT09XCJ3aXRoXCIsaT1PYmplY3QuZnJvbUVudHJpZXMoclsyXS50cmltKCkuc3BsaXQoL1xccysvKS5tYXAocz0+W3MsITBdKSk7aWYobiYmaS5hbGwpcmV0dXJue3R5cGU6XCJub29wXCJ9O2xldCBhPXM9PiEhaVtzXTtyZXR1cm4gaS5hbGw/YT0oKT0+ITA6biYmKGE9cz0+cz09PVwiYWxsXCI/ITE6IWlbc10pLHt0eXBlOlwid2l0aHJ1bGVzXCIsZXNjYXBlczphfX1yZXR1cm57dHlwZTpcInVua25vd25cIn19ZnVuY3Rpb24gbzAodCl7bGV0IGU9W10scj10LnBhcmVudDtmb3IoO3ImJnIgaW5zdGFuY2VvZiBpMDspZS5wdXNoKHIpLHI9ci5wYXJlbnQ7cmV0dXJuIGV9ZnVuY3Rpb24gbDAodCl7bGV0IGU9dFt4dV07aWYoIWUpdC5hZnRlcih0Lm5vZGVzKTtlbHNle2xldCByPXQubm9kZXMsbixpPS0xLGEscyxvLGw9bzAodCk7aWYobC5mb3JFYWNoKCh1LGYpPT57aWYoZSh1Lm5hbWUpKW49dSxpPWYscz1vO2Vsc2V7bGV0IHA9bztvPXUuY2xvbmUoe25vZGVzOltdfSkscCYmby5hcHBlbmQocCksYT1hfHxvfX0pLG4/cz8oYS5hcHBlbmQociksbi5hZnRlcihzKSk6bi5hZnRlcihyKTp0LmFmdGVyKHIpLHQubmV4dCgpJiZuKXtsZXQgdTtsLnNsaWNlKDAsaSsxKS5mb3JFYWNoKChmLHAsYyk9PntsZXQgZD11O3U9Zi5jbG9uZSh7bm9kZXM6W119KSxkJiZ1LmFwcGVuZChkKTtsZXQgaD1bXSxtPShjW3AtMV18fHQpLm5leHQoKTtmb3IoO207KWgucHVzaChtKSxtPW0ubmV4dCgpO3UuYXBwZW5kKGgpfSksdSYmKHN8fHJbci5sZW5ndGgtMV0pLmFmdGVyKHUpfX10LnJlbW92ZSgpfXZhciBncz1TeW1ib2woXCJyb290UnVsZU1lcmdlU2VsXCIpLHh1PVN5bWJvbChcInJvb3RSdWxlRXNjYXBlc1wiKTtmdW5jdGlvbiB1MCh0KXtsZXR7cGFyYW1zOmV9PXQse3R5cGU6cixzZWxlY3RvcjpuLGVzY2FwZXM6aX09YTAoZSk7aWYocj09PVwidW5rbm93blwiKXRocm93IHQuZXJyb3IoYFVua25vd24gQCR7dC5uYW1lfSBwYXJhbWV0ZXIgJHtKU09OLnN0cmluZ2lmeShlKX1gKTtpZihyPT09XCJiYXNpY1wiJiZuKXtsZXQgYT1uZXcgeXUoe3NlbGVjdG9yOm4sbm9kZXM6dC5ub2Rlc30pO3QucmVtb3ZlQWxsKCksdC5hcHBlbmQoYSl9dFt4dV09aSx0W2dzXT1pPyFpKFwiYWxsXCIpOnI9PT1cIm5vb3BcIn12YXIgaHM9U3ltYm9sKFwiaGFzUm9vdFJ1bGVcIik7eXMuZXhwb3J0cz0odD17fSk9PntsZXQgZT1ndShbXCJtZWRpYVwiLFwic3VwcG9ydHNcIixcImxheWVyXCIsXCJjb250YWluZXJcIl0sdC5idWJibGUpLHI9czAoZSksbj1ndShbXCJkb2N1bWVudFwiLFwiZm9udC1mYWNlXCIsXCJrZXlmcmFtZXNcIixcIi13ZWJraXQta2V5ZnJhbWVzXCIsXCItbW96LWtleWZyYW1lc1wiXSx0LnVud3JhcCksaT0odC5yb290UnVsZU5hbWV8fFwiYXQtcm9vdFwiKS5yZXBsYWNlKC9eQC8sXCJcIiksYT10LnByZXNlcnZlRW1wdHk7cmV0dXJue3Bvc3Rjc3NQbHVnaW46XCJwb3N0Y3NzLW5lc3RlZFwiLE9uY2Uocyl7cy53YWxrQXRSdWxlcyhpLG89Pnt1MChvKSxzW2hzXT0hMH0pfSxSdWxlKHMpe2xldCBvPSExLGw9cyx1PSExLGY9W107cy5lYWNoKHA9PntwLnR5cGU9PT1cInJ1bGVcIj8oZi5sZW5ndGgmJihsPWRzKHMuc2VsZWN0b3IsZixsKSxmPVtdKSx1PSEwLG89ITAscC5zZWxlY3RvcnM9YnUocyxwKSxsPVpyKHAsbCkpOnAudHlwZT09PVwiYXRydWxlXCI/KGYubGVuZ3RoJiYobD1kcyhzLnNlbGVjdG9yLGYsbCksZj1bXSkscC5uYW1lPT09aT8obz0hMCxyKHMscCwhMCxwW2dzXSksbD1acihwLGwpKTplW3AubmFtZV0/KHU9ITAsbz0hMCxyKHMscCwhMCksbD1acihwLGwpKTpuW3AubmFtZV0/KHU9ITAsbz0hMCxyKHMscCwhMSksbD1acihwLGwpKTp1JiZmLnB1c2gocCkpOnAudHlwZT09PVwiZGVjbFwiJiZ1JiZmLnB1c2gocCl9KSxmLmxlbmd0aCYmKGw9ZHMocy5zZWxlY3RvcixmLGwpKSxvJiZhIT09ITAmJihzLnJhd3Muc2VtaWNvbG9uPSEwLHMubm9kZXMubGVuZ3RoPT09MCYmcy5yZW1vdmUoKSl9LFJvb3RFeGl0KHMpe3NbaHNdJiYocy53YWxrQXRSdWxlcyhpLGwwKSxzW2hzXT0hMSl9fX07eXMuZXhwb3J0cy5wb3N0Y3NzPSEwfSk7dmFyIEN1PVMoKE14LEV1KT0+e1widXNlIHN0cmljdFwiO3ZhciBrdT0vLShcXHd8JCkvZyxPdT1mdW5jdGlvbihlLHIpe3JldHVybiByLnRvVXBwZXJDYXNlKCl9LGYwPWZ1bmN0aW9uKGUpe3JldHVybiBlPWUudG9Mb3dlckNhc2UoKSxlPT09XCJmbG9hdFwiP1wiY3NzRmxvYXRcIjplLmNoYXJDb2RlQXQoMCk9PT00NSYmZS5jaGFyQ29kZUF0KDEpPT09MTA5JiZlLmNoYXJDb2RlQXQoMik9PT0xMTUmJmUuY2hhckNvZGVBdCgzKT09PTQ1P2Uuc3Vic3RyKDEpLnJlcGxhY2Uoa3UsT3UpOmUucmVwbGFjZShrdSxPdSl9O0V1LmV4cG9ydHM9ZjB9KTt2YXIgYnM9UygoRngsQXUpPT57dmFyIGMwPUN1KCkscDA9e2JveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH07ZnVuY3Rpb24gdnModCl7cmV0dXJuIHR5cGVvZiB0Lm5vZGVzPlwidVwiPyEwOndzKHQpfWZ1bmN0aW9uIHdzKHQpe2xldCBlLHI9e307cmV0dXJuIHQuZWFjaChuPT57aWYobi50eXBlPT09XCJhdHJ1bGVcIillPVwiQFwiK24ubmFtZSxuLnBhcmFtcyYmKGUrPVwiIFwiK24ucGFyYW1zKSx0eXBlb2YgcltlXT5cInVcIj9yW2VdPXZzKG4pOkFycmF5LmlzQXJyYXkocltlXSk/cltlXS5wdXNoKHZzKG4pKTpyW2VdPVtyW2VdLHZzKG4pXTtlbHNlIGlmKG4udHlwZT09PVwicnVsZVwiKXtsZXQgaT13cyhuKTtpZihyW24uc2VsZWN0b3JdKWZvcihsZXQgYSBpbiBpKXJbbi5zZWxlY3Rvcl1bYV09aVthXTtlbHNlIHJbbi5zZWxlY3Rvcl09aX1lbHNlIGlmKG4udHlwZT09PVwiZGVjbFwiKXtuLnByb3BbMF09PT1cIi1cIiYmbi5wcm9wWzFdPT09XCItXCJ8fG4ucGFyZW50JiZuLnBhcmVudC5zZWxlY3Rvcj09PVwiOmV4cG9ydFwiP2U9bi5wcm9wOmU9YzAobi5wcm9wKTtsZXQgaT1uLnZhbHVlOyFpc05hTihuLnZhbHVlKSYmcDBbZV0mJihpPXBhcnNlRmxvYXQobi52YWx1ZSkpLG4uaW1wb3J0YW50JiYoaSs9XCIgIWltcG9ydGFudFwiKSx0eXBlb2YgcltlXT5cInVcIj9yW2VdPWk6QXJyYXkuaXNBcnJheShyW2VdKT9yW2VdLnB1c2goaSk6cltlXT1bcltlXSxpXX19KSxyfUF1LmV4cG9ydHM9d3N9KTt2YXIgZW49UygoTHgsSXUpPT57dmFyIG5yPUtlKCksX3U9L1xccyohaW1wb3J0YW50XFxzKiQvaSxkMD17XCJib3gtZmxleFwiOiEwLFwiYm94LWZsZXgtZ3JvdXBcIjohMCxcImNvbHVtbi1jb3VudFwiOiEwLGZsZXg6ITAsXCJmbGV4LWdyb3dcIjohMCxcImZsZXgtcG9zaXRpdmVcIjohMCxcImZsZXgtc2hyaW5rXCI6ITAsXCJmbGV4LW5lZ2F0aXZlXCI6ITAsXCJmb250LXdlaWdodFwiOiEwLFwibGluZS1jbGFtcFwiOiEwLFwibGluZS1oZWlnaHRcIjohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsXCJ0YWItc2l6ZVwiOiEwLHdpZG93czohMCxcInotaW5kZXhcIjohMCx6b29tOiEwLFwiZmlsbC1vcGFjaXR5XCI6ITAsXCJzdHJva2UtZGFzaG9mZnNldFwiOiEwLFwic3Ryb2tlLW9wYWNpdHlcIjohMCxcInN0cm9rZS13aWR0aFwiOiEwfTtmdW5jdGlvbiBoMCh0KXtyZXR1cm4gdC5yZXBsYWNlKC8oW0EtWl0pL2csXCItJDFcIikucmVwbGFjZSgvXm1zLS8sXCItbXMtXCIpLnRvTG93ZXJDYXNlKCl9ZnVuY3Rpb24gVHUodCxlLHIpe3I9PT0hMXx8cj09PW51bGx8fChlLnN0YXJ0c1dpdGgoXCItLVwiKXx8KGU9aDAoZSkpLHR5cGVvZiByPT1cIm51bWJlclwiJiYocj09PTB8fGQwW2VdP3I9ci50b1N0cmluZygpOnIrPVwicHhcIiksZT09PVwiY3NzLWZsb2F0XCImJihlPVwiZmxvYXRcIiksX3UudGVzdChyKT8ocj1yLnJlcGxhY2UoX3UsXCJcIiksdC5wdXNoKG5yLmRlY2woe3Byb3A6ZSx2YWx1ZTpyLGltcG9ydGFudDohMH0pKSk6dC5wdXNoKG5yLmRlY2woe3Byb3A6ZSx2YWx1ZTpyfSkpKX1mdW5jdGlvbiBQdSh0LGUscil7bGV0IG49bnIuYXRSdWxlKHtuYW1lOmVbMV0scGFyYW1zOmVbM118fFwiXCJ9KTt0eXBlb2Ygcj09XCJvYmplY3RcIiYmKG4ubm9kZXM9W10seHMocixuKSksdC5wdXNoKG4pfWZ1bmN0aW9uIHhzKHQsZSl7bGV0IHIsbixpO2ZvcihyIGluIHQpaWYobj10W3JdLCEobj09PW51bGx8fHR5cGVvZiBuPlwidVwiKSlpZihyWzBdPT09XCJAXCIpe2xldCBhPXIubWF0Y2goL0AoXFxTKykoXFxzKyhbXFxXXFx3XSopXFxzKik/Lyk7aWYoQXJyYXkuaXNBcnJheShuKSlmb3IobGV0IHMgb2YgbilQdShlLGEscyk7ZWxzZSBQdShlLGEsbil9ZWxzZSBpZihBcnJheS5pc0FycmF5KG4pKWZvcihsZXQgYSBvZiBuKVR1KGUscixhKTtlbHNlIHR5cGVvZiBuPT1cIm9iamVjdFwiPyhpPW5yLnJ1bGUoe3NlbGVjdG9yOnJ9KSx4cyhuLGkpLGUucHVzaChpKSk6VHUoZSxyLG4pfUl1LmV4cG9ydHM9ZnVuY3Rpb24odCl7bGV0IGU9bnIucm9vdCgpO3JldHVybiB4cyh0LGUpLGV9fSk7dmFyIFNzPVMoKE54LFJ1KT0+e3ZhciBtMD1icygpO1J1LmV4cG9ydHM9ZnVuY3Rpb24oZSl7cmV0dXJuIGNvbnNvbGUmJmNvbnNvbGUud2FybiYmZS53YXJuaW5ncygpLmZvckVhY2gocj0+e2xldCBuPXIucGx1Z2lufHxcIlBvc3RDU1NcIjtjb25zb2xlLndhcm4obitcIjogXCIrci50ZXh0KX0pLG0wKGUucm9vdCl9fSk7dmFyIE11PVMoKHF4LER1KT0+e3ZhciBnMD1LZSgpLHkwPVNzKCksdjA9ZW4oKTtEdS5leHBvcnRzPWZ1bmN0aW9uKGUpe2xldCByPWcwKGUpO3JldHVybiBhc3luYyBuPT57bGV0IGk9YXdhaXQgci5wcm9jZXNzKG4se3BhcnNlcjp2MCxmcm9tOnZvaWQgMH0pO3JldHVybiB5MChpKX19fSk7dmFyIEx1PVMoKCR4LEZ1KT0+e3ZhciB3MD1LZSgpLGIwPVNzKCkseDA9ZW4oKTtGdS5leHBvcnRzPWZ1bmN0aW9uKHQpe2xldCBlPXcwKHQpO3JldHVybiByPT57bGV0IG49ZS5wcm9jZXNzKHIse3BhcnNlcjp4MCxmcm9tOnZvaWQgMH0pO3JldHVybiBiMChuKX19fSk7dmFyIHF1PVMoKFV4LE51KT0+e3ZhciBTMD1icygpLGswPWVuKCksTzA9TXUoKSxFMD1MdSgpO051LmV4cG9ydHM9e29iamVjdGlmeTpTMCxwYXJzZTprMCxhc3luYzpPMCxzeW5jOkUwfX0pO3ZhciBxcz1TKChMcyxOcyk9PnsoZnVuY3Rpb24odCxlKXt0eXBlb2YgTHM9PVwib2JqZWN0XCImJnR5cGVvZiBOczxcInVcIj9Ocy5leHBvcnRzPWZ1bmN0aW9uKHIsbixpLGEscyl7Zm9yKG49bi5zcGxpdD9uLnNwbGl0KFwiLlwiKTpuLGE9MDthPG4ubGVuZ3RoO2ErKylyPXI/cltuW2FdXTpzO3JldHVybiByPT09cz9pOnJ9OnR5cGVvZiBkZWZpbmU9PVwiZnVuY3Rpb25cIiYmZGVmaW5lLmFtZD9kZWZpbmUoZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24ocixuLGksYSxzKXtmb3Iobj1uLnNwbGl0P24uc3BsaXQoXCIuXCIpOm4sYT0wO2E8bi5sZW5ndGg7YSsrKXI9cj9yW25bYV1dOnM7cmV0dXJuIHI9PT1zP2k6cn19KTp0LmRsdj1mdW5jdGlvbihyLG4saSxhLHMpe2ZvcihuPW4uc3BsaXQ/bi5zcGxpdChcIi5cIik6bixhPTA7YTxuLmxlbmd0aDthKyspcj1yP3JbblthXV06cztyZXR1cm4gcj09PXM/aTpyfX0pKExzKX0pO3ZhciBCZj1TKChiayxPbik9PnsoZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiB0KG4saSxhKXtpZighbilyZXR1cm4gbnVsbDt0LmNhc2VTZW5zaXRpdmV8fChuPW4udG9Mb3dlckNhc2UoKSk7dmFyIHM9dC50aHJlc2hvbGQ9PT1udWxsP251bGw6dC50aHJlc2hvbGQqbi5sZW5ndGgsbz10LnRocmVzaG9sZEFic29sdXRlLGw7cyE9PW51bGwmJm8hPT1udWxsP2w9TWF0aC5taW4ocyxvKTpzIT09bnVsbD9sPXM6byE9PW51bGw/bD1vOmw9bnVsbDt2YXIgdSxmLHAsYyxkLGg9aS5sZW5ndGg7Zm9yKGQ9MDtkPGg7ZCsrKWlmKGY9aVtkXSxhJiYoZj1mW2FdKSwhIWYmJih0LmNhc2VTZW5zaXRpdmU/cD1mOnA9Zi50b0xvd2VyQ2FzZSgpLGM9cihuLHAsbCksKGw9PT1udWxsfHxjPGwpJiYobD1jLGEmJnQucmV0dXJuV2lubmluZ09iamVjdD91PWlbZF06dT1mLHQucmV0dXJuRmlyc3RNYXRjaCkpKXJldHVybiB1O3JldHVybiB1fHx0Lm51bGxSZXN1bHRWYWx1ZX10LnRocmVzaG9sZD0uNCx0LnRocmVzaG9sZEFic29sdXRlPTIwLHQuY2FzZVNlbnNpdGl2ZT0hMSx0Lm51bGxSZXN1bHRWYWx1ZT1udWxsLHQucmV0dXJuV2lubmluZ09iamVjdD1udWxsLHQucmV0dXJuRmlyc3RNYXRjaD0hMSx0eXBlb2YgT248XCJ1XCImJk9uLmV4cG9ydHM/T24uZXhwb3J0cz10OndpbmRvdy5kaWRZb3VNZWFuPXQ7dmFyIGU9TWF0aC5wb3coMiwzMiktMTtmdW5jdGlvbiByKG4saSxhKXthPWF8fGE9PT0wP2E6ZTt2YXIgcz1uLmxlbmd0aCxvPWkubGVuZ3RoO2lmKHM9PT0wKXJldHVybiBNYXRoLm1pbihhKzEsbyk7aWYobz09PTApcmV0dXJuIE1hdGgubWluKGErMSxzKTtpZihNYXRoLmFicyhzLW8pPmEpcmV0dXJuIGErMTt2YXIgbD1bXSx1LGYscCxjLGQ7Zm9yKHU9MDt1PD1vO3UrKylsW3VdPVt1XTtmb3IoZj0wO2Y8PXM7ZisrKWxbMF1bZl09Zjtmb3IodT0xO3U8PW87dSsrKXtmb3IocD1lLGM9MSx1PmEmJihjPXUtYSksZD1vKzEsZD5hK3UmJihkPWErdSksZj0xO2Y8PXM7ZisrKWY8Y3x8Zj5kP2xbdV1bZl09YSsxOmkuY2hhckF0KHUtMSk9PT1uLmNoYXJBdChmLTEpP2xbdV1bZl09bFt1LTFdW2YtMV06bFt1XVtmXT1NYXRoLm1pbihsW3UtMV1bZi0xXSsxLE1hdGgubWluKGxbdV1bZi0xXSsxLGxbdS0xXVtmXSsxKSksbFt1XVtmXTxwJiYocD1sW3VdW2ZdKTtpZihwPmEpcmV0dXJuIGErMX1yZXR1cm4gbFtvXVtzXX19KSgpfSk7dmFyIFlmPVMoKHhrLEdmKT0+e3ZhciBLcz1cIihcIi5jaGFyQ29kZUF0KDApLFpzPVwiKVwiLmNoYXJDb2RlQXQoMCksRW49XCInXCIuY2hhckNvZGVBdCgwKSxlYT0nXCInLmNoYXJDb2RlQXQoMCksdGE9XCJcXFxcXCIuY2hhckNvZGVBdCgwKSxmdD1cIi9cIi5jaGFyQ29kZUF0KDApLHJhPVwiLFwiLmNoYXJDb2RlQXQoMCksbmE9XCI6XCIuY2hhckNvZGVBdCgwKSxDbj1cIipcIi5jaGFyQ29kZUF0KDApLFl2PVwidVwiLmNoYXJDb2RlQXQoMCksSHY9XCJVXCIuY2hhckNvZGVBdCgwKSxRdj1cIitcIi5jaGFyQ29kZUF0KDApLEp2PS9eW2EtZjAtOT8tXSskL2k7R2YuZXhwb3J0cz1mdW5jdGlvbih0KXtmb3IodmFyIGU9W10scj10LG4saSxhLHMsbyxsLHUsZixwPTAsYz1yLmNoYXJDb2RlQXQocCksZD1yLmxlbmd0aCxoPVt7bm9kZXM6ZX1dLHk9MCxtLGc9XCJcIix3PVwiXCIsYj1cIlwiO3A8ZDspaWYoYzw9MzIpe249cDtkbyBuKz0xLGM9ci5jaGFyQ29kZUF0KG4pO3doaWxlKGM8PTMyKTtzPXIuc2xpY2UocCxuKSxhPWVbZS5sZW5ndGgtMV0sYz09PVpzJiZ5P2I9czphJiZhLnR5cGU9PT1cImRpdlwiPyhhLmFmdGVyPXMsYS5zb3VyY2VFbmRJbmRleCs9cy5sZW5ndGgpOmM9PT1yYXx8Yz09PW5hfHxjPT09ZnQmJnIuY2hhckNvZGVBdChuKzEpIT09Q24mJighbXx8bSYmbS50eXBlPT09XCJmdW5jdGlvblwiJiZtLnZhbHVlIT09XCJjYWxjXCIpP3c9czplLnB1c2goe3R5cGU6XCJzcGFjZVwiLHNvdXJjZUluZGV4OnAsc291cmNlRW5kSW5kZXg6bix2YWx1ZTpzfSkscD1ufWVsc2UgaWYoYz09PUVufHxjPT09ZWEpe249cCxpPWM9PT1Fbj9cIidcIjonXCInLHM9e3R5cGU6XCJzdHJpbmdcIixzb3VyY2VJbmRleDpwLHF1b3RlOml9O2RvIGlmKG89ITEsbj1yLmluZGV4T2YoaSxuKzEpLH5uKWZvcihsPW47ci5jaGFyQ29kZUF0KGwtMSk9PT10YTspbC09MSxvPSFvO2Vsc2Ugcis9aSxuPXIubGVuZ3RoLTEscy51bmNsb3NlZD0hMDt3aGlsZShvKTtzLnZhbHVlPXIuc2xpY2UocCsxLG4pLHMuc291cmNlRW5kSW5kZXg9cy51bmNsb3NlZD9uOm4rMSxlLnB1c2gocykscD1uKzEsYz1yLmNoYXJDb2RlQXQocCl9ZWxzZSBpZihjPT09ZnQmJnIuY2hhckNvZGVBdChwKzEpPT09Q24pbj1yLmluZGV4T2YoXCIqL1wiLHApLHM9e3R5cGU6XCJjb21tZW50XCIsc291cmNlSW5kZXg6cCxzb3VyY2VFbmRJbmRleDpuKzJ9LG49PT0tMSYmKHMudW5jbG9zZWQ9ITAsbj1yLmxlbmd0aCxzLnNvdXJjZUVuZEluZGV4PW4pLHMudmFsdWU9ci5zbGljZShwKzIsbiksZS5wdXNoKHMpLHA9bisyLGM9ci5jaGFyQ29kZUF0KHApO2Vsc2UgaWYoKGM9PT1mdHx8Yz09PUNuKSYmbSYmbS50eXBlPT09XCJmdW5jdGlvblwiJiZtLnZhbHVlPT09XCJjYWxjXCIpcz1yW3BdLGUucHVzaCh7dHlwZTpcIndvcmRcIixzb3VyY2VJbmRleDpwLXcubGVuZ3RoLHNvdXJjZUVuZEluZGV4OnArcy5sZW5ndGgsdmFsdWU6c30pLHArPTEsYz1yLmNoYXJDb2RlQXQocCk7ZWxzZSBpZihjPT09ZnR8fGM9PT1yYXx8Yz09PW5hKXM9cltwXSxlLnB1c2goe3R5cGU6XCJkaXZcIixzb3VyY2VJbmRleDpwLXcubGVuZ3RoLHNvdXJjZUVuZEluZGV4OnArcy5sZW5ndGgsdmFsdWU6cyxiZWZvcmU6dyxhZnRlcjpcIlwifSksdz1cIlwiLHArPTEsYz1yLmNoYXJDb2RlQXQocCk7ZWxzZSBpZihLcz09PWMpe249cDtkbyBuKz0xLGM9ci5jaGFyQ29kZUF0KG4pO3doaWxlKGM8PTMyKTtpZihmPXAscz17dHlwZTpcImZ1bmN0aW9uXCIsc291cmNlSW5kZXg6cC1nLmxlbmd0aCx2YWx1ZTpnLGJlZm9yZTpyLnNsaWNlKGYrMSxuKX0scD1uLGc9PT1cInVybFwiJiZjIT09RW4mJmMhPT1lYSl7bi09MTtkbyBpZihvPSExLG49ci5pbmRleE9mKFwiKVwiLG4rMSksfm4pZm9yKGw9bjtyLmNoYXJDb2RlQXQobC0xKT09PXRhOylsLT0xLG89IW87ZWxzZSByKz1cIilcIixuPXIubGVuZ3RoLTEscy51bmNsb3NlZD0hMDt3aGlsZShvKTt1PW47ZG8gdS09MSxjPXIuY2hhckNvZGVBdCh1KTt3aGlsZShjPD0zMik7Zjx1PyhwIT09dSsxP3Mubm9kZXM9W3t0eXBlOlwid29yZFwiLHNvdXJjZUluZGV4OnAsc291cmNlRW5kSW5kZXg6dSsxLHZhbHVlOnIuc2xpY2UocCx1KzEpfV06cy5ub2Rlcz1bXSxzLnVuY2xvc2VkJiZ1KzEhPT1uPyhzLmFmdGVyPVwiXCIscy5ub2Rlcy5wdXNoKHt0eXBlOlwic3BhY2VcIixzb3VyY2VJbmRleDp1KzEsc291cmNlRW5kSW5kZXg6bix2YWx1ZTpyLnNsaWNlKHUrMSxuKX0pKToocy5hZnRlcj1yLnNsaWNlKHUrMSxuKSxzLnNvdXJjZUVuZEluZGV4PW4pKToocy5hZnRlcj1cIlwiLHMubm9kZXM9W10pLHA9bisxLHMuc291cmNlRW5kSW5kZXg9cy51bmNsb3NlZD9uOnAsYz1yLmNoYXJDb2RlQXQocCksZS5wdXNoKHMpfWVsc2UgeSs9MSxzLmFmdGVyPVwiXCIscy5zb3VyY2VFbmRJbmRleD1wKzEsZS5wdXNoKHMpLGgucHVzaChzKSxlPXMubm9kZXM9W10sbT1zO2c9XCJcIn1lbHNlIGlmKFpzPT09YyYmeSlwKz0xLGM9ci5jaGFyQ29kZUF0KHApLG0uYWZ0ZXI9YixtLnNvdXJjZUVuZEluZGV4Kz1iLmxlbmd0aCxiPVwiXCIseS09MSxoW2gubGVuZ3RoLTFdLnNvdXJjZUVuZEluZGV4PXAsaC5wb3AoKSxtPWhbeV0sZT1tLm5vZGVzO2Vsc2V7bj1wO2RvIGM9PT10YSYmKG4rPTEpLG4rPTEsYz1yLmNoYXJDb2RlQXQobik7d2hpbGUobjxkJiYhKGM8PTMyfHxjPT09RW58fGM9PT1lYXx8Yz09PXJhfHxjPT09bmF8fGM9PT1mdHx8Yz09PUtzfHxjPT09Q24mJm0mJm0udHlwZT09PVwiZnVuY3Rpb25cIiYmbS52YWx1ZT09PVwiY2FsY1wifHxjPT09ZnQmJm0udHlwZT09PVwiZnVuY3Rpb25cIiYmbS52YWx1ZT09PVwiY2FsY1wifHxjPT09WnMmJnkpKTtzPXIuc2xpY2UocCxuKSxLcz09PWM/Zz1zOihZdj09PXMuY2hhckNvZGVBdCgwKXx8SHY9PT1zLmNoYXJDb2RlQXQoMCkpJiZRdj09PXMuY2hhckNvZGVBdCgxKSYmSnYudGVzdChzLnNsaWNlKDIpKT9lLnB1c2goe3R5cGU6XCJ1bmljb2RlLXJhbmdlXCIsc291cmNlSW5kZXg6cCxzb3VyY2VFbmRJbmRleDpuLHZhbHVlOnN9KTplLnB1c2goe3R5cGU6XCJ3b3JkXCIsc291cmNlSW5kZXg6cCxzb3VyY2VFbmRJbmRleDpuLHZhbHVlOnN9KSxwPW59Zm9yKHA9aC5sZW5ndGgtMTtwO3AtPTEpaFtwXS51bmNsb3NlZD0hMCxoW3BdLnNvdXJjZUVuZEluZGV4PXIubGVuZ3RoO3JldHVybiBoWzBdLm5vZGVzfX0pO3ZhciBRZj1TKChTayxIZik9PntIZi5leHBvcnRzPWZ1bmN0aW9uIHQoZSxyLG4pe3ZhciBpLGEscyxvO2ZvcihpPTAsYT1lLmxlbmd0aDtpPGE7aSs9MSlzPWVbaV0sbnx8KG89cihzLGksZSkpLG8hPT0hMSYmcy50eXBlPT09XCJmdW5jdGlvblwiJiZBcnJheS5pc0FycmF5KHMubm9kZXMpJiZ0KHMubm9kZXMscixuKSxuJiZyKHMsaSxlKX19KTt2YXIgWmY9Uygoa2ssS2YpPT57ZnVuY3Rpb24gSmYodCxlKXt2YXIgcj10LnR5cGUsbj10LnZhbHVlLGksYTtyZXR1cm4gZSYmKGE9ZSh0KSkhPT12b2lkIDA/YTpyPT09XCJ3b3JkXCJ8fHI9PT1cInNwYWNlXCI/bjpyPT09XCJzdHJpbmdcIj8oaT10LnF1b3RlfHxcIlwiLGkrbisodC51bmNsb3NlZD9cIlwiOmkpKTpyPT09XCJjb21tZW50XCI/XCIvKlwiK24rKHQudW5jbG9zZWQ/XCJcIjpcIiovXCIpOnI9PT1cImRpdlwiPyh0LmJlZm9yZXx8XCJcIikrbisodC5hZnRlcnx8XCJcIik6QXJyYXkuaXNBcnJheSh0Lm5vZGVzKT8oaT1YZih0Lm5vZGVzLGUpLHIhPT1cImZ1bmN0aW9uXCI/aTpuK1wiKFwiKyh0LmJlZm9yZXx8XCJcIikraSsodC5hZnRlcnx8XCJcIikrKHQudW5jbG9zZWQ/XCJcIjpcIilcIikpOm59ZnVuY3Rpb24gWGYodCxlKXt2YXIgcixuO2lmKEFycmF5LmlzQXJyYXkodCkpe2ZvcihyPVwiXCIsbj10Lmxlbmd0aC0xO35uO24tPTEpcj1KZih0W25dLGUpK3I7cmV0dXJuIHJ9cmV0dXJuIEpmKHQsZSl9S2YuZXhwb3J0cz1YZn0pO3ZhciB0Yz1TKChPayxlYyk9Pnt2YXIgQW49XCItXCIuY2hhckNvZGVBdCgwKSxfbj1cIitcIi5jaGFyQ29kZUF0KDApLGlhPVwiLlwiLmNoYXJDb2RlQXQoMCksWHY9XCJlXCIuY2hhckNvZGVBdCgwKSxLdj1cIkVcIi5jaGFyQ29kZUF0KDApO2Z1bmN0aW9uIFp2KHQpe3ZhciBlPXQuY2hhckNvZGVBdCgwKSxyO2lmKGU9PT1fbnx8ZT09PUFuKXtpZihyPXQuY2hhckNvZGVBdCgxKSxyPj00OCYmcjw9NTcpcmV0dXJuITA7dmFyIG49dC5jaGFyQ29kZUF0KDIpO3JldHVybiByPT09aWEmJm4+PTQ4JiZuPD01N31yZXR1cm4gZT09PWlhPyhyPXQuY2hhckNvZGVBdCgxKSxyPj00OCYmcjw9NTcpOmU+PTQ4JiZlPD01N31lYy5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciBlPTAscj10Lmxlbmd0aCxuLGksYTtpZihyPT09MHx8IVp2KHQpKXJldHVybiExO2ZvcihuPXQuY2hhckNvZGVBdChlKSwobj09PV9ufHxuPT09QW4pJiZlKys7ZTxyJiYobj10LmNoYXJDb2RlQXQoZSksIShuPDQ4fHxuPjU3KSk7KWUrPTE7aWYobj10LmNoYXJDb2RlQXQoZSksaT10LmNoYXJDb2RlQXQoZSsxKSxuPT09aWEmJmk+PTQ4JiZpPD01Nylmb3IoZSs9MjtlPHImJihuPXQuY2hhckNvZGVBdChlKSwhKG48NDh8fG4+NTcpKTspZSs9MTtpZihuPXQuY2hhckNvZGVBdChlKSxpPXQuY2hhckNvZGVBdChlKzEpLGE9dC5jaGFyQ29kZUF0KGUrMiksKG49PT1Ydnx8bj09PUt2KSYmKGk+PTQ4JiZpPD01N3x8KGk9PT1fbnx8aT09PUFuKSYmYT49NDgmJmE8PTU3KSlmb3IoZSs9aT09PV9ufHxpPT09QW4/MzoyO2U8ciYmKG49dC5jaGFyQ29kZUF0KGUpLCEobjw0OHx8bj41NykpOyllKz0xO3JldHVybntudW1iZXI6dC5zbGljZSgwLGUpLHVuaXQ6dC5zbGljZShlKX19fSk7dmFyIHNjPVMoKEVrLGljKT0+e3ZhciBldz1ZZigpLHJjPVFmKCksbmM9WmYoKTtmdW5jdGlvbiBOZSh0KXtyZXR1cm4gdGhpcyBpbnN0YW5jZW9mIE5lPyh0aGlzLm5vZGVzPWV3KHQpLHRoaXMpOm5ldyBOZSh0KX1OZS5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0aGlzLm5vZGVzKT9uYyh0aGlzLm5vZGVzKTpcIlwifTtOZS5wcm90b3R5cGUud2Fsaz1mdW5jdGlvbih0LGUpe3JldHVybiByYyh0aGlzLm5vZGVzLHQsZSksdGhpc307TmUudW5pdD10YygpO05lLndhbGs9cmM7TmUuc3RyaW5naWZ5PW5jO2ljLmV4cG9ydHM9TmV9KTt2YXIgU2M9UygoQ08seGMpPT57eGMuZXhwb3J0cz17Y29udGVudDpbXSxwcmVzZXRzOltdLGRhcmtNb2RlOlwibWVkaWFcIix0aGVtZTp7YWNjZW50Q29sb3I6KHt0aGVtZTp0fSk9Pih7Li4udChcImNvbG9yc1wiKSxhdXRvOlwiYXV0b1wifSksYW5pbWF0aW9uOntub25lOlwibm9uZVwiLHNwaW46XCJzcGluIDFzIGxpbmVhciBpbmZpbml0ZVwiLHBpbmc6XCJwaW5nIDFzIGN1YmljLWJlemllcigwLCAwLCAwLjIsIDEpIGluZmluaXRlXCIscHVsc2U6XCJwdWxzZSAycyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjYsIDEpIGluZmluaXRlXCIsYm91bmNlOlwiYm91bmNlIDFzIGluZmluaXRlXCJ9LGFyaWE6e2NoZWNrZWQ6J2NoZWNrZWQ9XCJ0cnVlXCInLGRpc2FibGVkOidkaXNhYmxlZD1cInRydWVcIicsZXhwYW5kZWQ6J2V4cGFuZGVkPVwidHJ1ZVwiJyxoaWRkZW46J2hpZGRlbj1cInRydWVcIicscHJlc3NlZDoncHJlc3NlZD1cInRydWVcIicscmVhZG9ubHk6J3JlYWRvbmx5PVwidHJ1ZVwiJyxyZXF1aXJlZDoncmVxdWlyZWQ9XCJ0cnVlXCInLHNlbGVjdGVkOidzZWxlY3RlZD1cInRydWVcIid9LGFzcGVjdFJhdGlvOnthdXRvOlwiYXV0b1wiLHNxdWFyZTpcIjEgLyAxXCIsdmlkZW86XCIxNiAvIDlcIn0sYmFja2Ryb3BCbHVyOih7dGhlbWU6dH0pPT50KFwiYmx1clwiKSxiYWNrZHJvcEJyaWdodG5lc3M6KHt0aGVtZTp0fSk9PnQoXCJicmlnaHRuZXNzXCIpLGJhY2tkcm9wQ29udHJhc3Q6KHt0aGVtZTp0fSk9PnQoXCJjb250cmFzdFwiKSxiYWNrZHJvcEdyYXlzY2FsZTooe3RoZW1lOnR9KT0+dChcImdyYXlzY2FsZVwiKSxiYWNrZHJvcEh1ZVJvdGF0ZTooe3RoZW1lOnR9KT0+dChcImh1ZVJvdGF0ZVwiKSxiYWNrZHJvcEludmVydDooe3RoZW1lOnR9KT0+dChcImludmVydFwiKSxiYWNrZHJvcE9wYWNpdHk6KHt0aGVtZTp0fSk9PnQoXCJvcGFjaXR5XCIpLGJhY2tkcm9wU2F0dXJhdGU6KHt0aGVtZTp0fSk9PnQoXCJzYXR1cmF0ZVwiKSxiYWNrZHJvcFNlcGlhOih7dGhlbWU6dH0pPT50KFwic2VwaWFcIiksYmFja2dyb3VuZENvbG9yOih7dGhlbWU6dH0pPT50KFwiY29sb3JzXCIpLGJhY2tncm91bmRJbWFnZTp7bm9uZTpcIm5vbmVcIixcImdyYWRpZW50LXRvLXRcIjpcImxpbmVhci1ncmFkaWVudCh0byB0b3AsIHZhcigtLXR3LWdyYWRpZW50LXN0b3BzKSlcIixcImdyYWRpZW50LXRvLXRyXCI6XCJsaW5lYXItZ3JhZGllbnQodG8gdG9wIHJpZ2h0LCB2YXIoLS10dy1ncmFkaWVudC1zdG9wcykpXCIsXCJncmFkaWVudC10by1yXCI6XCJsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHZhcigtLXR3LWdyYWRpZW50LXN0b3BzKSlcIixcImdyYWRpZW50LXRvLWJyXCI6XCJsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tIHJpZ2h0LCB2YXIoLS10dy1ncmFkaWVudC1zdG9wcykpXCIsXCJncmFkaWVudC10by1iXCI6XCJsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCB2YXIoLS10dy1ncmFkaWVudC1zdG9wcykpXCIsXCJncmFkaWVudC10by1ibFwiOlwibGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSBsZWZ0LCB2YXIoLS10dy1ncmFkaWVudC1zdG9wcykpXCIsXCJncmFkaWVudC10by1sXCI6XCJsaW5lYXItZ3JhZGllbnQodG8gbGVmdCwgdmFyKC0tdHctZ3JhZGllbnQtc3RvcHMpKVwiLFwiZ3JhZGllbnQtdG8tdGxcIjpcImxpbmVhci1ncmFkaWVudCh0byB0b3AgbGVmdCwgdmFyKC0tdHctZ3JhZGllbnQtc3RvcHMpKVwifSxiYWNrZ3JvdW5kT3BhY2l0eTooe3RoZW1lOnR9KT0+dChcIm9wYWNpdHlcIiksYmFja2dyb3VuZFBvc2l0aW9uOntib3R0b206XCJib3R0b21cIixjZW50ZXI6XCJjZW50ZXJcIixsZWZ0OlwibGVmdFwiLFwibGVmdC1ib3R0b21cIjpcImxlZnQgYm90dG9tXCIsXCJsZWZ0LXRvcFwiOlwibGVmdCB0b3BcIixyaWdodDpcInJpZ2h0XCIsXCJyaWdodC1ib3R0b21cIjpcInJpZ2h0IGJvdHRvbVwiLFwicmlnaHQtdG9wXCI6XCJyaWdodCB0b3BcIix0b3A6XCJ0b3BcIn0sYmFja2dyb3VuZFNpemU6e2F1dG86XCJhdXRvXCIsY292ZXI6XCJjb3ZlclwiLGNvbnRhaW46XCJjb250YWluXCJ9LGJsdXI6ezA6XCIwXCIsbm9uZTpcIjBcIixzbTpcIjRweFwiLERFRkFVTFQ6XCI4cHhcIixtZDpcIjEycHhcIixsZzpcIjE2cHhcIix4bDpcIjI0cHhcIixcIjJ4bFwiOlwiNDBweFwiLFwiM3hsXCI6XCI2NHB4XCJ9LGJvcmRlckNvbG9yOih7dGhlbWU6dH0pPT4oey4uLnQoXCJjb2xvcnNcIiksREVGQVVMVDp0KFwiY29sb3JzLmdyYXkuMjAwXCIsXCJjdXJyZW50Q29sb3JcIil9KSxib3JkZXJPcGFjaXR5Oih7dGhlbWU6dH0pPT50KFwib3BhY2l0eVwiKSxib3JkZXJSYWRpdXM6e25vbmU6XCIwcHhcIixzbTpcIjAuMTI1cmVtXCIsREVGQVVMVDpcIjAuMjVyZW1cIixtZDpcIjAuMzc1cmVtXCIsbGc6XCIwLjVyZW1cIix4bDpcIjAuNzVyZW1cIixcIjJ4bFwiOlwiMXJlbVwiLFwiM3hsXCI6XCIxLjVyZW1cIixmdWxsOlwiOTk5OXB4XCJ9LGJvcmRlclNwYWNpbmc6KHt0aGVtZTp0fSk9Pih7Li4udChcInNwYWNpbmdcIil9KSxib3JkZXJXaWR0aDp7REVGQVVMVDpcIjFweFwiLDA6XCIwcHhcIiwyOlwiMnB4XCIsNDpcIjRweFwiLDg6XCI4cHhcIn0sYm94U2hhZG93OntzbTpcIjAgMXB4IDJweCAwIHJnYigwIDAgMCAvIDAuMDUpXCIsREVGQVVMVDpcIjAgMXB4IDNweCAwIHJnYigwIDAgMCAvIDAuMSksIDAgMXB4IDJweCAtMXB4IHJnYigwIDAgMCAvIDAuMSlcIixtZDpcIjAgNHB4IDZweCAtMXB4IHJnYigwIDAgMCAvIDAuMSksIDAgMnB4IDRweCAtMnB4IHJnYigwIDAgMCAvIDAuMSlcIixsZzpcIjAgMTBweCAxNXB4IC0zcHggcmdiKDAgMCAwIC8gMC4xKSwgMCA0cHggNnB4IC00cHggcmdiKDAgMCAwIC8gMC4xKVwiLHhsOlwiMCAyMHB4IDI1cHggLTVweCByZ2IoMCAwIDAgLyAwLjEpLCAwIDhweCAxMHB4IC02cHggcmdiKDAgMCAwIC8gMC4xKVwiLFwiMnhsXCI6XCIwIDI1cHggNTBweCAtMTJweCByZ2IoMCAwIDAgLyAwLjI1KVwiLGlubmVyOlwiaW5zZXQgMCAycHggNHB4IDAgcmdiKDAgMCAwIC8gMC4wNSlcIixub25lOlwibm9uZVwifSxib3hTaGFkb3dDb2xvcjooe3RoZW1lOnR9KT0+dChcImNvbG9yc1wiKSxicmlnaHRuZXNzOnswOlwiMFwiLDUwOlwiLjVcIiw3NTpcIi43NVwiLDkwOlwiLjlcIiw5NTpcIi45NVwiLDEwMDpcIjFcIiwxMDU6XCIxLjA1XCIsMTEwOlwiMS4xXCIsMTI1OlwiMS4yNVwiLDE1MDpcIjEuNVwiLDIwMDpcIjJcIn0sY2FyZXRDb2xvcjooe3RoZW1lOnR9KT0+dChcImNvbG9yc1wiKSxjb2xvcnM6KHtjb2xvcnM6dH0pPT4oe2luaGVyaXQ6dC5pbmhlcml0LGN1cnJlbnQ6dC5jdXJyZW50LHRyYW5zcGFyZW50OnQudHJhbnNwYXJlbnQsYmxhY2s6dC5ibGFjayx3aGl0ZTp0LndoaXRlLHNsYXRlOnQuc2xhdGUsZ3JheTp0LmdyYXksemluYzp0LnppbmMsbmV1dHJhbDp0Lm5ldXRyYWwsc3RvbmU6dC5zdG9uZSxyZWQ6dC5yZWQsb3JhbmdlOnQub3JhbmdlLGFtYmVyOnQuYW1iZXIseWVsbG93OnQueWVsbG93LGxpbWU6dC5saW1lLGdyZWVuOnQuZ3JlZW4sZW1lcmFsZDp0LmVtZXJhbGQsdGVhbDp0LnRlYWwsY3lhbjp0LmN5YW4sc2t5OnQuc2t5LGJsdWU6dC5ibHVlLGluZGlnbzp0LmluZGlnbyx2aW9sZXQ6dC52aW9sZXQscHVycGxlOnQucHVycGxlLGZ1Y2hzaWE6dC5mdWNoc2lhLHBpbms6dC5waW5rLHJvc2U6dC5yb3NlfSksY29sdW1uczp7YXV0bzpcImF1dG9cIiwxOlwiMVwiLDI6XCIyXCIsMzpcIjNcIiw0OlwiNFwiLDU6XCI1XCIsNjpcIjZcIiw3OlwiN1wiLDg6XCI4XCIsOTpcIjlcIiwxMDpcIjEwXCIsMTE6XCIxMVwiLDEyOlwiMTJcIixcIjN4c1wiOlwiMTZyZW1cIixcIjJ4c1wiOlwiMThyZW1cIix4czpcIjIwcmVtXCIsc206XCIyNHJlbVwiLG1kOlwiMjhyZW1cIixsZzpcIjMycmVtXCIseGw6XCIzNnJlbVwiLFwiMnhsXCI6XCI0MnJlbVwiLFwiM3hsXCI6XCI0OHJlbVwiLFwiNHhsXCI6XCI1NnJlbVwiLFwiNXhsXCI6XCI2NHJlbVwiLFwiNnhsXCI6XCI3MnJlbVwiLFwiN3hsXCI6XCI4MHJlbVwifSxjb250YWluZXI6e30sY29udGVudDp7bm9uZTpcIm5vbmVcIn0sY29udHJhc3Q6ezA6XCIwXCIsNTA6XCIuNVwiLDc1OlwiLjc1XCIsMTAwOlwiMVwiLDEyNTpcIjEuMjVcIiwxNTA6XCIxLjVcIiwyMDA6XCIyXCJ9LGN1cnNvcjp7YXV0bzpcImF1dG9cIixkZWZhdWx0OlwiZGVmYXVsdFwiLHBvaW50ZXI6XCJwb2ludGVyXCIsd2FpdDpcIndhaXRcIix0ZXh0OlwidGV4dFwiLG1vdmU6XCJtb3ZlXCIsaGVscDpcImhlbHBcIixcIm5vdC1hbGxvd2VkXCI6XCJub3QtYWxsb3dlZFwiLG5vbmU6XCJub25lXCIsXCJjb250ZXh0LW1lbnVcIjpcImNvbnRleHQtbWVudVwiLHByb2dyZXNzOlwicHJvZ3Jlc3NcIixjZWxsOlwiY2VsbFwiLGNyb3NzaGFpcjpcImNyb3NzaGFpclwiLFwidmVydGljYWwtdGV4dFwiOlwidmVydGljYWwtdGV4dFwiLGFsaWFzOlwiYWxpYXNcIixjb3B5OlwiY29weVwiLFwibm8tZHJvcFwiOlwibm8tZHJvcFwiLGdyYWI6XCJncmFiXCIsZ3JhYmJpbmc6XCJncmFiYmluZ1wiLFwiYWxsLXNjcm9sbFwiOlwiYWxsLXNjcm9sbFwiLFwiY29sLXJlc2l6ZVwiOlwiY29sLXJlc2l6ZVwiLFwicm93LXJlc2l6ZVwiOlwicm93LXJlc2l6ZVwiLFwibi1yZXNpemVcIjpcIm4tcmVzaXplXCIsXCJlLXJlc2l6ZVwiOlwiZS1yZXNpemVcIixcInMtcmVzaXplXCI6XCJzLXJlc2l6ZVwiLFwidy1yZXNpemVcIjpcInctcmVzaXplXCIsXCJuZS1yZXNpemVcIjpcIm5lLXJlc2l6ZVwiLFwibnctcmVzaXplXCI6XCJudy1yZXNpemVcIixcInNlLXJlc2l6ZVwiOlwic2UtcmVzaXplXCIsXCJzdy1yZXNpemVcIjpcInN3LXJlc2l6ZVwiLFwiZXctcmVzaXplXCI6XCJldy1yZXNpemVcIixcIm5zLXJlc2l6ZVwiOlwibnMtcmVzaXplXCIsXCJuZXN3LXJlc2l6ZVwiOlwibmVzdy1yZXNpemVcIixcIm53c2UtcmVzaXplXCI6XCJud3NlLXJlc2l6ZVwiLFwiem9vbS1pblwiOlwiem9vbS1pblwiLFwiem9vbS1vdXRcIjpcInpvb20tb3V0XCJ9LGRpdmlkZUNvbG9yOih7dGhlbWU6dH0pPT50KFwiYm9yZGVyQ29sb3JcIiksZGl2aWRlT3BhY2l0eTooe3RoZW1lOnR9KT0+dChcImJvcmRlck9wYWNpdHlcIiksZGl2aWRlV2lkdGg6KHt0aGVtZTp0fSk9PnQoXCJib3JkZXJXaWR0aFwiKSxkcm9wU2hhZG93OntzbTpcIjAgMXB4IDFweCByZ2IoMCAwIDAgLyAwLjA1KVwiLERFRkFVTFQ6W1wiMCAxcHggMnB4IHJnYigwIDAgMCAvIDAuMSlcIixcIjAgMXB4IDFweCByZ2IoMCAwIDAgLyAwLjA2KVwiXSxtZDpbXCIwIDRweCAzcHggcmdiKDAgMCAwIC8gMC4wNylcIixcIjAgMnB4IDJweCByZ2IoMCAwIDAgLyAwLjA2KVwiXSxsZzpbXCIwIDEwcHggOHB4IHJnYigwIDAgMCAvIDAuMDQpXCIsXCIwIDRweCAzcHggcmdiKDAgMCAwIC8gMC4xKVwiXSx4bDpbXCIwIDIwcHggMTNweCByZ2IoMCAwIDAgLyAwLjAzKVwiLFwiMCA4cHggNXB4IHJnYigwIDAgMCAvIDAuMDgpXCJdLFwiMnhsXCI6XCIwIDI1cHggMjVweCByZ2IoMCAwIDAgLyAwLjE1KVwiLG5vbmU6XCIwIDAgIzAwMDBcIn0sZmlsbDooe3RoZW1lOnR9KT0+KHtub25lOlwibm9uZVwiLC4uLnQoXCJjb2xvcnNcIil9KSxmbGV4OnsxOlwiMSAxIDAlXCIsYXV0bzpcIjEgMSBhdXRvXCIsaW5pdGlhbDpcIjAgMSBhdXRvXCIsbm9uZTpcIm5vbmVcIn0sZmxleEJhc2lzOih7dGhlbWU6dH0pPT4oe2F1dG86XCJhdXRvXCIsLi4udChcInNwYWNpbmdcIiksXCIxLzJcIjpcIjUwJVwiLFwiMS8zXCI6XCIzMy4zMzMzMzMlXCIsXCIyLzNcIjpcIjY2LjY2NjY2NyVcIixcIjEvNFwiOlwiMjUlXCIsXCIyLzRcIjpcIjUwJVwiLFwiMy80XCI6XCI3NSVcIixcIjEvNVwiOlwiMjAlXCIsXCIyLzVcIjpcIjQwJVwiLFwiMy81XCI6XCI2MCVcIixcIjQvNVwiOlwiODAlXCIsXCIxLzZcIjpcIjE2LjY2NjY2NyVcIixcIjIvNlwiOlwiMzMuMzMzMzMzJVwiLFwiMy82XCI6XCI1MCVcIixcIjQvNlwiOlwiNjYuNjY2NjY3JVwiLFwiNS82XCI6XCI4My4zMzMzMzMlXCIsXCIxLzEyXCI6XCI4LjMzMzMzMyVcIixcIjIvMTJcIjpcIjE2LjY2NjY2NyVcIixcIjMvMTJcIjpcIjI1JVwiLFwiNC8xMlwiOlwiMzMuMzMzMzMzJVwiLFwiNS8xMlwiOlwiNDEuNjY2NjY3JVwiLFwiNi8xMlwiOlwiNTAlXCIsXCI3LzEyXCI6XCI1OC4zMzMzMzMlXCIsXCI4LzEyXCI6XCI2Ni42NjY2NjclXCIsXCI5LzEyXCI6XCI3NSVcIixcIjEwLzEyXCI6XCI4My4zMzMzMzMlXCIsXCIxMS8xMlwiOlwiOTEuNjY2NjY3JVwiLGZ1bGw6XCIxMDAlXCJ9KSxmbGV4R3Jvdzp7MDpcIjBcIixERUZBVUxUOlwiMVwifSxmbGV4U2hyaW5rOnswOlwiMFwiLERFRkFVTFQ6XCIxXCJ9LGZvbnRGYW1pbHk6e3NhbnM6W1widWktc2Fucy1zZXJpZlwiLFwic3lzdGVtLXVpXCIsXCItYXBwbGUtc3lzdGVtXCIsXCJCbGlua01hY1N5c3RlbUZvbnRcIiwnXCJTZWdvZSBVSVwiJyxcIlJvYm90b1wiLCdcIkhlbHZldGljYSBOZXVlXCInLFwiQXJpYWxcIiwnXCJOb3RvIFNhbnNcIicsXCJzYW5zLXNlcmlmXCIsJ1wiQXBwbGUgQ29sb3IgRW1vamlcIicsJ1wiU2Vnb2UgVUkgRW1vamlcIicsJ1wiU2Vnb2UgVUkgU3ltYm9sXCInLCdcIk5vdG8gQ29sb3IgRW1vamlcIiddLHNlcmlmOltcInVpLXNlcmlmXCIsXCJHZW9yZ2lhXCIsXCJDYW1icmlhXCIsJ1wiVGltZXMgTmV3IFJvbWFuXCInLFwiVGltZXNcIixcInNlcmlmXCJdLG1vbm86W1widWktbW9ub3NwYWNlXCIsXCJTRk1vbm8tUmVndWxhclwiLFwiTWVubG9cIixcIk1vbmFjb1wiLFwiQ29uc29sYXNcIiwnXCJMaWJlcmF0aW9uIE1vbm9cIicsJ1wiQ291cmllciBOZXdcIicsXCJtb25vc3BhY2VcIl19LGZvbnRTaXplOnt4czpbXCIwLjc1cmVtXCIse2xpbmVIZWlnaHQ6XCIxcmVtXCJ9XSxzbTpbXCIwLjg3NXJlbVwiLHtsaW5lSGVpZ2h0OlwiMS4yNXJlbVwifV0sYmFzZTpbXCIxcmVtXCIse2xpbmVIZWlnaHQ6XCIxLjVyZW1cIn1dLGxnOltcIjEuMTI1cmVtXCIse2xpbmVIZWlnaHQ6XCIxLjc1cmVtXCJ9XSx4bDpbXCIxLjI1cmVtXCIse2xpbmVIZWlnaHQ6XCIxLjc1cmVtXCJ9XSxcIjJ4bFwiOltcIjEuNXJlbVwiLHtsaW5lSGVpZ2h0OlwiMnJlbVwifV0sXCIzeGxcIjpbXCIxLjg3NXJlbVwiLHtsaW5lSGVpZ2h0OlwiMi4yNXJlbVwifV0sXCI0eGxcIjpbXCIyLjI1cmVtXCIse2xpbmVIZWlnaHQ6XCIyLjVyZW1cIn1dLFwiNXhsXCI6W1wiM3JlbVwiLHtsaW5lSGVpZ2h0OlwiMVwifV0sXCI2eGxcIjpbXCIzLjc1cmVtXCIse2xpbmVIZWlnaHQ6XCIxXCJ9XSxcIjd4bFwiOltcIjQuNXJlbVwiLHtsaW5lSGVpZ2h0OlwiMVwifV0sXCI4eGxcIjpbXCI2cmVtXCIse2xpbmVIZWlnaHQ6XCIxXCJ9XSxcIjl4bFwiOltcIjhyZW1cIix7bGluZUhlaWdodDpcIjFcIn1dfSxmb250V2VpZ2h0Ont0aGluOlwiMTAwXCIsZXh0cmFsaWdodDpcIjIwMFwiLGxpZ2h0OlwiMzAwXCIsbm9ybWFsOlwiNDAwXCIsbWVkaXVtOlwiNTAwXCIsc2VtaWJvbGQ6XCI2MDBcIixib2xkOlwiNzAwXCIsZXh0cmFib2xkOlwiODAwXCIsYmxhY2s6XCI5MDBcIn0sZ2FwOih7dGhlbWU6dH0pPT50KFwic3BhY2luZ1wiKSxncmFkaWVudENvbG9yU3RvcHM6KHt0aGVtZTp0fSk9PnQoXCJjb2xvcnNcIiksZ3JhZGllbnRDb2xvclN0b3BQb3NpdGlvbnM6e1wiMCVcIjpcIjAlXCIsXCI1JVwiOlwiNSVcIixcIjEwJVwiOlwiMTAlXCIsXCIxNSVcIjpcIjE1JVwiLFwiMjAlXCI6XCIyMCVcIixcIjI1JVwiOlwiMjUlXCIsXCIzMCVcIjpcIjMwJVwiLFwiMzUlXCI6XCIzNSVcIixcIjQwJVwiOlwiNDAlXCIsXCI0NSVcIjpcIjQ1JVwiLFwiNTAlXCI6XCI1MCVcIixcIjU1JVwiOlwiNTUlXCIsXCI2MCVcIjpcIjYwJVwiLFwiNjUlXCI6XCI2NSVcIixcIjcwJVwiOlwiNzAlXCIsXCI3NSVcIjpcIjc1JVwiLFwiODAlXCI6XCI4MCVcIixcIjg1JVwiOlwiODUlXCIsXCI5MCVcIjpcIjkwJVwiLFwiOTUlXCI6XCI5NSVcIixcIjEwMCVcIjpcIjEwMCVcIn0sZ3JheXNjYWxlOnswOlwiMFwiLERFRkFVTFQ6XCIxMDAlXCJ9LGdyaWRBdXRvQ29sdW1uczp7YXV0bzpcImF1dG9cIixtaW46XCJtaW4tY29udGVudFwiLG1heDpcIm1heC1jb250ZW50XCIsZnI6XCJtaW5tYXgoMCwgMWZyKVwifSxncmlkQXV0b1Jvd3M6e2F1dG86XCJhdXRvXCIsbWluOlwibWluLWNvbnRlbnRcIixtYXg6XCJtYXgtY29udGVudFwiLGZyOlwibWlubWF4KDAsIDFmcilcIn0sZ3JpZENvbHVtbjp7YXV0bzpcImF1dG9cIixcInNwYW4tMVwiOlwic3BhbiAxIC8gc3BhbiAxXCIsXCJzcGFuLTJcIjpcInNwYW4gMiAvIHNwYW4gMlwiLFwic3Bhbi0zXCI6XCJzcGFuIDMgLyBzcGFuIDNcIixcInNwYW4tNFwiOlwic3BhbiA0IC8gc3BhbiA0XCIsXCJzcGFuLTVcIjpcInNwYW4gNSAvIHNwYW4gNVwiLFwic3Bhbi02XCI6XCJzcGFuIDYgLyBzcGFuIDZcIixcInNwYW4tN1wiOlwic3BhbiA3IC8gc3BhbiA3XCIsXCJzcGFuLThcIjpcInNwYW4gOCAvIHNwYW4gOFwiLFwic3Bhbi05XCI6XCJzcGFuIDkgLyBzcGFuIDlcIixcInNwYW4tMTBcIjpcInNwYW4gMTAgLyBzcGFuIDEwXCIsXCJzcGFuLTExXCI6XCJzcGFuIDExIC8gc3BhbiAxMVwiLFwic3Bhbi0xMlwiOlwic3BhbiAxMiAvIHNwYW4gMTJcIixcInNwYW4tZnVsbFwiOlwiMSAvIC0xXCJ9LGdyaWRDb2x1bW5FbmQ6e2F1dG86XCJhdXRvXCIsMTpcIjFcIiwyOlwiMlwiLDM6XCIzXCIsNDpcIjRcIiw1OlwiNVwiLDY6XCI2XCIsNzpcIjdcIiw4OlwiOFwiLDk6XCI5XCIsMTA6XCIxMFwiLDExOlwiMTFcIiwxMjpcIjEyXCIsMTM6XCIxM1wifSxncmlkQ29sdW1uU3RhcnQ6e2F1dG86XCJhdXRvXCIsMTpcIjFcIiwyOlwiMlwiLDM6XCIzXCIsNDpcIjRcIiw1OlwiNVwiLDY6XCI2XCIsNzpcIjdcIiw4OlwiOFwiLDk6XCI5XCIsMTA6XCIxMFwiLDExOlwiMTFcIiwxMjpcIjEyXCIsMTM6XCIxM1wifSxncmlkUm93OnthdXRvOlwiYXV0b1wiLFwic3Bhbi0xXCI6XCJzcGFuIDEgLyBzcGFuIDFcIixcInNwYW4tMlwiOlwic3BhbiAyIC8gc3BhbiAyXCIsXCJzcGFuLTNcIjpcInNwYW4gMyAvIHNwYW4gM1wiLFwic3Bhbi00XCI6XCJzcGFuIDQgLyBzcGFuIDRcIixcInNwYW4tNVwiOlwic3BhbiA1IC8gc3BhbiA1XCIsXCJzcGFuLTZcIjpcInNwYW4gNiAvIHNwYW4gNlwiLFwic3Bhbi1mdWxsXCI6XCIxIC8gLTFcIn0sZ3JpZFJvd0VuZDp7YXV0bzpcImF1dG9cIiwxOlwiMVwiLDI6XCIyXCIsMzpcIjNcIiw0OlwiNFwiLDU6XCI1XCIsNjpcIjZcIiw3OlwiN1wifSxncmlkUm93U3RhcnQ6e2F1dG86XCJhdXRvXCIsMTpcIjFcIiwyOlwiMlwiLDM6XCIzXCIsNDpcIjRcIiw1OlwiNVwiLDY6XCI2XCIsNzpcIjdcIn0sZ3JpZFRlbXBsYXRlQ29sdW1uczp7bm9uZTpcIm5vbmVcIiwxOlwicmVwZWF0KDEsIG1pbm1heCgwLCAxZnIpKVwiLDI6XCJyZXBlYXQoMiwgbWlubWF4KDAsIDFmcikpXCIsMzpcInJlcGVhdCgzLCBtaW5tYXgoMCwgMWZyKSlcIiw0OlwicmVwZWF0KDQsIG1pbm1heCgwLCAxZnIpKVwiLDU6XCJyZXBlYXQoNSwgbWlubWF4KDAsIDFmcikpXCIsNjpcInJlcGVhdCg2LCBtaW5tYXgoMCwgMWZyKSlcIiw3OlwicmVwZWF0KDcsIG1pbm1heCgwLCAxZnIpKVwiLDg6XCJyZXBlYXQoOCwgbWlubWF4KDAsIDFmcikpXCIsOTpcInJlcGVhdCg5LCBtaW5tYXgoMCwgMWZyKSlcIiwxMDpcInJlcGVhdCgxMCwgbWlubWF4KDAsIDFmcikpXCIsMTE6XCJyZXBlYXQoMTEsIG1pbm1heCgwLCAxZnIpKVwiLDEyOlwicmVwZWF0KDEyLCBtaW5tYXgoMCwgMWZyKSlcIn0sZ3JpZFRlbXBsYXRlUm93czp7bm9uZTpcIm5vbmVcIiwxOlwicmVwZWF0KDEsIG1pbm1heCgwLCAxZnIpKVwiLDI6XCJyZXBlYXQoMiwgbWlubWF4KDAsIDFmcikpXCIsMzpcInJlcGVhdCgzLCBtaW5tYXgoMCwgMWZyKSlcIiw0OlwicmVwZWF0KDQsIG1pbm1heCgwLCAxZnIpKVwiLDU6XCJyZXBlYXQoNSwgbWlubWF4KDAsIDFmcikpXCIsNjpcInJlcGVhdCg2LCBtaW5tYXgoMCwgMWZyKSlcIn0saGVpZ2h0Oih7dGhlbWU6dH0pPT4oe2F1dG86XCJhdXRvXCIsLi4udChcInNwYWNpbmdcIiksXCIxLzJcIjpcIjUwJVwiLFwiMS8zXCI6XCIzMy4zMzMzMzMlXCIsXCIyLzNcIjpcIjY2LjY2NjY2NyVcIixcIjEvNFwiOlwiMjUlXCIsXCIyLzRcIjpcIjUwJVwiLFwiMy80XCI6XCI3NSVcIixcIjEvNVwiOlwiMjAlXCIsXCIyLzVcIjpcIjQwJVwiLFwiMy81XCI6XCI2MCVcIixcIjQvNVwiOlwiODAlXCIsXCIxLzZcIjpcIjE2LjY2NjY2NyVcIixcIjIvNlwiOlwiMzMuMzMzMzMzJVwiLFwiMy82XCI6XCI1MCVcIixcIjQvNlwiOlwiNjYuNjY2NjY3JVwiLFwiNS82XCI6XCI4My4zMzMzMzMlXCIsZnVsbDpcIjEwMCVcIixzY3JlZW46XCIxMDB2aFwiLG1pbjpcIm1pbi1jb250ZW50XCIsbWF4OlwibWF4LWNvbnRlbnRcIixmaXQ6XCJmaXQtY29udGVudFwifSksaHVlUm90YXRlOnswOlwiMGRlZ1wiLDE1OlwiMTVkZWdcIiwzMDpcIjMwZGVnXCIsNjA6XCI2MGRlZ1wiLDkwOlwiOTBkZWdcIiwxODA6XCIxODBkZWdcIn0saW5zZXQ6KHt0aGVtZTp0fSk9Pih7YXV0bzpcImF1dG9cIiwuLi50KFwic3BhY2luZ1wiKSxcIjEvMlwiOlwiNTAlXCIsXCIxLzNcIjpcIjMzLjMzMzMzMyVcIixcIjIvM1wiOlwiNjYuNjY2NjY3JVwiLFwiMS80XCI6XCIyNSVcIixcIjIvNFwiOlwiNTAlXCIsXCIzLzRcIjpcIjc1JVwiLGZ1bGw6XCIxMDAlXCJ9KSxpbnZlcnQ6ezA6XCIwXCIsREVGQVVMVDpcIjEwMCVcIn0sa2V5ZnJhbWVzOntzcGluOnt0bzp7dHJhbnNmb3JtOlwicm90YXRlKDM2MGRlZylcIn19LHBpbmc6e1wiNzUlLCAxMDAlXCI6e3RyYW5zZm9ybTpcInNjYWxlKDIpXCIsb3BhY2l0eTpcIjBcIn19LHB1bHNlOntcIjUwJVwiOntvcGFjaXR5OlwiLjVcIn19LGJvdW5jZTp7XCIwJSwgMTAwJVwiOnt0cmFuc2Zvcm06XCJ0cmFuc2xhdGVZKC0yNSUpXCIsYW5pbWF0aW9uVGltaW5nRnVuY3Rpb246XCJjdWJpYy1iZXppZXIoMC44LDAsMSwxKVwifSxcIjUwJVwiOnt0cmFuc2Zvcm06XCJub25lXCIsYW5pbWF0aW9uVGltaW5nRnVuY3Rpb246XCJjdWJpYy1iZXppZXIoMCwwLDAuMiwxKVwifX19LGxldHRlclNwYWNpbmc6e3RpZ2h0ZXI6XCItMC4wNWVtXCIsdGlnaHQ6XCItMC4wMjVlbVwiLG5vcm1hbDpcIjBlbVwiLHdpZGU6XCIwLjAyNWVtXCIsd2lkZXI6XCIwLjA1ZW1cIix3aWRlc3Q6XCIwLjFlbVwifSxsaW5lSGVpZ2h0Ontub25lOlwiMVwiLHRpZ2h0OlwiMS4yNVwiLHNudWc6XCIxLjM3NVwiLG5vcm1hbDpcIjEuNVwiLHJlbGF4ZWQ6XCIxLjYyNVwiLGxvb3NlOlwiMlwiLDM6XCIuNzVyZW1cIiw0OlwiMXJlbVwiLDU6XCIxLjI1cmVtXCIsNjpcIjEuNXJlbVwiLDc6XCIxLjc1cmVtXCIsODpcIjJyZW1cIiw5OlwiMi4yNXJlbVwiLDEwOlwiMi41cmVtXCJ9LGxpc3RTdHlsZVR5cGU6e25vbmU6XCJub25lXCIsZGlzYzpcImRpc2NcIixkZWNpbWFsOlwiZGVjaW1hbFwifSxsaXN0U3R5bGVJbWFnZTp7bm9uZTpcIm5vbmVcIn0sbWFyZ2luOih7dGhlbWU6dH0pPT4oe2F1dG86XCJhdXRvXCIsLi4udChcInNwYWNpbmdcIil9KSxsaW5lQ2xhbXA6ezE6XCIxXCIsMjpcIjJcIiwzOlwiM1wiLDQ6XCI0XCIsNTpcIjVcIiw2OlwiNlwifSxtYXhIZWlnaHQ6KHt0aGVtZTp0fSk9Pih7Li4udChcInNwYWNpbmdcIiksbm9uZTpcIm5vbmVcIixmdWxsOlwiMTAwJVwiLHNjcmVlbjpcIjEwMHZoXCIsbWluOlwibWluLWNvbnRlbnRcIixtYXg6XCJtYXgtY29udGVudFwiLGZpdDpcImZpdC1jb250ZW50XCJ9KSxtYXhXaWR0aDooe3RoZW1lOnQsYnJlYWtwb2ludHM6ZX0pPT4oe25vbmU6XCJub25lXCIsMDpcIjByZW1cIix4czpcIjIwcmVtXCIsc206XCIyNHJlbVwiLG1kOlwiMjhyZW1cIixsZzpcIjMycmVtXCIseGw6XCIzNnJlbVwiLFwiMnhsXCI6XCI0MnJlbVwiLFwiM3hsXCI6XCI0OHJlbVwiLFwiNHhsXCI6XCI1NnJlbVwiLFwiNXhsXCI6XCI2NHJlbVwiLFwiNnhsXCI6XCI3MnJlbVwiLFwiN3hsXCI6XCI4MHJlbVwiLGZ1bGw6XCIxMDAlXCIsbWluOlwibWluLWNvbnRlbnRcIixtYXg6XCJtYXgtY29udGVudFwiLGZpdDpcImZpdC1jb250ZW50XCIscHJvc2U6XCI2NWNoXCIsLi4uZSh0KFwic2NyZWVuc1wiKSl9KSxtaW5IZWlnaHQ6ezA6XCIwcHhcIixmdWxsOlwiMTAwJVwiLHNjcmVlbjpcIjEwMHZoXCIsbWluOlwibWluLWNvbnRlbnRcIixtYXg6XCJtYXgtY29udGVudFwiLGZpdDpcImZpdC1jb250ZW50XCJ9LG1pbldpZHRoOnswOlwiMHB4XCIsZnVsbDpcIjEwMCVcIixtaW46XCJtaW4tY29udGVudFwiLG1heDpcIm1heC1jb250ZW50XCIsZml0OlwiZml0LWNvbnRlbnRcIn0sb2JqZWN0UG9zaXRpb246e2JvdHRvbTpcImJvdHRvbVwiLGNlbnRlcjpcImNlbnRlclwiLGxlZnQ6XCJsZWZ0XCIsXCJsZWZ0LWJvdHRvbVwiOlwibGVmdCBib3R0b21cIixcImxlZnQtdG9wXCI6XCJsZWZ0IHRvcFwiLHJpZ2h0OlwicmlnaHRcIixcInJpZ2h0LWJvdHRvbVwiOlwicmlnaHQgYm90dG9tXCIsXCJyaWdodC10b3BcIjpcInJpZ2h0IHRvcFwiLHRvcDpcInRvcFwifSxvcGFjaXR5OnswOlwiMFwiLDU6XCIwLjA1XCIsMTA6XCIwLjFcIiwyMDpcIjAuMlwiLDI1OlwiMC4yNVwiLDMwOlwiMC4zXCIsNDA6XCIwLjRcIiw1MDpcIjAuNVwiLDYwOlwiMC42XCIsNzA6XCIwLjdcIiw3NTpcIjAuNzVcIiw4MDpcIjAuOFwiLDkwOlwiMC45XCIsOTU6XCIwLjk1XCIsMTAwOlwiMVwifSxvcmRlcjp7Zmlyc3Q6XCItOTk5OVwiLGxhc3Q6XCI5OTk5XCIsbm9uZTpcIjBcIiwxOlwiMVwiLDI6XCIyXCIsMzpcIjNcIiw0OlwiNFwiLDU6XCI1XCIsNjpcIjZcIiw3OlwiN1wiLDg6XCI4XCIsOTpcIjlcIiwxMDpcIjEwXCIsMTE6XCIxMVwiLDEyOlwiMTJcIn0sb3V0bGluZUNvbG9yOih7dGhlbWU6dH0pPT50KFwiY29sb3JzXCIpLG91dGxpbmVPZmZzZXQ6ezA6XCIwcHhcIiwxOlwiMXB4XCIsMjpcIjJweFwiLDQ6XCI0cHhcIiw4OlwiOHB4XCJ9LG91dGxpbmVXaWR0aDp7MDpcIjBweFwiLDE6XCIxcHhcIiwyOlwiMnB4XCIsNDpcIjRweFwiLDg6XCI4cHhcIn0scGFkZGluZzooe3RoZW1lOnR9KT0+dChcInNwYWNpbmdcIikscGxhY2Vob2xkZXJDb2xvcjooe3RoZW1lOnR9KT0+dChcImNvbG9yc1wiKSxwbGFjZWhvbGRlck9wYWNpdHk6KHt0aGVtZTp0fSk9PnQoXCJvcGFjaXR5XCIpLHJpbmdDb2xvcjooe3RoZW1lOnR9KT0+KHtERUZBVUxUOnQoXCJjb2xvcnMuYmx1ZS41MDBcIixcIiMzYjgyZjZcIiksLi4udChcImNvbG9yc1wiKX0pLHJpbmdPZmZzZXRDb2xvcjooe3RoZW1lOnR9KT0+dChcImNvbG9yc1wiKSxyaW5nT2Zmc2V0V2lkdGg6ezA6XCIwcHhcIiwxOlwiMXB4XCIsMjpcIjJweFwiLDQ6XCI0cHhcIiw4OlwiOHB4XCJ9LHJpbmdPcGFjaXR5Oih7dGhlbWU6dH0pPT4oe0RFRkFVTFQ6XCIwLjVcIiwuLi50KFwib3BhY2l0eVwiKX0pLHJpbmdXaWR0aDp7REVGQVVMVDpcIjNweFwiLDA6XCIwcHhcIiwxOlwiMXB4XCIsMjpcIjJweFwiLDQ6XCI0cHhcIiw4OlwiOHB4XCJ9LHJvdGF0ZTp7MDpcIjBkZWdcIiwxOlwiMWRlZ1wiLDI6XCIyZGVnXCIsMzpcIjNkZWdcIiw2OlwiNmRlZ1wiLDEyOlwiMTJkZWdcIiw0NTpcIjQ1ZGVnXCIsOTA6XCI5MGRlZ1wiLDE4MDpcIjE4MGRlZ1wifSxzYXR1cmF0ZTp7MDpcIjBcIiw1MDpcIi41XCIsMTAwOlwiMVwiLDE1MDpcIjEuNVwiLDIwMDpcIjJcIn0sc2NhbGU6ezA6XCIwXCIsNTA6XCIuNVwiLDc1OlwiLjc1XCIsOTA6XCIuOVwiLDk1OlwiLjk1XCIsMTAwOlwiMVwiLDEwNTpcIjEuMDVcIiwxMTA6XCIxLjFcIiwxMjU6XCIxLjI1XCIsMTUwOlwiMS41XCJ9LHNjcmVlbnM6e3NtOlwiNjQwcHhcIixtZDpcIjc2OHB4XCIsbGc6XCIxMDI0cHhcIix4bDpcIjEyODBweFwiLFwiMnhsXCI6XCIxNTM2cHhcIn0sc2Nyb2xsTWFyZ2luOih7dGhlbWU6dH0pPT4oey4uLnQoXCJzcGFjaW5nXCIpfSksc2Nyb2xsUGFkZGluZzooe3RoZW1lOnR9KT0+dChcInNwYWNpbmdcIiksc2VwaWE6ezA6XCIwXCIsREVGQVVMVDpcIjEwMCVcIn0sc2tldzp7MDpcIjBkZWdcIiwxOlwiMWRlZ1wiLDI6XCIyZGVnXCIsMzpcIjNkZWdcIiw2OlwiNmRlZ1wiLDEyOlwiMTJkZWdcIn0sc3BhY2U6KHt0aGVtZTp0fSk9Pih7Li4udChcInNwYWNpbmdcIil9KSxzcGFjaW5nOntweDpcIjFweFwiLDA6XCIwcHhcIiwuNTpcIjAuMTI1cmVtXCIsMTpcIjAuMjVyZW1cIiwxLjU6XCIwLjM3NXJlbVwiLDI6XCIwLjVyZW1cIiwyLjU6XCIwLjYyNXJlbVwiLDM6XCIwLjc1cmVtXCIsMy41OlwiMC44NzVyZW1cIiw0OlwiMXJlbVwiLDU6XCIxLjI1cmVtXCIsNjpcIjEuNXJlbVwiLDc6XCIxLjc1cmVtXCIsODpcIjJyZW1cIiw5OlwiMi4yNXJlbVwiLDEwOlwiMi41cmVtXCIsMTE6XCIyLjc1cmVtXCIsMTI6XCIzcmVtXCIsMTQ6XCIzLjVyZW1cIiwxNjpcIjRyZW1cIiwyMDpcIjVyZW1cIiwyNDpcIjZyZW1cIiwyODpcIjdyZW1cIiwzMjpcIjhyZW1cIiwzNjpcIjlyZW1cIiw0MDpcIjEwcmVtXCIsNDQ6XCIxMXJlbVwiLDQ4OlwiMTJyZW1cIiw1MjpcIjEzcmVtXCIsNTY6XCIxNHJlbVwiLDYwOlwiMTVyZW1cIiw2NDpcIjE2cmVtXCIsNzI6XCIxOHJlbVwiLDgwOlwiMjByZW1cIiw5NjpcIjI0cmVtXCJ9LHN0cm9rZTooe3RoZW1lOnR9KT0+KHtub25lOlwibm9uZVwiLC4uLnQoXCJjb2xvcnNcIil9KSxzdHJva2VXaWR0aDp7MDpcIjBcIiwxOlwiMVwiLDI6XCIyXCJ9LHN1cHBvcnRzOnt9LGRhdGE6e30sdGV4dENvbG9yOih7dGhlbWU6dH0pPT50KFwiY29sb3JzXCIpLHRleHREZWNvcmF0aW9uQ29sb3I6KHt0aGVtZTp0fSk9PnQoXCJjb2xvcnNcIiksdGV4dERlY29yYXRpb25UaGlja25lc3M6e2F1dG86XCJhdXRvXCIsXCJmcm9tLWZvbnRcIjpcImZyb20tZm9udFwiLDA6XCIwcHhcIiwxOlwiMXB4XCIsMjpcIjJweFwiLDQ6XCI0cHhcIiw4OlwiOHB4XCJ9LHRleHRJbmRlbnQ6KHt0aGVtZTp0fSk9Pih7Li4udChcInNwYWNpbmdcIil9KSx0ZXh0T3BhY2l0eTooe3RoZW1lOnR9KT0+dChcIm9wYWNpdHlcIiksdGV4dFVuZGVybGluZU9mZnNldDp7YXV0bzpcImF1dG9cIiwwOlwiMHB4XCIsMTpcIjFweFwiLDI6XCIycHhcIiw0OlwiNHB4XCIsODpcIjhweFwifSx0cmFuc2Zvcm1PcmlnaW46e2NlbnRlcjpcImNlbnRlclwiLHRvcDpcInRvcFwiLFwidG9wLXJpZ2h0XCI6XCJ0b3AgcmlnaHRcIixyaWdodDpcInJpZ2h0XCIsXCJib3R0b20tcmlnaHRcIjpcImJvdHRvbSByaWdodFwiLGJvdHRvbTpcImJvdHRvbVwiLFwiYm90dG9tLWxlZnRcIjpcImJvdHRvbSBsZWZ0XCIsbGVmdDpcImxlZnRcIixcInRvcC1sZWZ0XCI6XCJ0b3AgbGVmdFwifSx0cmFuc2l0aW9uRGVsYXk6ezA6XCIwc1wiLDc1OlwiNzVtc1wiLDEwMDpcIjEwMG1zXCIsMTUwOlwiMTUwbXNcIiwyMDA6XCIyMDBtc1wiLDMwMDpcIjMwMG1zXCIsNTAwOlwiNTAwbXNcIiw3MDA6XCI3MDBtc1wiLDFlMzpcIjEwMDBtc1wifSx0cmFuc2l0aW9uRHVyYXRpb246e0RFRkFVTFQ6XCIxNTBtc1wiLDA6XCIwc1wiLDc1OlwiNzVtc1wiLDEwMDpcIjEwMG1zXCIsMTUwOlwiMTUwbXNcIiwyMDA6XCIyMDBtc1wiLDMwMDpcIjMwMG1zXCIsNTAwOlwiNTAwbXNcIiw3MDA6XCI3MDBtc1wiLDFlMzpcIjEwMDBtc1wifSx0cmFuc2l0aW9uUHJvcGVydHk6e25vbmU6XCJub25lXCIsYWxsOlwiYWxsXCIsREVGQVVMVDpcImNvbG9yLCBiYWNrZ3JvdW5kLWNvbG9yLCBib3JkZXItY29sb3IsIHRleHQtZGVjb3JhdGlvbi1jb2xvciwgZmlsbCwgc3Ryb2tlLCBvcGFjaXR5LCBib3gtc2hhZG93LCB0cmFuc2Zvcm0sIGZpbHRlciwgYmFja2Ryb3AtZmlsdGVyXCIsY29sb3JzOlwiY29sb3IsIGJhY2tncm91bmQtY29sb3IsIGJvcmRlci1jb2xvciwgdGV4dC1kZWNvcmF0aW9uLWNvbG9yLCBmaWxsLCBzdHJva2VcIixvcGFjaXR5Olwib3BhY2l0eVwiLHNoYWRvdzpcImJveC1zaGFkb3dcIix0cmFuc2Zvcm06XCJ0cmFuc2Zvcm1cIn0sdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uOntERUZBVUxUOlwiY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKVwiLGxpbmVhcjpcImxpbmVhclwiLGluOlwiY3ViaWMtYmV6aWVyKDAuNCwgMCwgMSwgMSlcIixvdXQ6XCJjdWJpYy1iZXppZXIoMCwgMCwgMC4yLCAxKVwiLFwiaW4tb3V0XCI6XCJjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpXCJ9LHRyYW5zbGF0ZTooe3RoZW1lOnR9KT0+KHsuLi50KFwic3BhY2luZ1wiKSxcIjEvMlwiOlwiNTAlXCIsXCIxLzNcIjpcIjMzLjMzMzMzMyVcIixcIjIvM1wiOlwiNjYuNjY2NjY3JVwiLFwiMS80XCI6XCIyNSVcIixcIjIvNFwiOlwiNTAlXCIsXCIzLzRcIjpcIjc1JVwiLGZ1bGw6XCIxMDAlXCJ9KSx3aWR0aDooe3RoZW1lOnR9KT0+KHthdXRvOlwiYXV0b1wiLC4uLnQoXCJzcGFjaW5nXCIpLFwiMS8yXCI6XCI1MCVcIixcIjEvM1wiOlwiMzMuMzMzMzMzJVwiLFwiMi8zXCI6XCI2Ni42NjY2NjclXCIsXCIxLzRcIjpcIjI1JVwiLFwiMi80XCI6XCI1MCVcIixcIjMvNFwiOlwiNzUlXCIsXCIxLzVcIjpcIjIwJVwiLFwiMi81XCI6XCI0MCVcIixcIjMvNVwiOlwiNjAlXCIsXCI0LzVcIjpcIjgwJVwiLFwiMS82XCI6XCIxNi42NjY2NjclXCIsXCIyLzZcIjpcIjMzLjMzMzMzMyVcIixcIjMvNlwiOlwiNTAlXCIsXCI0LzZcIjpcIjY2LjY2NjY2NyVcIixcIjUvNlwiOlwiODMuMzMzMzMzJVwiLFwiMS8xMlwiOlwiOC4zMzMzMzMlXCIsXCIyLzEyXCI6XCIxNi42NjY2NjclXCIsXCIzLzEyXCI6XCIyNSVcIixcIjQvMTJcIjpcIjMzLjMzMzMzMyVcIixcIjUvMTJcIjpcIjQxLjY2NjY2NyVcIixcIjYvMTJcIjpcIjUwJVwiLFwiNy8xMlwiOlwiNTguMzMzMzMzJVwiLFwiOC8xMlwiOlwiNjYuNjY2NjY3JVwiLFwiOS8xMlwiOlwiNzUlXCIsXCIxMC8xMlwiOlwiODMuMzMzMzMzJVwiLFwiMTEvMTJcIjpcIjkxLjY2NjY2NyVcIixmdWxsOlwiMTAwJVwiLHNjcmVlbjpcIjEwMHZ3XCIsbWluOlwibWluLWNvbnRlbnRcIixtYXg6XCJtYXgtY29udGVudFwiLGZpdDpcImZpdC1jb250ZW50XCJ9KSx3aWxsQ2hhbmdlOnthdXRvOlwiYXV0b1wiLHNjcm9sbDpcInNjcm9sbC1wb3NpdGlvblwiLGNvbnRlbnRzOlwiY29udGVudHNcIix0cmFuc2Zvcm06XCJ0cmFuc2Zvcm1cIn0sekluZGV4OnthdXRvOlwiYXV0b1wiLDA6XCIwXCIsMTA6XCIxMFwiLDIwOlwiMjBcIiwzMDpcIjMwXCIsNDA6XCI0MFwiLDUwOlwiNTBcIn19LHBsdWdpbnM6W119fSk7dmFyIERjPVMoKEZPLFJjKT0+e1widXNlIHN0cmljdFwiO3ZhciBEbj1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEljPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsRWM9T2JqZWN0LmRlZmluZVByb3BlcnR5LENjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsQWM9ZnVuY3Rpb24oZSl7cmV0dXJuIHR5cGVvZiBBcnJheS5pc0FycmF5PT1cImZ1bmN0aW9uXCI/QXJyYXkuaXNBcnJheShlKTpJYy5jYWxsKGUpPT09XCJbb2JqZWN0IEFycmF5XVwifSxfYz1mdW5jdGlvbihlKXtpZighZXx8SWMuY2FsbChlKSE9PVwiW29iamVjdCBPYmplY3RdXCIpcmV0dXJuITE7dmFyIHI9RG4uY2FsbChlLFwiY29uc3RydWN0b3JcIiksbj1lLmNvbnN0cnVjdG9yJiZlLmNvbnN0cnVjdG9yLnByb3RvdHlwZSYmRG4uY2FsbChlLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxcImlzUHJvdG90eXBlT2ZcIik7aWYoZS5jb25zdHJ1Y3RvciYmIXImJiFuKXJldHVybiExO3ZhciBpO2ZvcihpIGluIGUpO3JldHVybiB0eXBlb2YgaT5cInVcInx8RG4uY2FsbChlLGkpfSxUYz1mdW5jdGlvbihlLHIpe0VjJiZyLm5hbWU9PT1cIl9fcHJvdG9fX1wiP0VjKGUsci5uYW1lLHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx2YWx1ZTpyLm5ld1ZhbHVlLHdyaXRhYmxlOiEwfSk6ZVtyLm5hbWVdPXIubmV3VmFsdWV9LFBjPWZ1bmN0aW9uKGUscil7aWYocj09PVwiX19wcm90b19fXCIpaWYoRG4uY2FsbChlLHIpKXtpZihDYylyZXR1cm4gQ2MoZSxyKS52YWx1ZX1lbHNlIHJldHVybjtyZXR1cm4gZVtyXX07UmMuZXhwb3J0cz1mdW5jdGlvbiB0KCl7dmFyIGUscixuLGksYSxzLG89YXJndW1lbnRzWzBdLGw9MSx1PWFyZ3VtZW50cy5sZW5ndGgsZj0hMTtmb3IodHlwZW9mIG89PVwiYm9vbGVhblwiJiYoZj1vLG89YXJndW1lbnRzWzFdfHx7fSxsPTIpLChvPT1udWxsfHx0eXBlb2YgbyE9XCJvYmplY3RcIiYmdHlwZW9mIG8hPVwiZnVuY3Rpb25cIikmJihvPXt9KTtsPHU7KytsKWlmKGU9YXJndW1lbnRzW2xdLGUhPW51bGwpZm9yKHIgaW4gZSluPVBjKG8sciksaT1QYyhlLHIpLG8hPT1pJiYoZiYmaSYmKF9jKGkpfHwoYT1BYyhpKSkpPyhhPyhhPSExLHM9biYmQWMobik/bjpbXSk6cz1uJiZfYyhuKT9uOnt9LFRjKG8se25hbWU6cixuZXdWYWx1ZTp0KGYscyxpKX0pKTp0eXBlb2YgaTxcInVcIiYmVGMobyx7bmFtZTpyLG5ld1ZhbHVlOml9KSk7cmV0dXJuIG99fSk7dmFyIE1uPVMoKExPLE1jKT0+e3ZhciB5YT1mdW5jdGlvbih0LGUpe3ZhciByPW5ldyB0LmNvbnN0cnVjdG9yO3JldHVybiBPYmplY3Qua2V5cyh0KS5mb3JFYWNoKGZ1bmN0aW9uKG4pe2lmKCEhdC5oYXNPd25Qcm9wZXJ0eShuKSl7dmFyIGk9dFtuXSxhPXR5cGVvZiBpO249PT1cInBhcmVudFwiJiZhPT09XCJvYmplY3RcIj9lJiYocltuXT1lKTpuPT09XCJzb3VyY2VcIj9yW25dPWk6aSBpbnN0YW5jZW9mIEFycmF5P249PT1cIm5vZGVzXCI/cltuXT1bXTpyW25dPWkubWFwKGZ1bmN0aW9uKHMpe3lhKHMscil9KTpuIT09XCJiZWZvcmVcIiYmbiE9PVwiYWZ0ZXJcIiYmbiE9PVwiYmV0d2VlblwiJiZuIT09XCJzZW1pY29sb25cIiYmKGE9PT1cIm9iamVjdFwiJiYoaT15YShpKSkscltuXT1pKX19KSxyfTtNYy5leHBvcnRzPXlhfSk7dmFyICRjPVMoKE5PLHFjKT0+e1widXNlIHN0cmljdFwiO3FjLmV4cG9ydHM9TGM7ZnVuY3Rpb24gTGModCxlLHIpe3QgaW5zdGFuY2VvZiBSZWdFeHAmJih0PUZjKHQscikpLGUgaW5zdGFuY2VvZiBSZWdFeHAmJihlPUZjKGUscikpO3ZhciBuPU5jKHQsZSxyKTtyZXR1cm4gbiYme3N0YXJ0Om5bMF0sZW5kOm5bMV0scHJlOnIuc2xpY2UoMCxuWzBdKSxib2R5OnIuc2xpY2UoblswXSt0Lmxlbmd0aCxuWzFdKSxwb3N0OnIuc2xpY2UoblsxXStlLmxlbmd0aCl9fWZ1bmN0aW9uIEZjKHQsZSl7dmFyIHI9ZS5tYXRjaCh0KTtyZXR1cm4gcj9yWzBdOm51bGx9TGMucmFuZ2U9TmM7ZnVuY3Rpb24gTmModCxlLHIpe3ZhciBuLGksYSxzLG8sbD1yLmluZGV4T2YodCksdT1yLmluZGV4T2YoZSxsKzEpLGY9bDtpZihsPj0wJiZ1PjApe2lmKHQ9PT1lKXJldHVybltsLHVdO2ZvcihuPVtdLGE9ci5sZW5ndGg7Zj49MCYmIW87KWY9PWw/KG4ucHVzaChmKSxsPXIuaW5kZXhPZih0LGYrMSkpOm4ubGVuZ3RoPT0xP289W24ucG9wKCksdV06KGk9bi5wb3AoKSxpPGEmJihhPWkscz11KSx1PXIuaW5kZXhPZihlLGYrMSkpLGY9bDx1JiZsPj0wP2w6dTtuLmxlbmd0aCYmKG89W2Esc10pfXJldHVybiBvfX0pO3ZhciBqYz1TKChxTyxVYyk9Pnt2YXIgT3c9LyguKj8oPzooPzpcXChbXlxcKV0rXFwpfFxcW1teXFxdXStcXF18KD8hWz48K35cXHNdKS4pKykoPzooPzooPzpcXHMoPyE+PikpfCg/OlxcdCg/IT4+KSl8KD86XFxzPz4+XFxzPykpKD8hXFxzKykpKD8hWz48K35dW1xcc10rPykpLyxFdz1mdW5jdGlvbih0KXtyZXR1cm4gdC5zcGxpdChPdykuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlLmxlbmd0aD4wfSkubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLnRyaW0oKS5yZXBsYWNlKC9cXHMqPz4+XFxzKj8vZyxcIlwiKX0pfTtVYy5leHBvcnRzPUV3fSk7dmFyIGRyPVMoKCRPLHpjKT0+e3ZhciBDdz1qYygpLEF3PWZ1bmN0aW9uKHQsZSl7ZT1lfHwhMTtmb3IodmFyIHI9W1tdXSxuPWU/dDp0LnBhcmVudDtuOyl7dmFyIGk9KG4uc2VsZWN0b3JzfHxbXSkubWFwKGZ1bmN0aW9uKHMpe3JldHVybnt2YWx1ZTpzLHR5cGU6XCJzZWxlY3RvclwifX0pO24udHlwZT09PVwiYXRydWxlXCImJihpPVtdLmNvbmNhdChuLnBhcmFtcykubWFwKGZ1bmN0aW9uKHMpe3JldHVybnt2YWx1ZTpcIkBcIituLm5hbWUrXCIgXCIrcyx0eXBlOlwiYXRydWxlXCJ9fSkpO3ZhciBhPShpLmxlbmd0aD4wP2k6WzFdKS5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gci5tYXAoZnVuY3Rpb24ocyl7cmV0dXJuIHMuc2xpY2UoMCl9KX0pO2kuZm9yRWFjaChmdW5jdGlvbihzLG8pe2Fbb109YVtvXS5tYXAoZnVuY3Rpb24obCl7dmFyIHU9W3MudmFsdWVdO3JldHVybiBzLnR5cGU9PT1cInNlbGVjdG9yXCImJih1PUN3KHMudmFsdWUpKSxsLnVuc2hpZnQuYXBwbHkobCx1KSxsfSl9KSxyPVtdLGEuZm9yRWFjaChmdW5jdGlvbihzKXtyPXIuY29uY2F0KHMpfSksbj1uLnBhcmVudH1yZXR1cm4gcn07emMuZXhwb3J0cz1Bd30pO3ZhciBXYz1TKChVTyxWYyk9PntcInVzZSBzdHJpY3RcIjt2YXIgX3c9L1t8XFxcXHt9KClbXFxdXiQrKj8uXS9nO1ZjLmV4cG9ydHM9ZnVuY3Rpb24odCl7aWYodHlwZW9mIHQhPVwic3RyaW5nXCIpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkV4cGVjdGVkIGEgc3RyaW5nXCIpO3JldHVybiB0LnJlcGxhY2UoX3csXCJcXFxcJCZcIil9fSk7dmFyIEdjPVMoKGpPLEJjKT0+e3ZhciBUdz17XCIqXCI6ITAsXCI6cm9vdFwiOiEwLGh0bWw6ITB9LFB3PWZ1bmN0aW9uKHQpe3JldHVybiEhVHdbdF19O0JjLmV4cG9ydHM9UHd9KTt2YXIgSGM9Uygoek8sWWMpPT57dmFyIEl3PS8oLio/KD86KD86XFwoW15cXCldK1xcKXxcXFtbXlxcXV0rXFxdfCg/IT4+fDx8XFwrfH58XFxzKS4pKykoPzooPzooPzo+KD8hPikpfCg/Olxccz8+KD8hPilcXHM/KSkoPyFcXHMrKSkoPyEoPzo+Pnw8fFxcK3x+KVtcXHNdKz8pKS8sUnc9ZnVuY3Rpb24odCl7cmV0dXJuIHQuc3BsaXQoSXcpLmZpbHRlcihmdW5jdGlvbihlKXtyZXR1cm4gZS5sZW5ndGg+MH0pLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS50cmltKCkucmVwbGFjZSgvXFxzKj8+XFxzKj8vZyxcIlwiKX0pfTtZYy5leHBvcnRzPVJ3fSk7dmFyIHZhPVMoKFZPLHRwKT0+e3ZhciBEdz1XYygpLFFjPUdjKCksSmM9SGMoKSxNdz0vXkAuKi8sS2M9LyhbXlxcczpdKykoKD86Onw6OilbXlxcc10qPykoXFxzK3wkKS87ZnVuY3Rpb24gWmModCxlKXt2YXIgcixuLGk9ZS5zb21lKGZ1bmN0aW9uKGEpe3JldHVybiB0LnNvbWUoZnVuY3Rpb24ocyl7cj1udWxsO3ZhciBvPSEwO2ZvcihuPTA7bjxhLmxlbmd0aDtuKyspe2Zvcih2YXIgbD1hW25dLHU9cnx8MCxmPS0xLHA9cy5zbGljZSh1KSxjPTA7YzxwLmxlbmd0aDtjKyspe3ZhciBkPXBbY10saD11K2M7aWYobmV3IFJlZ0V4cChEdyhsKStcIiRcIikudGVzdChkKSl7Zj1oO2JyZWFrfWlmKFFjKGwpfHxRYyhkKSl7Zj1oO2JyZWFrfXZhciB5PUpjKGQpO2lmKHkubGVuZ3RoPjEpe3ZhciBtPVtdLmNvbmNhdChbeV0pLGc9W10uY29uY2F0KFthLnNsaWNlKG4pLnJlZHVjZShmdW5jdGlvbih2LE8pe3JldHVybiB2LmNvbmNhdChKYyhPKSl9LFtdKV0pLHc9WmMobSxnKTsody5kb2VzTWF0Y2hTY29wZXx8bisxPGEubGVuZ3RoKSYmKGY9aCxuKz13LnNjb3BlUGllY2VJbmRleC0xKTticmVha319dmFyIGI9Zj49dTtpZihyPWYrMSxvPW8mJmIsIW8pYnJlYWt9cmV0dXJuIG99KX0pO3JldHVybntkb2VzTWF0Y2hTY29wZTppLG5vZGVTY29wZVBpZWNlSW5kZXg6ci0xLHNjb3BlUGllY2VJbmRleDpufX12YXIgWGM9ZnVuY3Rpb24odCl7cmV0dXJuIHQubWFwKGZ1bmN0aW9uKGUpe3JldHVybiBlLm1hcChmdW5jdGlvbihyKXtyZXR1cm4gTXcudGVzdChyKT9yOnIucmVwbGFjZShuZXcgUmVnRXhwKEtjLnNvdXJjZSxcImdcIiksZnVuY3Rpb24obixpLGEscyl7cmV0dXJuIGkrc30pfSl9KX0sZXA9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB0PVhjKHQpLHImJihlPVhjKGUpKSxaYyh0LGUpLmRvZXNNYXRjaFNjb3BlfTtlcC5SRV9QU0VVRE9fU0VMRUNUT1I9S2M7dHAuZXhwb3J0cz1lcH0pO3ZhciB3YT1TKChXTyxucCk9Pnt2YXIgRnc9dmEoKSxycD1kcigpLEx3PWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj1ycCh0LCEwKSxpPXJwKGUsITApO3JldHVybiBGdyhuLGkscil9O25wLmV4cG9ydHM9THd9KTt2YXIgYmE9UygoQk8sc3ApPT57dmFyIGlwPWZ1bmN0aW9uKHQsZSxyKXtyPXJ8fFtdO3ZhciBuPSExO3JldHVybiB0JiYocj10LnJlZHVjZShmdW5jdGlvbihpLGEpe3ZhciBzPSEhZVthXSxvPXM/aS5zb21lKGZ1bmN0aW9uKGwpe3JldHVybiBlW2FdLnNvbWUoZnVuY3Rpb24odSl7cmV0dXJuIGw9PT11fSl9KTohMTtyZXR1cm4gbj1ufHxvLHMmJiFuJiYoaT1pLmNvbmNhdChlW2FdKSwoZVthXXx8W10pLmZvckVhY2goZnVuY3Rpb24obCl7dmFyIHU9aXAobC52YXJpYWJsZXNVc2VkLGUsaSk7aT11LmRlcHMsbj1ufHx1Lmhhc0NpcmN1bGFyT3JTZWxmUmVmZXJlbmNlfSkpLGl9LHIpKSx7ZGVwczpyLGhhc0NpcmN1bGFyT3JTZWxmUmVmZXJlbmNlOm59fTtzcC5leHBvcnRzPWlwfSk7dmFyIHhhPVMoKEdPLGFwKT0+e3ZhciBOdz1kcigpLHF3PWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciByLG49ZTtuLnBhcmVudCYmIXI7KXt2YXIgaT1OdyhuLmNsb25lKCksITApO2kuc29tZShmdW5jdGlvbihhKXtyZXR1cm4gYS5zb21lKGZ1bmN0aW9uKHMpe3JldHVybiBzPT09dD8ocj1uLCEwKTohMX0pfSksbj1uLnBhcmVudH1yZXR1cm4gcn07YXAuZXhwb3J0cz1xd30pO3ZhciBTYT1TKChZTyxscCk9Pnt2YXIgb3A9TW4oKSwkdz1mdW5jdGlvbih0LGUscil7cj1yfHxmdW5jdGlvbigpe3JldHVybiEwfTtmb3IodmFyIG49W10saT10LGE9ITE7aSYmIWE7KWkudHlwZT09PVwiZGVjbFwiP24ucHVzaChpLmNsb25lKCkpOm4ucHVzaChvcChpKSksYT1yKGkpLGk9aS5wYXJlbnQ7Zm9yKHZhciBzPVtdLG89ZTtvOylzLnB1c2gob3AobykpLG89by5wYXJlbnQ7cmV0dXJuIHMuZm9yRWFjaChmdW5jdGlvbihsLHUsZil7dSsxPGYubGVuZ3RoJiYobC5wYXJlbnQ9Zlt1KzFdKX0pLG4uZm9yRWFjaChmdW5jdGlvbihsLHUsZil7dSsxPGYubGVuZ3RoP2wucGFyZW50PWZbdSsxXToocy5zbGljZSgtMSlbMF0ucGFyZW50PWksbC5wYXJlbnQ9c1swXSl9KSxuWzBdfTtscC5leHBvcnRzPSR3fSk7dmFyIGthPVMoKEhPLGZwKT0+e3ZhciBVdz0kYygpLGp3PWRyKCksdXA9d2EoKSx6dz1iYSgpLFZ3PXhhKCksV3c9U2EoKSxCdz0vdmFyXFwoXFxzKigtLVteLFxccyldKykvO2Z1bmN0aW9uIEd3KHQpe3JldHVybiBTdHJpbmcodCl9ZnVuY3Rpb24gRm4odCl7dmFyIGU9VXcoXCIoXCIsXCIpXCIsdCk7aWYoZSl7aWYoLyg/Ol58W15cXHctXSl2YXIkLy50ZXN0KGUucHJlKSlyZXR1cm57cHJlOmUucHJlLnNsaWNlKDAsLTMpLGJvZHk6ZS5ib2R5LHBvc3Q6ZS5wb3N0fTt2YXIgcj1GbihlLmJvZHkpO2lmKHIpcmV0dXJue3ByZTplLnByZStcIihcIityLnByZSxib2R5OnIuYm9keSxwb3N0OnIucG9zdCtcIilcIitlLnBvc3R9O3ZhciBuPUZuKGUucG9zdCk7aWYobilyZXR1cm57cHJlOmUucHJlK1wiKFwiK2UuYm9keStcIilcIituLnByZSxib2R5Om4uYm9keSxwb3N0Om4ucG9zdH19fXZhciBMbj1mdW5jdGlvbih0LGUscixuKXtmb3IodmFyIGk9bj9cIlx0XCI6XCJcIixhPXZvaWQgMCxzPUd3KHQudmFsdWUpLG89W10sbD17fSx1PXM7YT1Gbih1KTspe3ZhciBmPWEuYm9keS5zcGxpdChcIixcIikscD1mWzBdLnRyaW0oKTtsW3BdPSEwLHU9KGEucHJlfHxcIlwiKSthLmJvZHkucmVwbGFjZShwLFwiXCIpKyhhLnBvc3R8fFwiXCIpfXU9dm9pZCAwO2Zvcih2YXIgYz1PYmplY3Qua2V5cyhsKSxkPSExO2E9Rm4ocyk7KXt2YXIgaD12b2lkIDAsZj1hLmJvZHkuc3BsaXQoXCIsXCIpLHA9ZlswXS50cmltKCkseT1mLmxlbmd0aD4xP2Yuc2xpY2UoMSkuam9pbihcIixcIikudHJpbSgpOnZvaWQgMDsoZVtwXXx8W10pLmZvckVhY2goZnVuY3Rpb24oQSl7dmFyIEU9QS5wYXJlbnQudHlwZT09PVwicm9vdFwifHxBLnBhcmVudC5zZWxlY3RvcnNbMF09PT1cIjpyb290XCIsST11cCh0LnBhcmVudCxBLnBhcmVudCksRj11cCh0LnBhcmVudCxBLnBhcmVudCxyKTtGJiYoIShofHx7fSkuaXNJbXBvcnRhbnR8fEEuaXNJbXBvcnRhbnQpJiYoaD1BKX0pO3ZhciBtPShofHx7fSkuY2FsY3VsYXRlZEluUGxhY2VWYWx1ZXx8ZnVuY3Rpb24oKXt2YXIgQT15O2lmKHkpe3ZhciBFPXQuY2xvbmUoe3BhcmVudDp0LnBhcmVudCx2YWx1ZTp5fSk7QT1MbihFLGUsITEsITApLnZhbHVlfXJldHVybiBBfSgpO2lmKGghPT12b2lkIDAmJiF6dyhjLGUpLmhhc0NpcmN1bGFyT3JTZWxmUmVmZXJlbmNlKXt2YXIgZz1qdyh0LnBhcmVudC5wYXJlbnQsITApLHc9Z1swXS5zbGljZSgtMSlbMF0sYj1Wdyh3LGguZGVjbC5wYXJlbnQpLHY9V3coaC5kZWNsLHQucGFyZW50LnBhcmVudCxmdW5jdGlvbihBKXtyZXR1cm4gQT09PWJ9KTttPUxuKHYsZSwhMSwhMCkudmFsdWV9ZD1tPT09dm9pZCAwLGQmJm8ucHVzaChbXCJ2YXJpYWJsZSBcIitwK1wiIGlzIHVuZGVmaW5lZCBhbmQgdXNlZCB3aXRob3V0IGEgZmFsbGJhY2tcIix7bm9kZTp0fV0pLHM9KGEucHJlfHxcIlwiKSttKyhhLnBvc3R8fFwiXCIpfXJldHVybnt2YWx1ZTpkP3ZvaWQgMDpzLHZhcmlhYmxlc1VzZWQ6Yyx3YXJuaW5nczpvfX07TG4uUkVfVkFSX0ZVTkM9Qnc7ZnAuZXhwb3J0cz1Mbn0pO3ZhciBocD1TKChRTyxkcCk9Pnt2YXIgY3A9a2EoKSxZdz1kcigpLEh3PWJhKCkscHA9dmEoKSxRdz13YSgpLE5uPU1uKCksSnc9eGEoKSxYdz1TYSgpO2Z1bmN0aW9uIEt3KHQsZSxyLG4pe3QuZm9yRWFjaChmdW5jdGlvbihpKXtIdyh0LGUpLmRlcHMuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgcztpZihhLmlzVW5kZXJBdFJ1bGUpe3ZhciBvPVl3KGEucGFyZW50LCEwKSxsPW9bMF0uc2xpY2UoLTEpWzBdLHU9SncobCxyLnBhcmVudCksZj1hLnBhcmVudC5wYXJlbnQ7cz1YdyhyLGYsZnVuY3Rpb24oaCl7cmV0dXJuIGg9PT11fSl9ZWxzZSBpZihwcC5SRV9QU0VVRE9fU0VMRUNUT1IudGVzdChhLnBhcmVudC5zZWxlY3Rvcikpe3ZhciBwPU5uKHIucGFyZW50KTtwLnBhcmVudD1yLnBhcmVudC5wYXJlbnQscz1yLmNsb25lKCkscC5hcHBlbmQocyk7dmFyIGM9YS5wYXJlbnQuc2VsZWN0b3IubWF0Y2gobmV3IFJlZ0V4cChwcC5SRV9QU0VVRE9fU0VMRUNUT1Iuc291cmNlK1wiJFwiKSksZD1jP2NbMl06XCJcIjtwLnNlbGVjdG9yKz1kfXMmJlF3KHMsYS5wYXJlbnQsITApJiZuKHMsYSl9KX0pfWZ1bmN0aW9uIFp3KHQsZSxyLG4saSl7cj0odHlwZW9mIHI9PVwiZnVuY3Rpb25cIj9yKHQpOnIpfHwhMSxuPW58fCExO3ZhciBhPWZ1bmN0aW9uKGwpe3JldHVybiBpJiZpKGwpLGx9LHM9YShjcCh0LGUpKSxvO0t3KHMudmFyaWFibGVzVXNlZCxlLHQsZnVuY3Rpb24obCx1KXt2YXIgZj1Obih0LnBhcmVudCkscD10LmNsb25lKCk7Zi5hcHBlbmQocCk7bGV0IGM7aWYodHlwZW9mIHI9PVwiZnVuY3Rpb25cIj9jPXIodCk6Yz1yLGM9PT0hMCYmcC5jbG9uZUFmdGVyKCkscC52YWx1ZT1hKGNwKGwsZSwhMCkpLnZhbHVlLHUuaXNVbmRlckF0UnVsZSl7dmFyIGQ9Tm4odS5wYXJlbnQucGFyZW50KTtkLmFwcGVuZChmKTtmb3IodmFyIGg9ZCx5PXUucGFyZW50LnBhcmVudDt5LnBhcmVudC50eXBlPT09XCJhdHJ1bGVcIjspe3ZhciBtPU5uKHkucGFyZW50KTttLmFwcGVuZChoKSxoPW0seT15LnBhcmVudH10LnBhcmVudC5wYXJlbnQuaW5zZXJ0QWZ0ZXIobiYmb3x8dC5wYXJlbnQsaCksbz1ofWVsc2UgZi5zZWxlY3Rvcj1sLnBhcmVudC5zZWxlY3Rvcix0LnBhcmVudC5wYXJlbnQuaW5zZXJ0QWZ0ZXIobiYmb3x8dC5wYXJlbnQsZil9KSxyPT09ITAmJnQudmFsdWUhPT1zLnZhbHVlJiZ0LmNsb25lQWZ0ZXIoKSxzLnZhbHVlPT09dm9pZCAwJiYocy52YWx1ZT1cInVuZGVmaW5lZFwiKSx0LnZhbHVlPXMudmFsdWV9ZHAuZXhwb3J0cz1ad30pO3ZhciB2cD1TKChKTyxPYSk9Pnt2YXIgbXA9RGMoKSxlYj1NbigpLGdwPWthKCksdGI9aHAoKSx5cD0vKC0tKC4rKSkvO2Z1bmN0aW9uIHJiKHQsZSl7dC53YWxrRGVjbHMoZnVuY3Rpb24ocil7eXAudGVzdChyLnByb3ApJiZlKHIpfSl9ZnVuY3Rpb24gbmIodCl7Zm9yKHZhciBlPXQ7ZSYmZS5ub2Rlcy5sZW5ndGg8PTA7KXt2YXIgcj1lLnR5cGUhPT1cInJvb3RcIj9lOm51bGw7cj8oZT1yLnBhcmVudCxyLnJlbW92ZSgpKTplPW51bGx9fXZhciBpYj17cHJlc2VydmU6ITEsdmFyaWFibGVzOnt9LHByZXNlcnZlSW5qZWN0ZWRWYXJpYWJsZXM6ITAscHJlc2VydmVBdFJ1bGVzT3JkZXI6ITF9O09hLmV4cG9ydHM9KHQ9e30pPT57dmFyIGU9bXAoe30saWIsdCk7cmV0dXJue3Bvc3Rjc3NQbHVnaW46XCJwb3N0Y3NzLWNzcy12YXJpYWJsZXNcIixPbmNlKHIse2RlY2w6bixyZXN1bHQ6aSxydWxlOmF9KXt2YXIgcz1bXSxvPVtdLGw9e307bD1tcChsLE9iamVjdC5rZXlzKGUudmFyaWFibGVzKS5yZWR1Y2UoZnVuY3Rpb24ocCxjKXt2YXIgZD1lLnZhcmlhYmxlc1tjXTtjPWMuc2xpY2UoMCwyKT09PVwiLS1cIj9jOlwiLS1cIitjO3ZhciBoPShkfHx7fSkudmFsdWV8fGQseT0oZHx8e30pLmlzSW1wb3J0YW50fHwhMSxtPWEoe3NlbGVjdG9yOlwiOnJvb3RcIn0pO3Iucm9vdCgpLnByZXBlbmQobSk7dmFyIGc9bih7cHJvcDpjLHZhbHVlOmgsaW1wb3J0YW50Onl9KTtyZXR1cm4gbS5hcHBlbmQoZyksZS5wcmVzZXJ2ZUluamVjdGVkVmFyaWFibGVzfHxvLnB1c2goZykscFtjXT0ocFtjXXx8W10pLmNvbmNhdCh7ZGVjbDpnLHByb3A6YyxjYWxjdWxhdGVkSW5QbGFjZVZhbHVlOmgsaXNJbXBvcnRhbnQ6eSx2YXJpYWJsZXNVc2VkOltdLHBhcmVudDptLGlzVW5kZXJBdFJ1bGU6ITF9KSxwfSx7fSkpO3ZhciB1PWZ1bmN0aW9uKHApe3ZhciBjPVtdLmNvbmNhdChwLndhcm5pbmdzKTtyZXR1cm4gYy5mb3JFYWNoKGZ1bmN0aW9uKGQpe2Q9W10uY29uY2F0KGQpLGkud2Fybi5hcHBseShpLGQpfSkscH07cmIocixmdW5jdGlvbihwKXt2YXIgYz1wLnBhcmVudCxkPXUoZ3AocCxsKSk7cC5wYXJlbnQuc2VsZWN0b3JzLmZvckVhY2goZnVuY3Rpb24oeSl7dmFyIG09ZWIocC5wYXJlbnQpO20uc2VsZWN0b3I9eSxtLnBhcmVudD1wLnBhcmVudC5wYXJlbnQ7dmFyIGc9cC5jbG9uZSgpO20uYXBwZW5kKGcpO3ZhciB3PXAucHJvcDtsW3ddPShsW3ddfHxbXSkuY29uY2F0KHtkZWNsOmcscHJvcDp3LGNhbGN1bGF0ZWRJblBsYWNlVmFsdWU6ZC52YWx1ZSxpc0ltcG9ydGFudDpwLmltcG9ydGFudHx8ITEsdmFyaWFibGVzVXNlZDpkLnZhcmlhYmxlc1VzZWQscGFyZW50Om0saXNVbmRlckF0UnVsZTptLnBhcmVudC50eXBlPT09XCJhdHJ1bGVcIn0pfSk7bGV0IGg7dHlwZW9mIGUucHJlc2VydmU9PVwiZnVuY3Rpb25cIj9oPWUucHJlc2VydmUocCk6aD1lLnByZXNlcnZlLGg/aD09PVwiY29tcHV0ZWRcIiYmKHAudmFsdWU9ZC52YWx1ZSk6cC5yZW1vdmUoKSxjLm5vZGVzLmxlbmd0aDw9MCYmcy5wdXNoKGMpfSk7dmFyIGY9W107ci53YWxrKGZ1bmN0aW9uKHApe2lmKHAubm9kZXMhPT12b2lkIDApe3ZhciBjPXAubm9kZXMuc29tZShmdW5jdGlvbihkKXtpZihkLnR5cGU9PT1cImRlY2xcIil7dmFyIGg9ZDtpZihncC5SRV9WQVJfRlVOQy50ZXN0KGgudmFsdWUpJiYheXAudGVzdChoLnByb3ApKXJldHVybiEwfXJldHVybiExfSk7YyYmZi5wdXNoKHApfX0pLGYuZm9yRWFjaChmdW5jdGlvbihwKXt2YXIgYz1bXS5jb25jYXQocCk7cC50eXBlPT09XCJydWxlXCImJnAuc2VsZWN0b3JzLmxlbmd0aD4xJiYoYz1wLnNlbGVjdG9ycy5yZXZlcnNlKCkubWFwKGZ1bmN0aW9uKGQpe3ZhciBoPXAuY2xvbmVBZnRlcigpO3JldHVybiBoLnNlbGVjdG9yPWQsaH0pLHAucmVtb3ZlKCkpLGMuZm9yRWFjaChmdW5jdGlvbihkKXtkLm5vZGVzLnNsaWNlKDApLmZvckVhY2goZnVuY3Rpb24oaCl7aWYoaC50eXBlPT09XCJkZWNsXCIpe3ZhciB5PWg7dGIoeSxsLGUucHJlc2VydmUsZS5wcmVzZXJ2ZUF0UnVsZXNPcmRlcix1KX19KX0pfSkscy5mb3JFYWNoKG5iKSxvLmZvckVhY2goZnVuY3Rpb24ocCl7cC5yZW1vdmUoKX0pfX19O09hLmV4cG9ydHMucG9zdGNzcz0hMH0pO3ZhciBSYT10PT4oe2V4dHJhY3RDU1MoZSxyPSExKXtsZXQgbj0vKD86W1xcc1xcclxcbl0qKT8oPzxwcm9wPltcXHctXSspXFxzKjpcXHMqKD88dmFsdWU+W147XFxyXFxuXSspL2dtLGksYT17fTtmb3IoOyhpPW4uZXhlYyhlKSkhPT1udWxsOyl7bGV0e3Byb3A6cyx2YWx1ZTpvfT1pLmdyb3VwczthW3NdPW99cmV0dXJuIE9iamVjdC5lbnRyaWVzKGEpLnJlZHVjZSgocyxbbyxsXSk9PnMrYCR7cj9cIlx0XCI6XCJcIn0ke299OiAke2x9OyBcblxccmAsXCJcIil9LG1lcmdlKCl7bGV0IGU9Lyg/PD1cXC4pW157XStcXHMqXFx7KD88Y29udGVudD5bXnt9XSooPzooPzw9OylcXHMqXFxuXFxyP1tee31dKikqKVxccypcXH0vZ20scixuPVwiXCI7Zm9yKDsocj1lLmV4ZWModCkpIT09bnVsbDspe2xldHtjb250ZW50Om99PXIuZ3JvdXBzO24rPW99bGV0IGk9dGhpcy5leHRyYWN0Q1NTKG4pLGE9Lyg/PG1lZGlhPkBtZWRpYVxccypcXChbXlxcKV0qXFwpKVxccypcXHsoPzxjb250ZW50PlteXFx9XSopXFx9L2dtLHM7Zm9yKDsocz1hLmV4ZWModCkpIT09bnVsbDspe2xldHttZWRpYTpvLGNvbnRlbnQ6bH09cy5ncm91cHM7aSs9YFxuXFxyJHtvfSB7XG5cXHIke3RoaXMuZXh0cmFjdENTUyhsLCEwKX19XG5cXHJgfXJldHVybiB0PWksdGhpc30scmVtb3ZlVW5kZWZpbmVkKCl7bGV0IGU9L15bXnt9XSooPzpbLiNdW2EtekEtWjAtOV8tXSspW157XSp7W159XSpcXGIoPzpbYS16LV0rKTpcXHMqdW5kZWZpbmVkXFxzKjs/W159XSp9L2dtO3JldHVybiB0PXQucmVwbGFjZShlLFwiXCIpLHRoaXN9LGNvbWJpbmVNZWRpYVF1ZXJpZXMoKXtsZXQgZT1uZXcgUmVnRXhwKFwiQG1lZGlhXFxcXHMqKD88Y29uZGl0aW9ucz5cXFxcKFteKV0rXFxcXCkpXFxcXHMqeyg/PGNvbnRlbnQ+KD86W157fV0rfHsoPzpbXnt9XSt8e1tee31dKn0pKn0pKyl9XCIsXCJnc1wiKSxyPW5ldyBNYXAsbj1hPT5hLnJlcGxhY2UoZSwocyxvLGwpPT57dmFyIGY7bGV0IHU9KGY9ci5nZXQobykpIT1udWxsP2Y6XCJcIjtyZXR1cm4gci5zZXQobyx1K24obC50cmltKCkpKSxuKGwpLFwiXCJ9KSxpPVtdO3JldHVybiBpLnB1c2gobih0KSksaS5wdXNoKC4uLkFycmF5LmZyb20ociwoW2Esc10pPT5gQG1lZGlhJHthfXske3N9fWApKSx0PWkuam9pbihcIlwiKSx0aGlzfSxtaW5pZnkoKXtyZXR1cm4gdD10LnJlcGxhY2UoL1xcL1xcKltcXHNcXFNdKj9cXCpcXC8vZ20sXCJcIikucmVwbGFjZSgvO1xccysvZ20sXCI7XCIpLnJlcGxhY2UoLzpcXHMrL2dtLFwiOlwiKS5yZXBsYWNlKC9cXClcXHMqey9nbSxcIil7XCIpLnJlcGxhY2UoL1xccytcXCgvZ20sXCIoXCIpLnJlcGxhY2UoL3tcXHMrL2dtLFwie1wiKS5yZXBsYWNlKC99XFxzKy9nbSxcIn1cIikucmVwbGFjZSgvXFxzKnsvZ20sXCJ7XCIpLnJlcGxhY2UoLzs/XFxzKn0vZ20sXCJ9XCIpLHRoaXN9LGZpeFJHQigpe2xldCBlPS9yZ2JcXChcXHMqKD88cmVkPlxcZCspXFxzKig/PGdyZWVuPlxcZCspXFxzKig/PGJsdWU+XFxkKykoPzpcXHMqXFwvXFxzKig/PGFscGhhPltcXGQlLl0rKSk/XFxzKlxcKS9nbSxyO2Zvcig7KHI9ZS5leGVjKHQpKSE9PW51bGw7KXtsZXRbbl09cix7cmVkOmksZ3JlZW46YSxibHVlOnMsYWxwaGE6bz0xfT1yLmdyb3Vwczt0PXQucmVwbGFjZShuLGByZ2IoJHtpfSwke2F9LCR7c30ke289PT1cIjFcIj9cIlwiOmAsJHtvfWB9KWApfXJldHVybiB0aGlzfSxyZW1vdmVNZWRpYVF1ZXJpZXMoKXtyZXR1cm4gdD10LnJlcGxhY2UoL0BtZWRpYVteXFx7XStcXHtbXkBdK1xcfS9nLFwiXCIpLHRoaXN9LGdldCgpe3JldHVybiB0fX0pO2Z1bmN0aW9uICRuKCl7fXZhciBMPXtpbmZvOiRuLHdhcm46JG4scmlzazokbn07ZnVuY3Rpb24gVW4odCl7bGV0IGU9bmV3IFNldCxyPW5ldyBTZXQsbj1uZXcgU2V0O2lmKHQud2Fsa0F0UnVsZXMoaT0+e2kubmFtZT09PVwiYXBwbHlcIiYmbi5hZGQoaSksaS5uYW1lPT09XCJpbXBvcnRcIiYmKGkucGFyYW1zPT09J1widGFpbHdpbmRjc3MvYmFzZVwiJ3x8aS5wYXJhbXM9PT1cIid0YWlsd2luZGNzcy9iYXNlJ1wiPyhpLm5hbWU9XCJ0YWlsd2luZFwiLGkucGFyYW1zPVwiYmFzZVwiKTppLnBhcmFtcz09PSdcInRhaWx3aW5kY3NzL2NvbXBvbmVudHNcIid8fGkucGFyYW1zPT09XCIndGFpbHdpbmRjc3MvY29tcG9uZW50cydcIj8oaS5uYW1lPVwidGFpbHdpbmRcIixpLnBhcmFtcz1cImNvbXBvbmVudHNcIik6aS5wYXJhbXM9PT0nXCJ0YWlsd2luZGNzcy91dGlsaXRpZXNcIid8fGkucGFyYW1zPT09XCIndGFpbHdpbmRjc3MvdXRpbGl0aWVzJ1wiPyhpLm5hbWU9XCJ0YWlsd2luZFwiLGkucGFyYW1zPVwidXRpbGl0aWVzXCIpOihpLnBhcmFtcz09PSdcInRhaWx3aW5kY3NzL3NjcmVlbnNcIid8fGkucGFyYW1zPT09XCIndGFpbHdpbmRjc3Mvc2NyZWVucydcInx8aS5wYXJhbXM9PT0nXCJ0YWlsd2luZGNzcy92YXJpYW50c1wiJ3x8aS5wYXJhbXM9PT1cIid0YWlsd2luZGNzcy92YXJpYW50cydcIikmJihpLm5hbWU9XCJ0YWlsd2luZFwiLGkucGFyYW1zPVwidmFyaWFudHNcIikpLGkubmFtZT09PVwidGFpbHdpbmRcIiYmKGkucGFyYW1zPT09XCJzY3JlZW5zXCImJihpLnBhcmFtcz1cInZhcmlhbnRzXCIpLGUuYWRkKGkucGFyYW1zKSksW1wibGF5ZXJcIixcInJlc3BvbnNpdmVcIixcInZhcmlhbnRzXCJdLmluY2x1ZGVzKGkubmFtZSkmJihbXCJyZXNwb25zaXZlXCIsXCJ2YXJpYW50c1wiXS5pbmNsdWRlcyhpLm5hbWUpJiZMLndhcm4oYCR7aS5uYW1lfS1hdC1ydWxlLWRlcHJlY2F0ZWRgLFtgVGhlIFxcYEAke2kubmFtZX1cXGAgZGlyZWN0aXZlIGhhcyBiZWVuIGRlcHJlY2F0ZWQgaW4gVGFpbHdpbmQgQ1NTIHYzLjAuYCxcIlVzZSBgQGxheWVyIHV0aWxpdGllc2Agb3IgYEBsYXllciBjb21wb25lbnRzYCBpbnN0ZWFkLlwiLFwiaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy91cGdyYWRlLWd1aWRlI3JlcGxhY2UtdmFyaWFudHMtd2l0aC1sYXllclwiXSksci5hZGQoaSkpfSksIWUuaGFzKFwiYmFzZVwiKXx8IWUuaGFzKFwiY29tcG9uZW50c1wiKXx8IWUuaGFzKFwidXRpbGl0aWVzXCIpKXtmb3IobGV0IGkgb2YgcilpZihpLm5hbWU9PT1cImxheWVyXCImJltcImJhc2VcIixcImNvbXBvbmVudHNcIixcInV0aWxpdGllc1wiXS5pbmNsdWRlcyhpLnBhcmFtcykpe2lmKCFlLmhhcyhpLnBhcmFtcykpdGhyb3cgaS5lcnJvcihgXFxgQGxheWVyICR7aS5wYXJhbXN9XFxgIGlzIHVzZWQgYnV0IG5vIG1hdGNoaW5nIFxcYEB0YWlsd2luZCAke2kucGFyYW1zfVxcYCBkaXJlY3RpdmUgaXMgcHJlc2VudC5gKX1lbHNlIGlmKGkubmFtZT09PVwicmVzcG9uc2l2ZVwiKXtpZighZS5oYXMoXCJ1dGlsaXRpZXNcIikpdGhyb3cgaS5lcnJvcihcImBAcmVzcG9uc2l2ZWAgaXMgdXNlZCBidXQgYEB0YWlsd2luZCB1dGlsaXRpZXNgIGlzIG1pc3NpbmcuXCIpfWVsc2UgaWYoaS5uYW1lPT09XCJ2YXJpYW50c1wiJiYhZS5oYXMoXCJ1dGlsaXRpZXNcIikpdGhyb3cgaS5lcnJvcihcImBAdmFyaWFudHNgIGlzIHVzZWQgYnV0IGBAdGFpbHdpbmQgdXRpbGl0aWVzYCBpcyBtaXNzaW5nLlwiKX1yZXR1cm57dGFpbHdpbmREaXJlY3RpdmVzOmUsYXBwbHlEaXJlY3RpdmVzOm59fXZyKCk7dmFyICRmPUgoTmEoKSk7dmFyICRhPVwiMy4zLjJcIjt2YXIgem49e25hbWU6XCJ0YWlsd2luZGNzc1wiLHZlcnNpb246JGEsZGVzY3JpcHRpb246XCJBIHV0aWxpdHktZmlyc3QgQ1NTIGZyYW1ld29yayBmb3IgcmFwaWRseSBidWlsZGluZyBjdXN0b20gdXNlciBpbnRlcmZhY2VzLlwiLGxpY2Vuc2U6XCJNSVRcIixtYWluOlwibGliL2luZGV4LmpzXCIsdHlwZXM6XCJ0eXBlcy9pbmRleC5kLnRzXCIscmVwb3NpdG9yeTpcImh0dHBzOi8vZ2l0aHViLmNvbS90YWlsd2luZGxhYnMvdGFpbHdpbmRjc3MuZ2l0XCIsYnVnczpcImh0dHBzOi8vZ2l0aHViLmNvbS90YWlsd2luZGxhYnMvdGFpbHdpbmRjc3MvaXNzdWVzXCIsaG9tZXBhZ2U6XCJodHRwczovL3RhaWx3aW5kY3NzLmNvbVwiLGJpbjp7dGFpbHdpbmQ6XCJsaWIvY2xpLmpzXCIsdGFpbHdpbmRjc3M6XCJsaWIvY2xpLmpzXCJ9LHRhaWx3aW5kY3NzOntlbmdpbmU6XCJzdGFibGVcIn0sc2NyaXB0czp7cHJlYnVpbGQ6XCJucG0gcnVuIGdlbmVyYXRlICYmIHJpbXJhZiBsaWJcIixidWlsZDpgc3djIHNyYyAtLW91dC1kaXIgbGliIC0tY29weS1maWxlcyAtLWNvbmZpZyBqc2MudHJhbnNmb3JtLm9wdGltaXplci5nbG9iYWxzLnZhcnMuX19PWElERV9fPSdcImZhbHNlXCInYCxwb3N0YnVpbGQ6XCJlc2J1aWxkIGxpYi9jbGktcGVlci1kZXBlbmRlbmNpZXMuanMgLS1idW5kbGUgLS1wbGF0Zm9ybT1ub2RlIC0tb3V0ZmlsZT1wZWVycy9pbmRleC5qcyAtLWRlZmluZTpwcm9jZXNzLmVudi5DU1NfVFJBTlNGT1JNRVJfV0FTTT1mYWxzZVwiLFwicmVidWlsZC1maXh0dXJlc1wiOlwibnBtIHJ1biBidWlsZCAmJiBub2RlIC1yIEBzd2MvcmVnaXN0ZXIgc2NyaXB0cy9yZWJ1aWxkRml4dHVyZXMuanNcIixzdHlsZTpcImVzbGludCAuXCIscHJldGVzdDpcIm5wbSBydW4gZ2VuZXJhdGVcIix0ZXN0OlwiamVzdFwiLFwidGVzdDppbnRlZ3JhdGlvbnNcIjpcIm5wbSBydW4gdGVzdCAtLXByZWZpeCAuL2ludGVncmF0aW9uc1wiLFwiaW5zdGFsbDppbnRlZ3JhdGlvbnNcIjpcIm5vZGUgc2NyaXB0cy9pbnN0YWxsLWludGVncmF0aW9ucy5qc1wiLFwiZ2VuZXJhdGU6cGx1Z2luLWxpc3RcIjpcIm5vZGUgLXIgQHN3Yy9yZWdpc3RlciBzY3JpcHRzL2NyZWF0ZS1wbHVnaW4tbGlzdC5qc1wiLFwiZ2VuZXJhdGU6dHlwZXNcIjpcIm5vZGUgLXIgQHN3Yy9yZWdpc3RlciBzY3JpcHRzL2dlbmVyYXRlLXR5cGVzLmpzXCIsZ2VuZXJhdGU6XCJucG0gcnVuIGdlbmVyYXRlOnBsdWdpbi1saXN0ICYmIG5wbSBydW4gZ2VuZXJhdGU6dHlwZXNcIixcInJlbGVhc2UtY2hhbm5lbFwiOlwibm9kZSAuL3NjcmlwdHMvcmVsZWFzZS1jaGFubmVsLmpzXCIsXCJyZWxlYXNlLW5vdGVzXCI6XCJub2RlIC4vc2NyaXB0cy9yZWxlYXNlLW5vdGVzLmpzXCIscHJlcHVibGlzaE9ubHk6XCJucG0gaW5zdGFsbCAtLWZvcmNlICYmIG5wbSBydW4gYnVpbGRcIn0sZmlsZXM6W1wic3JjLypcIixcImNsaS8qXCIsXCJsaWIvKlwiLFwicGVlcnMvKlwiLFwic2NyaXB0cy8qLmpzXCIsXCJzdHVicy8qXCIsXCJuZXN0aW5nLypcIixcInR5cGVzLyoqLypcIixcIiouZC50c1wiLFwiKi5jc3NcIixcIiouanNcIl0sZGV2RGVwZW5kZW5jaWVzOntcIkBzd2MvY2xpXCI6XCJeMC4xLjYyXCIsXCJAc3djL2NvcmVcIjpcIl4xLjMuNTVcIixcIkBzd2MvamVzdFwiOlwiXjAuMi4yNlwiLFwiQHN3Yy9yZWdpc3RlclwiOlwiXjAuMS4xMFwiLGF1dG9wcmVmaXhlcjpcIl4xMC40LjE0XCIsYnJvd3NlcnNsaXN0OlwiXjQuMjEuNVwiLGNvbmN1cnJlbnRseTpcIl44LjAuMVwiLGNzc25hbm86XCJeNi4wLjBcIixlc2J1aWxkOlwiXjAuMTcuMThcIixlc2xpbnQ6XCJeOC4zOS4wXCIsXCJlc2xpbnQtY29uZmlnLXByZXR0aWVyXCI6XCJeOC44LjBcIixcImVzbGludC1wbHVnaW4tcHJldHRpZXJcIjpcIl40LjIuMVwiLGplc3Q6XCJeMjkuNS4wXCIsXCJqZXN0LWRpZmZcIjpcIl4yOS41LjBcIixsaWdodG5pbmdjc3M6XCIxLjE4LjBcIixwcmV0dGllcjpcIl4yLjguOFwiLHJpbXJhZjpcIl41LjAuMFwiLFwic291cmNlLW1hcC1qc1wiOlwiXjEuMC4yXCIsdHVyYm86XCJeMS45LjNcIn0sZGVwZW5kZW5jaWVzOntcIkBhbGxvYy9xdWljay1scnVcIjpcIl41LjIuMFwiLGFyZzpcIl41LjAuMlwiLGNob2tpZGFyOlwiXjMuNS4zXCIsZGlkeW91bWVhbjpcIl4xLjIuMlwiLGRsdjpcIl4xLjEuM1wiLFwiZmFzdC1nbG9iXCI6XCJeMy4yLjEyXCIsXCJnbG9iLXBhcmVudFwiOlwiXjYuMC4yXCIsXCJpcy1nbG9iXCI6XCJeNC4wLjNcIixqaXRpOlwiXjEuMTguMlwiLGxpbGNvbmZpZzpcIl4yLjEuMFwiLG1pY3JvbWF0Y2g6XCJeNC4wLjVcIixcIm5vcm1hbGl6ZS1wYXRoXCI6XCJeMy4wLjBcIixcIm9iamVjdC1oYXNoXCI6XCJeMy4wLjBcIixwaWNvY29sb3JzOlwiXjEuMC4wXCIscG9zdGNzczpcIl44LjQuMjNcIixcInBvc3Rjc3MtaW1wb3J0XCI6XCJeMTUuMS4wXCIsXCJwb3N0Y3NzLWpzXCI6XCJeNC4wLjFcIixcInBvc3Rjc3MtbG9hZC1jb25maWdcIjpcIl40LjAuMVwiLFwicG9zdGNzcy1uZXN0ZWRcIjpcIl42LjAuMVwiLFwicG9zdGNzcy1zZWxlY3Rvci1wYXJzZXJcIjpcIl42LjAuMTFcIixcInBvc3Rjc3MtdmFsdWUtcGFyc2VyXCI6XCJeNC4yLjBcIixyZXNvbHZlOlwiXjEuMjIuMlwiLHN1Y3Jhc2U6XCJeMy4zMi4wXCJ9LGJyb3dzZXJzbGlzdDpbXCI+IDElXCIsXCJub3QgZWRnZSA8PSAxOFwiLFwibm90IGllIDExXCIsXCJub3Qgb3BfbWluaSBhbGxcIl0samVzdDp7dGVzdFRpbWVvdXQ6M2U0LHNldHVwRmlsZXNBZnRlckVudjpbXCI8cm9vdERpcj4vamVzdC9jdXN0b21NYXRjaGVycy5qc1wiXSx0ZXN0UGF0aElnbm9yZVBhdHRlcm5zOltcIi9ub2RlX21vZHVsZXMvXCIsXCIvaW50ZWdyYXRpb25zL1wiLFwiL3N0YW5kYWxvbmUtY2xpL1wiLFwiXFxcXC50ZXN0XFxcXC5za2lwXFxcXC5qcyRcIl0sdHJhbnNmb3JtSWdub3JlUGF0dGVybnM6W1wibm9kZV9tb2R1bGVzLyg/IWxpZ2h0bmluZ2NzcylcIl0sdHJhbnNmb3JtOntcIlxcXFwuanMkXCI6XCJAc3djL2plc3RcIixcIlxcXFwudHMkXCI6XCJAc3djL2plc3RcIn19LGVuZ2luZXM6e25vZGU6XCI+PTE0LjAuMFwifX07dmFyIFZuPXR5cGVvZiBwcm9jZXNzPFwidVwiP3tOT0RFX0VOVjpcInByb2R1Y3Rpb25cIixERUJVRzpEcCh2b2lkIDApLEVOR0lORTp6bi50YWlsd2luZGNzcy5lbmdpbmV9OntOT0RFX0VOVjpcInByb2R1Y3Rpb25cIixERUJVRzohMSxFTkdJTkU6em4udGFpbHdpbmRjc3MuZW5naW5lfTt2YXIgV249bmV3IE1hcDt2YXIga2U9bmV3IFN0cmluZyhcIipcIiksbXQ9U3ltYm9sKFwiX19OT05FX19cIik7ZnVuY3Rpb24gRHAodCl7aWYodD09PXZvaWQgMClyZXR1cm4hMTtpZih0PT09XCJ0cnVlXCJ8fHQ9PT1cIjFcIilyZXR1cm4hMDtpZih0PT09XCJmYWxzZVwifHx0PT09XCIwXCIpcmV0dXJuITE7aWYodD09PVwiKlwiKXJldHVybiEwO2xldCBlPXQuc3BsaXQoXCIsXCIpLm1hcChyPT5yLnNwbGl0KFwiOlwiKVswXSk7cmV0dXJuIGUuaW5jbHVkZXMoXCItdGFpbHdpbmRjc3NcIik/ITE6ISFlLmluY2x1ZGVzKFwidGFpbHdpbmRjc3NcIil9dmFyICQ9SChLZSgpLDEpLFI9JC5kZWZhdWx0LEtiPSQuZGVmYXVsdC5zdHJpbmdpZnksWmI9JC5kZWZhdWx0LmZyb21KU09OLGV4PSQuZGVmYXVsdC5wbHVnaW4sdHg9JC5kZWZhdWx0LnBhcnNlLHJ4PSQuZGVmYXVsdC5saXN0LG54PSQuZGVmYXVsdC5kb2N1bWVudCxpeD0kLmRlZmF1bHQuY29tbWVudCxzeD0kLmRlZmF1bHQuYXRSdWxlLGF4PSQuZGVmYXVsdC5ydWxlLG94PSQuZGVmYXVsdC5kZWNsLGx4PSQuZGVmYXVsdC5yb290LHV4PSQuZGVmYXVsdC5Dc3NTeW50YXhFcnJvcixmeD0kLmRlZmF1bHQuRGVjbGFyYXRpb24sY3g9JC5kZWZhdWx0LkNvbnRhaW5lcixweD0kLmRlZmF1bHQuUHJvY2Vzc29yLGR4PSQuZGVmYXVsdC5Eb2N1bWVudCxoeD0kLmRlZmF1bHQuQ29tbWVudCxteD0kLmRlZmF1bHQuV2FybmluZyxneD0kLmRlZmF1bHQuQXRSdWxlLHl4PSQuZGVmYXVsdC5SZXN1bHQsdng9JC5kZWZhdWx0LklucHV0LHd4PSQuZGVmYXVsdC5SdWxlLGJ4PSQuZGVmYXVsdC5Sb290LHh4PSQuZGVmYXVsdC5Ob2RlO3ZhciB3bj1IKHZlKCkpO3ZhciAkdT1IKFN1KCkpO3ZhciBydD1IKHF1KCksMSksdG49cnQuZGVmYXVsdCxqeD1ydC5kZWZhdWx0Lm9iamVjdGlmeSx6eD1ydC5kZWZhdWx0LnBhcnNlLFZ4PXJ0LmRlZmF1bHQuYXN5bmMsV3g9cnQuZGVmYXVsdC5zeW5jO2Z1bmN0aW9uIG50KHQpe3JldHVybiBBcnJheS5pc0FycmF5KHQpP3QuZmxhdE1hcChlPT5SKFsoMCwkdS5kZWZhdWx0KSh7YnViYmxlOltcInNjcmVlblwiXX0pXSkucHJvY2VzcyhlLHtwYXJzZXI6dG59KS5yb290Lm5vZGVzKTpudChbdF0pfWZ1bmN0aW9uIFgodCl7aWYoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpIT09XCJbb2JqZWN0IE9iamVjdF1cIilyZXR1cm4hMTtsZXQgZT1PYmplY3QuZ2V0UHJvdG90eXBlT2YodCk7cmV0dXJuIGU9PT1udWxsfHxlPT09T2JqZWN0LnByb3RvdHlwZX12YXIgVXU9SCh2ZSgpKTtmdW5jdGlvbiBpdCh0LGUscj0hMSl7aWYodD09PVwiXCIpcmV0dXJuIGU7bGV0IG49dHlwZW9mIGU9PVwic3RyaW5nXCI/KDAsVXUuZGVmYXVsdCkoKS5hc3RTeW5jKGUpOmU7cmV0dXJuIG4ud2Fsa0NsYXNzZXMoaT0+e2xldCBhPWkudmFsdWUscz1yJiZhLnN0YXJ0c1dpdGgoXCItXCIpO2kudmFsdWU9cz9gLSR7dH0ke2Euc2xpY2UoMSl9YDpgJHt0fSR7YX1gfSksdHlwZW9mIGU9PVwic3RyaW5nXCI/bi50b1N0cmluZygpOm59ZnVuY3Rpb24gQmUodCl7cmV0dXJuIHQucmVwbGFjZSgvXFxcXCwvZyxcIlxcXFwyYyBcIil9dmFyIGtzPXthbGljZWJsdWU6WzI0MCwyNDgsMjU1XSxhbnRpcXVld2hpdGU6WzI1MCwyMzUsMjE1XSxhcXVhOlswLDI1NSwyNTVdLGFxdWFtYXJpbmU6WzEyNywyNTUsMjEyXSxhenVyZTpbMjQwLDI1NSwyNTVdLGJlaWdlOlsyNDUsMjQ1LDIyMF0sYmlzcXVlOlsyNTUsMjI4LDE5Nl0sYmxhY2s6WzAsMCwwXSxibGFuY2hlZGFsbW9uZDpbMjU1LDIzNSwyMDVdLGJsdWU6WzAsMCwyNTVdLGJsdWV2aW9sZXQ6WzEzOCw0MywyMjZdLGJyb3duOlsxNjUsNDIsNDJdLGJ1cmx5d29vZDpbMjIyLDE4NCwxMzVdLGNhZGV0Ymx1ZTpbOTUsMTU4LDE2MF0sY2hhcnRyZXVzZTpbMTI3LDI1NSwwXSxjaG9jb2xhdGU6WzIxMCwxMDUsMzBdLGNvcmFsOlsyNTUsMTI3LDgwXSxjb3JuZmxvd2VyYmx1ZTpbMTAwLDE0OSwyMzddLGNvcm5zaWxrOlsyNTUsMjQ4LDIyMF0sY3JpbXNvbjpbMjIwLDIwLDYwXSxjeWFuOlswLDI1NSwyNTVdLGRhcmtibHVlOlswLDAsMTM5XSxkYXJrY3lhbjpbMCwxMzksMTM5XSxkYXJrZ29sZGVucm9kOlsxODQsMTM0LDExXSxkYXJrZ3JheTpbMTY5LDE2OSwxNjldLGRhcmtncmVlbjpbMCwxMDAsMF0sZGFya2dyZXk6WzE2OSwxNjksMTY5XSxkYXJra2hha2k6WzE4OSwxODMsMTA3XSxkYXJrbWFnZW50YTpbMTM5LDAsMTM5XSxkYXJrb2xpdmVncmVlbjpbODUsMTA3LDQ3XSxkYXJrb3JhbmdlOlsyNTUsMTQwLDBdLGRhcmtvcmNoaWQ6WzE1Myw1MCwyMDRdLGRhcmtyZWQ6WzEzOSwwLDBdLGRhcmtzYWxtb246WzIzMywxNTAsMTIyXSxkYXJrc2VhZ3JlZW46WzE0MywxODgsMTQzXSxkYXJrc2xhdGVibHVlOls3Miw2MSwxMzldLGRhcmtzbGF0ZWdyYXk6WzQ3LDc5LDc5XSxkYXJrc2xhdGVncmV5Ols0Nyw3OSw3OV0sZGFya3R1cnF1b2lzZTpbMCwyMDYsMjA5XSxkYXJrdmlvbGV0OlsxNDgsMCwyMTFdLGRlZXBwaW5rOlsyNTUsMjAsMTQ3XSxkZWVwc2t5Ymx1ZTpbMCwxOTEsMjU1XSxkaW1ncmF5OlsxMDUsMTA1LDEwNV0sZGltZ3JleTpbMTA1LDEwNSwxMDVdLGRvZGdlcmJsdWU6WzMwLDE0NCwyNTVdLGZpcmVicmljazpbMTc4LDM0LDM0XSxmbG9yYWx3aGl0ZTpbMjU1LDI1MCwyNDBdLGZvcmVzdGdyZWVuOlszNCwxMzksMzRdLGZ1Y2hzaWE6WzI1NSwwLDI1NV0sZ2FpbnNib3JvOlsyMjAsMjIwLDIyMF0sZ2hvc3R3aGl0ZTpbMjQ4LDI0OCwyNTVdLGdvbGQ6WzI1NSwyMTUsMF0sZ29sZGVucm9kOlsyMTgsMTY1LDMyXSxncmF5OlsxMjgsMTI4LDEyOF0sZ3JlZW46WzAsMTI4LDBdLGdyZWVueWVsbG93OlsxNzMsMjU1LDQ3XSxncmV5OlsxMjgsMTI4LDEyOF0saG9uZXlkZXc6WzI0MCwyNTUsMjQwXSxob3RwaW5rOlsyNTUsMTA1LDE4MF0saW5kaWFucmVkOlsyMDUsOTIsOTJdLGluZGlnbzpbNzUsMCwxMzBdLGl2b3J5OlsyNTUsMjU1LDI0MF0sa2hha2k6WzI0MCwyMzAsMTQwXSxsYXZlbmRlcjpbMjMwLDIzMCwyNTBdLGxhdmVuZGVyYmx1c2g6WzI1NSwyNDAsMjQ1XSxsYXduZ3JlZW46WzEyNCwyNTIsMF0sbGVtb25jaGlmZm9uOlsyNTUsMjUwLDIwNV0sbGlnaHRibHVlOlsxNzMsMjE2LDIzMF0sbGlnaHRjb3JhbDpbMjQwLDEyOCwxMjhdLGxpZ2h0Y3lhbjpbMjI0LDI1NSwyNTVdLGxpZ2h0Z29sZGVucm9keWVsbG93OlsyNTAsMjUwLDIxMF0sbGlnaHRncmF5OlsyMTEsMjExLDIxMV0sbGlnaHRncmVlbjpbMTQ0LDIzOCwxNDRdLGxpZ2h0Z3JleTpbMjExLDIxMSwyMTFdLGxpZ2h0cGluazpbMjU1LDE4MiwxOTNdLGxpZ2h0c2FsbW9uOlsyNTUsMTYwLDEyMl0sbGlnaHRzZWFncmVlbjpbMzIsMTc4LDE3MF0sbGlnaHRza3libHVlOlsxMzUsMjA2LDI1MF0sbGlnaHRzbGF0ZWdyYXk6WzExOSwxMzYsMTUzXSxsaWdodHNsYXRlZ3JleTpbMTE5LDEzNiwxNTNdLGxpZ2h0c3RlZWxibHVlOlsxNzYsMTk2LDIyMl0sbGlnaHR5ZWxsb3c6WzI1NSwyNTUsMjI0XSxsaW1lOlswLDI1NSwwXSxsaW1lZ3JlZW46WzUwLDIwNSw1MF0sbGluZW46WzI1MCwyNDAsMjMwXSxtYWdlbnRhOlsyNTUsMCwyNTVdLG1hcm9vbjpbMTI4LDAsMF0sbWVkaXVtYXF1YW1hcmluZTpbMTAyLDIwNSwxNzBdLG1lZGl1bWJsdWU6WzAsMCwyMDVdLG1lZGl1bW9yY2hpZDpbMTg2LDg1LDIxMV0sbWVkaXVtcHVycGxlOlsxNDcsMTEyLDIxOV0sbWVkaXVtc2VhZ3JlZW46WzYwLDE3OSwxMTNdLG1lZGl1bXNsYXRlYmx1ZTpbMTIzLDEwNCwyMzhdLG1lZGl1bXNwcmluZ2dyZWVuOlswLDI1MCwxNTRdLG1lZGl1bXR1cnF1b2lzZTpbNzIsMjA5LDIwNF0sbWVkaXVtdmlvbGV0cmVkOlsxOTksMjEsMTMzXSxtaWRuaWdodGJsdWU6WzI1LDI1LDExMl0sbWludGNyZWFtOlsyNDUsMjU1LDI1MF0sbWlzdHlyb3NlOlsyNTUsMjI4LDIyNV0sbW9jY2FzaW46WzI1NSwyMjgsMTgxXSxuYXZham93aGl0ZTpbMjU1LDIyMiwxNzNdLG5hdnk6WzAsMCwxMjhdLG9sZGxhY2U6WzI1MywyNDUsMjMwXSxvbGl2ZTpbMTI4LDEyOCwwXSxvbGl2ZWRyYWI6WzEwNywxNDIsMzVdLG9yYW5nZTpbMjU1LDE2NSwwXSxvcmFuZ2VyZWQ6WzI1NSw2OSwwXSxvcmNoaWQ6WzIxOCwxMTIsMjE0XSxwYWxlZ29sZGVucm9kOlsyMzgsMjMyLDE3MF0scGFsZWdyZWVuOlsxNTIsMjUxLDE1Ml0scGFsZXR1cnF1b2lzZTpbMTc1LDIzOCwyMzhdLHBhbGV2aW9sZXRyZWQ6WzIxOSwxMTIsMTQ3XSxwYXBheWF3aGlwOlsyNTUsMjM5LDIxM10scGVhY2hwdWZmOlsyNTUsMjE4LDE4NV0scGVydTpbMjA1LDEzMyw2M10scGluazpbMjU1LDE5MiwyMDNdLHBsdW06WzIyMSwxNjAsMjIxXSxwb3dkZXJibHVlOlsxNzYsMjI0LDIzMF0scHVycGxlOlsxMjgsMCwxMjhdLHJlYmVjY2FwdXJwbGU6WzEwMiw1MSwxNTNdLHJlZDpbMjU1LDAsMF0scm9zeWJyb3duOlsxODgsMTQzLDE0M10scm95YWxibHVlOls2NSwxMDUsMjI1XSxzYWRkbGVicm93bjpbMTM5LDY5LDE5XSxzYWxtb246WzI1MCwxMjgsMTE0XSxzYW5keWJyb3duOlsyNDQsMTY0LDk2XSxzZWFncmVlbjpbNDYsMTM5LDg3XSxzZWFzaGVsbDpbMjU1LDI0NSwyMzhdLHNpZW5uYTpbMTYwLDgyLDQ1XSxzaWx2ZXI6WzE5MiwxOTIsMTkyXSxza3libHVlOlsxMzUsMjA2LDIzNV0sc2xhdGVibHVlOlsxMDYsOTAsMjA1XSxzbGF0ZWdyYXk6WzExMiwxMjgsMTQ0XSxzbGF0ZWdyZXk6WzExMiwxMjgsMTQ0XSxzbm93OlsyNTUsMjUwLDI1MF0sc3ByaW5nZ3JlZW46WzAsMjU1LDEyN10sc3RlZWxibHVlOls3MCwxMzAsMTgwXSx0YW46WzIxMCwxODAsMTQwXSx0ZWFsOlswLDEyOCwxMjhdLHRoaXN0bGU6WzIxNiwxOTEsMjE2XSx0b21hdG86WzI1NSw5OSw3MV0sdHVycXVvaXNlOls2NCwyMjQsMjA4XSx2aW9sZXQ6WzIzOCwxMzAsMjM4XSx3aGVhdDpbMjQ1LDIyMiwxNzldLHdoaXRlOlsyNTUsMjU1LDI1NV0sd2hpdGVzbW9rZTpbMjQ1LDI0NSwyNDVdLHllbGxvdzpbMjU1LDI1NSwwXSx5ZWxsb3dncmVlbjpbMTU0LDIwNSw1MF19O3ZhciBDMD0vXiMoW2EtZlxcZF17Mn0pKFthLWZcXGRdezJ9KShbYS1mXFxkXXsyfSkoW2EtZlxcZF17Mn0pPyQvaSxBMD0vXiMoW2EtZlxcZF0pKFthLWZcXGRdKShbYS1mXFxkXSkoW2EtZlxcZF0pPyQvaSxQZT0vKD86XFxkK3xcXGQqXFwuXFxkKyklPy8scm49Lyg/OlxccyosXFxzKnxcXHMrKS8sanU9L1xccypbLC9dXFxzKi8sSWU9L3ZhclxcKC0tKD86W14gKV0qPylcXCkvLF8wPW5ldyBSZWdFeHAoYF4ocmdiYT8pXFxcXChcXFxccyooJHtQZS5zb3VyY2V9fCR7SWUuc291cmNlfSkoPzoke3JuLnNvdXJjZX0oJHtQZS5zb3VyY2V9fCR7SWUuc291cmNlfSkpPyg/OiR7cm4uc291cmNlfSgke1BlLnNvdXJjZX18JHtJZS5zb3VyY2V9KSk/KD86JHtqdS5zb3VyY2V9KCR7UGUuc291cmNlfXwke0llLnNvdXJjZX0pKT9cXFxccypcXFxcKSRgKSxUMD1uZXcgUmVnRXhwKGBeKGhzbGE/KVxcXFwoXFxcXHMqKCg/OiR7UGUuc291cmNlfSkoPzpkZWd8cmFkfGdyYWR8dHVybik/fCR7SWUuc291cmNlfSkoPzoke3JuLnNvdXJjZX0oJHtQZS5zb3VyY2V9fCR7SWUuc291cmNlfSkpPyg/OiR7cm4uc291cmNlfSgke1BlLnNvdXJjZX18JHtJZS5zb3VyY2V9KSk/KD86JHtqdS5zb3VyY2V9KCR7UGUuc291cmNlfXwke0llLnNvdXJjZX0pKT9cXFxccypcXFxcKSRgKTtmdW5jdGlvbiBpcih0LHtsb29zZTplPSExfT17fSl7dmFyIGEscyxvO2lmKHR5cGVvZiB0IT1cInN0cmluZ1wiKXJldHVybiBudWxsO2lmKHQ9dC50cmltKCksdD09PVwidHJhbnNwYXJlbnRcIilyZXR1cm57bW9kZTpcInJnYlwiLGNvbG9yOltcIjBcIixcIjBcIixcIjBcIl0sYWxwaGE6XCIwXCJ9O2lmKHQgaW4ga3MpcmV0dXJue21vZGU6XCJyZ2JcIixjb2xvcjprc1t0XS5tYXAobD0+bC50b1N0cmluZygpKX07bGV0IHI9dC5yZXBsYWNlKEEwLChsLHUsZixwLGMpPT5bXCIjXCIsdSx1LGYsZixwLHAsYz9jK2M6XCJcIl0uam9pbihcIlwiKSkubWF0Y2goQzApO2lmKHIhPT1udWxsKXJldHVybnttb2RlOlwicmdiXCIsY29sb3I6W3BhcnNlSW50KHJbMV0sMTYpLHBhcnNlSW50KHJbMl0sMTYpLHBhcnNlSW50KHJbM10sMTYpXS5tYXAobD0+bC50b1N0cmluZygpKSxhbHBoYTpyWzRdPyhwYXJzZUludChyWzRdLDE2KS8yNTUpLnRvU3RyaW5nKCk6dm9pZCAwfTtsZXQgbj0oYT10Lm1hdGNoKF8wKSkhPW51bGw/YTp0Lm1hdGNoKFQwKTtpZihuPT09bnVsbClyZXR1cm4gbnVsbDtsZXQgaT1bblsyXSxuWzNdLG5bNF1dLmZpbHRlcihCb29sZWFuKS5tYXAobD0+bC50b1N0cmluZygpKTtyZXR1cm4gaS5sZW5ndGg9PT0yJiZpWzBdLnN0YXJ0c1dpdGgoXCJ2YXIoXCIpP3ttb2RlOm5bMV0sY29sb3I6W2lbMF1dLGFscGhhOmlbMV19OiFlJiZpLmxlbmd0aCE9PTN8fGkubGVuZ3RoPDMmJiFpLnNvbWUobD0+L152YXJcXCguKj9cXCkkLy50ZXN0KGwpKT9udWxsOnttb2RlOm5bMV0sY29sb3I6aSxhbHBoYToobz0ocz1uWzVdKT09bnVsbD92b2lkIDA6cy50b1N0cmluZyk9PW51bGw/dm9pZCAwOm8uY2FsbChzKX19ZnVuY3Rpb24gT3Moe21vZGU6dCxjb2xvcjplLGFscGhhOnJ9KXtsZXQgbj1yIT09dm9pZCAwO3JldHVybiB0PT09XCJyZ2JhXCJ8fHQ9PT1cImhzbGFcIj9gJHt0fSgke2Uuam9pbihcIiwgXCIpfSR7bj9gLCAke3J9YDpcIlwifSlgOmAke3R9KCR7ZS5qb2luKFwiIFwiKX0ke24/YCAvICR7cn1gOlwiXCJ9KWB9ZnVuY3Rpb24gd2UodCxlLHIpe2lmKHR5cGVvZiB0PT1cImZ1bmN0aW9uXCIpcmV0dXJuIHQoe29wYWNpdHlWYWx1ZTplfSk7bGV0IG49aXIodCx7bG9vc2U6ITB9KTtyZXR1cm4gbj09PW51bGw/cjpPcyh7Li4ubixhbHBoYTplfSl9ZnVuY3Rpb24gWih7Y29sb3I6dCxwcm9wZXJ0eTplLHZhcmlhYmxlOnJ9KXtsZXQgbj1bXS5jb25jYXQoZSk7aWYodHlwZW9mIHQ9PVwiZnVuY3Rpb25cIilyZXR1cm57W3JdOlwiMVwiLC4uLk9iamVjdC5mcm9tRW50cmllcyhuLm1hcChhPT5bYSx0KHtvcGFjaXR5VmFyaWFibGU6cixvcGFjaXR5VmFsdWU6YHZhcigke3J9KWB9KV0pKX07bGV0IGk9aXIodCk7cmV0dXJuIGk9PT1udWxsP09iamVjdC5mcm9tRW50cmllcyhuLm1hcChhPT5bYSx0XSkpOmkuYWxwaGEhPT12b2lkIDA/T2JqZWN0LmZyb21FbnRyaWVzKG4ubWFwKGE9PlthLHRdKSk6e1tyXTpcIjFcIiwuLi5PYmplY3QuZnJvbUVudHJpZXMobi5tYXAoYT0+W2EsT3Moey4uLmksYWxwaGE6YHZhcigke3J9KWB9KV0pKX19ZnVuY3Rpb24gZWUodCxlKXtsZXQgcj1bXSxuPVtdLGk9MCxhPSExO2ZvcihsZXQgcz0wO3M8dC5sZW5ndGg7cysrKXtsZXQgbz10W3NdO3IubGVuZ3RoPT09MCYmbz09PWVbMF0mJiFhJiYoZS5sZW5ndGg9PT0xfHx0LnNsaWNlKHMscytlLmxlbmd0aCk9PT1lKSYmKG4ucHVzaCh0LnNsaWNlKGkscykpLGk9cytlLmxlbmd0aCksYT9hPSExOm89PT1cIlxcXFxcIiYmKGE9ITApLG89PT1cIihcInx8bz09PVwiW1wifHxvPT09XCJ7XCI/ci5wdXNoKG8pOihvPT09XCIpXCImJnJbci5sZW5ndGgtMV09PT1cIihcInx8bz09PVwiXVwiJiZyW3IubGVuZ3RoLTFdPT09XCJbXCJ8fG89PT1cIn1cIiYmcltyLmxlbmd0aC0xXT09PVwie1wiKSYmci5wb3AoKX1yZXR1cm4gbi5wdXNoKHQuc2xpY2UoaSkpLG59dmFyIFAwPW5ldyBTZXQoW1wiaW5zZXRcIixcImluaGVyaXRcIixcImluaXRpYWxcIixcInJldmVydFwiLFwidW5zZXRcIl0pLEkwPS9cXCArKD8hW14oXSpcXCkpL2csenU9L14tPyhcXGQrfFxcLlxcZCspKC4qPykkL2c7ZnVuY3Rpb24gbm4odCl7cmV0dXJuIGVlKHQsXCIsXCIpLm1hcChyPT57bGV0IG49ci50cmltKCksaT17cmF3Om59LGE9bi5zcGxpdChJMCkscz1uZXcgU2V0O2ZvcihsZXQgbyBvZiBhKXp1Lmxhc3RJbmRleD0wLCFzLmhhcyhcIktFWVdPUkRcIikmJlAwLmhhcyhvKT8oaS5rZXl3b3JkPW8scy5hZGQoXCJLRVlXT1JEXCIpKTp6dS50ZXN0KG8pP3MuaGFzKFwiWFwiKT9zLmhhcyhcIllcIik/cy5oYXMoXCJCTFVSXCIpP3MuaGFzKFwiU1BSRUFEXCIpfHwoaS5zcHJlYWQ9byxzLmFkZChcIlNQUkVBRFwiKSk6KGkuYmx1cj1vLHMuYWRkKFwiQkxVUlwiKSk6KGkueT1vLHMuYWRkKFwiWVwiKSk6KGkueD1vLHMuYWRkKFwiWFwiKSk6aS5jb2xvcj8oaS51bmtub3dufHwoaS51bmtub3duPVtdKSxpLnVua25vd24ucHVzaChvKSk6aS5jb2xvcj1vO3JldHVybiBpLnZhbGlkPWkueCE9PXZvaWQgMCYmaS55IT09dm9pZCAwLGl9KX1mdW5jdGlvbiBWdSh0KXtyZXR1cm4gdC5tYXAoZT0+ZS52YWxpZD9bZS5rZXl3b3JkLGUueCxlLnksZS5ibHVyLGUuc3ByZWFkLGUuY29sb3JdLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIFwiKTplLnJhdykuam9pbihcIiwgXCIpfXZhciBSMD1bXCJtaW5cIixcIm1heFwiLFwiY2xhbXBcIixcImNhbGNcIl07ZnVuY3Rpb24gRXModCl7cmV0dXJuIFIwLnNvbWUoZT0+bmV3IFJlZ0V4cChgXiR7ZX1cXFxcKC4qXFxcXClgKS50ZXN0KHQpKX12YXIgV3U9XCItLXR3LXBsYWNlaG9sZGVyXCIsRDA9bmV3IFJlZ0V4cChXdSxcImdcIik7ZnVuY3Rpb24geih0LGU9ITApe3JldHVybiB0LnN0YXJ0c1dpdGgoXCItLVwiKT9gdmFyKCR7dH0pYDp0LmluY2x1ZGVzKFwidXJsKFwiKT90LnNwbGl0KC8odXJsXFwoLio/XFwpKS9nKS5maWx0ZXIoQm9vbGVhbikubWFwKHI9Pi9edXJsXFwoLio/XFwpJC8udGVzdChyKT9yOnoociwhMSkpLmpvaW4oXCJcIik6KHQ9dC5yZXBsYWNlKC8oW15cXFxcXSlfKy9nLChyLG4pPT5uK1wiIFwiLnJlcGVhdChyLmxlbmd0aC0xKSkucmVwbGFjZSgvXl8vZyxcIiBcIikucmVwbGFjZSgvXFxcXF8vZyxcIl9cIiksZSYmKHQ9dC50cmltKCkpLHQ9dC5yZXBsYWNlKC8oY2FsY3xtaW58bWF4fGNsYW1wKVxcKC4rXFwpL2cscj0+e2xldCBuPVtdO3JldHVybiByLnJlcGxhY2UoL3ZhclxcKCgtLS4rPylbLCldL2csKGksYSk9PihuLnB1c2goYSksaS5yZXBsYWNlKGEsV3UpKSkucmVwbGFjZSgvKC0/XFxkKlxcLj9cXGQoPyFcXGItXFxkLitbLCldKD8hW14rXFwtLypdKVxcRCkoPzolfFthLXpdKyk/fFxcKSkoWytcXC0vKl0pL2csXCIkMSAkMiBcIikucmVwbGFjZShEMCwoKT0+bi5zaGlmdCgpKX0pLHQpfWZ1bmN0aW9uIENzKHQpe3JldHVybiB0LnN0YXJ0c1dpdGgoXCJ1cmwoXCIpfWZ1bmN0aW9uIEFzKHQpe3JldHVybiFpc05hTihOdW1iZXIodCkpfHxFcyh0KX1mdW5jdGlvbiBzcih0KXtyZXR1cm4gdC5lbmRzV2l0aChcIiVcIikmJkFzKHQuc2xpY2UoMCwtMSkpfHxFcyh0KX12YXIgTTA9W1wiY21cIixcIm1tXCIsXCJRXCIsXCJpblwiLFwicGNcIixcInB0XCIsXCJweFwiLFwiZW1cIixcImV4XCIsXCJjaFwiLFwicmVtXCIsXCJsaFwiLFwicmxoXCIsXCJ2d1wiLFwidmhcIixcInZtaW5cIixcInZtYXhcIixcInZiXCIsXCJ2aVwiLFwic3Z3XCIsXCJzdmhcIixcImx2d1wiLFwibHZoXCIsXCJkdndcIixcImR2aFwiLFwiY3F3XCIsXCJjcWhcIixcImNxaVwiLFwiY3FiXCIsXCJjcW1pblwiLFwiY3FtYXhcIl0sRjA9YCg/OiR7TTAuam9pbihcInxcIil9KWA7ZnVuY3Rpb24gYXIodCl7cmV0dXJuIHQ9PT1cIjBcInx8bmV3IFJlZ0V4cChgXlsrLV0/WzAtOV0qLj9bMC05XSsoPzpbZUVdWystXT9bMC05XSspPyR7RjB9JGApLnRlc3QodCl8fEVzKHQpfXZhciBMMD1uZXcgU2V0KFtcInRoaW5cIixcIm1lZGl1bVwiLFwidGhpY2tcIl0pO2Z1bmN0aW9uIEJ1KHQpe3JldHVybiBMMC5oYXModCl9ZnVuY3Rpb24gR3UodCl7bGV0IGU9bm4oeih0KSk7Zm9yKGxldCByIG9mIGUpaWYoIXIudmFsaWQpcmV0dXJuITE7cmV0dXJuITB9ZnVuY3Rpb24gWXUodCl7bGV0IGU9MDtyZXR1cm4gZWUodCxcIl9cIikuZXZlcnkobj0+KG49eihuKSxuLnN0YXJ0c1dpdGgoXCJ2YXIoXCIpPyEwOmlyKG4se2xvb3NlOiEwfSkhPT1udWxsPyhlKyssITApOiExKSk/ZT4wOiExfWZ1bmN0aW9uIEh1KHQpe2xldCBlPTA7cmV0dXJuIGVlKHQsXCIsXCIpLmV2ZXJ5KG49PihuPXoobiksbi5zdGFydHNXaXRoKFwidmFyKFwiKT8hMDpDcyhuKXx8cTAobil8fFtcImVsZW1lbnQoXCIsXCJpbWFnZShcIixcImNyb3NzLWZhZGUoXCIsXCJpbWFnZS1zZXQoXCJdLnNvbWUoaT0+bi5zdGFydHNXaXRoKGkpKT8oZSsrLCEwKTohMSkpP2U+MDohMX12YXIgTjA9bmV3IFNldChbXCJsaW5lYXItZ3JhZGllbnRcIixcInJhZGlhbC1ncmFkaWVudFwiLFwicmVwZWF0aW5nLWxpbmVhci1ncmFkaWVudFwiLFwicmVwZWF0aW5nLXJhZGlhbC1ncmFkaWVudFwiLFwiY29uaWMtZ3JhZGllbnRcIl0pO2Z1bmN0aW9uIHEwKHQpe3Q9eih0KTtmb3IobGV0IGUgb2YgTjApaWYodC5zdGFydHNXaXRoKGAke2V9KGApKXJldHVybiEwO3JldHVybiExfXZhciAkMD1uZXcgU2V0KFtcImNlbnRlclwiLFwidG9wXCIsXCJyaWdodFwiLFwiYm90dG9tXCIsXCJsZWZ0XCJdKTtmdW5jdGlvbiBRdSh0KXtsZXQgZT0wO3JldHVybiBlZSh0LFwiX1wiKS5ldmVyeShuPT4obj16KG4pLG4uc3RhcnRzV2l0aChcInZhcihcIik/ITA6JDAuaGFzKG4pfHxhcihuKXx8c3Iobik/KGUrKywhMCk6ITEpKT9lPjA6ITF9ZnVuY3Rpb24gSnUodCl7bGV0IGU9MDtyZXR1cm4gZWUodCxcIixcIikuZXZlcnkobj0+KG49eihuKSxuLnN0YXJ0c1dpdGgoXCJ2YXIoXCIpPyEwOm4uaW5jbHVkZXMoXCIgXCIpJiYhLyhbJ1wiXSkoW15cIiddKylcXDEvZy50ZXN0KG4pfHwvXlxcZC9nLnRlc3Qobik/ITE6KGUrKywhMCkpKT9lPjA6ITF9dmFyIFUwPW5ldyBTZXQoW1wic2VyaWZcIixcInNhbnMtc2VyaWZcIixcIm1vbm9zcGFjZVwiLFwiY3Vyc2l2ZVwiLFwiZmFudGFzeVwiLFwic3lzdGVtLXVpXCIsXCJ1aS1zZXJpZlwiLFwidWktc2Fucy1zZXJpZlwiLFwidWktbW9ub3NwYWNlXCIsXCJ1aS1yb3VuZGVkXCIsXCJtYXRoXCIsXCJlbW9qaVwiLFwiZmFuZ3NvbmdcIl0pO2Z1bmN0aW9uIFh1KHQpe3JldHVybiBVMC5oYXModCl9dmFyIGowPW5ldyBTZXQoW1wieHgtc21hbGxcIixcIngtc21hbGxcIixcInNtYWxsXCIsXCJtZWRpdW1cIixcImxhcmdlXCIsXCJ4LWxhcmdlXCIsXCJ4LWxhcmdlXCIsXCJ4eHgtbGFyZ2VcIl0pO2Z1bmN0aW9uIEt1KHQpe3JldHVybiBqMC5oYXModCl9dmFyIHowPW5ldyBTZXQoW1wibGFyZ2VyXCIsXCJzbWFsbGVyXCJdKTtmdW5jdGlvbiBadSh0KXtyZXR1cm4gejAuaGFzKHQpfWZ1bmN0aW9uIFJlKHQpe2lmKHQ9YCR7dH1gLHQ9PT1cIjBcIilyZXR1cm5cIjBcIjtpZigvXlsrLV0/KFxcZCt8XFxkKlxcLlxcZCspKGVbKy1dP1xcZCspPyglfFxcdyspPyQvLnRlc3QodCkpcmV0dXJuIHQucmVwbGFjZSgvXlsrLV0/LyxyPT5yPT09XCItXCI/XCJcIjpcIi1cIik7bGV0IGU9W1widmFyXCIsXCJjYWxjXCIsXCJtaW5cIixcIm1heFwiLFwiY2xhbXBcIl07Zm9yKGxldCByIG9mIGUpaWYodC5pbmNsdWRlcyhgJHtyfShgKSlyZXR1cm5gY2FsYygke3R9ICogLTEpYH1mdW5jdGlvbiBlZih0KXtsZXQgZT1bXCJjb3ZlclwiLFwiY29udGFpblwiXTtyZXR1cm4gZWUodCxcIixcIikuZXZlcnkocj0+e2xldCBuPWVlKHIsXCJfXCIpLmZpbHRlcihCb29sZWFuKTtyZXR1cm4gbi5sZW5ndGg9PT0xJiZlLmluY2x1ZGVzKG5bMF0pPyEwOm4ubGVuZ3RoIT09MSYmbi5sZW5ndGghPT0yPyExOm4uZXZlcnkoaT0+YXIoaSl8fHNyKGkpfHxpPT09XCJhdXRvXCIpfSl9R24oKTt2YXIgdGY9e29wdGltaXplVW5pdmVyc2FsRGVmYXVsdHM6ITEsZ2VuZXJhbGl6ZWRNb2RpZmllcnM6ITAsZ2V0IGRpc2FibGVDb2xvck9wYWNpdHlVdGlsaXRpZXNCeURlZmF1bHQoKXt9LGdldCByZWxhdGl2ZUNvbnRlbnRQYXRoc0J5RGVmYXVsdCgpe319LHNuPXtmdXR1cmU6W1wiaG92ZXJPbmx5V2hlblN1cHBvcnRlZFwiLFwicmVzcGVjdERlZmF1bHRSaW5nQ29sb3JPcGFjaXR5XCIsXCJkaXNhYmxlQ29sb3JPcGFjaXR5VXRpbGl0aWVzQnlEZWZhdWx0XCIsXCJyZWxhdGl2ZUNvbnRlbnRQYXRoc0J5RGVmYXVsdFwiXSxleHBlcmltZW50YWw6W1wib3B0aW1pemVVbml2ZXJzYWxEZWZhdWx0c1wiLFwiZ2VuZXJhbGl6ZWRNb2RpZmllcnNcIl19O2Z1bmN0aW9uIEcodCxlKXt2YXIgcixuLGksYSxzLG87cmV0dXJuIHNuLmZ1dHVyZS5pbmNsdWRlcyhlKT90LmZ1dHVyZT09PVwiYWxsXCJ8fCgoaT0obj0ocj10PT1udWxsP3ZvaWQgMDp0LmZ1dHVyZSk9PW51bGw/dm9pZCAwOnJbZV0pIT1udWxsP246dGZbZV0pIT1udWxsP2k6ITEpOnNuLmV4cGVyaW1lbnRhbC5pbmNsdWRlcyhlKT90LmV4cGVyaW1lbnRhbD09PVwiYWxsXCJ8fCgobz0ocz0oYT10PT1udWxsP3ZvaWQgMDp0LmV4cGVyaW1lbnRhbCk9PW51bGw/dm9pZCAwOmFbZV0pIT1udWxsP3M6dGZbZV0pIT1udWxsP286ITEpOiExfWZ1bmN0aW9uIHJmKHQpe3ZhciBlO3JldHVybiB0LmV4cGVyaW1lbnRhbD09PVwiYWxsXCI/c24uZXhwZXJpbWVudGFsOk9iamVjdC5rZXlzKChlPXQ9PW51bGw/dm9pZCAwOnQuZXhwZXJpbWVudGFsKSE9bnVsbD9lOnt9KS5maWx0ZXIocj0+c24uZXhwZXJpbWVudGFsLmluY2x1ZGVzKHIpJiZ0LmV4cGVyaW1lbnRhbFtyXSl9ZnVuY3Rpb24gbmYodCl7aWYoMT09PXZvaWQgMCYmcmYodCkubGVuZ3RoPjApe2xldCBlPXJmKHQpLm1hcChyPT5Cbi55ZWxsb3cocikpLmpvaW4oXCIsIFwiKTtMLndhcm4oXCJleHBlcmltZW50YWwtZmxhZ3MtZW5hYmxlZFwiLFtgWW91IGhhdmUgZW5hYmxlZCBleHBlcmltZW50YWwgZmVhdHVyZXM6ICR7ZX1gLFwiRXhwZXJpbWVudGFsIGZlYXR1cmVzIGluIFRhaWx3aW5kIENTUyBhcmUgbm90IGNvdmVyZWQgYnkgc2VtdmVyLCBtYXkgaW50cm9kdWNlIGJyZWFraW5nIGNoYW5nZXMsIGFuZCBjYW4gY2hhbmdlIGF0IGFueSB0aW1lLlwiXSl9fWZ1bmN0aW9uIGFmKHQsZSl7dC53YWxrQ2xhc3NlcyhyPT57ci52YWx1ZT1lKHIudmFsdWUpLHIucmF3cyYmci5yYXdzLnZhbHVlJiYoci5yYXdzLnZhbHVlPUJlKHIucmF3cy52YWx1ZSkpfSl9ZnVuY3Rpb24gb2YodCxlKXtpZighRGUodCkpcmV0dXJuO2xldCByPXQuc2xpY2UoMSwtMSk7aWYoISFlKHIpKXJldHVybiB6KHIpfWZ1bmN0aW9uIFYwKHQsZT17fSxyKXtsZXQgbj1lW3RdO2lmKG4hPT12b2lkIDApcmV0dXJuIFJlKG4pO2lmKERlKHQpKXtsZXQgaT1vZih0LHIpO3JldHVybiBpPT09dm9pZCAwP3ZvaWQgMDpSZShpKX19ZnVuY3Rpb24gYW4odCxlPXt9LHt2YWxpZGF0ZTpyPSgpPT4hMH09e30pe3ZhciBpO2xldCBuPShpPWUudmFsdWVzKT09bnVsbD92b2lkIDA6aVt0XTtyZXR1cm4gbiE9PXZvaWQgMD9uOmUuc3VwcG9ydHNOZWdhdGl2ZVZhbHVlcyYmdC5zdGFydHNXaXRoKFwiLVwiKT9WMCh0LnNsaWNlKDEpLGUudmFsdWVzLHIpOm9mKHQscil9ZnVuY3Rpb24gRGUodCl7cmV0dXJuIHQuc3RhcnRzV2l0aChcIltcIikmJnQuZW5kc1dpdGgoXCJdXCIpfWZ1bmN0aW9uIGxmKHQpe2xldCBlPXQubGFzdEluZGV4T2YoXCIvXCIpO3JldHVybiBlPT09LTF8fGU9PT10Lmxlbmd0aC0xP1t0LHZvaWQgMF06RGUodCkmJiF0LmluY2x1ZGVzKFwiXS9bXCIpP1t0LHZvaWQgMF06W3Quc2xpY2UoMCxlKSx0LnNsaWNlKGUrMSldfWZ1bmN0aW9uIHN0KHQpe2lmKHR5cGVvZiB0PT1cInN0cmluZ1wiJiZ0LmluY2x1ZGVzKFwiPGFscGhhLXZhbHVlPlwiKSl7bGV0IGU9dDtyZXR1cm4oe29wYWNpdHlWYWx1ZTpyPTF9KT0+ZS5yZXBsYWNlKFwiPGFscGhhLXZhbHVlPlwiLHIpfXJldHVybiB0fWZ1bmN0aW9uIHVmKHQpe3JldHVybiB6KHQuc2xpY2UoMSwtMSkpfWZ1bmN0aW9uIFcwKHQsZT17fSx7dGFpbHdpbmRDb25maWc6cj17fX09e30pe3ZhciBhLHMsbyxsLHUsZjtpZigoKGE9ZS52YWx1ZXMpPT1udWxsP3ZvaWQgMDphW3RdKSE9PXZvaWQgMClyZXR1cm4gc3QoKHM9ZS52YWx1ZXMpPT1udWxsP3ZvaWQgMDpzW3RdKTtsZXRbbixpXT1sZih0KTtpZihpIT09dm9pZCAwKXtsZXQgcD0obD0obz1lLnZhbHVlcyk9PW51bGw/dm9pZCAwOm9bbl0pIT1udWxsP2w6RGUobik/bi5zbGljZSgxLC0xKTp2b2lkIDA7cmV0dXJuIHA9PT12b2lkIDA/dm9pZCAwOihwPXN0KHApLERlKGkpP3dlKHAsdWYoaSkpOigoZj0odT1yLnRoZW1lKT09bnVsbD92b2lkIDA6dS5vcGFjaXR5KT09bnVsbD92b2lkIDA6ZltpXSk9PT12b2lkIDA/dm9pZCAwOndlKHAsci50aGVtZS5vcGFjaXR5W2ldKSl9cmV0dXJuIGFuKHQsZSx7dmFsaWRhdGU6WXV9KX1mdW5jdGlvbiBCMCh0LGU9e30pe3ZhciByO3JldHVybihyPWUudmFsdWVzKT09bnVsbD92b2lkIDA6clt0XX1mdW5jdGlvbiBvZSh0KXtyZXR1cm4oZSxyKT0+YW4oZSxyLHt2YWxpZGF0ZTp0fSl9dmFyIF9zPXthbnk6YW4sY29sb3I6VzAsdXJsOm9lKENzKSxpbWFnZTpvZShIdSksbGVuZ3RoOm9lKGFyKSxwZXJjZW50YWdlOm9lKHNyKSxwb3NpdGlvbjpvZShRdSksbG9va3VwOkIwLFwiZ2VuZXJpYy1uYW1lXCI6b2UoWHUpLFwiZmFtaWx5LW5hbWVcIjpvZShKdSksbnVtYmVyOm9lKEFzKSxcImxpbmUtd2lkdGhcIjpvZShCdSksXCJhYnNvbHV0ZS1zaXplXCI6b2UoS3UpLFwicmVsYXRpdmUtc2l6ZVwiOm9lKFp1KSxzaGFkb3c6b2UoR3UpLHNpemU6b2UoZWYpfSxzZj1PYmplY3Qua2V5cyhfcyk7ZnVuY3Rpb24gRzAodCxlKXtsZXQgcj10LmluZGV4T2YoZSk7cmV0dXJuIHI9PT0tMT9bdm9pZCAwLHRdOlt0LnNsaWNlKDAsciksdC5zbGljZShyKzEpXX1mdW5jdGlvbiBUcyh0LGUscixuKXtpZihyLnZhbHVlcyYmZSBpbiByLnZhbHVlcylmb3IobGV0e3R5cGU6YX1vZiB0IT1udWxsP3Q6W10pe2xldCBzPV9zW2FdKGUscix7dGFpbHdpbmRDb25maWc6bn0pO2lmKHMhPT12b2lkIDApcmV0dXJuW3MsYSxudWxsXX1pZihEZShlKSl7bGV0IGE9ZS5zbGljZSgxLC0xKSxbcyxvXT1HMChhLFwiOlwiKTtpZighL15bXFx3LV9dKyQvZy50ZXN0KHMpKW89YTtlbHNlIGlmKHMhPT12b2lkIDAmJiFzZi5pbmNsdWRlcyhzKSlyZXR1cm5bXTtpZihvLmxlbmd0aD4wJiZzZi5pbmNsdWRlcyhzKSlyZXR1cm5bYW4oYFske299XWAscikscyxudWxsXX1sZXQgaT1Qcyh0LGUscixuKTtmb3IobGV0IGEgb2YgaSlyZXR1cm4gYTtyZXR1cm5bXX1mdW5jdGlvbipQcyh0LGUscixuKXt2YXIgbCx1O2xldCBpPUcobixcImdlbmVyYWxpemVkTW9kaWZpZXJzXCIpLFthLHNdPWxmKGUpO2lmKGkmJnIubW9kaWZpZXJzIT1udWxsJiYoci5tb2RpZmllcnM9PT1cImFueVwifHx0eXBlb2Ygci5tb2RpZmllcnM9PVwib2JqZWN0XCImJihzJiZEZShzKXx8cyBpbiByLm1vZGlmaWVycykpfHwoYT1lLHM9dm9pZCAwKSxzIT09dm9pZCAwJiZhPT09XCJcIiYmKGE9XCJERUZBVUxUXCIpLHMhPT12b2lkIDAmJnR5cGVvZiByLm1vZGlmaWVycz09XCJvYmplY3RcIil7bGV0IGY9KHU9KGw9ci5tb2RpZmllcnMpPT1udWxsP3ZvaWQgMDpsW3NdKSE9bnVsbD91Om51bGw7ZiE9PW51bGw/cz1mOkRlKHMpJiYocz11ZihzKSl9Zm9yKGxldHt0eXBlOmZ9b2YgdCE9bnVsbD90OltdKXtsZXQgcD1fc1tmXShhLHIse3RhaWx3aW5kQ29uZmlnOm59KTtwIT09dm9pZCAwJiYoeWllbGRbcCxmLHMhPW51bGw/czpudWxsXSl9fXZhciBiZT1IKHZlKCkpLGhmPUgoanIoKSk7dmFyIGZmPUgodmUoKSk7ZnVuY3Rpb24gcmUodCl7dmFyIHIsbjtsZXQgZT1mZi5kZWZhdWx0LmNsYXNzTmFtZSgpO3JldHVybiBlLnZhbHVlPXQsQmUoKG49KHI9ZT09bnVsbD92b2lkIDA6ZS5yYXdzKT09bnVsbD92b2lkIDA6ci52YWx1ZSkhPW51bGw/bjplLnZhbHVlKX12YXIgSXM9e1wiOjphZnRlclwiOltcInRlcm1pbmFsXCIsXCJqdW1wYWJsZVwiXSxcIjo6YmFja2Ryb3BcIjpbXCJ0ZXJtaW5hbFwiXSxcIjo6YmVmb3JlXCI6W1widGVybWluYWxcIixcImp1bXBhYmxlXCJdLFwiOjpjdWVcIjpbXCJ0ZXJtaW5hbFwiXSxcIjo6Y3VlLXJlZ2lvblwiOltcInRlcm1pbmFsXCJdLFwiOjpmaXJzdC1sZXR0ZXJcIjpbXCJ0ZXJtaW5hbFwiLFwianVtcGFibGVcIl0sXCI6OmZpcnN0LWxpbmVcIjpbXCJ0ZXJtaW5hbFwiLFwianVtcGFibGVcIl0sXCI6OmdyYW1tYXItZXJyb3JcIjpbXCJ0ZXJtaW5hbFwiXSxcIjo6bWFya2VyXCI6W1widGVybWluYWxcIl0sXCI6OnBhcnRcIjpbXCJ0ZXJtaW5hbFwiLFwiYWN0aW9uYWJsZVwiXSxcIjo6cGxhY2Vob2xkZXJcIjpbXCJ0ZXJtaW5hbFwiXSxcIjo6c2VsZWN0aW9uXCI6W1widGVybWluYWxcIl0sXCI6OnNsb3R0ZWRcIjpbXCJ0ZXJtaW5hbFwiXSxcIjo6c3BlbGxpbmctZXJyb3JcIjpbXCJ0ZXJtaW5hbFwiXSxcIjo6dGFyZ2V0LXRleHRcIjpbXCJ0ZXJtaW5hbFwiXSxcIjo6ZmlsZS1zZWxlY3Rvci1idXR0b25cIjpbXCJ0ZXJtaW5hbFwiLFwiYWN0aW9uYWJsZVwiXSxcIjo6LXdlYmtpdC1wcm9ncmVzcy1iYXJcIjpbXCJ0ZXJtaW5hbFwiLFwiYWN0aW9uYWJsZVwiXSxcIjo6LXdlYmtpdC1zY3JvbGxiYXJcIjpbXCJ0ZXJtaW5hbFwiLFwiYWN0aW9uYWJsZVwiXSxcIjo6LXdlYmtpdC1zY3JvbGxiYXItYnV0dG9uXCI6W1widGVybWluYWxcIixcImFjdGlvbmFibGVcIl0sXCI6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iXCI6W1widGVybWluYWxcIixcImFjdGlvbmFibGVcIl0sXCI6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrXCI6W1widGVybWluYWxcIixcImFjdGlvbmFibGVcIl0sXCI6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrLXBpZWNlXCI6W1widGVybWluYWxcIixcImFjdGlvbmFibGVcIl0sXCI6Oi13ZWJraXQtc2Nyb2xsYmFyLWNvcm5lclwiOltcInRlcm1pbmFsXCIsXCJhY3Rpb25hYmxlXCJdLFwiOjotd2Via2l0LXJlc2l6ZXJcIjpbXCJ0ZXJtaW5hbFwiLFwiYWN0aW9uYWJsZVwiXSxcIjphZnRlclwiOltcInRlcm1pbmFsXCIsXCJqdW1wYWJsZVwiXSxcIjpiZWZvcmVcIjpbXCJ0ZXJtaW5hbFwiLFwianVtcGFibGVcIl0sXCI6Zmlyc3QtbGV0dGVyXCI6W1widGVybWluYWxcIixcImp1bXBhYmxlXCJdLFwiOmZpcnN0LWxpbmVcIjpbXCJ0ZXJtaW5hbFwiLFwianVtcGFibGVcIl0sX19kZWZhdWx0X186W1wiYWN0aW9uYWJsZVwiXX07ZnVuY3Rpb24gYXQodCl7bGV0W2VdPWNmKHQpO3JldHVybiBlLmZvckVhY2goKFtyLG5dKT0+ci5yZW1vdmVDaGlsZChuKSksdC5ub2Rlcy5wdXNoKC4uLmUubWFwKChbLHJdKT0+cikpLHR9ZnVuY3Rpb24gY2YodCl7dmFyIG47bGV0IGU9W10scj1udWxsO2ZvcihsZXQgaSBvZiB0Lm5vZGVzKWlmKGkudHlwZT09PVwiY29tYmluYXRvclwiKWU9ZS5maWx0ZXIoKFssYV0pPT5ScyhhKS5pbmNsdWRlcyhcImp1bXBhYmxlXCIpKSxyPW51bGw7ZWxzZSBpZihpLnR5cGU9PT1cInBzZXVkb1wiKXtZMChpKT8ocj1pLGUucHVzaChbdCxpLG51bGxdKSk6ciYmSDAoaSxyKT9lLnB1c2goW3QsaSxyXSk6cj1udWxsO2ZvcihsZXQgYSBvZihuPWkubm9kZXMpIT1udWxsP246W10pe2xldFtzLG9dPWNmKGEpO3I9b3x8cixlLnB1c2goLi4ucyl9fXJldHVybltlLHJdfWZ1bmN0aW9uIHBmKHQpe3JldHVybiB0LnZhbHVlLnN0YXJ0c1dpdGgoXCI6OlwiKXx8SXNbdC52YWx1ZV0hPT12b2lkIDB9ZnVuY3Rpb24gWTAodCl7cmV0dXJuIHBmKHQpJiZScyh0KS5pbmNsdWRlcyhcInRlcm1pbmFsXCIpfWZ1bmN0aW9uIEgwKHQsZSl7cmV0dXJuIHQudHlwZSE9PVwicHNldWRvXCJ8fHBmKHQpPyExOlJzKGUpLmluY2x1ZGVzKFwiYWN0aW9uYWJsZVwiKX1mdW5jdGlvbiBScyh0KXt2YXIgZTtyZXR1cm4oZT1Jc1t0LnZhbHVlXSkhPW51bGw/ZTpJcy5fX2RlZmF1bHRfX312YXIgRHM9XCI6bWVyZ2VcIjtmdW5jdGlvbiBvdCh0LHtjb250ZXh0OmUsY2FuZGlkYXRlOnJ9KXt2YXIgcztsZXQgbj0ocz1lPT1udWxsP3ZvaWQgMDplLnRhaWx3aW5kQ29uZmlnLnByZWZpeCkhPW51bGw/czpcIlwiLGk9dC5tYXAobz0+e2xldCBsPSgwLGJlLmRlZmF1bHQpKCkuYXN0U3luYyhvLmZvcm1hdCk7cmV0dXJuey4uLm8sYXN0Om8uaXNBcmJpdHJhcnlWYXJpYW50P2w6aXQobixsKX19KSxhPWJlLmRlZmF1bHQucm9vdCh7bm9kZXM6W2JlLmRlZmF1bHQuc2VsZWN0b3Ioe25vZGVzOltiZS5kZWZhdWx0LmNsYXNzTmFtZSh7dmFsdWU6cmUocil9KV19KV19KTtmb3IobGV0e2FzdDpvfW9mIGkpW2Esb109SjAoYSxvKSxvLndhbGtOZXN0aW5nKGw9PmwucmVwbGFjZVdpdGgoLi4uYS5ub2Rlc1swXS5ub2RlcykpLGE9bztyZXR1cm4gYX1mdW5jdGlvbiBkZih0KXtsZXQgZT1bXTtmb3IoO3QucHJldigpJiZ0LnByZXYoKS50eXBlIT09XCJjb21iaW5hdG9yXCI7KXQ9dC5wcmV2KCk7Zm9yKDt0JiZ0LnR5cGUhPT1cImNvbWJpbmF0b3JcIjspZS5wdXNoKHQpLHQ9dC5uZXh0KCk7cmV0dXJuIGV9ZnVuY3Rpb24gUTAodCl7cmV0dXJuIHQuc29ydCgoZSxyKT0+ZS50eXBlPT09XCJ0YWdcIiYmci50eXBlPT09XCJjbGFzc1wiPy0xOmUudHlwZT09PVwiY2xhc3NcIiYmci50eXBlPT09XCJ0YWdcIj8xOmUudHlwZT09PVwiY2xhc3NcIiYmci50eXBlPT09XCJwc2V1ZG9cIiYmci52YWx1ZS5zdGFydHNXaXRoKFwiOjpcIik/LTE6ZS50eXBlPT09XCJwc2V1ZG9cIiYmZS52YWx1ZS5zdGFydHNXaXRoKFwiOjpcIikmJnIudHlwZT09PVwiY2xhc3NcIj8xOnQuaW5kZXgoZSktdC5pbmRleChyKSksdH1mdW5jdGlvbiBNcyh0LGUpe2xldCByPSExO3Qud2FsayhuPT57aWYobi50eXBlPT09XCJjbGFzc1wiJiZuLnZhbHVlPT09ZSlyZXR1cm4gcj0hMCwhMX0pLHJ8fHQucmVtb3ZlKCl9ZnVuY3Rpb24gb24odCxlLHtjb250ZXh0OnIsY2FuZGlkYXRlOm4sYmFzZTppfSl7dmFyIGYscDtsZXQgYT0ocD0oZj1yPT1udWxsP3ZvaWQgMDpyLnRhaWx3aW5kQ29uZmlnKT09bnVsbD92b2lkIDA6Zi5zZXBhcmF0b3IpIT1udWxsP3A6XCI6XCI7aT1pIT1udWxsP2k6bi5zcGxpdChuZXcgUmVnRXhwKGBcXFxcJHthfSg/IVteW10qXFxcXF0pYCkpLnBvcCgpO2xldCBzPSgwLGJlLmRlZmF1bHQpKCkuYXN0U3luYyh0KTtzLndhbGtDbGFzc2VzKGM9PntjLnJhd3MmJmMudmFsdWUuaW5jbHVkZXMoaSkmJihjLnJhd3MudmFsdWU9cmUoKDAsaGYuZGVmYXVsdCkoYy5yYXdzLnZhbHVlKSkpfSkscy5lYWNoKGM9Pk1zKGMsaSkpO2xldCBvPUFycmF5LmlzQXJyYXkoZSk/b3QoZSx7Y29udGV4dDpyLGNhbmRpZGF0ZTpufSk6ZTtpZihvPT09bnVsbClyZXR1cm4gcy50b1N0cmluZygpO2xldCBsPWJlLmRlZmF1bHQuY29tbWVudCh7dmFsdWU6XCIvKl9fc2ltcGxlX18qL1wifSksdT1iZS5kZWZhdWx0LmNvbW1lbnQoe3ZhbHVlOlwiLypfX3NpbXBsZV9fKi9cIn0pO3JldHVybiBzLndhbGtDbGFzc2VzKGM9PntpZihjLnZhbHVlIT09aSlyZXR1cm47bGV0IGQ9Yy5wYXJlbnQsaD1vLm5vZGVzWzBdLm5vZGVzO2lmKGQubm9kZXMubGVuZ3RoPT09MSl7Yy5yZXBsYWNlV2l0aCguLi5oKTtyZXR1cm59bGV0IHk9ZGYoYyk7ZC5pbnNlcnRCZWZvcmUoeVswXSxsKSxkLmluc2VydEFmdGVyKHlbeS5sZW5ndGgtMV0sdSk7Zm9yKGxldCBnIG9mIGgpZC5pbnNlcnRCZWZvcmUoeVswXSxnLmNsb25lKCkpO2MucmVtb3ZlKCkseT1kZihsKTtsZXQgbT1kLmluZGV4KGwpO2Qubm9kZXMuc3BsaWNlKG0seS5sZW5ndGgsLi4uUTAoYmUuZGVmYXVsdC5zZWxlY3Rvcih7bm9kZXM6eX0pKS5ub2RlcyksbC5yZW1vdmUoKSx1LnJlbW92ZSgpfSkscy53YWxrUHNldWRvcyhjPT57Yy52YWx1ZT09PURzJiZjLnJlcGxhY2VXaXRoKGMubm9kZXMpfSkscy5lYWNoKGM9PmF0KGMpKSxzLnRvU3RyaW5nKCl9ZnVuY3Rpb24gSjAodCxlKXtsZXQgcj1bXTtyZXR1cm4gdC53YWxrUHNldWRvcyhuPT57bi52YWx1ZT09PURzJiZyLnB1c2goe3BzZXVkbzpuLHZhbHVlOm4ubm9kZXNbMF0udG9TdHJpbmcoKX0pfSksZS53YWxrUHNldWRvcyhuPT57aWYobi52YWx1ZSE9PURzKXJldHVybjtsZXQgaT1uLm5vZGVzWzBdLnRvU3RyaW5nKCksYT1yLmZpbmQodT0+dS52YWx1ZT09PWkpO2lmKCFhKXJldHVybjtsZXQgcz1bXSxvPW4ubmV4dCgpO2Zvcig7byYmby50eXBlIT09XCJjb21iaW5hdG9yXCI7KXMucHVzaChvKSxvPW8ubmV4dCgpO2xldCBsPW87YS5wc2V1ZG8ucGFyZW50Lmluc2VydEFmdGVyKGEucHNldWRvLGJlLmRlZmF1bHQuc2VsZWN0b3Ioe25vZGVzOnMubWFwKHU9PnUuY2xvbmUoKSl9KSksbi5yZW1vdmUoKSxzLmZvckVhY2godT0+dS5yZW1vdmUoKSksbCYmbC50eXBlPT09XCJjb21iaW5hdG9yXCImJmwucmVtb3ZlKCl9KSxbdCxlXX1mdW5jdGlvbiBGcyh0KXtyZXR1cm4gQmUoYC4ke3JlKHQpfWApfWZ1bmN0aW9uIGxuKHQsZSl7cmV0dXJuIEZzKG9yKHQsZSkpfWZ1bmN0aW9uIG9yKHQsZSl7cmV0dXJuIGU9PT1cIkRFRkFVTFRcIj90OmU9PT1cIi1cInx8ZT09PVwiLURFRkFVTFRcIj9gLSR7dH1gOmUuc3RhcnRzV2l0aChcIi1cIik/YC0ke3R9JHtlfWA6ZS5zdGFydHNXaXRoKFwiL1wiKT9gJHt0fSR7ZX1gOmAke3R9LSR7ZX1gfXZhciBDZj1IKHFzKCkpLFZzPUgodmUoKSk7ZnVuY3Rpb24gQ2UodCl7cmV0dXJuW1wiZm9udFNpemVcIixcIm91dGxpbmVcIl0uaW5jbHVkZXModCk/ZT0+KHR5cGVvZiBlPT1cImZ1bmN0aW9uXCImJihlPWUoe30pKSxBcnJheS5pc0FycmF5KGUpJiYoZT1lWzBdKSxlKTp0PT09XCJmb250RmFtaWx5XCI/ZT0+e3R5cGVvZiBlPT1cImZ1bmN0aW9uXCImJihlPWUoe30pKTtsZXQgcj1BcnJheS5pc0FycmF5KGUpJiZYKGVbMV0pP2VbMF06ZTtyZXR1cm4gQXJyYXkuaXNBcnJheShyKT9yLmpvaW4oXCIsIFwiKTpyfTpbXCJib3hTaGFkb3dcIixcInRyYW5zaXRpb25Qcm9wZXJ0eVwiLFwidHJhbnNpdGlvbkR1cmF0aW9uXCIsXCJ0cmFuc2l0aW9uRGVsYXlcIixcInRyYW5zaXRpb25UaW1pbmdGdW5jdGlvblwiLFwiYmFja2dyb3VuZEltYWdlXCIsXCJiYWNrZ3JvdW5kU2l6ZVwiLFwiYmFja2dyb3VuZENvbG9yXCIsXCJjdXJzb3JcIixcImFuaW1hdGlvblwiXS5pbmNsdWRlcyh0KT9lPT4odHlwZW9mIGU9PVwiZnVuY3Rpb25cIiYmKGU9ZSh7fSkpLEFycmF5LmlzQXJyYXkoZSkmJihlPWUuam9pbihcIiwgXCIpKSxlKTpbXCJncmlkVGVtcGxhdGVDb2x1bW5zXCIsXCJncmlkVGVtcGxhdGVSb3dzXCIsXCJvYmplY3RQb3NpdGlvblwiXS5pbmNsdWRlcyh0KT9lPT4odHlwZW9mIGU9PVwiZnVuY3Rpb25cIiYmKGU9ZSh7fSkpLHR5cGVvZiBlPT1cInN0cmluZ1wiJiYoZT1SLmxpc3QuY29tbWEoZSkuam9pbihcIiBcIikpLGUpOihlLHI9e30pPT4odHlwZW9mIGU9PVwiZnVuY3Rpb25cIiYmKGU9ZShyKSksZSl9dnIoKTtrdCgpO2Z1bmN0aW9uIFQodCxlPVtbdCxbdF1dXSx7ZmlsdGVyRGVmYXVsdDpyPSExLC4uLm59PXt9KXtsZXQgaT1DZSh0KTtyZXR1cm4gZnVuY3Rpb24oe21hdGNoVXRpbGl0aWVzOmEsdGhlbWU6c30pe3ZhciBvO2ZvcihsZXQgbCBvZiBlKXtsZXQgdT1BcnJheS5pc0FycmF5KGxbMF0pP2w6W2xdO2EodS5yZWR1Y2UoKGYsW3AsY10pPT5PYmplY3QuYXNzaWduKGYse1twXTpkPT5jLnJlZHVjZSgoaCx5KT0+QXJyYXkuaXNBcnJheSh5KT9PYmplY3QuYXNzaWduKGgse1t5WzBdXTp5WzFdfSk6T2JqZWN0LmFzc2lnbihoLHtbeV06aShkKX0pLHt9KX0pLHt9KSx7Li4ubix2YWx1ZXM6cj9PYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMoKG89cyh0KSkhPW51bGw/bzp7fSkuZmlsdGVyKChbZl0pPT5mIT09XCJERUZBVUxUXCIpKTpzKHQpfSl9fX1mdW5jdGlvbiBNZSh0KXtyZXR1cm4gdD1BcnJheS5pc0FycmF5KHQpP3Q6W3RdLHQubWFwKGU9PntsZXQgcj1lLnZhbHVlcy5tYXAobj0+bi5yYXchPT12b2lkIDA/bi5yYXc6W24ubWluJiZgKG1pbi13aWR0aDogJHtuLm1pbn0pYCxuLm1heCYmYChtYXgtd2lkdGg6ICR7bi5tYXh9KWBdLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIGFuZCBcIikpO3JldHVybiBlLm5vdD9gbm90IGFsbCBhbmQgJHtyfWA6cn0pLmpvaW4oXCIsIFwiKX12YXIgWDA9bmV3IFNldChbXCJub3JtYWxcIixcInJldmVyc2VcIixcImFsdGVybmF0ZVwiLFwiYWx0ZXJuYXRlLXJldmVyc2VcIl0pLEswPW5ldyBTZXQoW1wicnVubmluZ1wiLFwicGF1c2VkXCJdKSxaMD1uZXcgU2V0KFtcIm5vbmVcIixcImZvcndhcmRzXCIsXCJiYWNrd2FyZHNcIixcImJvdGhcIl0pLGV2PW5ldyBTZXQoW1wiaW5maW5pdGVcIl0pLHR2PW5ldyBTZXQoW1wibGluZWFyXCIsXCJlYXNlXCIsXCJlYXNlLWluXCIsXCJlYXNlLW91dFwiLFwiZWFzZS1pbi1vdXRcIixcInN0ZXAtc3RhcnRcIixcInN0ZXAtZW5kXCJdKSxydj1bXCJjdWJpYy1iZXppZXJcIixcInN0ZXBzXCJdLG52PS9cXCwoPyFbXihdKlxcKSkvZyxpdj0vXFwgKyg/IVteKF0qXFwpKS9nLG1mPS9eKC0/W1xcZC5dK20/cykkLyxzdj0vXihcXGQrKSQvO2Z1bmN0aW9uICRzKHQpe3JldHVybiB0LnNwbGl0KG52KS5tYXAocj0+e2xldCBuPXIudHJpbSgpLGk9e3ZhbHVlOm59LGE9bi5zcGxpdChpdikscz1uZXcgU2V0O2ZvcihsZXQgbyBvZiBhKSFzLmhhcyhcIkRJUkVDVElPTlNcIikmJlgwLmhhcyhvKT8oaS5kaXJlY3Rpb249byxzLmFkZChcIkRJUkVDVElPTlNcIikpOiFzLmhhcyhcIlBMQVlfU1RBVEVTXCIpJiZLMC5oYXMobyk/KGkucGxheVN0YXRlPW8scy5hZGQoXCJQTEFZX1NUQVRFU1wiKSk6IXMuaGFzKFwiRklMTF9NT0RFU1wiKSYmWjAuaGFzKG8pPyhpLmZpbGxNb2RlPW8scy5hZGQoXCJGSUxMX01PREVTXCIpKTohcy5oYXMoXCJJVEVSQVRJT05fQ09VTlRTXCIpJiYoZXYuaGFzKG8pfHxzdi50ZXN0KG8pKT8oaS5pdGVyYXRpb25Db3VudD1vLHMuYWRkKFwiSVRFUkFUSU9OX0NPVU5UU1wiKSk6IXMuaGFzKFwiVElNSU5HX0ZVTkNUSU9OXCIpJiZ0di5oYXMobyl8fCFzLmhhcyhcIlRJTUlOR19GVU5DVElPTlwiKSYmcnYuc29tZShsPT5vLnN0YXJ0c1dpdGgoYCR7bH0oYCkpPyhpLnRpbWluZ0Z1bmN0aW9uPW8scy5hZGQoXCJUSU1JTkdfRlVOQ1RJT05cIikpOiFzLmhhcyhcIkRVUkFUSU9OXCIpJiZtZi50ZXN0KG8pPyhpLmR1cmF0aW9uPW8scy5hZGQoXCJEVVJBVElPTlwiKSk6IXMuaGFzKFwiREVMQVlcIikmJm1mLnRlc3Qobyk/KGkuZGVsYXk9byxzLmFkZChcIkRFTEFZXCIpKTpzLmhhcyhcIk5BTUVcIik/KGkudW5rbm93bnx8KGkudW5rbm93bj1bXSksaS51bmtub3duLnB1c2gobykpOihpLm5hbWU9byxzLmFkZChcIk5BTUVcIikpO3JldHVybiBpfSl9dmFyIGdmPXQ9Pk9iamVjdC5hc3NpZ24oe30sLi4uT2JqZWN0LmVudHJpZXModCE9bnVsbD90Ont9KS5mbGF0TWFwKChbZSxyXSk9PnR5cGVvZiByPT1cIm9iamVjdFwiP09iamVjdC5lbnRyaWVzKGdmKHIpKS5tYXAoKFtuLGldKT0+KHtbZSsobj09PVwiREVGQVVMVFwiP1wiXCI6YC0ke259YCldOml9KSk6W3tbYCR7ZX1gXTpyfV0pKSxRPWdmO2Z1bmN0aW9uIE0odCl7cmV0dXJuIHR5cGVvZiB0PT1cImZ1bmN0aW9uXCI/dCh7fSk6dH1mdW5jdGlvbiBGZSh0LGU9ITApe3JldHVybiBBcnJheS5pc0FycmF5KHQpP3QubWFwKHI9PntpZihlJiZBcnJheS5pc0FycmF5KHIpKXRocm93IG5ldyBFcnJvcihcIlRoZSB0dXBsZSBzeW50YXggaXMgbm90IHN1cHBvcnRlZCBmb3IgYHNjcmVlbnNgLlwiKTtpZih0eXBlb2Ygcj09XCJzdHJpbmdcIilyZXR1cm57bmFtZTpyLnRvU3RyaW5nKCksbm90OiExLHZhbHVlczpbe21pbjpyLG1heDp2b2lkIDB9XX07bGV0W24saV09cjtyZXR1cm4gbj1uLnRvU3RyaW5nKCksdHlwZW9mIGk9PVwic3RyaW5nXCI/e25hbWU6bixub3Q6ITEsdmFsdWVzOlt7bWluOmksbWF4OnZvaWQgMH1dfTpBcnJheS5pc0FycmF5KGkpP3tuYW1lOm4sbm90OiExLHZhbHVlczppLm1hcChhPT55ZihhKSl9OntuYW1lOm4sbm90OiExLHZhbHVlczpbeWYoaSldfX0pOkZlKE9iamVjdC5lbnRyaWVzKHQhPW51bGw/dDp7fSksITEpfWZ1bmN0aW9uIHVuKHQpe3JldHVybiB0LnZhbHVlcy5sZW5ndGghPT0xP3tyZXN1bHQ6ITEscmVhc29uOlwibXVsdGlwbGUtdmFsdWVzXCJ9OnQudmFsdWVzWzBdLnJhdyE9PXZvaWQgMD97cmVzdWx0OiExLHJlYXNvbjpcInJhdy12YWx1ZXNcIn06dC52YWx1ZXNbMF0ubWluIT09dm9pZCAwJiZ0LnZhbHVlc1swXS5tYXghPT12b2lkIDA/e3Jlc3VsdDohMSxyZWFzb246XCJtaW4tYW5kLW1heFwifTp7cmVzdWx0OiEwLHJlYXNvbjpudWxsfX1mdW5jdGlvbiB2Zih0LGUscil7bGV0IG49Zm4oZSx0KSxpPWZuKHIsdCksYT11bihuKSxzPXVuKGkpO2lmKGEucmVhc29uPT09XCJtdWx0aXBsZS12YWx1ZXNcInx8cy5yZWFzb249PT1cIm11bHRpcGxlLXZhbHVlc1wiKXRocm93IG5ldyBFcnJvcihcIkF0dGVtcHRlZCB0byBzb3J0IGEgc2NyZWVuIHdpdGggbXVsdGlwbGUgdmFsdWVzLiBUaGlzIHNob3VsZCBuZXZlciBoYXBwZW4uIFBsZWFzZSBvcGVuIGEgYnVnIHJlcG9ydC5cIik7aWYoYS5yZWFzb249PT1cInJhdy12YWx1ZXNcInx8cy5yZWFzb249PT1cInJhdy12YWx1ZXNcIil0aHJvdyBuZXcgRXJyb3IoXCJBdHRlbXB0ZWQgdG8gc29ydCBhIHNjcmVlbiB3aXRoIHJhdyB2YWx1ZXMuIFRoaXMgc2hvdWxkIG5ldmVyIGhhcHBlbi4gUGxlYXNlIG9wZW4gYSBidWcgcmVwb3J0LlwiKTtpZihhLnJlYXNvbj09PVwibWluLWFuZC1tYXhcInx8cy5yZWFzb249PT1cIm1pbi1hbmQtbWF4XCIpdGhyb3cgbmV3IEVycm9yKFwiQXR0ZW1wdGVkIHRvIHNvcnQgYSBzY3JlZW4gd2l0aCBib3RoIG1pbiBhbmQgbWF4IHZhbHVlcy4gVGhpcyBzaG91bGQgbmV2ZXIgaGFwcGVuLiBQbGVhc2Ugb3BlbiBhIGJ1ZyByZXBvcnQuXCIpO2xldHttaW46byxtYXg6bH09bi52YWx1ZXNbMF0se21pbjp1LG1heDpmfT1pLnZhbHVlc1swXTtlLm5vdCYmKFtvLGxdPVtsLG9dKSxyLm5vdCYmKFt1LGZdPVtmLHVdKSxvPW89PT12b2lkIDA/bzpwYXJzZUZsb2F0KG8pLGw9bD09PXZvaWQgMD9sOnBhcnNlRmxvYXQobCksdT11PT09dm9pZCAwP3U6cGFyc2VGbG9hdCh1KSxmPWY9PT12b2lkIDA/ZjpwYXJzZUZsb2F0KGYpO2xldFtwLGNdPXQ9PT1cIm1pblwiP1tvLHVdOltmLGxdO3JldHVybiBwLWN9ZnVuY3Rpb24gZm4odCxlKXtyZXR1cm4gdHlwZW9mIHQ9PVwib2JqZWN0XCI/dDp7bmFtZTpcImFyYml0cmFyeS1zY3JlZW5cIix2YWx1ZXM6W3tbZV06dH1dfX1mdW5jdGlvbiB5Zih7XCJtaW4td2lkdGhcIjp0LG1pbjplPXQsbWF4OnIscmF3Om59PXt9KXtyZXR1cm57bWluOmUsbWF4OnIscmF3Om59fWZ1bmN0aW9uIGNuKHQsZSl7dC53YWxrRGVjbHMocj0+e2lmKGUuaW5jbHVkZXMoci5wcm9wKSl7ci5yZW1vdmUoKTtyZXR1cm59Zm9yKGxldCBuIG9mIGUpci52YWx1ZS5pbmNsdWRlcyhgLyB2YXIoJHtufSlgKSYmKHIudmFsdWU9ci52YWx1ZS5yZXBsYWNlKGAvIHZhcigke259KWAsXCJcIikpfSl9dmFyIG5lPXtwc2V1ZG9FbGVtZW50VmFyaWFudHM6KHthZGRWYXJpYW50OnR9KT0+e3QoXCJmaXJzdC1sZXR0ZXJcIixcIiY6OmZpcnN0LWxldHRlclwiKSx0KFwiZmlyc3QtbGluZVwiLFwiJjo6Zmlyc3QtbGluZVwiKSx0KFwibWFya2VyXCIsWyh7Y29udGFpbmVyOmV9KT0+KGNuKGUsW1wiLS10dy10ZXh0LW9wYWNpdHlcIl0pLFwiJiAqOjptYXJrZXJcIiksKHtjb250YWluZXI6ZX0pPT4oY24oZSxbXCItLXR3LXRleHQtb3BhY2l0eVwiXSksXCImOjptYXJrZXJcIildKSx0KFwic2VsZWN0aW9uXCIsW1wiJiAqOjpzZWxlY3Rpb25cIixcIiY6OnNlbGVjdGlvblwiXSksdChcImZpbGVcIixcIiY6OmZpbGUtc2VsZWN0b3ItYnV0dG9uXCIpLHQoXCJwbGFjZWhvbGRlclwiLFwiJjo6cGxhY2Vob2xkZXJcIiksdChcImJhY2tkcm9wXCIsXCImOjpiYWNrZHJvcFwiKSx0KFwiYmVmb3JlXCIsKHtjb250YWluZXI6ZX0pPT4oZS53YWxrUnVsZXMocj0+e2xldCBuPSExO3Iud2Fsa0RlY2xzKFwiY29udGVudFwiLCgpPT57bj0hMH0pLG58fHIucHJlcGVuZChSLmRlY2woe3Byb3A6XCJjb250ZW50XCIsdmFsdWU6XCJ2YXIoLS10dy1jb250ZW50KVwifSkpfSksXCImOjpiZWZvcmVcIikpLHQoXCJhZnRlclwiLCh7Y29udGFpbmVyOmV9KT0+KGUud2Fsa1J1bGVzKHI9PntsZXQgbj0hMTtyLndhbGtEZWNscyhcImNvbnRlbnRcIiwoKT0+e249ITB9KSxufHxyLnByZXBlbmQoUi5kZWNsKHtwcm9wOlwiY29udGVudFwiLHZhbHVlOlwidmFyKC0tdHctY29udGVudClcIn0pKX0pLFwiJjo6YWZ0ZXJcIikpfSxwc2V1ZG9DbGFzc1ZhcmlhbnRzOih7YWRkVmFyaWFudDp0LG1hdGNoVmFyaWFudDplLGNvbmZpZzpyfSk9PntsZXQgbj1bW1wiZmlyc3RcIixcIiY6Zmlyc3QtY2hpbGRcIl0sW1wibGFzdFwiLFwiJjpsYXN0LWNoaWxkXCJdLFtcIm9ubHlcIixcIiY6b25seS1jaGlsZFwiXSxbXCJvZGRcIixcIiY6bnRoLWNoaWxkKG9kZClcIl0sW1wiZXZlblwiLFwiJjpudGgtY2hpbGQoZXZlbilcIl0sXCJmaXJzdC1vZi10eXBlXCIsXCJsYXN0LW9mLXR5cGVcIixcIm9ubHktb2YtdHlwZVwiLFtcInZpc2l0ZWRcIiwoe2NvbnRhaW5lcjphfSk9PihjbihhLFtcIi0tdHctdGV4dC1vcGFjaXR5XCIsXCItLXR3LWJvcmRlci1vcGFjaXR5XCIsXCItLXR3LWJnLW9wYWNpdHlcIl0pLFwiJjp2aXNpdGVkXCIpXSxcInRhcmdldFwiLFtcIm9wZW5cIixcIiZbb3Blbl1cIl0sXCJkZWZhdWx0XCIsXCJjaGVja2VkXCIsXCJpbmRldGVybWluYXRlXCIsXCJwbGFjZWhvbGRlci1zaG93blwiLFwiYXV0b2ZpbGxcIixcIm9wdGlvbmFsXCIsXCJyZXF1aXJlZFwiLFwidmFsaWRcIixcImludmFsaWRcIixcImluLXJhbmdlXCIsXCJvdXQtb2YtcmFuZ2VcIixcInJlYWQtb25seVwiLFwiZW1wdHlcIixcImZvY3VzLXdpdGhpblwiLFtcImhvdmVyXCIsRyhyKCksXCJob3Zlck9ubHlXaGVuU3VwcG9ydGVkXCIpP1wiQG1lZGlhIChob3ZlcjogaG92ZXIpIGFuZCAocG9pbnRlcjogZmluZSkgeyAmOmhvdmVyIH1cIjpcIiY6aG92ZXJcIl0sXCJmb2N1c1wiLFwiZm9jdXMtdmlzaWJsZVwiLFwiYWN0aXZlXCIsXCJlbmFibGVkXCIsXCJkaXNhYmxlZFwiXS5tYXAoYT0+QXJyYXkuaXNBcnJheShhKT9hOlthLGAmOiR7YX1gXSk7Zm9yKGxldFthLHNdb2Ygbil0KGEsbz0+dHlwZW9mIHM9PVwiZnVuY3Rpb25cIj9zKG8pOnMpO2xldCBpPXtncm91cDooYSx7bW9kaWZpZXI6c30pPT5zP1tgOm1lcmdlKC5ncm91cFxcXFwvJHtyZShzKX0pYCxcIiAmXCJdOltcIjptZXJnZSguZ3JvdXApXCIsXCIgJlwiXSxwZWVyOihhLHttb2RpZmllcjpzfSk9PnM/W2A6bWVyZ2UoLnBlZXJcXFxcLyR7cmUocyl9KWAsXCIgfiAmXCJdOltcIjptZXJnZSgucGVlcilcIixcIiB+ICZcIl19O2ZvcihsZXRbYSxzXW9mIE9iamVjdC5lbnRyaWVzKGkpKWUoYSwobz1cIlwiLGwpPT57bGV0IHU9eih0eXBlb2Ygbz09XCJmdW5jdGlvblwiP28obCk6byk7dS5pbmNsdWRlcyhcIiZcIil8fCh1PVwiJlwiK3UpO2xldFtmLHBdPXMoXCJcIixsKSxjPW51bGwsZD1udWxsLGg9MDtmb3IobGV0IHk9MDt5PHUubGVuZ3RoOysreSl7bGV0IG09dVt5XTttPT09XCImXCI/Yz15Om09PT1cIidcInx8bT09PSdcIic/aCs9MTpjIT09bnVsbCYmbT09PVwiIFwiJiYhaCYmKGQ9eSl9cmV0dXJuIGMhPT1udWxsJiZkPT09bnVsbCYmKGQ9dS5sZW5ndGgpLHUuc2xpY2UoMCxjKStmK3Uuc2xpY2UoYysxLGQpK3ArdS5zbGljZShkKX0se3ZhbHVlczpPYmplY3QuZnJvbUVudHJpZXMobil9KX0sZGlyZWN0aW9uVmFyaWFudHM6KHthZGRWYXJpYW50OnR9KT0+e3QoXCJsdHJcIiwnOmlzKFtkaXI9XCJsdHJcIl0gJiknKSx0KFwicnRsXCIsJzppcyhbZGlyPVwicnRsXCJdICYpJyl9LHJlZHVjZWRNb3Rpb25WYXJpYW50czooe2FkZFZhcmlhbnQ6dH0pPT57dChcIm1vdGlvbi1zYWZlXCIsXCJAbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IG5vLXByZWZlcmVuY2UpXCIpLHQoXCJtb3Rpb24tcmVkdWNlXCIsXCJAbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSlcIil9LGRhcmtWYXJpYW50czooe2NvbmZpZzp0LGFkZFZhcmlhbnQ6ZX0pPT57bGV0W3Isbj1cIi5kYXJrXCJdPVtdLmNvbmNhdCh0KFwiZGFya01vZGVcIixcIm1lZGlhXCIpKTtyPT09ITEmJihyPVwibWVkaWFcIixMLndhcm4oXCJkYXJrbW9kZS1mYWxzZVwiLFtcIlRoZSBgZGFya01vZGVgIG9wdGlvbiBpbiB5b3VyIFRhaWx3aW5kIENTUyBjb25maWd1cmF0aW9uIGlzIHNldCB0byBgZmFsc2VgLCB3aGljaCBub3cgYmVoYXZlcyB0aGUgc2FtZSBhcyBgbWVkaWFgLlwiLFwiQ2hhbmdlIGBkYXJrTW9kZWAgdG8gYG1lZGlhYCBvciByZW1vdmUgaXQgZW50aXJlbHkuXCIsXCJodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3VwZ3JhZGUtZ3VpZGUjcmVtb3ZlLWRhcmstbW9kZS1jb25maWd1cmF0aW9uXCJdKSkscj09PVwiY2xhc3NcIj9lKFwiZGFya1wiLGA6aXMoJHtufSAmKWApOnI9PT1cIm1lZGlhXCImJmUoXCJkYXJrXCIsXCJAbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiKX0scHJpbnRWYXJpYW50Oih7YWRkVmFyaWFudDp0fSk9Pnt0KFwicHJpbnRcIixcIkBtZWRpYSBwcmludFwiKX0sc2NyZWVuVmFyaWFudHM6KHt0aGVtZTp0LGFkZFZhcmlhbnQ6ZSxtYXRjaFZhcmlhbnQ6cn0pPT57dmFyIGc7bGV0IG49KGc9dChcInNjcmVlbnNcIikpIT1udWxsP2c6e30saT1PYmplY3QudmFsdWVzKG4pLmV2ZXJ5KHc9PnR5cGVvZiB3PT1cInN0cmluZ1wiKSxhPUZlKHQoXCJzY3JlZW5zXCIpKSxzPW5ldyBTZXQoW10pO2Z1bmN0aW9uIG8odyl7dmFyIGIsdjtyZXR1cm4odj0oYj13Lm1hdGNoKC8oXFxEKykkLykpPT1udWxsP3ZvaWQgMDpiWzFdKSE9bnVsbD92OlwiKG5vbmUpXCJ9ZnVuY3Rpb24gbCh3KXt3IT09dm9pZCAwJiZzLmFkZChvKHcpKX1mdW5jdGlvbiB1KHcpe3JldHVybiBsKHcpLHMuc2l6ZT09PTF9Zm9yKGxldCB3IG9mIGEpZm9yKGxldCBiIG9mIHcudmFsdWVzKWwoYi5taW4pLGwoYi5tYXgpO2xldCBmPXMuc2l6ZTw9MTtmdW5jdGlvbiBwKHcpe3JldHVybiBPYmplY3QuZnJvbUVudHJpZXMoYS5maWx0ZXIoYj0+dW4oYikucmVzdWx0KS5tYXAoYj0+e2xldHttaW46dixtYXg6T309Yi52YWx1ZXNbMF07aWYodz09PVwibWluXCImJnYhPT12b2lkIDApcmV0dXJuIGI7aWYodz09PVwibWluXCImJk8hPT12b2lkIDApcmV0dXJuey4uLmIsbm90OiFiLm5vdH07aWYodz09PVwibWF4XCImJk8hPT12b2lkIDApcmV0dXJuIGI7aWYodz09PVwibWF4XCImJnYhPT12b2lkIDApcmV0dXJuey4uLmIsbm90OiFiLm5vdH19KS5tYXAoYj0+W2IubmFtZSxiXSkpfWZ1bmN0aW9uIGModyl7cmV0dXJuKGIsdik9PnZmKHcsYi52YWx1ZSx2LnZhbHVlKX1sZXQgZD1jKFwibWF4XCIpLGg9YyhcIm1pblwiKTtmdW5jdGlvbiB5KHcpe3JldHVybiBiPT57aWYoaSlpZihmKXtpZih0eXBlb2YgYj09XCJzdHJpbmdcIiYmIXUoYikpcmV0dXJuIEwud2FybihcIm1pbm1heC1oYXZlLW1peGVkLXVuaXRzXCIsW1wiVGhlIGBtaW4tKmAgYW5kIGBtYXgtKmAgdmFyaWFudHMgYXJlIG5vdCBzdXBwb3J0ZWQgd2l0aCBhIGBzY3JlZW5zYCBjb25maWd1cmF0aW9uIGNvbnRhaW5pbmcgbWl4ZWQgdW5pdHMuXCJdKSxbXX1lbHNlIHJldHVybiBMLndhcm4oXCJtaXhlZC1zY3JlZW4tdW5pdHNcIixbXCJUaGUgYG1pbi0qYCBhbmQgYG1heC0qYCB2YXJpYW50cyBhcmUgbm90IHN1cHBvcnRlZCB3aXRoIGEgYHNjcmVlbnNgIGNvbmZpZ3VyYXRpb24gY29udGFpbmluZyBtaXhlZCB1bml0cy5cIl0pLFtdO2Vsc2UgcmV0dXJuIEwud2FybihcImNvbXBsZXgtc2NyZWVuLWNvbmZpZ1wiLFtcIlRoZSBgbWluLSpgIGFuZCBgbWF4LSpgIHZhcmlhbnRzIGFyZSBub3Qgc3VwcG9ydGVkIHdpdGggYSBgc2NyZWVuc2AgY29uZmlndXJhdGlvbiBjb250YWluaW5nIG9iamVjdHMuXCJdKSxbXTtyZXR1cm5bYEBtZWRpYSAke01lKGZuKGIsdykpfWBdfX1yKFwibWF4XCIseShcIm1heFwiKSx7c29ydDpkLHZhbHVlczppP3AoXCJtYXhcIik6e319KTtsZXQgbT1cIm1pbi1zY3JlZW5zXCI7Zm9yKGxldCB3IG9mIGEpZSh3Lm5hbWUsYEBtZWRpYSAke01lKHcpfWAse2lkOm0sc29ydDppJiZmP2g6dm9pZCAwLHZhbHVlOnd9KTtyKFwibWluXCIseShcIm1pblwiKSx7aWQ6bSxzb3J0Omh9KX0sc3VwcG9ydHNWYXJpYW50czooe21hdGNoVmFyaWFudDp0LHRoZW1lOmV9KT0+e3ZhciByO3QoXCJzdXBwb3J0c1wiLChuPVwiXCIpPT57bGV0IGk9eihuKSxhPS9eXFx3KlxccypcXCgvLnRlc3QoaSk7cmV0dXJuIGk9YT9pLnJlcGxhY2UoL1xcYihhbmR8b3J8bm90KVxcYi9nLFwiICQxIFwiKTppLGE/YEBzdXBwb3J0cyAke2l9YDooaS5pbmNsdWRlcyhcIjpcIil8fChpPWAke2l9OiB2YXIoLS10dylgKSxpLnN0YXJ0c1dpdGgoXCIoXCIpJiZpLmVuZHNXaXRoKFwiKVwiKXx8KGk9YCgke2l9KWApLGBAc3VwcG9ydHMgJHtpfWApfSx7dmFsdWVzOihyPWUoXCJzdXBwb3J0c1wiKSkhPW51bGw/cjp7fX0pfSxhcmlhVmFyaWFudHM6KHttYXRjaFZhcmlhbnQ6dCx0aGVtZTplfSk9Pnt2YXIgcixuLGk7dChcImFyaWFcIixhPT5gJlthcmlhLSR7eihhKX1dYCx7dmFsdWVzOihyPWUoXCJhcmlhXCIpKSE9bnVsbD9yOnt9fSksdChcImdyb3VwLWFyaWFcIiwoYSx7bW9kaWZpZXI6c30pPT5zP2A6bWVyZ2UoLmdyb3VwXFxcXC8ke3N9KVthcmlhLSR7eihhKX1dICZgOmA6bWVyZ2UoLmdyb3VwKVthcmlhLSR7eihhKX1dICZgLHt2YWx1ZXM6KG49ZShcImFyaWFcIikpIT1udWxsP246e319KSx0KFwicGVlci1hcmlhXCIsKGEse21vZGlmaWVyOnN9KT0+cz9gOm1lcmdlKC5wZWVyXFxcXC8ke3N9KVthcmlhLSR7eihhKX1dIH4gJmA6YDptZXJnZSgucGVlcilbYXJpYS0ke3ooYSl9XSB+ICZgLHt2YWx1ZXM6KGk9ZShcImFyaWFcIikpIT1udWxsP2k6e319KX0sZGF0YVZhcmlhbnRzOih7bWF0Y2hWYXJpYW50OnQsdGhlbWU6ZX0pPT57dmFyIHIsbixpO3QoXCJkYXRhXCIsYT0+YCZbZGF0YS0ke3ooYSl9XWAse3ZhbHVlczoocj1lKFwiZGF0YVwiKSkhPW51bGw/cjp7fX0pLHQoXCJncm91cC1kYXRhXCIsKGEse21vZGlmaWVyOnN9KT0+cz9gOm1lcmdlKC5ncm91cFxcXFwvJHtzfSlbZGF0YS0ke3ooYSl9XSAmYDpgOm1lcmdlKC5ncm91cClbZGF0YS0ke3ooYSl9XSAmYCx7dmFsdWVzOihuPWUoXCJkYXRhXCIpKSE9bnVsbD9uOnt9fSksdChcInBlZXItZGF0YVwiLChhLHttb2RpZmllcjpzfSk9PnM/YDptZXJnZSgucGVlclxcXFwvJHtzfSlbZGF0YS0ke3ooYSl9XSB+ICZgOmA6bWVyZ2UoLnBlZXIpW2RhdGEtJHt6KGEpfV0gfiAmYCx7dmFsdWVzOihpPWUoXCJkYXRhXCIpKSE9bnVsbD9pOnt9fSl9LG9yaWVudGF0aW9uVmFyaWFudHM6KHthZGRWYXJpYW50OnR9KT0+e3QoXCJwb3J0cmFpdFwiLFwiQG1lZGlhIChvcmllbnRhdGlvbjogcG9ydHJhaXQpXCIpLHQoXCJsYW5kc2NhcGVcIixcIkBtZWRpYSAob3JpZW50YXRpb246IGxhbmRzY2FwZSlcIil9LHByZWZlcnNDb250cmFzdFZhcmlhbnRzOih7YWRkVmFyaWFudDp0fSk9Pnt0KFwiY29udHJhc3QtbW9yZVwiLFwiQG1lZGlhIChwcmVmZXJzLWNvbnRyYXN0OiBtb3JlKVwiKSx0KFwiY29udHJhc3QtbGVzc1wiLFwiQG1lZGlhIChwcmVmZXJzLWNvbnRyYXN0OiBsZXNzKVwiKX19LGhlPVtcInRyYW5zbGF0ZSh2YXIoLS10dy10cmFuc2xhdGUteCksIHZhcigtLXR3LXRyYW5zbGF0ZS15KSlcIixcInJvdGF0ZSh2YXIoLS10dy1yb3RhdGUpKVwiLFwic2tld1godmFyKC0tdHctc2tldy14KSlcIixcInNrZXdZKHZhcigtLXR3LXNrZXcteSkpXCIsXCJzY2FsZVgodmFyKC0tdHctc2NhbGUteCkpXCIsXCJzY2FsZVkodmFyKC0tdHctc2NhbGUteSkpXCJdLmpvaW4oXCIgXCIpLHhlPVtcInZhcigtLXR3LWJsdXIpXCIsXCJ2YXIoLS10dy1icmlnaHRuZXNzKVwiLFwidmFyKC0tdHctY29udHJhc3QpXCIsXCJ2YXIoLS10dy1ncmF5c2NhbGUpXCIsXCJ2YXIoLS10dy1odWUtcm90YXRlKVwiLFwidmFyKC0tdHctaW52ZXJ0KVwiLFwidmFyKC0tdHctc2F0dXJhdGUpXCIsXCJ2YXIoLS10dy1zZXBpYSlcIixcInZhcigtLXR3LWRyb3Atc2hhZG93KVwiXS5qb2luKFwiIFwiKSxTZT1bXCJ2YXIoLS10dy1iYWNrZHJvcC1ibHVyKVwiLFwidmFyKC0tdHctYmFja2Ryb3AtYnJpZ2h0bmVzcylcIixcInZhcigtLXR3LWJhY2tkcm9wLWNvbnRyYXN0KVwiLFwidmFyKC0tdHctYmFja2Ryb3AtZ3JheXNjYWxlKVwiLFwidmFyKC0tdHctYmFja2Ryb3AtaHVlLXJvdGF0ZSlcIixcInZhcigtLXR3LWJhY2tkcm9wLWludmVydClcIixcInZhcigtLXR3LWJhY2tkcm9wLW9wYWNpdHkpXCIsXCJ2YXIoLS10dy1iYWNrZHJvcC1zYXR1cmF0ZSlcIixcInZhcigtLXR3LWJhY2tkcm9wLXNlcGlhKVwiXS5qb2luKFwiIFwiKSx3Zj17cHJlZmxpZ2h0Oih7YWRkQmFzZTp0fSk9PntsZXQgZT1SLnBhcnNlKGh0LnJlYWRGaWxlU3luYyhLbihcIi9cIixcIi4vY3NzL3ByZWZsaWdodC5jc3NcIiksXCJ1dGY4XCIpKTt0KFtSLmNvbW1lbnQoe3RleHQ6YCEgdGFpbHdpbmRjc3MgdiR7JGF9IHwgTUlUIExpY2Vuc2UgfCBodHRwczovL3RhaWx3aW5kY3NzLmNvbWB9KSwuLi5lLm5vZGVzXSl9LGNvbnRhaW5lcjooKCk9PntmdW5jdGlvbiB0KHI9W10pe3JldHVybiByLmZsYXRNYXAobj0+bi52YWx1ZXMubWFwKGk9PmkubWluKSkuZmlsdGVyKG49Pm4hPT12b2lkIDApfWZ1bmN0aW9uIGUocixuLGkpe2lmKHR5cGVvZiBpPlwidVwiKXJldHVybltdO2lmKCEodHlwZW9mIGk9PVwib2JqZWN0XCImJmkhPT1udWxsKSlyZXR1cm5be3NjcmVlbjpcIkRFRkFVTFRcIixtaW5XaWR0aDowLHBhZGRpbmc6aX1dO2xldCBhPVtdO2kuREVGQVVMVCYmYS5wdXNoKHtzY3JlZW46XCJERUZBVUxUXCIsbWluV2lkdGg6MCxwYWRkaW5nOmkuREVGQVVMVH0pO2ZvcihsZXQgcyBvZiByKWZvcihsZXQgbyBvZiBuKWZvcihsZXR7bWluOmx9b2Ygby52YWx1ZXMpbD09PXMmJmEucHVzaCh7bWluV2lkdGg6cyxwYWRkaW5nOmlbby5uYW1lXX0pO3JldHVybiBhfXJldHVybiBmdW5jdGlvbih7YWRkQ29tcG9uZW50czpyLHRoZW1lOm59KXtsZXQgaT1GZShuKFwiY29udGFpbmVyLnNjcmVlbnNcIixuKFwic2NyZWVuc1wiKSkpLGE9dChpKSxzPWUoYSxpLG4oXCJjb250YWluZXIucGFkZGluZ1wiKSksbz11PT57bGV0IGY9cy5maW5kKHA9PnAubWluV2lkdGg9PT11KTtyZXR1cm4gZj97cGFkZGluZ1JpZ2h0OmYucGFkZGluZyxwYWRkaW5nTGVmdDpmLnBhZGRpbmd9Ont9fSxsPUFycmF5LmZyb20obmV3IFNldChhLnNsaWNlKCkuc29ydCgodSxmKT0+cGFyc2VJbnQodSktcGFyc2VJbnQoZikpKSkubWFwKHU9Pih7W2BAbWVkaWEgKG1pbi13aWR0aDogJHt1fSlgXTp7XCIuY29udGFpbmVyXCI6e1wibWF4LXdpZHRoXCI6dSwuLi5vKHUpfX19KSk7cihbe1wiLmNvbnRhaW5lclwiOk9iamVjdC5hc3NpZ24oe3dpZHRoOlwiMTAwJVwifSxuKFwiY29udGFpbmVyLmNlbnRlclwiLCExKT97bWFyZ2luUmlnaHQ6XCJhdXRvXCIsbWFyZ2luTGVmdDpcImF1dG9cIn06e30sbygwKSl9LC4uLmxdKX19KSgpLGFjY2Vzc2liaWxpdHk6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuc3Itb25seVwiOntwb3NpdGlvbjpcImFic29sdXRlXCIsd2lkdGg6XCIxcHhcIixoZWlnaHQ6XCIxcHhcIixwYWRkaW5nOlwiMFwiLG1hcmdpbjpcIi0xcHhcIixvdmVyZmxvdzpcImhpZGRlblwiLGNsaXA6XCJyZWN0KDAsIDAsIDAsIDApXCIsd2hpdGVTcGFjZTpcIm5vd3JhcFwiLGJvcmRlcldpZHRoOlwiMFwifSxcIi5ub3Qtc3Itb25seVwiOntwb3NpdGlvbjpcInN0YXRpY1wiLHdpZHRoOlwiYXV0b1wiLGhlaWdodDpcImF1dG9cIixwYWRkaW5nOlwiMFwiLG1hcmdpbjpcIjBcIixvdmVyZmxvdzpcInZpc2libGVcIixjbGlwOlwiYXV0b1wiLHdoaXRlU3BhY2U6XCJub3JtYWxcIn19KX0scG9pbnRlckV2ZW50czooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi5wb2ludGVyLWV2ZW50cy1ub25lXCI6e1wicG9pbnRlci1ldmVudHNcIjpcIm5vbmVcIn0sXCIucG9pbnRlci1ldmVudHMtYXV0b1wiOntcInBvaW50ZXItZXZlbnRzXCI6XCJhdXRvXCJ9fSl9LHZpc2liaWxpdHk6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIudmlzaWJsZVwiOnt2aXNpYmlsaXR5OlwidmlzaWJsZVwifSxcIi5pbnZpc2libGVcIjp7dmlzaWJpbGl0eTpcImhpZGRlblwifSxcIi5jb2xsYXBzZVwiOnt2aXNpYmlsaXR5OlwiY29sbGFwc2VcIn19KX0scG9zaXRpb246KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuc3RhdGljXCI6e3Bvc2l0aW9uOlwic3RhdGljXCJ9LFwiLmZpeGVkXCI6e3Bvc2l0aW9uOlwiZml4ZWRcIn0sXCIuYWJzb2x1dGVcIjp7cG9zaXRpb246XCJhYnNvbHV0ZVwifSxcIi5yZWxhdGl2ZVwiOntwb3NpdGlvbjpcInJlbGF0aXZlXCJ9LFwiLnN0aWNreVwiOntwb3NpdGlvbjpcInN0aWNreVwifX0pfSxpbnNldDpUKFwiaW5zZXRcIixbW1wiaW5zZXRcIixbXCJpbnNldFwiXV0sW1tcImluc2V0LXhcIixbXCJsZWZ0XCIsXCJyaWdodFwiXV0sW1wiaW5zZXQteVwiLFtcInRvcFwiLFwiYm90dG9tXCJdXV0sW1tcInN0YXJ0XCIsW1wiaW5zZXQtaW5saW5lLXN0YXJ0XCJdXSxbXCJlbmRcIixbXCJpbnNldC1pbmxpbmUtZW5kXCJdXSxbXCJ0b3BcIixbXCJ0b3BcIl1dLFtcInJpZ2h0XCIsW1wicmlnaHRcIl1dLFtcImJvdHRvbVwiLFtcImJvdHRvbVwiXV0sW1wibGVmdFwiLFtcImxlZnRcIl1dXV0se3N1cHBvcnRzTmVnYXRpdmVWYWx1ZXM6ITB9KSxpc29sYXRpb246KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuaXNvbGF0ZVwiOntpc29sYXRpb246XCJpc29sYXRlXCJ9LFwiLmlzb2xhdGlvbi1hdXRvXCI6e2lzb2xhdGlvbjpcImF1dG9cIn19KX0sekluZGV4OlQoXCJ6SW5kZXhcIixbW1wielwiLFtcInpJbmRleFwiXV1dLHtzdXBwb3J0c05lZ2F0aXZlVmFsdWVzOiEwfSksb3JkZXI6VChcIm9yZGVyXCIsdm9pZCAwLHtzdXBwb3J0c05lZ2F0aXZlVmFsdWVzOiEwfSksZ3JpZENvbHVtbjpUKFwiZ3JpZENvbHVtblwiLFtbXCJjb2xcIixbXCJncmlkQ29sdW1uXCJdXV0pLGdyaWRDb2x1bW5TdGFydDpUKFwiZ3JpZENvbHVtblN0YXJ0XCIsW1tcImNvbC1zdGFydFwiLFtcImdyaWRDb2x1bW5TdGFydFwiXV1dKSxncmlkQ29sdW1uRW5kOlQoXCJncmlkQ29sdW1uRW5kXCIsW1tcImNvbC1lbmRcIixbXCJncmlkQ29sdW1uRW5kXCJdXV0pLGdyaWRSb3c6VChcImdyaWRSb3dcIixbW1wicm93XCIsW1wiZ3JpZFJvd1wiXV1dKSxncmlkUm93U3RhcnQ6VChcImdyaWRSb3dTdGFydFwiLFtbXCJyb3ctc3RhcnRcIixbXCJncmlkUm93U3RhcnRcIl1dXSksZ3JpZFJvd0VuZDpUKFwiZ3JpZFJvd0VuZFwiLFtbXCJyb3ctZW5kXCIsW1wiZ3JpZFJvd0VuZFwiXV1dKSxmbG9hdDooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi5mbG9hdC1yaWdodFwiOntmbG9hdDpcInJpZ2h0XCJ9LFwiLmZsb2F0LWxlZnRcIjp7ZmxvYXQ6XCJsZWZ0XCJ9LFwiLmZsb2F0LW5vbmVcIjp7ZmxvYXQ6XCJub25lXCJ9fSl9LGNsZWFyOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLmNsZWFyLWxlZnRcIjp7Y2xlYXI6XCJsZWZ0XCJ9LFwiLmNsZWFyLXJpZ2h0XCI6e2NsZWFyOlwicmlnaHRcIn0sXCIuY2xlYXItYm90aFwiOntjbGVhcjpcImJvdGhcIn0sXCIuY2xlYXItbm9uZVwiOntjbGVhcjpcIm5vbmVcIn19KX0sbWFyZ2luOlQoXCJtYXJnaW5cIixbW1wibVwiLFtcIm1hcmdpblwiXV0sW1tcIm14XCIsW1wibWFyZ2luLWxlZnRcIixcIm1hcmdpbi1yaWdodFwiXV0sW1wibXlcIixbXCJtYXJnaW4tdG9wXCIsXCJtYXJnaW4tYm90dG9tXCJdXV0sW1tcIm1zXCIsW1wibWFyZ2luLWlubGluZS1zdGFydFwiXV0sW1wibWVcIixbXCJtYXJnaW4taW5saW5lLWVuZFwiXV0sW1wibXRcIixbXCJtYXJnaW4tdG9wXCJdXSxbXCJtclwiLFtcIm1hcmdpbi1yaWdodFwiXV0sW1wibWJcIixbXCJtYXJnaW4tYm90dG9tXCJdXSxbXCJtbFwiLFtcIm1hcmdpbi1sZWZ0XCJdXV1dLHtzdXBwb3J0c05lZ2F0aXZlVmFsdWVzOiEwfSksYm94U2l6aW5nOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLmJveC1ib3JkZXJcIjp7XCJib3gtc2l6aW5nXCI6XCJib3JkZXItYm94XCJ9LFwiLmJveC1jb250ZW50XCI6e1wiYm94LXNpemluZ1wiOlwiY29udGVudC1ib3hcIn19KX0sbGluZUNsYW1wOih7bWF0Y2hVdGlsaXRpZXM6dCxhZGRVdGlsaXRpZXM6ZSx0aGVtZTpyfSk9Pnt0KHtcImxpbmUtY2xhbXBcIjpuPT4oe292ZXJmbG93OlwiaGlkZGVuXCIsZGlzcGxheTpcIi13ZWJraXQtYm94XCIsXCItd2Via2l0LWJveC1vcmllbnRcIjpcInZlcnRpY2FsXCIsXCItd2Via2l0LWxpbmUtY2xhbXBcIjpgJHtufWB9KX0se3ZhbHVlczpyKFwibGluZUNsYW1wXCIpfSksZSh7XCIubGluZS1jbGFtcC1ub25lXCI6e292ZXJmbG93OlwidmlzaWJsZVwiLGRpc3BsYXk6XCJibG9ja1wiLFwiLXdlYmtpdC1ib3gtb3JpZW50XCI6XCJob3Jpem9udGFsXCIsXCItd2Via2l0LWxpbmUtY2xhbXBcIjpcIm5vbmVcIn19KX0sZGlzcGxheTooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi5ibG9ja1wiOntkaXNwbGF5OlwiYmxvY2tcIn0sXCIuaW5saW5lLWJsb2NrXCI6e2Rpc3BsYXk6XCJpbmxpbmUtYmxvY2tcIn0sXCIuaW5saW5lXCI6e2Rpc3BsYXk6XCJpbmxpbmVcIn0sXCIuZmxleFwiOntkaXNwbGF5OlwiZmxleFwifSxcIi5pbmxpbmUtZmxleFwiOntkaXNwbGF5OlwiaW5saW5lLWZsZXhcIn0sXCIudGFibGVcIjp7ZGlzcGxheTpcInRhYmxlXCJ9LFwiLmlubGluZS10YWJsZVwiOntkaXNwbGF5OlwiaW5saW5lLXRhYmxlXCJ9LFwiLnRhYmxlLWNhcHRpb25cIjp7ZGlzcGxheTpcInRhYmxlLWNhcHRpb25cIn0sXCIudGFibGUtY2VsbFwiOntkaXNwbGF5OlwidGFibGUtY2VsbFwifSxcIi50YWJsZS1jb2x1bW5cIjp7ZGlzcGxheTpcInRhYmxlLWNvbHVtblwifSxcIi50YWJsZS1jb2x1bW4tZ3JvdXBcIjp7ZGlzcGxheTpcInRhYmxlLWNvbHVtbi1ncm91cFwifSxcIi50YWJsZS1mb290ZXItZ3JvdXBcIjp7ZGlzcGxheTpcInRhYmxlLWZvb3Rlci1ncm91cFwifSxcIi50YWJsZS1oZWFkZXItZ3JvdXBcIjp7ZGlzcGxheTpcInRhYmxlLWhlYWRlci1ncm91cFwifSxcIi50YWJsZS1yb3ctZ3JvdXBcIjp7ZGlzcGxheTpcInRhYmxlLXJvdy1ncm91cFwifSxcIi50YWJsZS1yb3dcIjp7ZGlzcGxheTpcInRhYmxlLXJvd1wifSxcIi5mbG93LXJvb3RcIjp7ZGlzcGxheTpcImZsb3ctcm9vdFwifSxcIi5ncmlkXCI6e2Rpc3BsYXk6XCJncmlkXCJ9LFwiLmlubGluZS1ncmlkXCI6e2Rpc3BsYXk6XCJpbmxpbmUtZ3JpZFwifSxcIi5jb250ZW50c1wiOntkaXNwbGF5OlwiY29udGVudHNcIn0sXCIubGlzdC1pdGVtXCI6e2Rpc3BsYXk6XCJsaXN0LWl0ZW1cIn0sXCIuaGlkZGVuXCI6e2Rpc3BsYXk6XCJub25lXCJ9fSl9LGFzcGVjdFJhdGlvOlQoXCJhc3BlY3RSYXRpb1wiLFtbXCJhc3BlY3RcIixbXCJhc3BlY3QtcmF0aW9cIl1dXSksaGVpZ2h0OlQoXCJoZWlnaHRcIixbW1wiaFwiLFtcImhlaWdodFwiXV1dKSxtYXhIZWlnaHQ6VChcIm1heEhlaWdodFwiLFtbXCJtYXgtaFwiLFtcIm1heEhlaWdodFwiXV1dKSxtaW5IZWlnaHQ6VChcIm1pbkhlaWdodFwiLFtbXCJtaW4taFwiLFtcIm1pbkhlaWdodFwiXV1dKSx3aWR0aDpUKFwid2lkdGhcIixbW1wid1wiLFtcIndpZHRoXCJdXV0pLG1pbldpZHRoOlQoXCJtaW5XaWR0aFwiLFtbXCJtaW4td1wiLFtcIm1pbldpZHRoXCJdXV0pLG1heFdpZHRoOlQoXCJtYXhXaWR0aFwiLFtbXCJtYXgtd1wiLFtcIm1heFdpZHRoXCJdXV0pLGZsZXg6VChcImZsZXhcIiksZmxleFNocmluazpUKFwiZmxleFNocmlua1wiLFtbXCJmbGV4LXNocmlua1wiLFtcImZsZXgtc2hyaW5rXCJdXSxbXCJzaHJpbmtcIixbXCJmbGV4LXNocmlua1wiXV1dKSxmbGV4R3JvdzpUKFwiZmxleEdyb3dcIixbW1wiZmxleC1ncm93XCIsW1wiZmxleC1ncm93XCJdXSxbXCJncm93XCIsW1wiZmxleC1ncm93XCJdXV0pLGZsZXhCYXNpczpUKFwiZmxleEJhc2lzXCIsW1tcImJhc2lzXCIsW1wiZmxleC1iYXNpc1wiXV1dKSx0YWJsZUxheW91dDooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi50YWJsZS1hdXRvXCI6e1widGFibGUtbGF5b3V0XCI6XCJhdXRvXCJ9LFwiLnRhYmxlLWZpeGVkXCI6e1widGFibGUtbGF5b3V0XCI6XCJmaXhlZFwifX0pfSxjYXB0aW9uU2lkZTooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi5jYXB0aW9uLXRvcFwiOntcImNhcHRpb24tc2lkZVwiOlwidG9wXCJ9LFwiLmNhcHRpb24tYm90dG9tXCI6e1wiY2FwdGlvbi1zaWRlXCI6XCJib3R0b21cIn19KX0sYm9yZGVyQ29sbGFwc2U6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuYm9yZGVyLWNvbGxhcHNlXCI6e1wiYm9yZGVyLWNvbGxhcHNlXCI6XCJjb2xsYXBzZVwifSxcIi5ib3JkZXItc2VwYXJhdGVcIjp7XCJib3JkZXItY29sbGFwc2VcIjpcInNlcGFyYXRlXCJ9fSl9LGJvcmRlclNwYWNpbmc6KHthZGREZWZhdWx0czp0LG1hdGNoVXRpbGl0aWVzOmUsdGhlbWU6cn0pPT57dChcImJvcmRlci1zcGFjaW5nXCIse1wiLS10dy1ib3JkZXItc3BhY2luZy14XCI6MCxcIi0tdHctYm9yZGVyLXNwYWNpbmcteVwiOjB9KSxlKHtcImJvcmRlci1zcGFjaW5nXCI6bj0+KHtcIi0tdHctYm9yZGVyLXNwYWNpbmcteFwiOm4sXCItLXR3LWJvcmRlci1zcGFjaW5nLXlcIjpuLFwiQGRlZmF1bHRzIGJvcmRlci1zcGFjaW5nXCI6e30sXCJib3JkZXItc3BhY2luZ1wiOlwidmFyKC0tdHctYm9yZGVyLXNwYWNpbmcteCkgdmFyKC0tdHctYm9yZGVyLXNwYWNpbmcteSlcIn0pLFwiYm9yZGVyLXNwYWNpbmcteFwiOm49Pih7XCItLXR3LWJvcmRlci1zcGFjaW5nLXhcIjpuLFwiQGRlZmF1bHRzIGJvcmRlci1zcGFjaW5nXCI6e30sXCJib3JkZXItc3BhY2luZ1wiOlwidmFyKC0tdHctYm9yZGVyLXNwYWNpbmcteCkgdmFyKC0tdHctYm9yZGVyLXNwYWNpbmcteSlcIn0pLFwiYm9yZGVyLXNwYWNpbmcteVwiOm49Pih7XCItLXR3LWJvcmRlci1zcGFjaW5nLXlcIjpuLFwiQGRlZmF1bHRzIGJvcmRlci1zcGFjaW5nXCI6e30sXCJib3JkZXItc3BhY2luZ1wiOlwidmFyKC0tdHctYm9yZGVyLXNwYWNpbmcteCkgdmFyKC0tdHctYm9yZGVyLXNwYWNpbmcteSlcIn0pfSx7dmFsdWVzOnIoXCJib3JkZXJTcGFjaW5nXCIpfSl9LHRyYW5zZm9ybU9yaWdpbjpUKFwidHJhbnNmb3JtT3JpZ2luXCIsW1tcIm9yaWdpblwiLFtcInRyYW5zZm9ybU9yaWdpblwiXV1dKSx0cmFuc2xhdGU6VChcInRyYW5zbGF0ZVwiLFtbW1widHJhbnNsYXRlLXhcIixbW1wiQGRlZmF1bHRzIHRyYW5zZm9ybVwiLHt9XSxcIi0tdHctdHJhbnNsYXRlLXhcIixbXCJ0cmFuc2Zvcm1cIixoZV1dXSxbXCJ0cmFuc2xhdGUteVwiLFtbXCJAZGVmYXVsdHMgdHJhbnNmb3JtXCIse31dLFwiLS10dy10cmFuc2xhdGUteVwiLFtcInRyYW5zZm9ybVwiLGhlXV1dXV0se3N1cHBvcnRzTmVnYXRpdmVWYWx1ZXM6ITB9KSxyb3RhdGU6VChcInJvdGF0ZVwiLFtbXCJyb3RhdGVcIixbW1wiQGRlZmF1bHRzIHRyYW5zZm9ybVwiLHt9XSxcIi0tdHctcm90YXRlXCIsW1widHJhbnNmb3JtXCIsaGVdXV1dLHtzdXBwb3J0c05lZ2F0aXZlVmFsdWVzOiEwfSksc2tldzpUKFwic2tld1wiLFtbW1wic2tldy14XCIsW1tcIkBkZWZhdWx0cyB0cmFuc2Zvcm1cIix7fV0sXCItLXR3LXNrZXcteFwiLFtcInRyYW5zZm9ybVwiLGhlXV1dLFtcInNrZXcteVwiLFtbXCJAZGVmYXVsdHMgdHJhbnNmb3JtXCIse31dLFwiLS10dy1za2V3LXlcIixbXCJ0cmFuc2Zvcm1cIixoZV1dXV1dLHtzdXBwb3J0c05lZ2F0aXZlVmFsdWVzOiEwfSksc2NhbGU6VChcInNjYWxlXCIsW1tcInNjYWxlXCIsW1tcIkBkZWZhdWx0cyB0cmFuc2Zvcm1cIix7fV0sXCItLXR3LXNjYWxlLXhcIixcIi0tdHctc2NhbGUteVwiLFtcInRyYW5zZm9ybVwiLGhlXV1dLFtbXCJzY2FsZS14XCIsW1tcIkBkZWZhdWx0cyB0cmFuc2Zvcm1cIix7fV0sXCItLXR3LXNjYWxlLXhcIixbXCJ0cmFuc2Zvcm1cIixoZV1dXSxbXCJzY2FsZS15XCIsW1tcIkBkZWZhdWx0cyB0cmFuc2Zvcm1cIix7fV0sXCItLXR3LXNjYWxlLXlcIixbXCJ0cmFuc2Zvcm1cIixoZV1dXV1dLHtzdXBwb3J0c05lZ2F0aXZlVmFsdWVzOiEwfSksdHJhbnNmb3JtOih7YWRkRGVmYXVsdHM6dCxhZGRVdGlsaXRpZXM6ZX0pPT57dChcInRyYW5zZm9ybVwiLHtcIi0tdHctdHJhbnNsYXRlLXhcIjpcIjBcIixcIi0tdHctdHJhbnNsYXRlLXlcIjpcIjBcIixcIi0tdHctcm90YXRlXCI6XCIwXCIsXCItLXR3LXNrZXcteFwiOlwiMFwiLFwiLS10dy1za2V3LXlcIjpcIjBcIixcIi0tdHctc2NhbGUteFwiOlwiMVwiLFwiLS10dy1zY2FsZS15XCI6XCIxXCJ9KSxlKHtcIi50cmFuc2Zvcm1cIjp7XCJAZGVmYXVsdHMgdHJhbnNmb3JtXCI6e30sdHJhbnNmb3JtOmhlfSxcIi50cmFuc2Zvcm0tY3B1XCI6e3RyYW5zZm9ybTpoZX0sXCIudHJhbnNmb3JtLWdwdVwiOnt0cmFuc2Zvcm06aGUucmVwbGFjZShcInRyYW5zbGF0ZSh2YXIoLS10dy10cmFuc2xhdGUteCksIHZhcigtLXR3LXRyYW5zbGF0ZS15KSlcIixcInRyYW5zbGF0ZTNkKHZhcigtLXR3LXRyYW5zbGF0ZS14KSwgdmFyKC0tdHctdHJhbnNsYXRlLXkpLCAwKVwiKX0sXCIudHJhbnNmb3JtLW5vbmVcIjp7dHJhbnNmb3JtOlwibm9uZVwifX0pfSxhbmltYXRpb246KHttYXRjaFV0aWxpdGllczp0LHRoZW1lOmUsY29uZmlnOnJ9KT0+e3ZhciBhO2xldCBuPXM9PmAke3IoXCJwcmVmaXhcIil9JHtyZShzKX1gLGk9T2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5lbnRyaWVzKChhPWUoXCJrZXlmcmFtZXNcIikpIT1udWxsP2E6e30pLm1hcCgoW3Msb10pPT5bcyx7W2BAa2V5ZnJhbWVzICR7bihzKX1gXTpvfV0pKTt0KHthbmltYXRlOnM9PntsZXQgbz0kcyhzKTtyZXR1cm5bLi4uby5mbGF0TWFwKGw9PmlbbC5uYW1lXSkse2FuaW1hdGlvbjpvLm1hcCgoe25hbWU6bCx2YWx1ZTp1fSk9Pmw9PT12b2lkIDB8fGlbbF09PT12b2lkIDA/dTp1LnJlcGxhY2UobCxuKGwpKSkuam9pbihcIiwgXCIpfV19fSx7dmFsdWVzOmUoXCJhbmltYXRpb25cIil9KX0sY3Vyc29yOlQoXCJjdXJzb3JcIiksdG91Y2hBY3Rpb246KHthZGREZWZhdWx0czp0LGFkZFV0aWxpdGllczplfSk9Pnt0KFwidG91Y2gtYWN0aW9uXCIse1wiLS10dy1wYW4teFwiOlwiIFwiLFwiLS10dy1wYW4teVwiOlwiIFwiLFwiLS10dy1waW5jaC16b29tXCI6XCIgXCJ9KTtsZXQgcj1cInZhcigtLXR3LXBhbi14KSB2YXIoLS10dy1wYW4teSkgdmFyKC0tdHctcGluY2gtem9vbSlcIjtlKHtcIi50b3VjaC1hdXRvXCI6e1widG91Y2gtYWN0aW9uXCI6XCJhdXRvXCJ9LFwiLnRvdWNoLW5vbmVcIjp7XCJ0b3VjaC1hY3Rpb25cIjpcIm5vbmVcIn0sXCIudG91Y2gtcGFuLXhcIjp7XCJAZGVmYXVsdHMgdG91Y2gtYWN0aW9uXCI6e30sXCItLXR3LXBhbi14XCI6XCJwYW4teFwiLFwidG91Y2gtYWN0aW9uXCI6cn0sXCIudG91Y2gtcGFuLWxlZnRcIjp7XCJAZGVmYXVsdHMgdG91Y2gtYWN0aW9uXCI6e30sXCItLXR3LXBhbi14XCI6XCJwYW4tbGVmdFwiLFwidG91Y2gtYWN0aW9uXCI6cn0sXCIudG91Y2gtcGFuLXJpZ2h0XCI6e1wiQGRlZmF1bHRzIHRvdWNoLWFjdGlvblwiOnt9LFwiLS10dy1wYW4teFwiOlwicGFuLXJpZ2h0XCIsXCJ0b3VjaC1hY3Rpb25cIjpyfSxcIi50b3VjaC1wYW4teVwiOntcIkBkZWZhdWx0cyB0b3VjaC1hY3Rpb25cIjp7fSxcIi0tdHctcGFuLXlcIjpcInBhbi15XCIsXCJ0b3VjaC1hY3Rpb25cIjpyfSxcIi50b3VjaC1wYW4tdXBcIjp7XCJAZGVmYXVsdHMgdG91Y2gtYWN0aW9uXCI6e30sXCItLXR3LXBhbi15XCI6XCJwYW4tdXBcIixcInRvdWNoLWFjdGlvblwiOnJ9LFwiLnRvdWNoLXBhbi1kb3duXCI6e1wiQGRlZmF1bHRzIHRvdWNoLWFjdGlvblwiOnt9LFwiLS10dy1wYW4teVwiOlwicGFuLWRvd25cIixcInRvdWNoLWFjdGlvblwiOnJ9LFwiLnRvdWNoLXBpbmNoLXpvb21cIjp7XCJAZGVmYXVsdHMgdG91Y2gtYWN0aW9uXCI6e30sXCItLXR3LXBpbmNoLXpvb21cIjpcInBpbmNoLXpvb21cIixcInRvdWNoLWFjdGlvblwiOnJ9LFwiLnRvdWNoLW1hbmlwdWxhdGlvblwiOntcInRvdWNoLWFjdGlvblwiOlwibWFuaXB1bGF0aW9uXCJ9fSl9LHVzZXJTZWxlY3Q6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuc2VsZWN0LW5vbmVcIjp7XCJ1c2VyLXNlbGVjdFwiOlwibm9uZVwifSxcIi5zZWxlY3QtdGV4dFwiOntcInVzZXItc2VsZWN0XCI6XCJ0ZXh0XCJ9LFwiLnNlbGVjdC1hbGxcIjp7XCJ1c2VyLXNlbGVjdFwiOlwiYWxsXCJ9LFwiLnNlbGVjdC1hdXRvXCI6e1widXNlci1zZWxlY3RcIjpcImF1dG9cIn19KX0scmVzaXplOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLnJlc2l6ZS1ub25lXCI6e3Jlc2l6ZTpcIm5vbmVcIn0sXCIucmVzaXplLXlcIjp7cmVzaXplOlwidmVydGljYWxcIn0sXCIucmVzaXplLXhcIjp7cmVzaXplOlwiaG9yaXpvbnRhbFwifSxcIi5yZXNpemVcIjp7cmVzaXplOlwiYm90aFwifX0pfSxzY3JvbGxTbmFwVHlwZTooe2FkZERlZmF1bHRzOnQsYWRkVXRpbGl0aWVzOmV9KT0+e3QoXCJzY3JvbGwtc25hcC10eXBlXCIse1wiLS10dy1zY3JvbGwtc25hcC1zdHJpY3RuZXNzXCI6XCJwcm94aW1pdHlcIn0pLGUoe1wiLnNuYXAtbm9uZVwiOntcInNjcm9sbC1zbmFwLXR5cGVcIjpcIm5vbmVcIn0sXCIuc25hcC14XCI6e1wiQGRlZmF1bHRzIHNjcm9sbC1zbmFwLXR5cGVcIjp7fSxcInNjcm9sbC1zbmFwLXR5cGVcIjpcInggdmFyKC0tdHctc2Nyb2xsLXNuYXAtc3RyaWN0bmVzcylcIn0sXCIuc25hcC15XCI6e1wiQGRlZmF1bHRzIHNjcm9sbC1zbmFwLXR5cGVcIjp7fSxcInNjcm9sbC1zbmFwLXR5cGVcIjpcInkgdmFyKC0tdHctc2Nyb2xsLXNuYXAtc3RyaWN0bmVzcylcIn0sXCIuc25hcC1ib3RoXCI6e1wiQGRlZmF1bHRzIHNjcm9sbC1zbmFwLXR5cGVcIjp7fSxcInNjcm9sbC1zbmFwLXR5cGVcIjpcImJvdGggdmFyKC0tdHctc2Nyb2xsLXNuYXAtc3RyaWN0bmVzcylcIn0sXCIuc25hcC1tYW5kYXRvcnlcIjp7XCItLXR3LXNjcm9sbC1zbmFwLXN0cmljdG5lc3NcIjpcIm1hbmRhdG9yeVwifSxcIi5zbmFwLXByb3hpbWl0eVwiOntcIi0tdHctc2Nyb2xsLXNuYXAtc3RyaWN0bmVzc1wiOlwicHJveGltaXR5XCJ9fSl9LHNjcm9sbFNuYXBBbGlnbjooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi5zbmFwLXN0YXJ0XCI6e1wic2Nyb2xsLXNuYXAtYWxpZ25cIjpcInN0YXJ0XCJ9LFwiLnNuYXAtZW5kXCI6e1wic2Nyb2xsLXNuYXAtYWxpZ25cIjpcImVuZFwifSxcIi5zbmFwLWNlbnRlclwiOntcInNjcm9sbC1zbmFwLWFsaWduXCI6XCJjZW50ZXJcIn0sXCIuc25hcC1hbGlnbi1ub25lXCI6e1wic2Nyb2xsLXNuYXAtYWxpZ25cIjpcIm5vbmVcIn19KX0sc2Nyb2xsU25hcFN0b3A6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuc25hcC1ub3JtYWxcIjp7XCJzY3JvbGwtc25hcC1zdG9wXCI6XCJub3JtYWxcIn0sXCIuc25hcC1hbHdheXNcIjp7XCJzY3JvbGwtc25hcC1zdG9wXCI6XCJhbHdheXNcIn19KX0sc2Nyb2xsTWFyZ2luOlQoXCJzY3JvbGxNYXJnaW5cIixbW1wic2Nyb2xsLW1cIixbXCJzY3JvbGwtbWFyZ2luXCJdXSxbW1wic2Nyb2xsLW14XCIsW1wic2Nyb2xsLW1hcmdpbi1sZWZ0XCIsXCJzY3JvbGwtbWFyZ2luLXJpZ2h0XCJdXSxbXCJzY3JvbGwtbXlcIixbXCJzY3JvbGwtbWFyZ2luLXRvcFwiLFwic2Nyb2xsLW1hcmdpbi1ib3R0b21cIl1dXSxbW1wic2Nyb2xsLW1zXCIsW1wic2Nyb2xsLW1hcmdpbi1pbmxpbmUtc3RhcnRcIl1dLFtcInNjcm9sbC1tZVwiLFtcInNjcm9sbC1tYXJnaW4taW5saW5lLWVuZFwiXV0sW1wic2Nyb2xsLW10XCIsW1wic2Nyb2xsLW1hcmdpbi10b3BcIl1dLFtcInNjcm9sbC1tclwiLFtcInNjcm9sbC1tYXJnaW4tcmlnaHRcIl1dLFtcInNjcm9sbC1tYlwiLFtcInNjcm9sbC1tYXJnaW4tYm90dG9tXCJdXSxbXCJzY3JvbGwtbWxcIixbXCJzY3JvbGwtbWFyZ2luLWxlZnRcIl1dXV0se3N1cHBvcnRzTmVnYXRpdmVWYWx1ZXM6ITB9KSxzY3JvbGxQYWRkaW5nOlQoXCJzY3JvbGxQYWRkaW5nXCIsW1tcInNjcm9sbC1wXCIsW1wic2Nyb2xsLXBhZGRpbmdcIl1dLFtbXCJzY3JvbGwtcHhcIixbXCJzY3JvbGwtcGFkZGluZy1sZWZ0XCIsXCJzY3JvbGwtcGFkZGluZy1yaWdodFwiXV0sW1wic2Nyb2xsLXB5XCIsW1wic2Nyb2xsLXBhZGRpbmctdG9wXCIsXCJzY3JvbGwtcGFkZGluZy1ib3R0b21cIl1dXSxbW1wic2Nyb2xsLXBzXCIsW1wic2Nyb2xsLXBhZGRpbmctaW5saW5lLXN0YXJ0XCJdXSxbXCJzY3JvbGwtcGVcIixbXCJzY3JvbGwtcGFkZGluZy1pbmxpbmUtZW5kXCJdXSxbXCJzY3JvbGwtcHRcIixbXCJzY3JvbGwtcGFkZGluZy10b3BcIl1dLFtcInNjcm9sbC1wclwiLFtcInNjcm9sbC1wYWRkaW5nLXJpZ2h0XCJdXSxbXCJzY3JvbGwtcGJcIixbXCJzY3JvbGwtcGFkZGluZy1ib3R0b21cIl1dLFtcInNjcm9sbC1wbFwiLFtcInNjcm9sbC1wYWRkaW5nLWxlZnRcIl1dXV0pLGxpc3RTdHlsZVBvc2l0aW9uOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLmxpc3QtaW5zaWRlXCI6e1wibGlzdC1zdHlsZS1wb3NpdGlvblwiOlwiaW5zaWRlXCJ9LFwiLmxpc3Qtb3V0c2lkZVwiOntcImxpc3Qtc3R5bGUtcG9zaXRpb25cIjpcIm91dHNpZGVcIn19KX0sbGlzdFN0eWxlVHlwZTpUKFwibGlzdFN0eWxlVHlwZVwiLFtbXCJsaXN0XCIsW1wibGlzdFN0eWxlVHlwZVwiXV1dKSxsaXN0U3R5bGVJbWFnZTpUKFwibGlzdFN0eWxlSW1hZ2VcIixbW1wibGlzdC1pbWFnZVwiLFtcImxpc3RTdHlsZUltYWdlXCJdXV0pLGFwcGVhcmFuY2U6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuYXBwZWFyYW5jZS1ub25lXCI6e2FwcGVhcmFuY2U6XCJub25lXCJ9fSl9LGNvbHVtbnM6VChcImNvbHVtbnNcIixbW1wiY29sdW1uc1wiLFtcImNvbHVtbnNcIl1dXSksYnJlYWtCZWZvcmU6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuYnJlYWstYmVmb3JlLWF1dG9cIjp7XCJicmVhay1iZWZvcmVcIjpcImF1dG9cIn0sXCIuYnJlYWstYmVmb3JlLWF2b2lkXCI6e1wiYnJlYWstYmVmb3JlXCI6XCJhdm9pZFwifSxcIi5icmVhay1iZWZvcmUtYWxsXCI6e1wiYnJlYWstYmVmb3JlXCI6XCJhbGxcIn0sXCIuYnJlYWstYmVmb3JlLWF2b2lkLXBhZ2VcIjp7XCJicmVhay1iZWZvcmVcIjpcImF2b2lkLXBhZ2VcIn0sXCIuYnJlYWstYmVmb3JlLXBhZ2VcIjp7XCJicmVhay1iZWZvcmVcIjpcInBhZ2VcIn0sXCIuYnJlYWstYmVmb3JlLWxlZnRcIjp7XCJicmVhay1iZWZvcmVcIjpcImxlZnRcIn0sXCIuYnJlYWstYmVmb3JlLXJpZ2h0XCI6e1wiYnJlYWstYmVmb3JlXCI6XCJyaWdodFwifSxcIi5icmVhay1iZWZvcmUtY29sdW1uXCI6e1wiYnJlYWstYmVmb3JlXCI6XCJjb2x1bW5cIn19KX0sYnJlYWtJbnNpZGU6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuYnJlYWstaW5zaWRlLWF1dG9cIjp7XCJicmVhay1pbnNpZGVcIjpcImF1dG9cIn0sXCIuYnJlYWstaW5zaWRlLWF2b2lkXCI6e1wiYnJlYWstaW5zaWRlXCI6XCJhdm9pZFwifSxcIi5icmVhay1pbnNpZGUtYXZvaWQtcGFnZVwiOntcImJyZWFrLWluc2lkZVwiOlwiYXZvaWQtcGFnZVwifSxcIi5icmVhay1pbnNpZGUtYXZvaWQtY29sdW1uXCI6e1wiYnJlYWstaW5zaWRlXCI6XCJhdm9pZC1jb2x1bW5cIn19KX0sYnJlYWtBZnRlcjooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi5icmVhay1hZnRlci1hdXRvXCI6e1wiYnJlYWstYWZ0ZXJcIjpcImF1dG9cIn0sXCIuYnJlYWstYWZ0ZXItYXZvaWRcIjp7XCJicmVhay1hZnRlclwiOlwiYXZvaWRcIn0sXCIuYnJlYWstYWZ0ZXItYWxsXCI6e1wiYnJlYWstYWZ0ZXJcIjpcImFsbFwifSxcIi5icmVhay1hZnRlci1hdm9pZC1wYWdlXCI6e1wiYnJlYWstYWZ0ZXJcIjpcImF2b2lkLXBhZ2VcIn0sXCIuYnJlYWstYWZ0ZXItcGFnZVwiOntcImJyZWFrLWFmdGVyXCI6XCJwYWdlXCJ9LFwiLmJyZWFrLWFmdGVyLWxlZnRcIjp7XCJicmVhay1hZnRlclwiOlwibGVmdFwifSxcIi5icmVhay1hZnRlci1yaWdodFwiOntcImJyZWFrLWFmdGVyXCI6XCJyaWdodFwifSxcIi5icmVhay1hZnRlci1jb2x1bW5cIjp7XCJicmVhay1hZnRlclwiOlwiY29sdW1uXCJ9fSl9LGdyaWRBdXRvQ29sdW1uczpUKFwiZ3JpZEF1dG9Db2x1bW5zXCIsW1tcImF1dG8tY29sc1wiLFtcImdyaWRBdXRvQ29sdW1uc1wiXV1dKSxncmlkQXV0b0Zsb3c6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuZ3JpZC1mbG93LXJvd1wiOntncmlkQXV0b0Zsb3c6XCJyb3dcIn0sXCIuZ3JpZC1mbG93LWNvbFwiOntncmlkQXV0b0Zsb3c6XCJjb2x1bW5cIn0sXCIuZ3JpZC1mbG93LWRlbnNlXCI6e2dyaWRBdXRvRmxvdzpcImRlbnNlXCJ9LFwiLmdyaWQtZmxvdy1yb3ctZGVuc2VcIjp7Z3JpZEF1dG9GbG93Olwicm93IGRlbnNlXCJ9LFwiLmdyaWQtZmxvdy1jb2wtZGVuc2VcIjp7Z3JpZEF1dG9GbG93OlwiY29sdW1uIGRlbnNlXCJ9fSl9LGdyaWRBdXRvUm93czpUKFwiZ3JpZEF1dG9Sb3dzXCIsW1tcImF1dG8tcm93c1wiLFtcImdyaWRBdXRvUm93c1wiXV1dKSxncmlkVGVtcGxhdGVDb2x1bW5zOlQoXCJncmlkVGVtcGxhdGVDb2x1bW5zXCIsW1tcImdyaWQtY29sc1wiLFtcImdyaWRUZW1wbGF0ZUNvbHVtbnNcIl1dXSksZ3JpZFRlbXBsYXRlUm93czpUKFwiZ3JpZFRlbXBsYXRlUm93c1wiLFtbXCJncmlkLXJvd3NcIixbXCJncmlkVGVtcGxhdGVSb3dzXCJdXV0pLGZsZXhEaXJlY3Rpb246KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuZmxleC1yb3dcIjp7XCJmbGV4LWRpcmVjdGlvblwiOlwicm93XCJ9LFwiLmZsZXgtcm93LXJldmVyc2VcIjp7XCJmbGV4LWRpcmVjdGlvblwiOlwicm93LXJldmVyc2VcIn0sXCIuZmxleC1jb2xcIjp7XCJmbGV4LWRpcmVjdGlvblwiOlwiY29sdW1uXCJ9LFwiLmZsZXgtY29sLXJldmVyc2VcIjp7XCJmbGV4LWRpcmVjdGlvblwiOlwiY29sdW1uLXJldmVyc2VcIn19KX0sZmxleFdyYXA6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuZmxleC13cmFwXCI6e1wiZmxleC13cmFwXCI6XCJ3cmFwXCJ9LFwiLmZsZXgtd3JhcC1yZXZlcnNlXCI6e1wiZmxleC13cmFwXCI6XCJ3cmFwLXJldmVyc2VcIn0sXCIuZmxleC1ub3dyYXBcIjp7XCJmbGV4LXdyYXBcIjpcIm5vd3JhcFwifX0pfSxwbGFjZUNvbnRlbnQ6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIucGxhY2UtY29udGVudC1jZW50ZXJcIjp7XCJwbGFjZS1jb250ZW50XCI6XCJjZW50ZXJcIn0sXCIucGxhY2UtY29udGVudC1zdGFydFwiOntcInBsYWNlLWNvbnRlbnRcIjpcInN0YXJ0XCJ9LFwiLnBsYWNlLWNvbnRlbnQtZW5kXCI6e1wicGxhY2UtY29udGVudFwiOlwiZW5kXCJ9LFwiLnBsYWNlLWNvbnRlbnQtYmV0d2VlblwiOntcInBsYWNlLWNvbnRlbnRcIjpcInNwYWNlLWJldHdlZW5cIn0sXCIucGxhY2UtY29udGVudC1hcm91bmRcIjp7XCJwbGFjZS1jb250ZW50XCI6XCJzcGFjZS1hcm91bmRcIn0sXCIucGxhY2UtY29udGVudC1ldmVubHlcIjp7XCJwbGFjZS1jb250ZW50XCI6XCJzcGFjZS1ldmVubHlcIn0sXCIucGxhY2UtY29udGVudC1iYXNlbGluZVwiOntcInBsYWNlLWNvbnRlbnRcIjpcImJhc2VsaW5lXCJ9LFwiLnBsYWNlLWNvbnRlbnQtc3RyZXRjaFwiOntcInBsYWNlLWNvbnRlbnRcIjpcInN0cmV0Y2hcIn19KX0scGxhY2VJdGVtczooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi5wbGFjZS1pdGVtcy1zdGFydFwiOntcInBsYWNlLWl0ZW1zXCI6XCJzdGFydFwifSxcIi5wbGFjZS1pdGVtcy1lbmRcIjp7XCJwbGFjZS1pdGVtc1wiOlwiZW5kXCJ9LFwiLnBsYWNlLWl0ZW1zLWNlbnRlclwiOntcInBsYWNlLWl0ZW1zXCI6XCJjZW50ZXJcIn0sXCIucGxhY2UtaXRlbXMtYmFzZWxpbmVcIjp7XCJwbGFjZS1pdGVtc1wiOlwiYmFzZWxpbmVcIn0sXCIucGxhY2UtaXRlbXMtc3RyZXRjaFwiOntcInBsYWNlLWl0ZW1zXCI6XCJzdHJldGNoXCJ9fSl9LGFsaWduQ29udGVudDooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi5jb250ZW50LW5vcm1hbFwiOntcImFsaWduLWNvbnRlbnRcIjpcIm5vcm1hbFwifSxcIi5jb250ZW50LWNlbnRlclwiOntcImFsaWduLWNvbnRlbnRcIjpcImNlbnRlclwifSxcIi5jb250ZW50LXN0YXJ0XCI6e1wiYWxpZ24tY29udGVudFwiOlwiZmxleC1zdGFydFwifSxcIi5jb250ZW50LWVuZFwiOntcImFsaWduLWNvbnRlbnRcIjpcImZsZXgtZW5kXCJ9LFwiLmNvbnRlbnQtYmV0d2VlblwiOntcImFsaWduLWNvbnRlbnRcIjpcInNwYWNlLWJldHdlZW5cIn0sXCIuY29udGVudC1hcm91bmRcIjp7XCJhbGlnbi1jb250ZW50XCI6XCJzcGFjZS1hcm91bmRcIn0sXCIuY29udGVudC1ldmVubHlcIjp7XCJhbGlnbi1jb250ZW50XCI6XCJzcGFjZS1ldmVubHlcIn0sXCIuY29udGVudC1iYXNlbGluZVwiOntcImFsaWduLWNvbnRlbnRcIjpcImJhc2VsaW5lXCJ9LFwiLmNvbnRlbnQtc3RyZXRjaFwiOntcImFsaWduLWNvbnRlbnRcIjpcInN0cmV0Y2hcIn19KX0sYWxpZ25JdGVtczooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi5pdGVtcy1zdGFydFwiOntcImFsaWduLWl0ZW1zXCI6XCJmbGV4LXN0YXJ0XCJ9LFwiLml0ZW1zLWVuZFwiOntcImFsaWduLWl0ZW1zXCI6XCJmbGV4LWVuZFwifSxcIi5pdGVtcy1jZW50ZXJcIjp7XCJhbGlnbi1pdGVtc1wiOlwiY2VudGVyXCJ9LFwiLml0ZW1zLWJhc2VsaW5lXCI6e1wiYWxpZ24taXRlbXNcIjpcImJhc2VsaW5lXCJ9LFwiLml0ZW1zLXN0cmV0Y2hcIjp7XCJhbGlnbi1pdGVtc1wiOlwic3RyZXRjaFwifX0pfSxqdXN0aWZ5Q29udGVudDooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi5qdXN0aWZ5LW5vcm1hbFwiOntcImp1c3RpZnktY29udGVudFwiOlwibm9ybWFsXCJ9LFwiLmp1c3RpZnktc3RhcnRcIjp7XCJqdXN0aWZ5LWNvbnRlbnRcIjpcImZsZXgtc3RhcnRcIn0sXCIuanVzdGlmeS1lbmRcIjp7XCJqdXN0aWZ5LWNvbnRlbnRcIjpcImZsZXgtZW5kXCJ9LFwiLmp1c3RpZnktY2VudGVyXCI6e1wianVzdGlmeS1jb250ZW50XCI6XCJjZW50ZXJcIn0sXCIuanVzdGlmeS1iZXR3ZWVuXCI6e1wianVzdGlmeS1jb250ZW50XCI6XCJzcGFjZS1iZXR3ZWVuXCJ9LFwiLmp1c3RpZnktYXJvdW5kXCI6e1wianVzdGlmeS1jb250ZW50XCI6XCJzcGFjZS1hcm91bmRcIn0sXCIuanVzdGlmeS1ldmVubHlcIjp7XCJqdXN0aWZ5LWNvbnRlbnRcIjpcInNwYWNlLWV2ZW5seVwifSxcIi5qdXN0aWZ5LXN0cmV0Y2hcIjp7XCJqdXN0aWZ5LWNvbnRlbnRcIjpcInN0cmV0Y2hcIn19KX0sanVzdGlmeUl0ZW1zOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLmp1c3RpZnktaXRlbXMtc3RhcnRcIjp7XCJqdXN0aWZ5LWl0ZW1zXCI6XCJzdGFydFwifSxcIi5qdXN0aWZ5LWl0ZW1zLWVuZFwiOntcImp1c3RpZnktaXRlbXNcIjpcImVuZFwifSxcIi5qdXN0aWZ5LWl0ZW1zLWNlbnRlclwiOntcImp1c3RpZnktaXRlbXNcIjpcImNlbnRlclwifSxcIi5qdXN0aWZ5LWl0ZW1zLXN0cmV0Y2hcIjp7XCJqdXN0aWZ5LWl0ZW1zXCI6XCJzdHJldGNoXCJ9fSl9LGdhcDpUKFwiZ2FwXCIsW1tcImdhcFwiLFtcImdhcFwiXV0sW1tcImdhcC14XCIsW1wiY29sdW1uR2FwXCJdXSxbXCJnYXAteVwiLFtcInJvd0dhcFwiXV1dXSksc3BhY2U6KHttYXRjaFV0aWxpdGllczp0LGFkZFV0aWxpdGllczplLHRoZW1lOnJ9KT0+e3Qoe1wic3BhY2UteFwiOm49PihuPW49PT1cIjBcIj9cIjBweFwiOm4se1wiJiA+IDpub3QoW2hpZGRlbl0pIH4gOm5vdChbaGlkZGVuXSlcIjp7XCItLXR3LXNwYWNlLXgtcmV2ZXJzZVwiOlwiMFwiLFwibWFyZ2luLXJpZ2h0XCI6YGNhbGMoJHtufSAqIHZhcigtLXR3LXNwYWNlLXgtcmV2ZXJzZSkpYCxcIm1hcmdpbi1sZWZ0XCI6YGNhbGMoJHtufSAqIGNhbGMoMSAtIHZhcigtLXR3LXNwYWNlLXgtcmV2ZXJzZSkpKWB9fSksXCJzcGFjZS15XCI6bj0+KG49bj09PVwiMFwiP1wiMHB4XCI6bix7XCImID4gOm5vdChbaGlkZGVuXSkgfiA6bm90KFtoaWRkZW5dKVwiOntcIi0tdHctc3BhY2UteS1yZXZlcnNlXCI6XCIwXCIsXCJtYXJnaW4tdG9wXCI6YGNhbGMoJHtufSAqIGNhbGMoMSAtIHZhcigtLXR3LXNwYWNlLXktcmV2ZXJzZSkpKWAsXCJtYXJnaW4tYm90dG9tXCI6YGNhbGMoJHtufSAqIHZhcigtLXR3LXNwYWNlLXktcmV2ZXJzZSkpYH19KX0se3ZhbHVlczpyKFwic3BhY2VcIiksc3VwcG9ydHNOZWdhdGl2ZVZhbHVlczohMH0pLGUoe1wiLnNwYWNlLXktcmV2ZXJzZSA+IDpub3QoW2hpZGRlbl0pIH4gOm5vdChbaGlkZGVuXSlcIjp7XCItLXR3LXNwYWNlLXktcmV2ZXJzZVwiOlwiMVwifSxcIi5zcGFjZS14LXJldmVyc2UgPiA6bm90KFtoaWRkZW5dKSB+IDpub3QoW2hpZGRlbl0pXCI6e1wiLS10dy1zcGFjZS14LXJldmVyc2VcIjpcIjFcIn19KX0sZGl2aWRlV2lkdGg6KHttYXRjaFV0aWxpdGllczp0LGFkZFV0aWxpdGllczplLHRoZW1lOnJ9KT0+e3Qoe1wiZGl2aWRlLXhcIjpuPT4obj1uPT09XCIwXCI/XCIwcHhcIjpuLHtcIiYgPiA6bm90KFtoaWRkZW5dKSB+IDpub3QoW2hpZGRlbl0pXCI6e1wiQGRlZmF1bHRzIGJvcmRlci13aWR0aFwiOnt9LFwiLS10dy1kaXZpZGUteC1yZXZlcnNlXCI6XCIwXCIsXCJib3JkZXItcmlnaHQtd2lkdGhcIjpgY2FsYygke259ICogdmFyKC0tdHctZGl2aWRlLXgtcmV2ZXJzZSkpYCxcImJvcmRlci1sZWZ0LXdpZHRoXCI6YGNhbGMoJHtufSAqIGNhbGMoMSAtIHZhcigtLXR3LWRpdmlkZS14LXJldmVyc2UpKSlgfX0pLFwiZGl2aWRlLXlcIjpuPT4obj1uPT09XCIwXCI/XCIwcHhcIjpuLHtcIiYgPiA6bm90KFtoaWRkZW5dKSB+IDpub3QoW2hpZGRlbl0pXCI6e1wiQGRlZmF1bHRzIGJvcmRlci13aWR0aFwiOnt9LFwiLS10dy1kaXZpZGUteS1yZXZlcnNlXCI6XCIwXCIsXCJib3JkZXItdG9wLXdpZHRoXCI6YGNhbGMoJHtufSAqIGNhbGMoMSAtIHZhcigtLXR3LWRpdmlkZS15LXJldmVyc2UpKSlgLFwiYm9yZGVyLWJvdHRvbS13aWR0aFwiOmBjYWxjKCR7bn0gKiB2YXIoLS10dy1kaXZpZGUteS1yZXZlcnNlKSlgfX0pfSx7dmFsdWVzOnIoXCJkaXZpZGVXaWR0aFwiKSx0eXBlOltcImxpbmUtd2lkdGhcIixcImxlbmd0aFwiLFwiYW55XCJdfSksZSh7XCIuZGl2aWRlLXktcmV2ZXJzZSA+IDpub3QoW2hpZGRlbl0pIH4gOm5vdChbaGlkZGVuXSlcIjp7XCJAZGVmYXVsdHMgYm9yZGVyLXdpZHRoXCI6e30sXCItLXR3LWRpdmlkZS15LXJldmVyc2VcIjpcIjFcIn0sXCIuZGl2aWRlLXgtcmV2ZXJzZSA+IDpub3QoW2hpZGRlbl0pIH4gOm5vdChbaGlkZGVuXSlcIjp7XCJAZGVmYXVsdHMgYm9yZGVyLXdpZHRoXCI6e30sXCItLXR3LWRpdmlkZS14LXJldmVyc2VcIjpcIjFcIn19KX0sZGl2aWRlU3R5bGU6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuZGl2aWRlLXNvbGlkID4gOm5vdChbaGlkZGVuXSkgfiA6bm90KFtoaWRkZW5dKVwiOntcImJvcmRlci1zdHlsZVwiOlwic29saWRcIn0sXCIuZGl2aWRlLWRhc2hlZCA+IDpub3QoW2hpZGRlbl0pIH4gOm5vdChbaGlkZGVuXSlcIjp7XCJib3JkZXItc3R5bGVcIjpcImRhc2hlZFwifSxcIi5kaXZpZGUtZG90dGVkID4gOm5vdChbaGlkZGVuXSkgfiA6bm90KFtoaWRkZW5dKVwiOntcImJvcmRlci1zdHlsZVwiOlwiZG90dGVkXCJ9LFwiLmRpdmlkZS1kb3VibGUgPiA6bm90KFtoaWRkZW5dKSB+IDpub3QoW2hpZGRlbl0pXCI6e1wiYm9yZGVyLXN0eWxlXCI6XCJkb3VibGVcIn0sXCIuZGl2aWRlLW5vbmUgPiA6bm90KFtoaWRkZW5dKSB+IDpub3QoW2hpZGRlbl0pXCI6e1wiYm9yZGVyLXN0eWxlXCI6XCJub25lXCJ9fSl9LGRpdmlkZUNvbG9yOih7bWF0Y2hVdGlsaXRpZXM6dCx0aGVtZTplLGNvcmVQbHVnaW5zOnJ9KT0+e3Qoe2RpdmlkZTpuPT5yKFwiZGl2aWRlT3BhY2l0eVwiKT97W1wiJiA+IDpub3QoW2hpZGRlbl0pIH4gOm5vdChbaGlkZGVuXSlcIl06Wih7Y29sb3I6bixwcm9wZXJ0eTpcImJvcmRlci1jb2xvclwiLHZhcmlhYmxlOlwiLS10dy1kaXZpZGUtb3BhY2l0eVwifSl9OntbXCImID4gOm5vdChbaGlkZGVuXSkgfiA6bm90KFtoaWRkZW5dKVwiXTp7XCJib3JkZXItY29sb3JcIjpNKG4pfX19LHt2YWx1ZXM6KCh7REVGQVVMVDpuLC4uLml9KT0+aSkoUShlKFwiZGl2aWRlQ29sb3JcIikpKSx0eXBlOltcImNvbG9yXCIsXCJhbnlcIl19KX0sZGl2aWRlT3BhY2l0eTooe21hdGNoVXRpbGl0aWVzOnQsdGhlbWU6ZX0pPT57dCh7XCJkaXZpZGUtb3BhY2l0eVwiOnI9Pih7W1wiJiA+IDpub3QoW2hpZGRlbl0pIH4gOm5vdChbaGlkZGVuXSlcIl06e1wiLS10dy1kaXZpZGUtb3BhY2l0eVwiOnJ9fSl9LHt2YWx1ZXM6ZShcImRpdmlkZU9wYWNpdHlcIil9KX0scGxhY2VTZWxmOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLnBsYWNlLXNlbGYtYXV0b1wiOntcInBsYWNlLXNlbGZcIjpcImF1dG9cIn0sXCIucGxhY2Utc2VsZi1zdGFydFwiOntcInBsYWNlLXNlbGZcIjpcInN0YXJ0XCJ9LFwiLnBsYWNlLXNlbGYtZW5kXCI6e1wicGxhY2Utc2VsZlwiOlwiZW5kXCJ9LFwiLnBsYWNlLXNlbGYtY2VudGVyXCI6e1wicGxhY2Utc2VsZlwiOlwiY2VudGVyXCJ9LFwiLnBsYWNlLXNlbGYtc3RyZXRjaFwiOntcInBsYWNlLXNlbGZcIjpcInN0cmV0Y2hcIn19KX0sYWxpZ25TZWxmOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLnNlbGYtYXV0b1wiOntcImFsaWduLXNlbGZcIjpcImF1dG9cIn0sXCIuc2VsZi1zdGFydFwiOntcImFsaWduLXNlbGZcIjpcImZsZXgtc3RhcnRcIn0sXCIuc2VsZi1lbmRcIjp7XCJhbGlnbi1zZWxmXCI6XCJmbGV4LWVuZFwifSxcIi5zZWxmLWNlbnRlclwiOntcImFsaWduLXNlbGZcIjpcImNlbnRlclwifSxcIi5zZWxmLXN0cmV0Y2hcIjp7XCJhbGlnbi1zZWxmXCI6XCJzdHJldGNoXCJ9LFwiLnNlbGYtYmFzZWxpbmVcIjp7XCJhbGlnbi1zZWxmXCI6XCJiYXNlbGluZVwifX0pfSxqdXN0aWZ5U2VsZjooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi5qdXN0aWZ5LXNlbGYtYXV0b1wiOntcImp1c3RpZnktc2VsZlwiOlwiYXV0b1wifSxcIi5qdXN0aWZ5LXNlbGYtc3RhcnRcIjp7XCJqdXN0aWZ5LXNlbGZcIjpcInN0YXJ0XCJ9LFwiLmp1c3RpZnktc2VsZi1lbmRcIjp7XCJqdXN0aWZ5LXNlbGZcIjpcImVuZFwifSxcIi5qdXN0aWZ5LXNlbGYtY2VudGVyXCI6e1wianVzdGlmeS1zZWxmXCI6XCJjZW50ZXJcIn0sXCIuanVzdGlmeS1zZWxmLXN0cmV0Y2hcIjp7XCJqdXN0aWZ5LXNlbGZcIjpcInN0cmV0Y2hcIn19KX0sb3ZlcmZsb3c6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIub3ZlcmZsb3ctYXV0b1wiOntvdmVyZmxvdzpcImF1dG9cIn0sXCIub3ZlcmZsb3ctaGlkZGVuXCI6e292ZXJmbG93OlwiaGlkZGVuXCJ9LFwiLm92ZXJmbG93LWNsaXBcIjp7b3ZlcmZsb3c6XCJjbGlwXCJ9LFwiLm92ZXJmbG93LXZpc2libGVcIjp7b3ZlcmZsb3c6XCJ2aXNpYmxlXCJ9LFwiLm92ZXJmbG93LXNjcm9sbFwiOntvdmVyZmxvdzpcInNjcm9sbFwifSxcIi5vdmVyZmxvdy14LWF1dG9cIjp7XCJvdmVyZmxvdy14XCI6XCJhdXRvXCJ9LFwiLm92ZXJmbG93LXktYXV0b1wiOntcIm92ZXJmbG93LXlcIjpcImF1dG9cIn0sXCIub3ZlcmZsb3cteC1oaWRkZW5cIjp7XCJvdmVyZmxvdy14XCI6XCJoaWRkZW5cIn0sXCIub3ZlcmZsb3cteS1oaWRkZW5cIjp7XCJvdmVyZmxvdy15XCI6XCJoaWRkZW5cIn0sXCIub3ZlcmZsb3cteC1jbGlwXCI6e1wib3ZlcmZsb3cteFwiOlwiY2xpcFwifSxcIi5vdmVyZmxvdy15LWNsaXBcIjp7XCJvdmVyZmxvdy15XCI6XCJjbGlwXCJ9LFwiLm92ZXJmbG93LXgtdmlzaWJsZVwiOntcIm92ZXJmbG93LXhcIjpcInZpc2libGVcIn0sXCIub3ZlcmZsb3cteS12aXNpYmxlXCI6e1wib3ZlcmZsb3cteVwiOlwidmlzaWJsZVwifSxcIi5vdmVyZmxvdy14LXNjcm9sbFwiOntcIm92ZXJmbG93LXhcIjpcInNjcm9sbFwifSxcIi5vdmVyZmxvdy15LXNjcm9sbFwiOntcIm92ZXJmbG93LXlcIjpcInNjcm9sbFwifX0pfSxvdmVyc2Nyb2xsQmVoYXZpb3I6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIub3ZlcnNjcm9sbC1hdXRvXCI6e1wib3ZlcnNjcm9sbC1iZWhhdmlvclwiOlwiYXV0b1wifSxcIi5vdmVyc2Nyb2xsLWNvbnRhaW5cIjp7XCJvdmVyc2Nyb2xsLWJlaGF2aW9yXCI6XCJjb250YWluXCJ9LFwiLm92ZXJzY3JvbGwtbm9uZVwiOntcIm92ZXJzY3JvbGwtYmVoYXZpb3JcIjpcIm5vbmVcIn0sXCIub3ZlcnNjcm9sbC15LWF1dG9cIjp7XCJvdmVyc2Nyb2xsLWJlaGF2aW9yLXlcIjpcImF1dG9cIn0sXCIub3ZlcnNjcm9sbC15LWNvbnRhaW5cIjp7XCJvdmVyc2Nyb2xsLWJlaGF2aW9yLXlcIjpcImNvbnRhaW5cIn0sXCIub3ZlcnNjcm9sbC15LW5vbmVcIjp7XCJvdmVyc2Nyb2xsLWJlaGF2aW9yLXlcIjpcIm5vbmVcIn0sXCIub3ZlcnNjcm9sbC14LWF1dG9cIjp7XCJvdmVyc2Nyb2xsLWJlaGF2aW9yLXhcIjpcImF1dG9cIn0sXCIub3ZlcnNjcm9sbC14LWNvbnRhaW5cIjp7XCJvdmVyc2Nyb2xsLWJlaGF2aW9yLXhcIjpcImNvbnRhaW5cIn0sXCIub3ZlcnNjcm9sbC14LW5vbmVcIjp7XCJvdmVyc2Nyb2xsLWJlaGF2aW9yLXhcIjpcIm5vbmVcIn19KX0sc2Nyb2xsQmVoYXZpb3I6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuc2Nyb2xsLWF1dG9cIjp7XCJzY3JvbGwtYmVoYXZpb3JcIjpcImF1dG9cIn0sXCIuc2Nyb2xsLXNtb290aFwiOntcInNjcm9sbC1iZWhhdmlvclwiOlwic21vb3RoXCJ9fSl9LHRleHRPdmVyZmxvdzooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi50cnVuY2F0ZVwiOntvdmVyZmxvdzpcImhpZGRlblwiLFwidGV4dC1vdmVyZmxvd1wiOlwiZWxsaXBzaXNcIixcIndoaXRlLXNwYWNlXCI6XCJub3dyYXBcIn0sXCIub3ZlcmZsb3ctZWxsaXBzaXNcIjp7XCJ0ZXh0LW92ZXJmbG93XCI6XCJlbGxpcHNpc1wifSxcIi50ZXh0LWVsbGlwc2lzXCI6e1widGV4dC1vdmVyZmxvd1wiOlwiZWxsaXBzaXNcIn0sXCIudGV4dC1jbGlwXCI6e1widGV4dC1vdmVyZmxvd1wiOlwiY2xpcFwifX0pfSxoeXBoZW5zOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLmh5cGhlbnMtbm9uZVwiOntoeXBoZW5zOlwibm9uZVwifSxcIi5oeXBoZW5zLW1hbnVhbFwiOntoeXBoZW5zOlwibWFudWFsXCJ9LFwiLmh5cGhlbnMtYXV0b1wiOntoeXBoZW5zOlwiYXV0b1wifX0pfSx3aGl0ZXNwYWNlOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLndoaXRlc3BhY2Utbm9ybWFsXCI6e1wid2hpdGUtc3BhY2VcIjpcIm5vcm1hbFwifSxcIi53aGl0ZXNwYWNlLW5vd3JhcFwiOntcIndoaXRlLXNwYWNlXCI6XCJub3dyYXBcIn0sXCIud2hpdGVzcGFjZS1wcmVcIjp7XCJ3aGl0ZS1zcGFjZVwiOlwicHJlXCJ9LFwiLndoaXRlc3BhY2UtcHJlLWxpbmVcIjp7XCJ3aGl0ZS1zcGFjZVwiOlwicHJlLWxpbmVcIn0sXCIud2hpdGVzcGFjZS1wcmUtd3JhcFwiOntcIndoaXRlLXNwYWNlXCI6XCJwcmUtd3JhcFwifSxcIi53aGl0ZXNwYWNlLWJyZWFrLXNwYWNlc1wiOntcIndoaXRlLXNwYWNlXCI6XCJicmVhay1zcGFjZXNcIn19KX0sd29yZEJyZWFrOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLmJyZWFrLW5vcm1hbFwiOntcIm92ZXJmbG93LXdyYXBcIjpcIm5vcm1hbFwiLFwid29yZC1icmVha1wiOlwibm9ybWFsXCJ9LFwiLmJyZWFrLXdvcmRzXCI6e1wib3ZlcmZsb3ctd3JhcFwiOlwiYnJlYWstd29yZFwifSxcIi5icmVhay1hbGxcIjp7XCJ3b3JkLWJyZWFrXCI6XCJicmVhay1hbGxcIn0sXCIuYnJlYWsta2VlcFwiOntcIndvcmQtYnJlYWtcIjpcImtlZXAtYWxsXCJ9fSl9LGJvcmRlclJhZGl1czpUKFwiYm9yZGVyUmFkaXVzXCIsW1tcInJvdW5kZWRcIixbXCJib3JkZXItcmFkaXVzXCJdXSxbW1wicm91bmRlZC1zXCIsW1wiYm9yZGVyLXN0YXJ0LXN0YXJ0LXJhZGl1c1wiLFwiYm9yZGVyLWVuZC1zdGFydC1yYWRpdXNcIl1dLFtcInJvdW5kZWQtZVwiLFtcImJvcmRlci1zdGFydC1lbmQtcmFkaXVzXCIsXCJib3JkZXItZW5kLWVuZC1yYWRpdXNcIl1dLFtcInJvdW5kZWQtdFwiLFtcImJvcmRlci10b3AtbGVmdC1yYWRpdXNcIixcImJvcmRlci10b3AtcmlnaHQtcmFkaXVzXCJdXSxbXCJyb3VuZGVkLXJcIixbXCJib3JkZXItdG9wLXJpZ2h0LXJhZGl1c1wiLFwiYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXNcIl1dLFtcInJvdW5kZWQtYlwiLFtcImJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzXCIsXCJib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzXCJdXSxbXCJyb3VuZGVkLWxcIixbXCJib3JkZXItdG9wLWxlZnQtcmFkaXVzXCIsXCJib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzXCJdXV0sW1tcInJvdW5kZWQtc3NcIixbXCJib3JkZXItc3RhcnQtc3RhcnQtcmFkaXVzXCJdXSxbXCJyb3VuZGVkLXNlXCIsW1wiYm9yZGVyLXN0YXJ0LWVuZC1yYWRpdXNcIl1dLFtcInJvdW5kZWQtZWVcIixbXCJib3JkZXItZW5kLWVuZC1yYWRpdXNcIl1dLFtcInJvdW5kZWQtZXNcIixbXCJib3JkZXItZW5kLXN0YXJ0LXJhZGl1c1wiXV0sW1wicm91bmRlZC10bFwiLFtcImJvcmRlci10b3AtbGVmdC1yYWRpdXNcIl1dLFtcInJvdW5kZWQtdHJcIixbXCJib3JkZXItdG9wLXJpZ2h0LXJhZGl1c1wiXV0sW1wicm91bmRlZC1iclwiLFtcImJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzXCJdXSxbXCJyb3VuZGVkLWJsXCIsW1wiYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1c1wiXV1dXSksYm9yZGVyV2lkdGg6VChcImJvcmRlcldpZHRoXCIsW1tcImJvcmRlclwiLFtbXCJAZGVmYXVsdHMgYm9yZGVyLXdpZHRoXCIse31dLFwiYm9yZGVyLXdpZHRoXCJdXSxbW1wiYm9yZGVyLXhcIixbW1wiQGRlZmF1bHRzIGJvcmRlci13aWR0aFwiLHt9XSxcImJvcmRlci1sZWZ0LXdpZHRoXCIsXCJib3JkZXItcmlnaHQtd2lkdGhcIl1dLFtcImJvcmRlci15XCIsW1tcIkBkZWZhdWx0cyBib3JkZXItd2lkdGhcIix7fV0sXCJib3JkZXItdG9wLXdpZHRoXCIsXCJib3JkZXItYm90dG9tLXdpZHRoXCJdXV0sW1tcImJvcmRlci1zXCIsW1tcIkBkZWZhdWx0cyBib3JkZXItd2lkdGhcIix7fV0sXCJib3JkZXItaW5saW5lLXN0YXJ0LXdpZHRoXCJdXSxbXCJib3JkZXItZVwiLFtbXCJAZGVmYXVsdHMgYm9yZGVyLXdpZHRoXCIse31dLFwiYm9yZGVyLWlubGluZS1lbmQtd2lkdGhcIl1dLFtcImJvcmRlci10XCIsW1tcIkBkZWZhdWx0cyBib3JkZXItd2lkdGhcIix7fV0sXCJib3JkZXItdG9wLXdpZHRoXCJdXSxbXCJib3JkZXItclwiLFtbXCJAZGVmYXVsdHMgYm9yZGVyLXdpZHRoXCIse31dLFwiYm9yZGVyLXJpZ2h0LXdpZHRoXCJdXSxbXCJib3JkZXItYlwiLFtbXCJAZGVmYXVsdHMgYm9yZGVyLXdpZHRoXCIse31dLFwiYm9yZGVyLWJvdHRvbS13aWR0aFwiXV0sW1wiYm9yZGVyLWxcIixbW1wiQGRlZmF1bHRzIGJvcmRlci13aWR0aFwiLHt9XSxcImJvcmRlci1sZWZ0LXdpZHRoXCJdXV1dLHt0eXBlOltcImxpbmUtd2lkdGhcIixcImxlbmd0aFwiXX0pLGJvcmRlclN0eWxlOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLmJvcmRlci1zb2xpZFwiOntcImJvcmRlci1zdHlsZVwiOlwic29saWRcIn0sXCIuYm9yZGVyLWRhc2hlZFwiOntcImJvcmRlci1zdHlsZVwiOlwiZGFzaGVkXCJ9LFwiLmJvcmRlci1kb3R0ZWRcIjp7XCJib3JkZXItc3R5bGVcIjpcImRvdHRlZFwifSxcIi5ib3JkZXItZG91YmxlXCI6e1wiYm9yZGVyLXN0eWxlXCI6XCJkb3VibGVcIn0sXCIuYm9yZGVyLWhpZGRlblwiOntcImJvcmRlci1zdHlsZVwiOlwiaGlkZGVuXCJ9LFwiLmJvcmRlci1ub25lXCI6e1wiYm9yZGVyLXN0eWxlXCI6XCJub25lXCJ9fSl9LGJvcmRlckNvbG9yOih7bWF0Y2hVdGlsaXRpZXM6dCx0aGVtZTplLGNvcmVQbHVnaW5zOnJ9KT0+e3Qoe2JvcmRlcjpuPT5yKFwiYm9yZGVyT3BhY2l0eVwiKT9aKHtjb2xvcjpuLHByb3BlcnR5OlwiYm9yZGVyLWNvbG9yXCIsdmFyaWFibGU6XCItLXR3LWJvcmRlci1vcGFjaXR5XCJ9KTp7XCJib3JkZXItY29sb3JcIjpNKG4pfX0se3ZhbHVlczooKHtERUZBVUxUOm4sLi4uaX0pPT5pKShRKGUoXCJib3JkZXJDb2xvclwiKSkpLHR5cGU6W1wiY29sb3JcIixcImFueVwiXX0pLHQoe1wiYm9yZGVyLXhcIjpuPT5yKFwiYm9yZGVyT3BhY2l0eVwiKT9aKHtjb2xvcjpuLHByb3BlcnR5OltcImJvcmRlci1sZWZ0LWNvbG9yXCIsXCJib3JkZXItcmlnaHQtY29sb3JcIl0sdmFyaWFibGU6XCItLXR3LWJvcmRlci1vcGFjaXR5XCJ9KTp7XCJib3JkZXItbGVmdC1jb2xvclwiOk0obiksXCJib3JkZXItcmlnaHQtY29sb3JcIjpNKG4pfSxcImJvcmRlci15XCI6bj0+cihcImJvcmRlck9wYWNpdHlcIik/Wih7Y29sb3I6bixwcm9wZXJ0eTpbXCJib3JkZXItdG9wLWNvbG9yXCIsXCJib3JkZXItYm90dG9tLWNvbG9yXCJdLHZhcmlhYmxlOlwiLS10dy1ib3JkZXItb3BhY2l0eVwifSk6e1wiYm9yZGVyLXRvcC1jb2xvclwiOk0obiksXCJib3JkZXItYm90dG9tLWNvbG9yXCI6TShuKX19LHt2YWx1ZXM6KCh7REVGQVVMVDpuLC4uLml9KT0+aSkoUShlKFwiYm9yZGVyQ29sb3JcIikpKSx0eXBlOltcImNvbG9yXCIsXCJhbnlcIl19KSx0KHtcImJvcmRlci1zXCI6bj0+cihcImJvcmRlck9wYWNpdHlcIik/Wih7Y29sb3I6bixwcm9wZXJ0eTpcImJvcmRlci1pbmxpbmUtc3RhcnQtY29sb3JcIix2YXJpYWJsZTpcIi0tdHctYm9yZGVyLW9wYWNpdHlcIn0pOntcImJvcmRlci1pbmxpbmUtc3RhcnQtY29sb3JcIjpNKG4pfSxcImJvcmRlci1lXCI6bj0+cihcImJvcmRlck9wYWNpdHlcIik/Wih7Y29sb3I6bixwcm9wZXJ0eTpcImJvcmRlci1pbmxpbmUtZW5kLWNvbG9yXCIsdmFyaWFibGU6XCItLXR3LWJvcmRlci1vcGFjaXR5XCJ9KTp7XCJib3JkZXItaW5saW5lLWVuZC1jb2xvclwiOk0obil9LFwiYm9yZGVyLXRcIjpuPT5yKFwiYm9yZGVyT3BhY2l0eVwiKT9aKHtjb2xvcjpuLHByb3BlcnR5OlwiYm9yZGVyLXRvcC1jb2xvclwiLHZhcmlhYmxlOlwiLS10dy1ib3JkZXItb3BhY2l0eVwifSk6e1wiYm9yZGVyLXRvcC1jb2xvclwiOk0obil9LFwiYm9yZGVyLXJcIjpuPT5yKFwiYm9yZGVyT3BhY2l0eVwiKT9aKHtjb2xvcjpuLHByb3BlcnR5OlwiYm9yZGVyLXJpZ2h0LWNvbG9yXCIsdmFyaWFibGU6XCItLXR3LWJvcmRlci1vcGFjaXR5XCJ9KTp7XCJib3JkZXItcmlnaHQtY29sb3JcIjpNKG4pfSxcImJvcmRlci1iXCI6bj0+cihcImJvcmRlck9wYWNpdHlcIik/Wih7Y29sb3I6bixwcm9wZXJ0eTpcImJvcmRlci1ib3R0b20tY29sb3JcIix2YXJpYWJsZTpcIi0tdHctYm9yZGVyLW9wYWNpdHlcIn0pOntcImJvcmRlci1ib3R0b20tY29sb3JcIjpNKG4pfSxcImJvcmRlci1sXCI6bj0+cihcImJvcmRlck9wYWNpdHlcIik/Wih7Y29sb3I6bixwcm9wZXJ0eTpcImJvcmRlci1sZWZ0LWNvbG9yXCIsdmFyaWFibGU6XCItLXR3LWJvcmRlci1vcGFjaXR5XCJ9KTp7XCJib3JkZXItbGVmdC1jb2xvclwiOk0obil9fSx7dmFsdWVzOigoe0RFRkFVTFQ6biwuLi5pfSk9PmkpKFEoZShcImJvcmRlckNvbG9yXCIpKSksdHlwZTpbXCJjb2xvclwiLFwiYW55XCJdfSl9LGJvcmRlck9wYWNpdHk6VChcImJvcmRlck9wYWNpdHlcIixbW1wiYm9yZGVyLW9wYWNpdHlcIixbXCItLXR3LWJvcmRlci1vcGFjaXR5XCJdXV0pLGJhY2tncm91bmRDb2xvcjooe21hdGNoVXRpbGl0aWVzOnQsdGhlbWU6ZSxjb3JlUGx1Z2luczpyfSk9Pnt0KHtiZzpuPT5yKFwiYmFja2dyb3VuZE9wYWNpdHlcIik/Wih7Y29sb3I6bixwcm9wZXJ0eTpcImJhY2tncm91bmQtY29sb3JcIix2YXJpYWJsZTpcIi0tdHctYmctb3BhY2l0eVwifSk6e1wiYmFja2dyb3VuZC1jb2xvclwiOk0obil9fSx7dmFsdWVzOlEoZShcImJhY2tncm91bmRDb2xvclwiKSksdHlwZTpbXCJjb2xvclwiLFwiYW55XCJdfSl9LGJhY2tncm91bmRPcGFjaXR5OlQoXCJiYWNrZ3JvdW5kT3BhY2l0eVwiLFtbXCJiZy1vcGFjaXR5XCIsW1wiLS10dy1iZy1vcGFjaXR5XCJdXV0pLGJhY2tncm91bmRJbWFnZTpUKFwiYmFja2dyb3VuZEltYWdlXCIsW1tcImJnXCIsW1wiYmFja2dyb3VuZC1pbWFnZVwiXV1dLHt0eXBlOltcImxvb2t1cFwiLFwiaW1hZ2VcIixcInVybFwiXX0pLGdyYWRpZW50Q29sb3JTdG9wczooKCk9PntmdW5jdGlvbiB0KGUpe3JldHVybiB3ZShlLDAsXCJyZ2IoMjU1IDI1NSAyNTUgLyAwKVwiKX1yZXR1cm4gZnVuY3Rpb24oe21hdGNoVXRpbGl0aWVzOmUsdGhlbWU6cixhZGREZWZhdWx0czpufSl7bihcImdyYWRpZW50LWNvbG9yLXN0b3BzXCIse1wiLS10dy1ncmFkaWVudC1mcm9tLXBvc2l0aW9uXCI6XCIgXCIsXCItLXR3LWdyYWRpZW50LXZpYS1wb3NpdGlvblwiOlwiIFwiLFwiLS10dy1ncmFkaWVudC10by1wb3NpdGlvblwiOlwiIFwifSk7bGV0IGk9e3ZhbHVlczpRKHIoXCJncmFkaWVudENvbG9yU3RvcHNcIikpLHR5cGU6W1wiY29sb3JcIixcImFueVwiXX0sYT17dmFsdWVzOnIoXCJncmFkaWVudENvbG9yU3RvcFBvc2l0aW9uc1wiKSx0eXBlOltcImxlbmd0aFwiLFwicGVyY2VudGFnZVwiXX07ZSh7ZnJvbTpzPT57bGV0IG89dChzKTtyZXR1cm57XCJAZGVmYXVsdHMgZ3JhZGllbnQtY29sb3Itc3RvcHNcIjp7fSxcIi0tdHctZ3JhZGllbnQtZnJvbVwiOmAke00ocyl9IHZhcigtLXR3LWdyYWRpZW50LWZyb20tcG9zaXRpb24pYCxcIi0tdHctZ3JhZGllbnQtdG9cIjpgJHtvfSB2YXIoLS10dy1ncmFkaWVudC10by1wb3NpdGlvbilgLFwiLS10dy1ncmFkaWVudC1zdG9wc1wiOlwidmFyKC0tdHctZ3JhZGllbnQtZnJvbSksIHZhcigtLXR3LWdyYWRpZW50LXRvKVwifX19LGkpLGUoe2Zyb206cz0+KHtcIi0tdHctZ3JhZGllbnQtZnJvbS1wb3NpdGlvblwiOnN9KX0sYSksZSh7dmlhOnM9PntsZXQgbz10KHMpO3JldHVybntcIkBkZWZhdWx0cyBncmFkaWVudC1jb2xvci1zdG9wc1wiOnt9LFwiLS10dy1ncmFkaWVudC10b1wiOmAke299ICB2YXIoLS10dy1ncmFkaWVudC10by1wb3NpdGlvbilgLFwiLS10dy1ncmFkaWVudC1zdG9wc1wiOmB2YXIoLS10dy1ncmFkaWVudC1mcm9tKSwgJHtNKHMpfSB2YXIoLS10dy1ncmFkaWVudC12aWEtcG9zaXRpb24pLCB2YXIoLS10dy1ncmFkaWVudC10bylgfX19LGkpLGUoe3ZpYTpzPT4oe1wiLS10dy1ncmFkaWVudC12aWEtcG9zaXRpb25cIjpzfSl9LGEpLGUoe3RvOnM9Pih7XCJAZGVmYXVsdHMgZ3JhZGllbnQtY29sb3Itc3RvcHNcIjp7fSxcIi0tdHctZ3JhZGllbnQtdG9cIjpgJHtNKHMpfSB2YXIoLS10dy1ncmFkaWVudC10by1wb3NpdGlvbilgfSl9LGkpLGUoe3RvOnM9Pih7XCItLXR3LWdyYWRpZW50LXRvLXBvc2l0aW9uXCI6c30pfSxhKX19KSgpLGJveERlY29yYXRpb25CcmVhazooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi5kZWNvcmF0aW9uLXNsaWNlXCI6e1wiYm94LWRlY29yYXRpb24tYnJlYWtcIjpcInNsaWNlXCJ9LFwiLmRlY29yYXRpb24tY2xvbmVcIjp7XCJib3gtZGVjb3JhdGlvbi1icmVha1wiOlwiY2xvbmVcIn0sXCIuYm94LWRlY29yYXRpb24tc2xpY2VcIjp7XCJib3gtZGVjb3JhdGlvbi1icmVha1wiOlwic2xpY2VcIn0sXCIuYm94LWRlY29yYXRpb24tY2xvbmVcIjp7XCJib3gtZGVjb3JhdGlvbi1icmVha1wiOlwiY2xvbmVcIn19KX0sYmFja2dyb3VuZFNpemU6VChcImJhY2tncm91bmRTaXplXCIsW1tcImJnXCIsW1wiYmFja2dyb3VuZC1zaXplXCJdXV0se3R5cGU6W1wibG9va3VwXCIsXCJsZW5ndGhcIixcInBlcmNlbnRhZ2VcIixcInNpemVcIl19KSxiYWNrZ3JvdW5kQXR0YWNobWVudDooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi5iZy1maXhlZFwiOntcImJhY2tncm91bmQtYXR0YWNobWVudFwiOlwiZml4ZWRcIn0sXCIuYmctbG9jYWxcIjp7XCJiYWNrZ3JvdW5kLWF0dGFjaG1lbnRcIjpcImxvY2FsXCJ9LFwiLmJnLXNjcm9sbFwiOntcImJhY2tncm91bmQtYXR0YWNobWVudFwiOlwic2Nyb2xsXCJ9fSl9LGJhY2tncm91bmRDbGlwOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLmJnLWNsaXAtYm9yZGVyXCI6e1wiYmFja2dyb3VuZC1jbGlwXCI6XCJib3JkZXItYm94XCJ9LFwiLmJnLWNsaXAtcGFkZGluZ1wiOntcImJhY2tncm91bmQtY2xpcFwiOlwicGFkZGluZy1ib3hcIn0sXCIuYmctY2xpcC1jb250ZW50XCI6e1wiYmFja2dyb3VuZC1jbGlwXCI6XCJjb250ZW50LWJveFwifSxcIi5iZy1jbGlwLXRleHRcIjp7XCJiYWNrZ3JvdW5kLWNsaXBcIjpcInRleHRcIn19KX0sYmFja2dyb3VuZFBvc2l0aW9uOlQoXCJiYWNrZ3JvdW5kUG9zaXRpb25cIixbW1wiYmdcIixbXCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCJdXV0se3R5cGU6W1wibG9va3VwXCIsW1wicG9zaXRpb25cIix7cHJlZmVyT25Db25mbGljdDohMH1dXX0pLGJhY2tncm91bmRSZXBlYXQ6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuYmctcmVwZWF0XCI6e1wiYmFja2dyb3VuZC1yZXBlYXRcIjpcInJlcGVhdFwifSxcIi5iZy1uby1yZXBlYXRcIjp7XCJiYWNrZ3JvdW5kLXJlcGVhdFwiOlwibm8tcmVwZWF0XCJ9LFwiLmJnLXJlcGVhdC14XCI6e1wiYmFja2dyb3VuZC1yZXBlYXRcIjpcInJlcGVhdC14XCJ9LFwiLmJnLXJlcGVhdC15XCI6e1wiYmFja2dyb3VuZC1yZXBlYXRcIjpcInJlcGVhdC15XCJ9LFwiLmJnLXJlcGVhdC1yb3VuZFwiOntcImJhY2tncm91bmQtcmVwZWF0XCI6XCJyb3VuZFwifSxcIi5iZy1yZXBlYXQtc3BhY2VcIjp7XCJiYWNrZ3JvdW5kLXJlcGVhdFwiOlwic3BhY2VcIn19KX0sYmFja2dyb3VuZE9yaWdpbjooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi5iZy1vcmlnaW4tYm9yZGVyXCI6e1wiYmFja2dyb3VuZC1vcmlnaW5cIjpcImJvcmRlci1ib3hcIn0sXCIuYmctb3JpZ2luLXBhZGRpbmdcIjp7XCJiYWNrZ3JvdW5kLW9yaWdpblwiOlwicGFkZGluZy1ib3hcIn0sXCIuYmctb3JpZ2luLWNvbnRlbnRcIjp7XCJiYWNrZ3JvdW5kLW9yaWdpblwiOlwiY29udGVudC1ib3hcIn19KX0sZmlsbDooe21hdGNoVXRpbGl0aWVzOnQsdGhlbWU6ZX0pPT57dCh7ZmlsbDpyPT4oe2ZpbGw6TShyKX0pfSx7dmFsdWVzOlEoZShcImZpbGxcIikpLHR5cGU6W1wiY29sb3JcIixcImFueVwiXX0pfSxzdHJva2U6KHttYXRjaFV0aWxpdGllczp0LHRoZW1lOmV9KT0+e3Qoe3N0cm9rZTpyPT4oe3N0cm9rZTpNKHIpfSl9LHt2YWx1ZXM6UShlKFwic3Ryb2tlXCIpKSx0eXBlOltcImNvbG9yXCIsXCJ1cmxcIixcImFueVwiXX0pfSxzdHJva2VXaWR0aDpUKFwic3Ryb2tlV2lkdGhcIixbW1wic3Ryb2tlXCIsW1wic3Ryb2tlLXdpZHRoXCJdXV0se3R5cGU6W1wibGVuZ3RoXCIsXCJudW1iZXJcIixcInBlcmNlbnRhZ2VcIl19KSxvYmplY3RGaXQ6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIub2JqZWN0LWNvbnRhaW5cIjp7XCJvYmplY3QtZml0XCI6XCJjb250YWluXCJ9LFwiLm9iamVjdC1jb3ZlclwiOntcIm9iamVjdC1maXRcIjpcImNvdmVyXCJ9LFwiLm9iamVjdC1maWxsXCI6e1wib2JqZWN0LWZpdFwiOlwiZmlsbFwifSxcIi5vYmplY3Qtbm9uZVwiOntcIm9iamVjdC1maXRcIjpcIm5vbmVcIn0sXCIub2JqZWN0LXNjYWxlLWRvd25cIjp7XCJvYmplY3QtZml0XCI6XCJzY2FsZS1kb3duXCJ9fSl9LG9iamVjdFBvc2l0aW9uOlQoXCJvYmplY3RQb3NpdGlvblwiLFtbXCJvYmplY3RcIixbXCJvYmplY3QtcG9zaXRpb25cIl1dXSkscGFkZGluZzpUKFwicGFkZGluZ1wiLFtbXCJwXCIsW1wicGFkZGluZ1wiXV0sW1tcInB4XCIsW1wicGFkZGluZy1sZWZ0XCIsXCJwYWRkaW5nLXJpZ2h0XCJdXSxbXCJweVwiLFtcInBhZGRpbmctdG9wXCIsXCJwYWRkaW5nLWJvdHRvbVwiXV1dLFtbXCJwc1wiLFtcInBhZGRpbmctaW5saW5lLXN0YXJ0XCJdXSxbXCJwZVwiLFtcInBhZGRpbmctaW5saW5lLWVuZFwiXV0sW1wicHRcIixbXCJwYWRkaW5nLXRvcFwiXV0sW1wicHJcIixbXCJwYWRkaW5nLXJpZ2h0XCJdXSxbXCJwYlwiLFtcInBhZGRpbmctYm90dG9tXCJdXSxbXCJwbFwiLFtcInBhZGRpbmctbGVmdFwiXV1dXSksdGV4dEFsaWduOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLnRleHQtbGVmdFwiOntcInRleHQtYWxpZ25cIjpcImxlZnRcIn0sXCIudGV4dC1jZW50ZXJcIjp7XCJ0ZXh0LWFsaWduXCI6XCJjZW50ZXJcIn0sXCIudGV4dC1yaWdodFwiOntcInRleHQtYWxpZ25cIjpcInJpZ2h0XCJ9LFwiLnRleHQtanVzdGlmeVwiOntcInRleHQtYWxpZ25cIjpcImp1c3RpZnlcIn0sXCIudGV4dC1zdGFydFwiOntcInRleHQtYWxpZ25cIjpcInN0YXJ0XCJ9LFwiLnRleHQtZW5kXCI6e1widGV4dC1hbGlnblwiOlwiZW5kXCJ9fSl9LHRleHRJbmRlbnQ6VChcInRleHRJbmRlbnRcIixbW1wiaW5kZW50XCIsW1widGV4dC1pbmRlbnRcIl1dXSx7c3VwcG9ydHNOZWdhdGl2ZVZhbHVlczohMH0pLHZlcnRpY2FsQWxpZ246KHthZGRVdGlsaXRpZXM6dCxtYXRjaFV0aWxpdGllczplfSk9Pnt0KHtcIi5hbGlnbi1iYXNlbGluZVwiOntcInZlcnRpY2FsLWFsaWduXCI6XCJiYXNlbGluZVwifSxcIi5hbGlnbi10b3BcIjp7XCJ2ZXJ0aWNhbC1hbGlnblwiOlwidG9wXCJ9LFwiLmFsaWduLW1pZGRsZVwiOntcInZlcnRpY2FsLWFsaWduXCI6XCJtaWRkbGVcIn0sXCIuYWxpZ24tYm90dG9tXCI6e1widmVydGljYWwtYWxpZ25cIjpcImJvdHRvbVwifSxcIi5hbGlnbi10ZXh0LXRvcFwiOntcInZlcnRpY2FsLWFsaWduXCI6XCJ0ZXh0LXRvcFwifSxcIi5hbGlnbi10ZXh0LWJvdHRvbVwiOntcInZlcnRpY2FsLWFsaWduXCI6XCJ0ZXh0LWJvdHRvbVwifSxcIi5hbGlnbi1zdWJcIjp7XCJ2ZXJ0aWNhbC1hbGlnblwiOlwic3ViXCJ9LFwiLmFsaWduLXN1cGVyXCI6e1widmVydGljYWwtYWxpZ25cIjpcInN1cGVyXCJ9fSksZSh7YWxpZ246cj0+KHtcInZlcnRpY2FsLWFsaWduXCI6cn0pfSl9LGZvbnRGYW1pbHk6KHttYXRjaFV0aWxpdGllczp0LHRoZW1lOmV9KT0+e3Qoe2ZvbnQ6cj0+e2xldFtuLGk9e31dPUFycmF5LmlzQXJyYXkocikmJlgoclsxXSk/cjpbcl0se2ZvbnRGZWF0dXJlU2V0dGluZ3M6YSxmb250VmFyaWF0aW9uU2V0dGluZ3M6c309aTtyZXR1cm57XCJmb250LWZhbWlseVwiOkFycmF5LmlzQXJyYXkobik/bi5qb2luKFwiLCBcIik6biwuLi5hPT09dm9pZCAwP3t9OntcImZvbnQtZmVhdHVyZS1zZXR0aW5nc1wiOmF9LC4uLnM9PT12b2lkIDA/e306e1wiZm9udC12YXJpYXRpb24tc2V0dGluZ3NcIjpzfX19fSx7dmFsdWVzOmUoXCJmb250RmFtaWx5XCIpLHR5cGU6W1wibG9va3VwXCIsXCJnZW5lcmljLW5hbWVcIixcImZhbWlseS1uYW1lXCJdfSl9LGZvbnRTaXplOih7bWF0Y2hVdGlsaXRpZXM6dCx0aGVtZTplfSk9Pnt0KHt0ZXh0OihyLHttb2RpZmllcjpufSk9PntsZXRbaSxhXT1BcnJheS5pc0FycmF5KHIpP3I6W3JdO2lmKG4pcmV0dXJue1wiZm9udC1zaXplXCI6aSxcImxpbmUtaGVpZ2h0XCI6bn07bGV0e2xpbmVIZWlnaHQ6cyxsZXR0ZXJTcGFjaW5nOm8sZm9udFdlaWdodDpsfT1YKGEpP2E6e2xpbmVIZWlnaHQ6YX07cmV0dXJue1wiZm9udC1zaXplXCI6aSwuLi5zPT09dm9pZCAwP3t9OntcImxpbmUtaGVpZ2h0XCI6c30sLi4ubz09PXZvaWQgMD97fTp7XCJsZXR0ZXItc3BhY2luZ1wiOm99LC4uLmw9PT12b2lkIDA/e306e1wiZm9udC13ZWlnaHRcIjpsfX19fSx7dmFsdWVzOmUoXCJmb250U2l6ZVwiKSxtb2RpZmllcnM6ZShcImxpbmVIZWlnaHRcIiksdHlwZTpbXCJhYnNvbHV0ZS1zaXplXCIsXCJyZWxhdGl2ZS1zaXplXCIsXCJsZW5ndGhcIixcInBlcmNlbnRhZ2VcIl19KX0sZm9udFdlaWdodDpUKFwiZm9udFdlaWdodFwiLFtbXCJmb250XCIsW1wiZm9udFdlaWdodFwiXV1dLHt0eXBlOltcImxvb2t1cFwiLFwibnVtYmVyXCIsXCJhbnlcIl19KSx0ZXh0VHJhbnNmb3JtOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLnVwcGVyY2FzZVwiOntcInRleHQtdHJhbnNmb3JtXCI6XCJ1cHBlcmNhc2VcIn0sXCIubG93ZXJjYXNlXCI6e1widGV4dC10cmFuc2Zvcm1cIjpcImxvd2VyY2FzZVwifSxcIi5jYXBpdGFsaXplXCI6e1widGV4dC10cmFuc2Zvcm1cIjpcImNhcGl0YWxpemVcIn0sXCIubm9ybWFsLWNhc2VcIjp7XCJ0ZXh0LXRyYW5zZm9ybVwiOlwibm9uZVwifX0pfSxmb250U3R5bGU6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuaXRhbGljXCI6e1wiZm9udC1zdHlsZVwiOlwiaXRhbGljXCJ9LFwiLm5vdC1pdGFsaWNcIjp7XCJmb250LXN0eWxlXCI6XCJub3JtYWxcIn19KX0sZm9udFZhcmlhbnROdW1lcmljOih7YWRkRGVmYXVsdHM6dCxhZGRVdGlsaXRpZXM6ZX0pPT57bGV0IHI9XCJ2YXIoLS10dy1vcmRpbmFsKSB2YXIoLS10dy1zbGFzaGVkLXplcm8pIHZhcigtLXR3LW51bWVyaWMtZmlndXJlKSB2YXIoLS10dy1udW1lcmljLXNwYWNpbmcpIHZhcigtLXR3LW51bWVyaWMtZnJhY3Rpb24pXCI7dChcImZvbnQtdmFyaWFudC1udW1lcmljXCIse1wiLS10dy1vcmRpbmFsXCI6XCIgXCIsXCItLXR3LXNsYXNoZWQtemVyb1wiOlwiIFwiLFwiLS10dy1udW1lcmljLWZpZ3VyZVwiOlwiIFwiLFwiLS10dy1udW1lcmljLXNwYWNpbmdcIjpcIiBcIixcIi0tdHctbnVtZXJpYy1mcmFjdGlvblwiOlwiIFwifSksZSh7XCIubm9ybWFsLW51bXNcIjp7XCJmb250LXZhcmlhbnQtbnVtZXJpY1wiOlwibm9ybWFsXCJ9LFwiLm9yZGluYWxcIjp7XCJAZGVmYXVsdHMgZm9udC12YXJpYW50LW51bWVyaWNcIjp7fSxcIi0tdHctb3JkaW5hbFwiOlwib3JkaW5hbFwiLFwiZm9udC12YXJpYW50LW51bWVyaWNcIjpyfSxcIi5zbGFzaGVkLXplcm9cIjp7XCJAZGVmYXVsdHMgZm9udC12YXJpYW50LW51bWVyaWNcIjp7fSxcIi0tdHctc2xhc2hlZC16ZXJvXCI6XCJzbGFzaGVkLXplcm9cIixcImZvbnQtdmFyaWFudC1udW1lcmljXCI6cn0sXCIubGluaW5nLW51bXNcIjp7XCJAZGVmYXVsdHMgZm9udC12YXJpYW50LW51bWVyaWNcIjp7fSxcIi0tdHctbnVtZXJpYy1maWd1cmVcIjpcImxpbmluZy1udW1zXCIsXCJmb250LXZhcmlhbnQtbnVtZXJpY1wiOnJ9LFwiLm9sZHN0eWxlLW51bXNcIjp7XCJAZGVmYXVsdHMgZm9udC12YXJpYW50LW51bWVyaWNcIjp7fSxcIi0tdHctbnVtZXJpYy1maWd1cmVcIjpcIm9sZHN0eWxlLW51bXNcIixcImZvbnQtdmFyaWFudC1udW1lcmljXCI6cn0sXCIucHJvcG9ydGlvbmFsLW51bXNcIjp7XCJAZGVmYXVsdHMgZm9udC12YXJpYW50LW51bWVyaWNcIjp7fSxcIi0tdHctbnVtZXJpYy1zcGFjaW5nXCI6XCJwcm9wb3J0aW9uYWwtbnVtc1wiLFwiZm9udC12YXJpYW50LW51bWVyaWNcIjpyfSxcIi50YWJ1bGFyLW51bXNcIjp7XCJAZGVmYXVsdHMgZm9udC12YXJpYW50LW51bWVyaWNcIjp7fSxcIi0tdHctbnVtZXJpYy1zcGFjaW5nXCI6XCJ0YWJ1bGFyLW51bXNcIixcImZvbnQtdmFyaWFudC1udW1lcmljXCI6cn0sXCIuZGlhZ29uYWwtZnJhY3Rpb25zXCI6e1wiQGRlZmF1bHRzIGZvbnQtdmFyaWFudC1udW1lcmljXCI6e30sXCItLXR3LW51bWVyaWMtZnJhY3Rpb25cIjpcImRpYWdvbmFsLWZyYWN0aW9uc1wiLFwiZm9udC12YXJpYW50LW51bWVyaWNcIjpyfSxcIi5zdGFja2VkLWZyYWN0aW9uc1wiOntcIkBkZWZhdWx0cyBmb250LXZhcmlhbnQtbnVtZXJpY1wiOnt9LFwiLS10dy1udW1lcmljLWZyYWN0aW9uXCI6XCJzdGFja2VkLWZyYWN0aW9uc1wiLFwiZm9udC12YXJpYW50LW51bWVyaWNcIjpyfX0pfSxsaW5lSGVpZ2h0OlQoXCJsaW5lSGVpZ2h0XCIsW1tcImxlYWRpbmdcIixbXCJsaW5lSGVpZ2h0XCJdXV0pLGxldHRlclNwYWNpbmc6VChcImxldHRlclNwYWNpbmdcIixbW1widHJhY2tpbmdcIixbXCJsZXR0ZXJTcGFjaW5nXCJdXV0se3N1cHBvcnRzTmVnYXRpdmVWYWx1ZXM6ITB9KSx0ZXh0Q29sb3I6KHttYXRjaFV0aWxpdGllczp0LHRoZW1lOmUsY29yZVBsdWdpbnM6cn0pPT57dCh7dGV4dDpuPT5yKFwidGV4dE9wYWNpdHlcIik/Wih7Y29sb3I6bixwcm9wZXJ0eTpcImNvbG9yXCIsdmFyaWFibGU6XCItLXR3LXRleHQtb3BhY2l0eVwifSk6e2NvbG9yOk0obil9fSx7dmFsdWVzOlEoZShcInRleHRDb2xvclwiKSksdHlwZTpbXCJjb2xvclwiLFwiYW55XCJdfSl9LHRleHRPcGFjaXR5OlQoXCJ0ZXh0T3BhY2l0eVwiLFtbXCJ0ZXh0LW9wYWNpdHlcIixbXCItLXR3LXRleHQtb3BhY2l0eVwiXV1dKSx0ZXh0RGVjb3JhdGlvbjooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi51bmRlcmxpbmVcIjp7XCJ0ZXh0LWRlY29yYXRpb24tbGluZVwiOlwidW5kZXJsaW5lXCJ9LFwiLm92ZXJsaW5lXCI6e1widGV4dC1kZWNvcmF0aW9uLWxpbmVcIjpcIm92ZXJsaW5lXCJ9LFwiLmxpbmUtdGhyb3VnaFwiOntcInRleHQtZGVjb3JhdGlvbi1saW5lXCI6XCJsaW5lLXRocm91Z2hcIn0sXCIubm8tdW5kZXJsaW5lXCI6e1widGV4dC1kZWNvcmF0aW9uLWxpbmVcIjpcIm5vbmVcIn19KX0sdGV4dERlY29yYXRpb25Db2xvcjooe21hdGNoVXRpbGl0aWVzOnQsdGhlbWU6ZX0pPT57dCh7ZGVjb3JhdGlvbjpyPT4oe1widGV4dC1kZWNvcmF0aW9uLWNvbG9yXCI6TShyKX0pfSx7dmFsdWVzOlEoZShcInRleHREZWNvcmF0aW9uQ29sb3JcIikpLHR5cGU6W1wiY29sb3JcIixcImFueVwiXX0pfSx0ZXh0RGVjb3JhdGlvblN0eWxlOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLmRlY29yYXRpb24tc29saWRcIjp7XCJ0ZXh0LWRlY29yYXRpb24tc3R5bGVcIjpcInNvbGlkXCJ9LFwiLmRlY29yYXRpb24tZG91YmxlXCI6e1widGV4dC1kZWNvcmF0aW9uLXN0eWxlXCI6XCJkb3VibGVcIn0sXCIuZGVjb3JhdGlvbi1kb3R0ZWRcIjp7XCJ0ZXh0LWRlY29yYXRpb24tc3R5bGVcIjpcImRvdHRlZFwifSxcIi5kZWNvcmF0aW9uLWRhc2hlZFwiOntcInRleHQtZGVjb3JhdGlvbi1zdHlsZVwiOlwiZGFzaGVkXCJ9LFwiLmRlY29yYXRpb24td2F2eVwiOntcInRleHQtZGVjb3JhdGlvbi1zdHlsZVwiOlwid2F2eVwifX0pfSx0ZXh0RGVjb3JhdGlvblRoaWNrbmVzczpUKFwidGV4dERlY29yYXRpb25UaGlja25lc3NcIixbW1wiZGVjb3JhdGlvblwiLFtcInRleHQtZGVjb3JhdGlvbi10aGlja25lc3NcIl1dXSx7dHlwZTpbXCJsZW5ndGhcIixcInBlcmNlbnRhZ2VcIl19KSx0ZXh0VW5kZXJsaW5lT2Zmc2V0OlQoXCJ0ZXh0VW5kZXJsaW5lT2Zmc2V0XCIsW1tcInVuZGVybGluZS1vZmZzZXRcIixbXCJ0ZXh0LXVuZGVybGluZS1vZmZzZXRcIl1dXSx7dHlwZTpbXCJsZW5ndGhcIixcInBlcmNlbnRhZ2VcIixcImFueVwiXX0pLGZvbnRTbW9vdGhpbmc6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIuYW50aWFsaWFzZWRcIjp7XCItd2Via2l0LWZvbnQtc21vb3RoaW5nXCI6XCJhbnRpYWxpYXNlZFwiLFwiLW1vei1vc3gtZm9udC1zbW9vdGhpbmdcIjpcImdyYXlzY2FsZVwifSxcIi5zdWJwaXhlbC1hbnRpYWxpYXNlZFwiOntcIi13ZWJraXQtZm9udC1zbW9vdGhpbmdcIjpcImF1dG9cIixcIi1tb3otb3N4LWZvbnQtc21vb3RoaW5nXCI6XCJhdXRvXCJ9fSl9LHBsYWNlaG9sZGVyQ29sb3I6KHttYXRjaFV0aWxpdGllczp0LHRoZW1lOmUsY29yZVBsdWdpbnM6cn0pPT57dCh7cGxhY2Vob2xkZXI6bj0+cihcInBsYWNlaG9sZGVyT3BhY2l0eVwiKT97XCImOjpwbGFjZWhvbGRlclwiOlooe2NvbG9yOm4scHJvcGVydHk6XCJjb2xvclwiLHZhcmlhYmxlOlwiLS10dy1wbGFjZWhvbGRlci1vcGFjaXR5XCJ9KX06e1wiJjo6cGxhY2Vob2xkZXJcIjp7Y29sb3I6TShuKX19fSx7dmFsdWVzOlEoZShcInBsYWNlaG9sZGVyQ29sb3JcIikpLHR5cGU6W1wiY29sb3JcIixcImFueVwiXX0pfSxwbGFjZWhvbGRlck9wYWNpdHk6KHttYXRjaFV0aWxpdGllczp0LHRoZW1lOmV9KT0+e3Qoe1wicGxhY2Vob2xkZXItb3BhY2l0eVwiOnI9Pih7W1wiJjo6cGxhY2Vob2xkZXJcIl06e1wiLS10dy1wbGFjZWhvbGRlci1vcGFjaXR5XCI6cn19KX0se3ZhbHVlczplKFwicGxhY2Vob2xkZXJPcGFjaXR5XCIpfSl9LGNhcmV0Q29sb3I6KHttYXRjaFV0aWxpdGllczp0LHRoZW1lOmV9KT0+e3Qoe2NhcmV0OnI9Pih7XCJjYXJldC1jb2xvclwiOk0ocil9KX0se3ZhbHVlczpRKGUoXCJjYXJldENvbG9yXCIpKSx0eXBlOltcImNvbG9yXCIsXCJhbnlcIl19KX0sYWNjZW50Q29sb3I6KHttYXRjaFV0aWxpdGllczp0LHRoZW1lOmV9KT0+e3Qoe2FjY2VudDpyPT4oe1wiYWNjZW50LWNvbG9yXCI6TShyKX0pfSx7dmFsdWVzOlEoZShcImFjY2VudENvbG9yXCIpKSx0eXBlOltcImNvbG9yXCIsXCJhbnlcIl19KX0sb3BhY2l0eTpUKFwib3BhY2l0eVwiLFtbXCJvcGFjaXR5XCIsW1wib3BhY2l0eVwiXV1dKSxiYWNrZ3JvdW5kQmxlbmRNb2RlOih7YWRkVXRpbGl0aWVzOnR9KT0+e3Qoe1wiLmJnLWJsZW5kLW5vcm1hbFwiOntcImJhY2tncm91bmQtYmxlbmQtbW9kZVwiOlwibm9ybWFsXCJ9LFwiLmJnLWJsZW5kLW11bHRpcGx5XCI6e1wiYmFja2dyb3VuZC1ibGVuZC1tb2RlXCI6XCJtdWx0aXBseVwifSxcIi5iZy1ibGVuZC1zY3JlZW5cIjp7XCJiYWNrZ3JvdW5kLWJsZW5kLW1vZGVcIjpcInNjcmVlblwifSxcIi5iZy1ibGVuZC1vdmVybGF5XCI6e1wiYmFja2dyb3VuZC1ibGVuZC1tb2RlXCI6XCJvdmVybGF5XCJ9LFwiLmJnLWJsZW5kLWRhcmtlblwiOntcImJhY2tncm91bmQtYmxlbmQtbW9kZVwiOlwiZGFya2VuXCJ9LFwiLmJnLWJsZW5kLWxpZ2h0ZW5cIjp7XCJiYWNrZ3JvdW5kLWJsZW5kLW1vZGVcIjpcImxpZ2h0ZW5cIn0sXCIuYmctYmxlbmQtY29sb3ItZG9kZ2VcIjp7XCJiYWNrZ3JvdW5kLWJsZW5kLW1vZGVcIjpcImNvbG9yLWRvZGdlXCJ9LFwiLmJnLWJsZW5kLWNvbG9yLWJ1cm5cIjp7XCJiYWNrZ3JvdW5kLWJsZW5kLW1vZGVcIjpcImNvbG9yLWJ1cm5cIn0sXCIuYmctYmxlbmQtaGFyZC1saWdodFwiOntcImJhY2tncm91bmQtYmxlbmQtbW9kZVwiOlwiaGFyZC1saWdodFwifSxcIi5iZy1ibGVuZC1zb2Z0LWxpZ2h0XCI6e1wiYmFja2dyb3VuZC1ibGVuZC1tb2RlXCI6XCJzb2Z0LWxpZ2h0XCJ9LFwiLmJnLWJsZW5kLWRpZmZlcmVuY2VcIjp7XCJiYWNrZ3JvdW5kLWJsZW5kLW1vZGVcIjpcImRpZmZlcmVuY2VcIn0sXCIuYmctYmxlbmQtZXhjbHVzaW9uXCI6e1wiYmFja2dyb3VuZC1ibGVuZC1tb2RlXCI6XCJleGNsdXNpb25cIn0sXCIuYmctYmxlbmQtaHVlXCI6e1wiYmFja2dyb3VuZC1ibGVuZC1tb2RlXCI6XCJodWVcIn0sXCIuYmctYmxlbmQtc2F0dXJhdGlvblwiOntcImJhY2tncm91bmQtYmxlbmQtbW9kZVwiOlwic2F0dXJhdGlvblwifSxcIi5iZy1ibGVuZC1jb2xvclwiOntcImJhY2tncm91bmQtYmxlbmQtbW9kZVwiOlwiY29sb3JcIn0sXCIuYmctYmxlbmQtbHVtaW5vc2l0eVwiOntcImJhY2tncm91bmQtYmxlbmQtbW9kZVwiOlwibHVtaW5vc2l0eVwifX0pfSxtaXhCbGVuZE1vZGU6KHthZGRVdGlsaXRpZXM6dH0pPT57dCh7XCIubWl4LWJsZW5kLW5vcm1hbFwiOntcIm1peC1ibGVuZC1tb2RlXCI6XCJub3JtYWxcIn0sXCIubWl4LWJsZW5kLW11bHRpcGx5XCI6e1wibWl4LWJsZW5kLW1vZGVcIjpcIm11bHRpcGx5XCJ9LFwiLm1peC1ibGVuZC1zY3JlZW5cIjp7XCJtaXgtYmxlbmQtbW9kZVwiOlwic2NyZWVuXCJ9LFwiLm1peC1ibGVuZC1vdmVybGF5XCI6e1wibWl4LWJsZW5kLW1vZGVcIjpcIm92ZXJsYXlcIn0sXCIubWl4LWJsZW5kLWRhcmtlblwiOntcIm1peC1ibGVuZC1tb2RlXCI6XCJkYXJrZW5cIn0sXCIubWl4LWJsZW5kLWxpZ2h0ZW5cIjp7XCJtaXgtYmxlbmQtbW9kZVwiOlwibGlnaHRlblwifSxcIi5taXgtYmxlbmQtY29sb3ItZG9kZ2VcIjp7XCJtaXgtYmxlbmQtbW9kZVwiOlwiY29sb3ItZG9kZ2VcIn0sXCIubWl4LWJsZW5kLWNvbG9yLWJ1cm5cIjp7XCJtaXgtYmxlbmQtbW9kZVwiOlwiY29sb3ItYnVyblwifSxcIi5taXgtYmxlbmQtaGFyZC1saWdodFwiOntcIm1peC1ibGVuZC1tb2RlXCI6XCJoYXJkLWxpZ2h0XCJ9LFwiLm1peC1ibGVuZC1zb2Z0LWxpZ2h0XCI6e1wibWl4LWJsZW5kLW1vZGVcIjpcInNvZnQtbGlnaHRcIn0sXCIubWl4LWJsZW5kLWRpZmZlcmVuY2VcIjp7XCJtaXgtYmxlbmQtbW9kZVwiOlwiZGlmZmVyZW5jZVwifSxcIi5taXgtYmxlbmQtZXhjbHVzaW9uXCI6e1wibWl4LWJsZW5kLW1vZGVcIjpcImV4Y2x1c2lvblwifSxcIi5taXgtYmxlbmQtaHVlXCI6e1wibWl4LWJsZW5kLW1vZGVcIjpcImh1ZVwifSxcIi5taXgtYmxlbmQtc2F0dXJhdGlvblwiOntcIm1peC1ibGVuZC1tb2RlXCI6XCJzYXR1cmF0aW9uXCJ9LFwiLm1peC1ibGVuZC1jb2xvclwiOntcIm1peC1ibGVuZC1tb2RlXCI6XCJjb2xvclwifSxcIi5taXgtYmxlbmQtbHVtaW5vc2l0eVwiOntcIm1peC1ibGVuZC1tb2RlXCI6XCJsdW1pbm9zaXR5XCJ9LFwiLm1peC1ibGVuZC1wbHVzLWxpZ2h0ZXJcIjp7XCJtaXgtYmxlbmQtbW9kZVwiOlwicGx1cy1saWdodGVyXCJ9fSl9LGJveFNoYWRvdzooKCk9PntsZXQgdD1DZShcImJveFNoYWRvd1wiKSxlPVtcInZhcigtLXR3LXJpbmctb2Zmc2V0LXNoYWRvdywgMCAwICMwMDAwKVwiLFwidmFyKC0tdHctcmluZy1zaGFkb3csIDAgMCAjMDAwMClcIixcInZhcigtLXR3LXNoYWRvdylcIl0uam9pbihcIiwgXCIpO3JldHVybiBmdW5jdGlvbih7bWF0Y2hVdGlsaXRpZXM6cixhZGREZWZhdWx0czpuLHRoZW1lOml9KXtuKFwiIGJveC1zaGFkb3dcIix7XCItLXR3LXJpbmctb2Zmc2V0LXNoYWRvd1wiOlwiMCAwICMwMDAwXCIsXCItLXR3LXJpbmctc2hhZG93XCI6XCIwIDAgIzAwMDBcIixcIi0tdHctc2hhZG93XCI6XCIwIDAgIzAwMDBcIixcIi0tdHctc2hhZG93LWNvbG9yZWRcIjpcIjAgMCAjMDAwMFwifSkscih7c2hhZG93OmE9PnthPXQoYSk7bGV0IHM9bm4oYSk7Zm9yKGxldCBvIG9mIHMpIW8udmFsaWR8fChvLmNvbG9yPVwidmFyKC0tdHctc2hhZG93LWNvbG9yKVwiKTtyZXR1cm57XCJAZGVmYXVsdHMgYm94LXNoYWRvd1wiOnt9LFwiLS10dy1zaGFkb3dcIjphPT09XCJub25lXCI/XCIwIDAgIzAwMDBcIjphLFwiLS10dy1zaGFkb3ctY29sb3JlZFwiOmE9PT1cIm5vbmVcIj9cIjAgMCAjMDAwMFwiOlZ1KHMpLFwiYm94LXNoYWRvd1wiOmV9fX0se3ZhbHVlczppKFwiYm94U2hhZG93XCIpLHR5cGU6W1wic2hhZG93XCJdfSl9fSkoKSxib3hTaGFkb3dDb2xvcjooe21hdGNoVXRpbGl0aWVzOnQsdGhlbWU6ZX0pPT57dCh7c2hhZG93OnI9Pih7XCItLXR3LXNoYWRvdy1jb2xvclwiOk0ociksXCItLXR3LXNoYWRvd1wiOlwidmFyKC0tdHctc2hhZG93LWNvbG9yZWQpXCJ9KX0se3ZhbHVlczpRKGUoXCJib3hTaGFkb3dDb2xvclwiKSksdHlwZTpbXCJjb2xvclwiLFwiYW55XCJdfSl9LG91dGxpbmVTdHlsZTooe2FkZFV0aWxpdGllczp0fSk9Pnt0KHtcIi5vdXRsaW5lLW5vbmVcIjp7b3V0bGluZTpcIjJweCBzb2xpZCB0cmFuc3BhcmVudFwiLFwib3V0bGluZS1vZmZzZXRcIjpcIjJweFwifSxcIi5vdXRsaW5lXCI6e1wib3V0bGluZS1zdHlsZVwiOlwic29saWRcIn0sXCIub3V0bGluZS1kYXNoZWRcIjp7XCJvdXRsaW5lLXN0eWxlXCI6XCJkYXNoZWRcIn0sXCIub3V0bGluZS1kb3R0ZWRcIjp7XCJvdXRsaW5lLXN0eWxlXCI6XCJkb3R0ZWRcIn0sXCIub3V0bGluZS1kb3VibGVcIjp7XCJvdXRsaW5lLXN0eWxlXCI6XCJkb3VibGVcIn19KX0sb3V0bGluZVdpZHRoOlQoXCJvdXRsaW5lV2lkdGhcIixbW1wib3V0bGluZVwiLFtcIm91dGxpbmUtd2lkdGhcIl1dXSx7dHlwZTpbXCJsZW5ndGhcIixcIm51bWJlclwiLFwicGVyY2VudGFnZVwiXX0pLG91dGxpbmVPZmZzZXQ6VChcIm91dGxpbmVPZmZzZXRcIixbW1wib3V0bGluZS1vZmZzZXRcIixbXCJvdXRsaW5lLW9mZnNldFwiXV1dLHt0eXBlOltcImxlbmd0aFwiLFwibnVtYmVyXCIsXCJwZXJjZW50YWdlXCIsXCJhbnlcIl0sc3VwcG9ydHNOZWdhdGl2ZVZhbHVlczohMH0pLG91dGxpbmVDb2xvcjooe21hdGNoVXRpbGl0aWVzOnQsdGhlbWU6ZX0pPT57dCh7b3V0bGluZTpyPT4oe1wib3V0bGluZS1jb2xvclwiOk0ocil9KX0se3ZhbHVlczpRKGUoXCJvdXRsaW5lQ29sb3JcIikpLHR5cGU6W1wiY29sb3JcIixcImFueVwiXX0pfSxyaW5nV2lkdGg6KHttYXRjaFV0aWxpdGllczp0LGFkZERlZmF1bHRzOmUsYWRkVXRpbGl0aWVzOnIsdGhlbWU6bixjb25maWc6aX0pPT57bGV0IGE9KCgpPT57dmFyIG8sbDtpZihHKGkoKSxcInJlc3BlY3REZWZhdWx0UmluZ0NvbG9yT3BhY2l0eVwiKSlyZXR1cm4gbihcInJpbmdDb2xvci5ERUZBVUxUXCIpO2xldCBzPW4oXCJyaW5nT3BhY2l0eS5ERUZBVUxUXCIsXCIwLjVcIik7cmV0dXJuKG89bihcInJpbmdDb2xvclwiKSkhPW51bGwmJm8uREVGQVVMVD93ZSgobD1uKFwicmluZ0NvbG9yXCIpKT09bnVsbD92b2lkIDA6bC5ERUZBVUxULHMsYHJnYigxNDcgMTk3IDI1MyAvICR7c30pYCk6YHJnYigxNDcgMTk3IDI1MyAvICR7c30pYH0pKCk7ZShcInJpbmctd2lkdGhcIix7XCItLXR3LXJpbmctaW5zZXRcIjpcIiBcIixcIi0tdHctcmluZy1vZmZzZXQtd2lkdGhcIjpuKFwicmluZ09mZnNldFdpZHRoLkRFRkFVTFRcIixcIjBweFwiKSxcIi0tdHctcmluZy1vZmZzZXQtY29sb3JcIjpuKFwicmluZ09mZnNldENvbG9yLkRFRkFVTFRcIixcIiNmZmZcIiksXCItLXR3LXJpbmctY29sb3JcIjphLFwiLS10dy1yaW5nLW9mZnNldC1zaGFkb3dcIjpcIjAgMCAjMDAwMFwiLFwiLS10dy1yaW5nLXNoYWRvd1wiOlwiMCAwICMwMDAwXCIsXCItLXR3LXNoYWRvd1wiOlwiMCAwICMwMDAwXCIsXCItLXR3LXNoYWRvdy1jb2xvcmVkXCI6XCIwIDAgIzAwMDBcIn0pLHQoe3Jpbmc6cz0+KHtcIkBkZWZhdWx0cyByaW5nLXdpZHRoXCI6e30sXCItLXR3LXJpbmctb2Zmc2V0LXNoYWRvd1wiOlwidmFyKC0tdHctcmluZy1pbnNldCkgMCAwIDAgdmFyKC0tdHctcmluZy1vZmZzZXQtd2lkdGgpIHZhcigtLXR3LXJpbmctb2Zmc2V0LWNvbG9yKVwiLFwiLS10dy1yaW5nLXNoYWRvd1wiOmB2YXIoLS10dy1yaW5nLWluc2V0KSAwIDAgMCBjYWxjKCR7c30gKyB2YXIoLS10dy1yaW5nLW9mZnNldC13aWR0aCkpIHZhcigtLXR3LXJpbmctY29sb3IpYCxcImJveC1zaGFkb3dcIjpbXCJ2YXIoLS10dy1yaW5nLW9mZnNldC1zaGFkb3cpXCIsXCJ2YXIoLS10dy1yaW5nLXNoYWRvdylcIixcInZhcigtLXR3LXNoYWRvdywgMCAwICMwMDAwKVwiXS5qb2luKFwiLCBcIil9KX0se3ZhbHVlczpuKFwicmluZ1dpZHRoXCIpLHR5cGU6XCJsZW5ndGhcIn0pLHIoe1wiLnJpbmctaW5zZXRcIjp7XCJAZGVmYXVsdHMgcmluZy13aWR0aFwiOnt9LFwiLS10dy1yaW5nLWluc2V0XCI6XCJpbnNldFwifX0pfSxyaW5nQ29sb3I6KHttYXRjaFV0aWxpdGllczp0LHRoZW1lOmUsY29yZVBsdWdpbnM6cn0pPT57dCh7cmluZzpuPT5yKFwicmluZ09wYWNpdHlcIik/Wih7Y29sb3I6bixwcm9wZXJ0eTpcIi0tdHctcmluZy1jb2xvclwiLHZhcmlhYmxlOlwiLS10dy1yaW5nLW9wYWNpdHlcIn0pOntcIi0tdHctcmluZy1jb2xvclwiOk0obil9fSx7dmFsdWVzOk9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyhRKGUoXCJyaW5nQ29sb3JcIikpKS5maWx0ZXIoKFtuXSk9Pm4hPT1cIkRFRkFVTFRcIikpLHR5cGU6W1wiY29sb3JcIixcImFueVwiXX0pfSxyaW5nT3BhY2l0eTp0PT57bGV0e2NvbmZpZzplfT10O3JldHVybiBUKFwicmluZ09wYWNpdHlcIixbW1wicmluZy1vcGFjaXR5XCIsW1wiLS10dy1yaW5nLW9wYWNpdHlcIl1dXSx7ZmlsdGVyRGVmYXVsdDohRyhlKCksXCJyZXNwZWN0RGVmYXVsdFJpbmdDb2xvck9wYWNpdHlcIil9KSh0KX0scmluZ09mZnNldFdpZHRoOlQoXCJyaW5nT2Zmc2V0V2lkdGhcIixbW1wicmluZy1vZmZzZXRcIixbXCItLXR3LXJpbmctb2Zmc2V0LXdpZHRoXCJdXV0se3R5cGU6XCJsZW5ndGhcIn0pLHJpbmdPZmZzZXRDb2xvcjooe21hdGNoVXRpbGl0aWVzOnQsdGhlbWU6ZX0pPT57dCh7XCJyaW5nLW9mZnNldFwiOnI9Pih7XCItLXR3LXJpbmctb2Zmc2V0LWNvbG9yXCI6TShyKX0pfSx7dmFsdWVzOlEoZShcInJpbmdPZmZzZXRDb2xvclwiKSksdHlwZTpbXCJjb2xvclwiLFwiYW55XCJdfSl9LGJsdXI6KHttYXRjaFV0aWxpdGllczp0LHRoZW1lOmV9KT0+e3Qoe2JsdXI6cj0+KHtcIi0tdHctYmx1clwiOmBibHVyKCR7cn0pYCxcIkBkZWZhdWx0cyBmaWx0ZXJcIjp7fSxmaWx0ZXI6eGV9KX0se3ZhbHVlczplKFwiYmx1clwiKX0pfSxicmlnaHRuZXNzOih7bWF0Y2hVdGlsaXRpZXM6dCx0aGVtZTplfSk9Pnt0KHticmlnaHRuZXNzOnI9Pih7XCItLXR3LWJyaWdodG5lc3NcIjpgYnJpZ2h0bmVzcygke3J9KWAsXCJAZGVmYXVsdHMgZmlsdGVyXCI6e30sZmlsdGVyOnhlfSl9LHt2YWx1ZXM6ZShcImJyaWdodG5lc3NcIil9KX0sY29udHJhc3Q6KHttYXRjaFV0aWxpdGllczp0LHRoZW1lOmV9KT0+e3Qoe2NvbnRyYXN0OnI9Pih7XCItLXR3LWNvbnRyYXN0XCI6YGNvbnRyYXN0KCR7cn0pYCxcIkBkZWZhdWx0cyBmaWx0ZXJcIjp7fSxmaWx0ZXI6eGV9KX0se3ZhbHVlczplKFwiY29udHJhc3RcIil9KX0sZHJvcFNoYWRvdzooe21hdGNoVXRpbGl0aWVzOnQsdGhlbWU6ZX0pPT57dCh7XCJkcm9wLXNoYWRvd1wiOnI9Pih7XCItLXR3LWRyb3Atc2hhZG93XCI6QXJyYXkuaXNBcnJheShyKT9yLm1hcChuPT5gZHJvcC1zaGFkb3coJHtufSlgKS5qb2luKFwiIFwiKTpgZHJvcC1zaGFkb3coJHtyfSlgLFwiQGRlZmF1bHRzIGZpbHRlclwiOnt9LGZpbHRlcjp4ZX0pfSx7dmFsdWVzOmUoXCJkcm9wU2hhZG93XCIpfSl9LGdyYXlzY2FsZTooe21hdGNoVXRpbGl0aWVzOnQsdGhlbWU6ZX0pPT57dCh7Z3JheXNjYWxlOnI9Pih7XCItLXR3LWdyYXlzY2FsZVwiOmBncmF5c2NhbGUoJHtyfSlgLFwiQGRlZmF1bHRzIGZpbHRlclwiOnt9LGZpbHRlcjp4ZX0pfSx7dmFsdWVzOmUoXCJncmF5c2NhbGVcIil9KX0saHVlUm90YXRlOih7bWF0Y2hVdGlsaXRpZXM6dCx0aGVtZTplfSk9Pnt0KHtcImh1ZS1yb3RhdGVcIjpyPT4oe1wiLS10dy1odWUtcm90YXRlXCI6YGh1ZS1yb3RhdGUoJHtyfSlgLFwiQGRlZmF1bHRzIGZpbHRlclwiOnt9LGZpbHRlcjp4ZX0pfSx7dmFsdWVzOmUoXCJodWVSb3RhdGVcIiksc3VwcG9ydHNOZWdhdGl2ZVZhbHVlczohMH0pfSxpbnZlcnQ6KHttYXRjaFV0aWxpdGllczp0LHRoZW1lOmV9KT0+e3Qoe2ludmVydDpyPT4oe1wiLS10dy1pbnZlcnRcIjpgaW52ZXJ0KCR7cn0pYCxcIkBkZWZhdWx0cyBmaWx0ZXJcIjp7fSxmaWx0ZXI6eGV9KX0se3ZhbHVlczplKFwiaW52ZXJ0XCIpfSl9LHNhdHVyYXRlOih7bWF0Y2hVdGlsaXRpZXM6dCx0aGVtZTplfSk9Pnt0KHtzYXR1cmF0ZTpyPT4oe1wiLS10dy1zYXR1cmF0ZVwiOmBzYXR1cmF0ZSgke3J9KWAsXCJAZGVmYXVsdHMgZmlsdGVyXCI6e30sZmlsdGVyOnhlfSl9LHt2YWx1ZXM6ZShcInNhdHVyYXRlXCIpfSl9LHNlcGlhOih7bWF0Y2hVdGlsaXRpZXM6dCx0aGVtZTplfSk9Pnt0KHtzZXBpYTpyPT4oe1wiLS10dy1zZXBpYVwiOmBzZXBpYSgke3J9KWAsXCJAZGVmYXVsdHMgZmlsdGVyXCI6e30sZmlsdGVyOnhlfSl9LHt2YWx1ZXM6ZShcInNlcGlhXCIpfSl9LGZpbHRlcjooe2FkZERlZmF1bHRzOnQsYWRkVXRpbGl0aWVzOmV9KT0+e3QoXCJmaWx0ZXJcIix7XCItLXR3LWJsdXJcIjpcIiBcIixcIi0tdHctYnJpZ2h0bmVzc1wiOlwiIFwiLFwiLS10dy1jb250cmFzdFwiOlwiIFwiLFwiLS10dy1ncmF5c2NhbGVcIjpcIiBcIixcIi0tdHctaHVlLXJvdGF0ZVwiOlwiIFwiLFwiLS10dy1pbnZlcnRcIjpcIiBcIixcIi0tdHctc2F0dXJhdGVcIjpcIiBcIixcIi0tdHctc2VwaWFcIjpcIiBcIixcIi0tdHctZHJvcC1zaGFkb3dcIjpcIiBcIn0pLGUoe1wiLmZpbHRlclwiOntcIkBkZWZhdWx0cyBmaWx0ZXJcIjp7fSxmaWx0ZXI6eGV9LFwiLmZpbHRlci1ub25lXCI6e2ZpbHRlcjpcIm5vbmVcIn19KX0sYmFja2Ryb3BCbHVyOih7bWF0Y2hVdGlsaXRpZXM6dCx0aGVtZTplfSk9Pnt0KHtcImJhY2tkcm9wLWJsdXJcIjpyPT4oe1wiLS10dy1iYWNrZHJvcC1ibHVyXCI6YGJsdXIoJHtyfSlgLFwiQGRlZmF1bHRzIGJhY2tkcm9wLWZpbHRlclwiOnt9LFwiYmFja2Ryb3AtZmlsdGVyXCI6U2V9KX0se3ZhbHVlczplKFwiYmFja2Ryb3BCbHVyXCIpfSl9LGJhY2tkcm9wQnJpZ2h0bmVzczooe21hdGNoVXRpbGl0aWVzOnQsdGhlbWU6ZX0pPT57dCh7XCJiYWNrZHJvcC1icmlnaHRuZXNzXCI6cj0+KHtcIi0tdHctYmFja2Ryb3AtYnJpZ2h0bmVzc1wiOmBicmlnaHRuZXNzKCR7cn0pYCxcIkBkZWZhdWx0cyBiYWNrZHJvcC1maWx0ZXJcIjp7fSxcImJhY2tkcm9wLWZpbHRlclwiOlNlfSl9LHt2YWx1ZXM6ZShcImJhY2tkcm9wQnJpZ2h0bmVzc1wiKX0pfSxiYWNrZHJvcENvbnRyYXN0Oih7bWF0Y2hVdGlsaXRpZXM6dCx0aGVtZTplfSk9Pnt0KHtcImJhY2tkcm9wLWNvbnRyYXN0XCI6cj0+KHtcIi0tdHctYmFja2Ryb3AtY29udHJhc3RcIjpgY29udHJhc3QoJHtyfSlgLFwiQGRlZmF1bHRzIGJhY2tkcm9wLWZpbHRlclwiOnt9LFwiYmFja2Ryb3AtZmlsdGVyXCI6U2V9KX0se3ZhbHVlczplKFwiYmFja2Ryb3BDb250cmFzdFwiKX0pfSxiYWNrZHJvcEdyYXlzY2FsZTooe21hdGNoVXRpbGl0aWVzOnQsdGhlbWU6ZX0pPT57dCh7XCJiYWNrZHJvcC1ncmF5c2NhbGVcIjpyPT4oe1wiLS10dy1iYWNrZHJvcC1ncmF5c2NhbGVcIjpgZ3JheXNjYWxlKCR7cn0pYCxcIkBkZWZhdWx0cyBiYWNrZHJvcC1maWx0ZXJcIjp7fSxcImJhY2tkcm9wLWZpbHRlclwiOlNlfSl9LHt2YWx1ZXM6ZShcImJhY2tkcm9wR3JheXNjYWxlXCIpfSl9LGJhY2tkcm9wSHVlUm90YXRlOih7bWF0Y2hVdGlsaXRpZXM6dCx0aGVtZTplfSk9Pnt0KHtcImJhY2tkcm9wLWh1ZS1yb3RhdGVcIjpyPT4oe1wiLS10dy1iYWNrZHJvcC1odWUtcm90YXRlXCI6YGh1ZS1yb3RhdGUoJHtyfSlgLFwiQGRlZmF1bHRzIGJhY2tkcm9wLWZpbHRlclwiOnt9LFwiYmFja2Ryb3AtZmlsdGVyXCI6U2V9KX0se3ZhbHVlczplKFwiYmFja2Ryb3BIdWVSb3RhdGVcIiksc3VwcG9ydHNOZWdhdGl2ZVZhbHVlczohMH0pfSxiYWNrZHJvcEludmVydDooe21hdGNoVXRpbGl0aWVzOnQsdGhlbWU6ZX0pPT57dCh7XCJiYWNrZHJvcC1pbnZlcnRcIjpyPT4oe1wiLS10dy1iYWNrZHJvcC1pbnZlcnRcIjpgaW52ZXJ0KCR7cn0pYCxcIkBkZWZhdWx0cyBiYWNrZHJvcC1maWx0ZXJcIjp7fSxcImJhY2tkcm9wLWZpbHRlclwiOlNlfSl9LHt2YWx1ZXM6ZShcImJhY2tkcm9wSW52ZXJ0XCIpfSl9LGJhY2tkcm9wT3BhY2l0eTooe21hdGNoVXRpbGl0aWVzOnQsdGhlbWU6ZX0pPT57dCh7XCJiYWNrZHJvcC1vcGFjaXR5XCI6cj0+KHtcIi0tdHctYmFja2Ryb3Atb3BhY2l0eVwiOmBvcGFjaXR5KCR7cn0pYCxcIkBkZWZhdWx0cyBiYWNrZHJvcC1maWx0ZXJcIjp7fSxcImJhY2tkcm9wLWZpbHRlclwiOlNlfSl9LHt2YWx1ZXM6ZShcImJhY2tkcm9wT3BhY2l0eVwiKX0pfSxiYWNrZHJvcFNhdHVyYXRlOih7bWF0Y2hVdGlsaXRpZXM6dCx0aGVtZTplfSk9Pnt0KHtcImJhY2tkcm9wLXNhdHVyYXRlXCI6cj0+KHtcIi0tdHctYmFja2Ryb3Atc2F0dXJhdGVcIjpgc2F0dXJhdGUoJHtyfSlgLFwiQGRlZmF1bHRzIGJhY2tkcm9wLWZpbHRlclwiOnt9LFwiYmFja2Ryb3AtZmlsdGVyXCI6U2V9KX0se3ZhbHVlczplKFwiYmFja2Ryb3BTYXR1cmF0ZVwiKX0pfSxiYWNrZHJvcFNlcGlhOih7bWF0Y2hVdGlsaXRpZXM6dCx0aGVtZTplfSk9Pnt0KHtcImJhY2tkcm9wLXNlcGlhXCI6cj0+KHtcIi0tdHctYmFja2Ryb3Atc2VwaWFcIjpgc2VwaWEoJHtyfSlgLFwiQGRlZmF1bHRzIGJhY2tkcm9wLWZpbHRlclwiOnt9LFwiYmFja2Ryb3AtZmlsdGVyXCI6U2V9KX0se3ZhbHVlczplKFwiYmFja2Ryb3BTZXBpYVwiKX0pfSxiYWNrZHJvcEZpbHRlcjooe2FkZERlZmF1bHRzOnQsYWRkVXRpbGl0aWVzOmV9KT0+e3QoXCJiYWNrZHJvcC1maWx0ZXJcIix7XCItLXR3LWJhY2tkcm9wLWJsdXJcIjpcIiBcIixcIi0tdHctYmFja2Ryb3AtYnJpZ2h0bmVzc1wiOlwiIFwiLFwiLS10dy1iYWNrZHJvcC1jb250cmFzdFwiOlwiIFwiLFwiLS10dy1iYWNrZHJvcC1ncmF5c2NhbGVcIjpcIiBcIixcIi0tdHctYmFja2Ryb3AtaHVlLXJvdGF0ZVwiOlwiIFwiLFwiLS10dy1iYWNrZHJvcC1pbnZlcnRcIjpcIiBcIixcIi0tdHctYmFja2Ryb3Atb3BhY2l0eVwiOlwiIFwiLFwiLS10dy1iYWNrZHJvcC1zYXR1cmF0ZVwiOlwiIFwiLFwiLS10dy1iYWNrZHJvcC1zZXBpYVwiOlwiIFwifSksZSh7XCIuYmFja2Ryb3AtZmlsdGVyXCI6e1wiQGRlZmF1bHRzIGJhY2tkcm9wLWZpbHRlclwiOnt9LFwiYmFja2Ryb3AtZmlsdGVyXCI6U2V9LFwiLmJhY2tkcm9wLWZpbHRlci1ub25lXCI6e1wiYmFja2Ryb3AtZmlsdGVyXCI6XCJub25lXCJ9fSl9LHRyYW5zaXRpb25Qcm9wZXJ0eTooe21hdGNoVXRpbGl0aWVzOnQsdGhlbWU6ZX0pPT57bGV0IHI9ZShcInRyYW5zaXRpb25UaW1pbmdGdW5jdGlvbi5ERUZBVUxUXCIpLG49ZShcInRyYW5zaXRpb25EdXJhdGlvbi5ERUZBVUxUXCIpO3Qoe3RyYW5zaXRpb246aT0+KHtcInRyYW5zaXRpb24tcHJvcGVydHlcIjppLC4uLmk9PT1cIm5vbmVcIj97fTp7XCJ0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvblwiOnIsXCJ0cmFuc2l0aW9uLWR1cmF0aW9uXCI6bn19KX0se3ZhbHVlczplKFwidHJhbnNpdGlvblByb3BlcnR5XCIpfSl9LHRyYW5zaXRpb25EZWxheTpUKFwidHJhbnNpdGlvbkRlbGF5XCIsW1tcImRlbGF5XCIsW1widHJhbnNpdGlvbkRlbGF5XCJdXV0pLHRyYW5zaXRpb25EdXJhdGlvbjpUKFwidHJhbnNpdGlvbkR1cmF0aW9uXCIsW1tcImR1cmF0aW9uXCIsW1widHJhbnNpdGlvbkR1cmF0aW9uXCJdXV0se2ZpbHRlckRlZmF1bHQ6ITB9KSx0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb246VChcInRyYW5zaXRpb25UaW1pbmdGdW5jdGlvblwiLFtbXCJlYXNlXCIsW1widHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uXCJdXV0se2ZpbHRlckRlZmF1bHQ6ITB9KSx3aWxsQ2hhbmdlOlQoXCJ3aWxsQ2hhbmdlXCIsW1tcIndpbGwtY2hhbmdlXCIsW1wid2lsbC1jaGFuZ2VcIl1dXSksY29udGVudDpUKFwiY29udGVudFwiLFtbXCJjb250ZW50XCIsW1wiLS10dy1jb250ZW50XCIsW1wiY29udGVudFwiLFwidmFyKC0tdHctY29udGVudClcIl1dXV0pfTtmdW5jdGlvbiBMZSh0KXtpZihBcnJheS5pc0FycmF5KHQpKXJldHVybiB0O2xldCBlPXQuc3BsaXQoXCJbXCIpLmxlbmd0aC0xLHI9dC5zcGxpdChcIl1cIikubGVuZ3RoLTE7aWYoZSE9PXIpdGhyb3cgbmV3IEVycm9yKGBQYXRoIGlzIGludmFsaWQuIEhhcyB1bmJhbGFuY2VkIGJyYWNrZXRzOiAke3R9YCk7cmV0dXJuIHQuc3BsaXQoL1xcLig/IVteXFxbXSpcXF0pfFtcXFtcXF1dL2cpLmZpbHRlcihCb29sZWFuKX12YXIgeGY9bmV3IE1hcChbW1wie1wiLFwifVwiXSxbXCJbXCIsXCJdXCJdLFtcIihcIixcIilcIl1dKSxiZj1uZXcgTWFwKEFycmF5LmZyb20oeGYuZW50cmllcygpKS5tYXAoKFt0LGVdKT0+W2UsdF0pKSxhdj1uZXcgU2V0KFsnXCInLFwiJ1wiLFwiYFwiXSk7ZnVuY3Rpb24gbHQodCl7bGV0IGU9W10scj0hMTtmb3IobGV0IG49MDtuPHQubGVuZ3RoO24rKyl7bGV0IGk9dFtuXTtpZihpPT09XCI6XCImJiFyJiZlLmxlbmd0aD09PTApcmV0dXJuITE7aWYoYXYuaGFzKGkpJiZ0W24tMV0hPT1cIlxcXFxcIiYmKHI9IXIpLCFyJiZ0W24tMV0hPT1cIlxcXFxcIil7aWYoeGYuaGFzKGkpKWUucHVzaChpKTtlbHNlIGlmKGJmLmhhcyhpKSl7bGV0IGE9YmYuZ2V0KGkpO2lmKGUubGVuZ3RoPD0wfHxlLnBvcCgpIT09YSlyZXR1cm4hMX19fXJldHVybiEoZS5sZW5ndGg+MCl9ZnVuY3Rpb24gcG4odCl7cmV0dXJuKHQ+MG4pLSh0PDBuKX1mdW5jdGlvbiBTZih0LGUpe2xldCByPTBuLG49MG47Zm9yKGxldFtpLGFdb2YgZSl0JmkmJihyPXJ8aSxuPW58YSk7cmV0dXJuIHQmfnJ8bn12YXIgZG49Y2xhc3N7Y29uc3RydWN0b3IoKXt0aGlzLm9mZnNldHM9e2RlZmF1bHRzOjBuLGJhc2U6MG4sY29tcG9uZW50czowbix1dGlsaXRpZXM6MG4sdmFyaWFudHM6MG4sdXNlcjowbn0sdGhpcy5sYXllclBvc2l0aW9ucz17ZGVmYXVsdHM6MG4sYmFzZToxbixjb21wb25lbnRzOjJuLHV0aWxpdGllczozbix1c2VyOjRuLHZhcmlhbnRzOjVufSx0aGlzLnJlc2VydmVkVmFyaWFudEJpdHM9MG4sdGhpcy52YXJpYW50T2Zmc2V0cz1uZXcgTWFwfWNyZWF0ZShlKXtyZXR1cm57bGF5ZXI6ZSxwYXJlbnRMYXllcjplLGFyYml0cmFyeTowbix2YXJpYW50czowbixwYXJhbGxlbEluZGV4OjBuLGluZGV4OnRoaXMub2Zmc2V0c1tlXSsrLG9wdGlvbnM6W119fWFyYml0cmFyeVByb3BlcnR5KCl7cmV0dXJuey4uLnRoaXMuY3JlYXRlKFwidXRpbGl0aWVzXCIpLGFyYml0cmFyeToxbn19Zm9yVmFyaWFudChlLHI9MCl7bGV0IG49dGhpcy52YXJpYW50T2Zmc2V0cy5nZXQoZSk7aWYobj09PXZvaWQgMCl0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBmaW5kIG9mZnNldCBmb3IgdW5rbm93biB2YXJpYW50ICR7ZX1gKTtyZXR1cm57Li4udGhpcy5jcmVhdGUoXCJ2YXJpYW50c1wiKSx2YXJpYW50czpuPDxCaWdJbnQocil9fWFwcGx5VmFyaWFudE9mZnNldChlLHIsbil7cmV0dXJuIG4udmFyaWFudD1yLnZhcmlhbnRzLHsuLi5lLGxheWVyOlwidmFyaWFudHNcIixwYXJlbnRMYXllcjplLmxheWVyPT09XCJ2YXJpYW50c1wiP2UucGFyZW50TGF5ZXI6ZS5sYXllcix2YXJpYW50czplLnZhcmlhbnRzfHIudmFyaWFudHMsb3B0aW9uczpuLnNvcnQ/W10uY29uY2F0KG4sZS5vcHRpb25zKTplLm9wdGlvbnMscGFyYWxsZWxJbmRleDprZihbZS5wYXJhbGxlbEluZGV4LHIucGFyYWxsZWxJbmRleF0pfX1hcHBseVBhcmFsbGVsT2Zmc2V0KGUscil7cmV0dXJuey4uLmUscGFyYWxsZWxJbmRleDpCaWdJbnQocil9fXJlY29yZFZhcmlhbnRzKGUscil7Zm9yKGxldCBuIG9mIGUpdGhpcy5yZWNvcmRWYXJpYW50KG4scihuKSl9cmVjb3JkVmFyaWFudChlLHI9MSl7cmV0dXJuIHRoaXMudmFyaWFudE9mZnNldHMuc2V0KGUsMW48PHRoaXMucmVzZXJ2ZWRWYXJpYW50Qml0cyksdGhpcy5yZXNlcnZlZFZhcmlhbnRCaXRzKz1CaWdJbnQociksey4uLnRoaXMuY3JlYXRlKFwidmFyaWFudHNcIiksdmFyaWFudHM6dGhpcy52YXJpYW50T2Zmc2V0cy5nZXQoZSl9fWNvbXBhcmUoZSxyKXt2YXIgbjtpZihlLmxheWVyIT09ci5sYXllcilyZXR1cm4gdGhpcy5sYXllclBvc2l0aW9uc1tlLmxheWVyXS10aGlzLmxheWVyUG9zaXRpb25zW3IubGF5ZXJdO2lmKGUucGFyZW50TGF5ZXIhPT1yLnBhcmVudExheWVyKXJldHVybiB0aGlzLmxheWVyUG9zaXRpb25zW2UucGFyZW50TGF5ZXJdLXRoaXMubGF5ZXJQb3NpdGlvbnNbci5wYXJlbnRMYXllcl07Zm9yKGxldCBpIG9mIGUub3B0aW9ucylmb3IobGV0IGEgb2Ygci5vcHRpb25zKXtpZihpLmlkIT09YS5pZHx8IWkuc29ydHx8IWEuc29ydCljb250aW51ZTtsZXQgcz0obj1rZihbaS52YXJpYW50LGEudmFyaWFudF0pKSE9bnVsbD9uOjBuLG89fihzfHMtMW4pLGw9ZS52YXJpYW50cyZvLHU9ci52YXJpYW50cyZvO2lmKGwhPT11KWNvbnRpbnVlO2xldCBmPWkuc29ydCh7dmFsdWU6aS52YWx1ZSxtb2RpZmllcjppLm1vZGlmaWVyfSx7dmFsdWU6YS52YWx1ZSxtb2RpZmllcjphLm1vZGlmaWVyfSk7aWYoZiE9PTApcmV0dXJuIGZ9cmV0dXJuIGUudmFyaWFudHMhPT1yLnZhcmlhbnRzP2UudmFyaWFudHMtci52YXJpYW50czplLnBhcmFsbGVsSW5kZXghPT1yLnBhcmFsbGVsSW5kZXg/ZS5wYXJhbGxlbEluZGV4LXIucGFyYWxsZWxJbmRleDplLmFyYml0cmFyeSE9PXIuYXJiaXRyYXJ5P2UuYXJiaXRyYXJ5LXIuYXJiaXRyYXJ5OmUuaW5kZXgtci5pbmRleH1yZWNhbGN1bGF0ZVZhcmlhbnRPZmZzZXRzKCl7bGV0IGU9QXJyYXkuZnJvbSh0aGlzLnZhcmlhbnRPZmZzZXRzLmVudHJpZXMoKSkuZmlsdGVyKChbaV0pPT5pLnN0YXJ0c1dpdGgoXCJbXCIpKS5zb3J0KChbaV0sW2FdKT0+b3YoaSxhKSkscj1lLm1hcCgoWyxpXSk9PmkpLnNvcnQoKGksYSk9PnBuKGktYSkpO3JldHVybiBlLm1hcCgoWyxpXSxhKT0+W2ksclthXV0pLmZpbHRlcigoW2ksYV0pPT5pIT09YSl9cmVtYXBBcmJpdHJhcnlWYXJpYW50T2Zmc2V0cyhlKXtsZXQgcj10aGlzLnJlY2FsY3VsYXRlVmFyaWFudE9mZnNldHMoKTtyZXR1cm4gci5sZW5ndGg9PT0wP2U6ZS5tYXAobj0+e2xldFtpLGFdPW47cmV0dXJuIGk9ey4uLmksdmFyaWFudHM6U2YoaS52YXJpYW50cyxyKX0sW2ksYV19KX1zb3J0KGUpe3JldHVybiBlPXRoaXMucmVtYXBBcmJpdHJhcnlWYXJpYW50T2Zmc2V0cyhlKSxlLnNvcnQoKFtyXSxbbl0pPT5wbih0aGlzLmNvbXBhcmUocixuKSkpfX07ZnVuY3Rpb24ga2YodCl7bGV0IGU9bnVsbDtmb3IobGV0IHIgb2YgdCllPWUhPW51bGw/ZTpyLGU9ZT5yP2U6cjtyZXR1cm4gZX1mdW5jdGlvbiBvdih0LGUpe2xldCByPXQubGVuZ3RoLG49ZS5sZW5ndGgsaT1yPG4/cjpuO2ZvcihsZXQgYT0wO2E8aTthKyspe2xldCBzPXQuY2hhckNvZGVBdChhKS1lLmNoYXJDb2RlQXQoYSk7aWYocyE9PTApcmV0dXJuIHN9cmV0dXJuIHItbn12YXIgVXM9e0FkZFZhcmlhbnQ6U3ltYm9sLmZvcihcIkFERF9WQVJJQU5UXCIpLE1hdGNoVmFyaWFudDpTeW1ib2wuZm9yKFwiTUFUQ0hfVkFSSUFOVFwiKX0senM9e0Jhc2U6MTw8MCxEeW5hbWljOjE8PDF9O2Z1bmN0aW9uIGpzKHQsZSl7bGV0IHI9dC50YWlsd2luZENvbmZpZy5wcmVmaXg7cmV0dXJuIHR5cGVvZiByPT1cImZ1bmN0aW9uXCI/cihlKTpyK2V9ZnVuY3Rpb24gT2Yoe3R5cGU6dD1cImFueVwiLC4uLmV9KXtsZXQgcj1bXS5jb25jYXQodCk7cmV0dXJuey4uLmUsdHlwZXM6ci5tYXAobj0+QXJyYXkuaXNBcnJheShuKT97dHlwZTpuWzBdLC4uLm5bMV19Ont0eXBlOm4scHJlZmVyT25Db25mbGljdDohMX0pfX1mdW5jdGlvbiBsdih0KXtsZXQgZT1bXSxyPVwiXCIsbj0wO2ZvcihsZXQgaT0wO2k8dC5sZW5ndGg7aSsrKXtsZXQgYT10W2ldO2lmKGE9PT1cIlxcXFxcIilyKz1cIlxcXFxcIit0WysraV07ZWxzZSBpZihhPT09XCJ7XCIpKytuLGUucHVzaChyLnRyaW0oKSkscj1cIlwiO2Vsc2UgaWYoYT09PVwifVwiKXtpZigtLW48MCl0aHJvdyBuZXcgRXJyb3IoXCJZb3VyIHsgYW5kIH0gYXJlIHVuYmFsYW5jZWQuXCIpO2UucHVzaChyLnRyaW0oKSkscj1cIlwifWVsc2Ugcis9YX1yZXR1cm4gci5sZW5ndGg+MCYmZS5wdXNoKHIudHJpbSgpKSxlPWUuZmlsdGVyKGk9PmkhPT1cIlwiKSxlfWZ1bmN0aW9uIHV2KHQsZSx7YmVmb3JlOnI9W119PXt9KXtpZihyPVtdLmNvbmNhdChyKSxyLmxlbmd0aDw9MCl7dC5wdXNoKGUpO3JldHVybn1sZXQgbj10Lmxlbmd0aC0xO2ZvcihsZXQgaSBvZiByKXtsZXQgYT10LmluZGV4T2YoaSk7YSE9PS0xJiYobj1NYXRoLm1pbihuLGEpKX10LnNwbGljZShuLDAsZSl9ZnVuY3Rpb24gQWYodCl7cmV0dXJuIEFycmF5LmlzQXJyYXkodCk/dC5mbGF0TWFwKGU9PiFBcnJheS5pc0FycmF5KGUpJiYhWChlKT9lOm50KGUpKTpBZihbdF0pfWZ1bmN0aW9uIEVmKHQsZSl7cmV0dXJuKDAsVnMuZGVmYXVsdCkobj0+e2xldCBpPVtdO3JldHVybiBlJiZlKG4pLG4ud2Fsa0NsYXNzZXMoYT0+e2kucHVzaChhLnZhbHVlKX0pLGl9KS50cmFuc2Zvcm1TeW5jKHQpfWZ1bmN0aW9uIGZ2KHQsZT17Y29udGFpbnNOb25PbkRlbWFuZGFibGU6ITF9LHI9MCl7bGV0IG49W107aWYodC50eXBlPT09XCJydWxlXCIpe2xldCBpPWZ1bmN0aW9uKGEpe2Eud2Fsa1BzZXVkb3Mocz0+e3MudmFsdWU9PT1cIjpub3RcIiYmcy5yZW1vdmUoKX0pfTtmb3IobGV0IGEgb2YgdC5zZWxlY3RvcnMpe2xldCBzPUVmKGEsaSk7cy5sZW5ndGg9PT0wJiYoZS5jb250YWluc05vbk9uRGVtYW5kYWJsZT0hMCk7Zm9yKGxldCBvIG9mIHMpbi5wdXNoKG8pfX1lbHNlIHQudHlwZT09PVwiYXRydWxlXCImJnQud2Fsa1J1bGVzKGk9Pntmb3IobGV0IGEgb2YgaS5zZWxlY3RvcnMuZmxhdE1hcChzPT5FZihzKSkpbi5wdXNoKGEpfSk7cmV0dXJuIHI9PT0wP1tlLmNvbnRhaW5zTm9uT25EZW1hbmRhYmxlfHxuLmxlbmd0aD09PTAsbl06bn1mdW5jdGlvbiBobih0KXtyZXR1cm4gQWYodCkuZmxhdE1hcChlPT57bGV0IHI9bmV3IE1hcCxbbixpXT1mdihlKTtyZXR1cm4gbiYmaS51bnNoaWZ0KGtlKSxpLm1hcChhPT4oci5oYXMoZSl8fHIuc2V0KGUsZSksW2Esci5nZXQoZSldKSl9KX1mdW5jdGlvbiBtbih0KXtyZXR1cm4gdC5zdGFydHNXaXRoKFwiQFwiKXx8dC5pbmNsdWRlcyhcIiZcIil9ZnVuY3Rpb24gbHIodCl7dD10LnJlcGxhY2UoL1xcbisvZyxcIlwiKS5yZXBsYWNlKC9cXHN7MSx9L2csXCIgXCIpLnRyaW0oKTtsZXQgZT1sdih0KS5tYXAocj0+e2lmKCFyLnN0YXJ0c1dpdGgoXCJAXCIpKXJldHVybih7Zm9ybWF0OmF9KT0+YShyKTtsZXRbLG4saV09L0AoLio/KSggLit8Wyh7XS4qKS9nLmV4ZWMocik7cmV0dXJuKHt3cmFwOmF9KT0+YShSLmF0UnVsZSh7bmFtZTpuLHBhcmFtczppLnRyaW0oKX0pKX0pLnJldmVyc2UoKTtyZXR1cm4gcj0+e2ZvcihsZXQgbiBvZiBlKW4ocil9fWZ1bmN0aW9uIGN2KHQsZSx7dmFyaWFudExpc3Q6cix2YXJpYW50TWFwOm4sb2Zmc2V0czppLGNsYXNzTGlzdDphfSl7ZnVuY3Rpb24gcyhjLGQpe3JldHVybiBjPygwLENmLmRlZmF1bHQpKHQsYyxkKTp0fWZ1bmN0aW9uIG8oYyl7cmV0dXJuIGl0KHQucHJlZml4LGMpfWZ1bmN0aW9uIGwoYyxkKXtyZXR1cm4gYz09PWtlP2tlOmQucmVzcGVjdFByZWZpeD9lLnRhaWx3aW5kQ29uZmlnLnByZWZpeCtjOmN9ZnVuY3Rpb24gdShjLGQsaD17fSl7bGV0IHk9TGUoYyksbT1zKFtcInRoZW1lXCIsLi4ueV0sZCk7cmV0dXJuIENlKHlbMF0pKG0saCl9bGV0IGY9MCxwPXtwb3N0Y3NzOlIscHJlZml4Om8sZTpyZSxjb25maWc6cyx0aGVtZTp1LGNvcmVQbHVnaW5zOmM9PkFycmF5LmlzQXJyYXkodC5jb3JlUGx1Z2lucyk/dC5jb3JlUGx1Z2lucy5pbmNsdWRlcyhjKTpzKFtcImNvcmVQbHVnaW5zXCIsY10sITApLHZhcmlhbnRzOigpPT5bXSxhZGRCYXNlKGMpe2ZvcihsZXRbZCxoXW9mIGhuKGMpKXtsZXQgeT1sKGQse30pLG09aS5jcmVhdGUoXCJiYXNlXCIpO2UuY2FuZGlkYXRlUnVsZU1hcC5oYXMoeSl8fGUuY2FuZGlkYXRlUnVsZU1hcC5zZXQoeSxbXSksZS5jYW5kaWRhdGVSdWxlTWFwLmdldCh5KS5wdXNoKFt7c29ydDptLGxheWVyOlwiYmFzZVwifSxoXSl9fSxhZGREZWZhdWx0cyhjLGQpe2xldCBoPXtbYEBkZWZhdWx0cyAke2N9YF06ZH07Zm9yKGxldFt5LG1db2YgaG4oaCkpe2xldCBnPWwoeSx7fSk7ZS5jYW5kaWRhdGVSdWxlTWFwLmhhcyhnKXx8ZS5jYW5kaWRhdGVSdWxlTWFwLnNldChnLFtdKSxlLmNhbmRpZGF0ZVJ1bGVNYXAuZ2V0KGcpLnB1c2goW3tzb3J0OmkuY3JlYXRlKFwiZGVmYXVsdHNcIiksbGF5ZXI6XCJkZWZhdWx0c1wifSxtXSl9fSxhZGRDb21wb25lbnRzKGMsZCl7ZD1PYmplY3QuYXNzaWduKHt9LHtwcmVzZXJ2ZVNvdXJjZTohMSxyZXNwZWN0UHJlZml4OiEwLHJlc3BlY3RJbXBvcnRhbnQ6ITF9LEFycmF5LmlzQXJyYXkoZCk/e306ZCk7Zm9yKGxldFt5LG1db2YgaG4oYykpe2xldCBnPWwoeSxkKTthLmFkZChnKSxlLmNhbmRpZGF0ZVJ1bGVNYXAuaGFzKGcpfHxlLmNhbmRpZGF0ZVJ1bGVNYXAuc2V0KGcsW10pLGUuY2FuZGlkYXRlUnVsZU1hcC5nZXQoZykucHVzaChbe3NvcnQ6aS5jcmVhdGUoXCJjb21wb25lbnRzXCIpLGxheWVyOlwiY29tcG9uZW50c1wiLG9wdGlvbnM6ZH0sbV0pfX0sYWRkVXRpbGl0aWVzKGMsZCl7ZD1PYmplY3QuYXNzaWduKHt9LHtwcmVzZXJ2ZVNvdXJjZTohMSxyZXNwZWN0UHJlZml4OiEwLHJlc3BlY3RJbXBvcnRhbnQ6ITB9LEFycmF5LmlzQXJyYXkoZCk/e306ZCk7Zm9yKGxldFt5LG1db2YgaG4oYykpe2xldCBnPWwoeSxkKTthLmFkZChnKSxlLmNhbmRpZGF0ZVJ1bGVNYXAuaGFzKGcpfHxlLmNhbmRpZGF0ZVJ1bGVNYXAuc2V0KGcsW10pLGUuY2FuZGlkYXRlUnVsZU1hcC5nZXQoZykucHVzaChbe3NvcnQ6aS5jcmVhdGUoXCJ1dGlsaXRpZXNcIiksbGF5ZXI6XCJ1dGlsaXRpZXNcIixvcHRpb25zOmR9LG1dKX19LG1hdGNoVXRpbGl0aWVzOmZ1bmN0aW9uKGMsZCl7ZD1PZih7Li4ue3Jlc3BlY3RQcmVmaXg6ITAscmVzcGVjdEltcG9ydGFudDohMCxtb2RpZmllcnM6ITF9LC4uLmR9KTtsZXQgeT1pLmNyZWF0ZShcInV0aWxpdGllc1wiKTtmb3IobGV0IG0gaW4gYyl7bGV0IGI9ZnVuY3Rpb24oTyx7aXNPbmx5UGx1Z2luOnh9KXtsZXRbQSxFLEldPVRzKGQudHlwZXMsTyxkLHQpO2lmKEE9PT12b2lkIDApcmV0dXJuW107aWYoIWQudHlwZXMuc29tZSgoe3R5cGU6Qn0pPT5CPT09RSkpaWYoeClMLndhcm4oW2BVbm5lY2Vzc2FyeSB0eXBlaGludCBcXGAke0V9XFxgIGluIFxcYCR7bX0tJHtPfVxcYC5gLGBZb3UgY2FuIHNhZmVseSB1cGRhdGUgaXQgdG8gXFxgJHttfS0ke08ucmVwbGFjZShFK1wiOlwiLFwiXCIpfVxcYC5gXSk7ZWxzZSByZXR1cm5bXTtpZighbHQoQSkpcmV0dXJuW107bGV0IEY9e2dldCBtb2RpZmllcigpe3JldHVybiBkLm1vZGlmaWVyc3x8TC53YXJuKGBtb2RpZmllci11c2VkLXdpdGhvdXQtb3B0aW9ucy1mb3ItJHttfWAsW1wiWW91ciBwbHVnaW4gbXVzdCBzZXQgYG1vZGlmaWVyczogdHJ1ZWAgaW4gaXRzIG9wdGlvbnMgdG8gc3VwcG9ydCBtb2RpZmllcnMuXCJdKSxJfX0sWT1HKHQsXCJnZW5lcmFsaXplZE1vZGlmaWVyc1wiKTtyZXR1cm5bXS5jb25jYXQoWT93KEEsRik6dyhBKSkuZmlsdGVyKEJvb2xlYW4pLm1hcChCPT4oe1tsbihtLE8pXTpCfSkpfSxnPWwobSxkKSx3PWNbbV07YS5hZGQoW2csZF0pO2xldCB2PVt7c29ydDp5LGxheWVyOlwidXRpbGl0aWVzXCIsb3B0aW9uczpkfSxiXTtlLmNhbmRpZGF0ZVJ1bGVNYXAuaGFzKGcpfHxlLmNhbmRpZGF0ZVJ1bGVNYXAuc2V0KGcsW10pLGUuY2FuZGlkYXRlUnVsZU1hcC5nZXQoZykucHVzaCh2KX19LG1hdGNoQ29tcG9uZW50czpmdW5jdGlvbihjLGQpe2Q9T2Yoey4uLntyZXNwZWN0UHJlZml4OiEwLHJlc3BlY3RJbXBvcnRhbnQ6ITEsbW9kaWZpZXJzOiExfSwuLi5kfSk7bGV0IHk9aS5jcmVhdGUoXCJjb21wb25lbnRzXCIpO2ZvcihsZXQgbSBpbiBjKXtsZXQgYj1mdW5jdGlvbihPLHtpc09ubHlQbHVnaW46eH0pe2xldFtBLEUsSV09VHMoZC50eXBlcyxPLGQsdCk7aWYoQT09PXZvaWQgMClyZXR1cm5bXTtpZighZC50eXBlcy5zb21lKCh7dHlwZTpCfSk9PkI9PT1FKSlpZih4KUwud2FybihbYFVubmVjZXNzYXJ5IHR5cGVoaW50IFxcYCR7RX1cXGAgaW4gXFxgJHttfS0ke099XFxgLmAsYFlvdSBjYW4gc2FmZWx5IHVwZGF0ZSBpdCB0byBcXGAke219LSR7Ty5yZXBsYWNlKEUrXCI6XCIsXCJcIil9XFxgLmBdKTtlbHNlIHJldHVybltdO2lmKCFsdChBKSlyZXR1cm5bXTtsZXQgRj17Z2V0IG1vZGlmaWVyKCl7cmV0dXJuIGQubW9kaWZpZXJzfHxMLndhcm4oYG1vZGlmaWVyLXVzZWQtd2l0aG91dC1vcHRpb25zLWZvci0ke219YCxbXCJZb3VyIHBsdWdpbiBtdXN0IHNldCBgbW9kaWZpZXJzOiB0cnVlYCBpbiBpdHMgb3B0aW9ucyB0byBzdXBwb3J0IG1vZGlmaWVycy5cIl0pLEl9fSxZPUcodCxcImdlbmVyYWxpemVkTW9kaWZpZXJzXCIpO3JldHVybltdLmNvbmNhdChZP3coQSxGKTp3KEEpKS5maWx0ZXIoQm9vbGVhbikubWFwKEI9Pih7W2xuKG0sTyldOkJ9KSl9LGc9bChtLGQpLHc9Y1ttXTthLmFkZChbZyxkXSk7bGV0IHY9W3tzb3J0OnksbGF5ZXI6XCJjb21wb25lbnRzXCIsb3B0aW9uczpkfSxiXTtlLmNhbmRpZGF0ZVJ1bGVNYXAuaGFzKGcpfHxlLmNhbmRpZGF0ZVJ1bGVNYXAuc2V0KGcsW10pLGUuY2FuZGlkYXRlUnVsZU1hcC5nZXQoZykucHVzaCh2KX19LGFkZFZhcmlhbnQoYyxkLGg9e30pe2Q9W10uY29uY2F0KGQpLm1hcCh5PT57aWYodHlwZW9mIHkhPVwic3RyaW5nXCIpcmV0dXJuKG09e30pPT57bGV0e2FyZ3M6Zyxtb2RpZnlTZWxlY3RvcnM6dyxjb250YWluZXI6YixzZXBhcmF0b3I6dix3cmFwOk8sZm9ybWF0Onh9PW0sQT15KE9iamVjdC5hc3NpZ24oe21vZGlmeVNlbGVjdG9yczp3LGNvbnRhaW5lcjpiLHNlcGFyYXRvcjp2fSxoLnR5cGU9PT1Vcy5NYXRjaFZhcmlhbnQmJnthcmdzOmcsd3JhcDpPLGZvcm1hdDp4fSkpO2lmKHR5cGVvZiBBPT1cInN0cmluZ1wiJiYhbW4oQSkpdGhyb3cgbmV3IEVycm9yKGBZb3VyIGN1c3RvbSB2YXJpYW50IFxcYCR7Y31cXGAgaGFzIGFuIGludmFsaWQgZm9ybWF0IHN0cmluZy4gTWFrZSBzdXJlIGl0J3MgYW4gYXQtcnVsZSBvciBjb250YWlucyBhIFxcYCZcXGAgcGxhY2Vob2xkZXIuYCk7cmV0dXJuIEFycmF5LmlzQXJyYXkoQSk/QS5maWx0ZXIoRT0+dHlwZW9mIEU9PVwic3RyaW5nXCIpLm1hcChFPT5scihFKSk6QSYmdHlwZW9mIEE9PVwic3RyaW5nXCImJmxyKEEpKG0pfTtpZighbW4oeSkpdGhyb3cgbmV3IEVycm9yKGBZb3VyIGN1c3RvbSB2YXJpYW50IFxcYCR7Y31cXGAgaGFzIGFuIGludmFsaWQgZm9ybWF0IHN0cmluZy4gTWFrZSBzdXJlIGl0J3MgYW4gYXQtcnVsZSBvciBjb250YWlucyBhIFxcYCZcXGAgcGxhY2Vob2xkZXIuYCk7cmV0dXJuIGxyKHkpfSksdXYocixjLGgpLG4uc2V0KGMsZCksZS52YXJpYW50T3B0aW9ucy5zZXQoYyxoKX0sbWF0Y2hWYXJpYW50KGMsZCxoKXt2YXIgYix2LE87bGV0IHk9KGI9aD09bnVsbD92b2lkIDA6aC5pZCkhPW51bGw/YjorK2YsbT1jPT09XCJAXCIsZz1HKHQsXCJnZW5lcmFsaXplZE1vZGlmaWVyc1wiKTtmb3IobGV0W3gsQV1vZiBPYmplY3QuZW50cmllcygodj1oPT1udWxsP3ZvaWQgMDpoLnZhbHVlcykhPW51bGw/djp7fSkpeCE9PVwiREVGQVVMVFwiJiZwLmFkZFZhcmlhbnQobT9gJHtjfSR7eH1gOmAke2N9LSR7eH1gLCh7YXJnczpFLGNvbnRhaW5lcjpJfSk9PmQoQSxnP3ttb2RpZmllcjpFPT1udWxsP3ZvaWQgMDpFLm1vZGlmaWVyLGNvbnRhaW5lcjpJfTp7Y29udGFpbmVyOkl9KSx7Li4uaCx2YWx1ZTpBLGlkOnksdHlwZTpVcy5NYXRjaFZhcmlhbnQsdmFyaWFudEluZm86enMuQmFzZX0pO2xldCB3PVwiREVGQVVMVFwiaW4oKE89aD09bnVsbD92b2lkIDA6aC52YWx1ZXMpIT1udWxsP086e30pO3AuYWRkVmFyaWFudChjLCh7YXJnczp4LGNvbnRhaW5lcjpBfSk9Pnt2YXIgRTtyZXR1cm4oeD09bnVsbD92b2lkIDA6eC52YWx1ZSk9PT1tdCYmIXc/bnVsbDpkKCh4PT1udWxsP3ZvaWQgMDp4LnZhbHVlKT09PW10P2gudmFsdWVzLkRFRkFVTFQ6KEU9eD09bnVsbD92b2lkIDA6eC52YWx1ZSkhPW51bGw/RTp0eXBlb2YgeD09XCJzdHJpbmdcIj94OlwiXCIsZz97bW9kaWZpZXI6eD09bnVsbD92b2lkIDA6eC5tb2RpZmllcixjb250YWluZXI6QX06e2NvbnRhaW5lcjpBfSl9LHsuLi5oLGlkOnksdHlwZTpVcy5NYXRjaFZhcmlhbnQsdmFyaWFudEluZm86enMuRHluYW1pY30pfX07cmV0dXJuIHB9ZnVuY3Rpb24gX2YodCl7dC53YWxrQXRSdWxlcyhlPT57W1wicmVzcG9uc2l2ZVwiLFwidmFyaWFudHNcIl0uaW5jbHVkZXMoZS5uYW1lKSYmKF9mKGUpLGUuYmVmb3JlKGUubm9kZXMpLGUucmVtb3ZlKCkpfSl9ZnVuY3Rpb24gcHYodCl7bGV0IGU9W107cmV0dXJuIHQuZWFjaChyPT57ci50eXBlPT09XCJhdHJ1bGVcIiYmW1wicmVzcG9uc2l2ZVwiLFwidmFyaWFudHNcIl0uaW5jbHVkZXMoci5uYW1lKSYmKHIubmFtZT1cImxheWVyXCIsci5wYXJhbXM9XCJ1dGlsaXRpZXNcIil9KSx0LndhbGtBdFJ1bGVzKFwibGF5ZXJcIixyPT57aWYoX2Yociksci5wYXJhbXM9PT1cImJhc2VcIil7Zm9yKGxldCBuIG9mIHIubm9kZXMpZS5wdXNoKGZ1bmN0aW9uKHthZGRCYXNlOml9KXtpKG4se3Jlc3BlY3RQcmVmaXg6ITF9KX0pO3IucmVtb3ZlKCl9ZWxzZSBpZihyLnBhcmFtcz09PVwiY29tcG9uZW50c1wiKXtmb3IobGV0IG4gb2Ygci5ub2RlcyllLnB1c2goZnVuY3Rpb24oe2FkZENvbXBvbmVudHM6aX0pe2kobix7cmVzcGVjdFByZWZpeDohMSxwcmVzZXJ2ZVNvdXJjZTohMH0pfSk7ci5yZW1vdmUoKX1lbHNlIGlmKHIucGFyYW1zPT09XCJ1dGlsaXRpZXNcIil7Zm9yKGxldCBuIG9mIHIubm9kZXMpZS5wdXNoKGZ1bmN0aW9uKHthZGRVdGlsaXRpZXM6aX0pe2kobix7cmVzcGVjdFByZWZpeDohMSxwcmVzZXJ2ZVNvdXJjZTohMH0pfSk7ci5yZW1vdmUoKX19KSxlfWZ1bmN0aW9uIGR2KHQsZSl7bGV0IHI9T2JqZWN0LmVudHJpZXMoey4uLm5lLC4uLndmfSkubWFwKChbbyxsXSk9PnQudGFpbHdpbmRDb25maWcuY29yZVBsdWdpbnMuaW5jbHVkZXMobyk/bDpudWxsKS5maWx0ZXIoQm9vbGVhbiksbj10LnRhaWx3aW5kQ29uZmlnLnBsdWdpbnMubWFwKG89PihvLl9faXNPcHRpb25zRnVuY3Rpb24mJihvPW8oKSksdHlwZW9mIG89PVwiZnVuY3Rpb25cIj9vOm8uaGFuZGxlcikpLGk9cHYoZSksYT1bbmUucHNldWRvRWxlbWVudFZhcmlhbnRzLG5lLnBzZXVkb0NsYXNzVmFyaWFudHMsbmUuYXJpYVZhcmlhbnRzLG5lLmRhdGFWYXJpYW50c10scz1bbmUuc3VwcG9ydHNWYXJpYW50cyxuZS5kaXJlY3Rpb25WYXJpYW50cyxuZS5yZWR1Y2VkTW90aW9uVmFyaWFudHMsbmUucHJlZmVyc0NvbnRyYXN0VmFyaWFudHMsbmUuZGFya1ZhcmlhbnRzLG5lLnByaW50VmFyaWFudCxuZS5zY3JlZW5WYXJpYW50cyxuZS5vcmllbnRhdGlvblZhcmlhbnRzXTtyZXR1cm5bLi4uciwuLi5hLC4uLm4sLi4ucywuLi5pXX1mdW5jdGlvbiBodih0LGUpe3ZhciBmLHAsYztsZXQgcj1bXSxuPW5ldyBNYXA7ZS52YXJpYW50TWFwPW47bGV0IGk9bmV3IGRuO2Uub2Zmc2V0cz1pO2xldCBhPW5ldyBTZXQscz1jdihlLnRhaWx3aW5kQ29uZmlnLGUse3ZhcmlhbnRMaXN0OnIsdmFyaWFudE1hcDpuLG9mZnNldHM6aSxjbGFzc0xpc3Q6YX0pO2ZvcihsZXQgZCBvZiB0KWlmKEFycmF5LmlzQXJyYXkoZCkpZm9yKGxldCBoIG9mIGQpaChzKTtlbHNlIGQ9PW51bGx8fGQocyk7aS5yZWNvcmRWYXJpYW50cyhyLGQ9Pm4uZ2V0KGQpLmxlbmd0aCk7Zm9yKGxldFtkLGhdb2Ygbi5lbnRyaWVzKCkpZS52YXJpYW50TWFwLnNldChkLGgubWFwKCh5LG0pPT5baS5mb3JWYXJpYW50KGQsbSkseV0pKTtsZXQgbz0oKGY9ZS50YWlsd2luZENvbmZpZy5zYWZlbGlzdCkhPW51bGw/ZjpbXSkuZmlsdGVyKEJvb2xlYW4pO2lmKG8ubGVuZ3RoPjApe2xldCBkPVtdO2ZvcihsZXQgaCBvZiBvKXtpZih0eXBlb2YgaD09XCJzdHJpbmdcIil7ZS5jaGFuZ2VkQ29udGVudC5wdXNoKHtjb250ZW50OmgsZXh0ZW5zaW9uOlwiaHRtbFwifSk7Y29udGludWV9aWYoaCBpbnN0YW5jZW9mIFJlZ0V4cCl7TC53YXJuKFwicm9vdC1yZWdleFwiLFtcIlJlZ3VsYXIgZXhwcmVzc2lvbnMgaW4gYHNhZmVsaXN0YCB3b3JrIGRpZmZlcmVudGx5IGluIFRhaWx3aW5kIENTUyB2My4wLlwiLFwiVXBkYXRlIHlvdXIgYHNhZmVsaXN0YCBjb25maWd1cmF0aW9uIHRvIGVsaW1pbmF0ZSB0aGlzIHdhcm5pbmcuXCIsXCJodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2NvbnRlbnQtY29uZmlndXJhdGlvbiNzYWZlbGlzdGluZy1jbGFzc2VzXCJdKTtjb250aW51ZX1kLnB1c2goaCl9aWYoZC5sZW5ndGg+MCl7bGV0IGg9bmV3IE1hcCx5PWUudGFpbHdpbmRDb25maWcucHJlZml4Lmxlbmd0aCxtPWQuc29tZShnPT5nLnBhdHRlcm4uc291cmNlLmluY2x1ZGVzKFwiIVwiKSk7Zm9yKGxldCBnIG9mIGEpe2xldCB3PUFycmF5LmlzQXJyYXkoZyk/KCgpPT57dmFyIEE7bGV0W2Isdl09Zyx4PU9iamVjdC5rZXlzKChBPXY9PW51bGw/dm9pZCAwOnYudmFsdWVzKSE9bnVsbD9BOnt9KS5tYXAoRT0+b3IoYixFKSk7cmV0dXJuIHYhPW51bGwmJnYuc3VwcG9ydHNOZWdhdGl2ZVZhbHVlcyYmKHg9Wy4uLngsLi4ueC5tYXAoRT0+XCItXCIrRSldLHg9Wy4uLngsLi4ueC5tYXAoRT0+RS5zbGljZSgwLHkpK1wiLVwiK0Uuc2xpY2UoeSkpXSksdi50eXBlcy5zb21lKCh7dHlwZTpFfSk9PkU9PT1cImNvbG9yXCIpJiYoeD1bLi4ueCwuLi54LmZsYXRNYXAoRT0+T2JqZWN0LmtleXMoZS50YWlsd2luZENvbmZpZy50aGVtZS5vcGFjaXR5KS5tYXAoST0+YCR7RX0vJHtJfWApKV0pLG0mJih2PT1udWxsP3ZvaWQgMDp2LnJlc3BlY3RJbXBvcnRhbnQpJiYoeD1bLi4ueCwuLi54Lm1hcChFPT5cIiFcIitFKV0pLHh9KSgpOltnXTtmb3IobGV0IGIgb2Ygdylmb3IobGV0e3BhdHRlcm46dix2YXJpYW50czpPPVtdfW9mIGQpaWYodi5sYXN0SW5kZXg9MCxoLmhhcyh2KXx8aC5zZXQodiwwKSwhIXYudGVzdChiKSl7aC5zZXQodixoLmdldCh2KSsxKSxlLmNoYW5nZWRDb250ZW50LnB1c2goe2NvbnRlbnQ6YixleHRlbnNpb246XCJodG1sXCJ9KTtmb3IobGV0IHggb2YgTyllLmNoYW5nZWRDb250ZW50LnB1c2goe2NvbnRlbnQ6eCtlLnRhaWx3aW5kQ29uZmlnLnNlcGFyYXRvcitiLGV4dGVuc2lvbjpcImh0bWxcIn0pfX1mb3IobGV0W2csd11vZiBoLmVudHJpZXMoKSl3PT09MCYmTC53YXJuKFtgVGhlIHNhZmVsaXN0IHBhdHRlcm4gXFxgJHtnfVxcYCBkb2Vzbid0IG1hdGNoIGFueSBUYWlsd2luZCBDU1MgY2xhc3Nlcy5gLFwiRml4IHRoaXMgcGF0dGVybiBvciByZW1vdmUgaXQgZnJvbSB5b3VyIGBzYWZlbGlzdGAgY29uZmlndXJhdGlvbi5cIixcImh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvY29udGVudC1jb25maWd1cmF0aW9uI3NhZmVsaXN0aW5nLWNsYXNzZXNcIl0pfX1sZXQgbD0oYz1bXS5jb25jYXQoKHA9ZS50YWlsd2luZENvbmZpZy5kYXJrTW9kZSkhPW51bGw/cDpcIm1lZGlhXCIpWzFdKSE9bnVsbD9jOlwiZGFya1wiLHU9W2pzKGUsbCksanMoZSxcImdyb3VwXCIpLGpzKGUsXCJwZWVyXCIpXTtlLmdldENsYXNzT3JkZXI9ZnVuY3Rpb24oaCl7bGV0IHk9Wy4uLmhdLnNvcnQoKGIsdik9PmI9PT12PzA6Yjx2Py0xOjEpLG09bmV3IE1hcCh5Lm1hcChiPT5bYixudWxsXSkpLGc9Z24obmV3IFNldCh5KSxlKTtnPWUub2Zmc2V0cy5zb3J0KGcpO2xldCB3PUJpZ0ludCh1Lmxlbmd0aCk7Zm9yKGxldFssYl1vZiBnKW0uc2V0KGIucmF3cy50YWlsd2luZC5jYW5kaWRhdGUsdysrKTtyZXR1cm4gaC5tYXAoYj0+e3ZhciB4O2xldCB2PSh4PW0uZ2V0KGIpKSE9bnVsbD94Om51bGwsTz11LmluZGV4T2YoYik7cmV0dXJuIHY9PT1udWxsJiZPIT09LTEmJih2PUJpZ0ludChPKSksW2Isdl19KX0sZS5nZXRDbGFzc0xpc3Q9ZnVuY3Rpb24oaD17fSl7dmFyIG0sZyx3LGI7bGV0IHk9W107Zm9yKGxldCB2IG9mIGEpaWYoQXJyYXkuaXNBcnJheSh2KSl7bGV0W08seF09dixBPVtdLEU9T2JqZWN0LmtleXMoKG09eD09bnVsbD92b2lkIDA6eC5tb2RpZmllcnMpIT1udWxsP206e30pOyhnPXg9PW51bGw/dm9pZCAwOngudHlwZXMpIT1udWxsJiZnLnNvbWUoKHt0eXBlOll9KT0+WT09PVwiY29sb3JcIikmJkUucHVzaCguLi5PYmplY3Qua2V5cygodz1lLnRhaWx3aW5kQ29uZmlnLnRoZW1lLm9wYWNpdHkpIT1udWxsP3c6e30pKTtsZXQgST17bW9kaWZpZXJzOkV9LEY9aC5pbmNsdWRlTWV0YWRhdGEmJkUubGVuZ3RoPjA7Zm9yKGxldFtZLEtdb2YgT2JqZWN0LmVudHJpZXMoKGI9eD09bnVsbD92b2lkIDA6eC52YWx1ZXMpIT1udWxsP2I6e30pKXtpZihLPT1udWxsKWNvbnRpbnVlO2xldCBCPW9yKE8sWSk7aWYoeS5wdXNoKEY/W0IsSV06QiksKHg9PW51bGw/dm9pZCAwOnguc3VwcG9ydHNOZWdhdGl2ZVZhbHVlcykmJlJlKEspKXtsZXQgcWU9b3IoTyxgLSR7WX1gKTtBLnB1c2goRj9bcWUsSV06cWUpfX15LnB1c2goLi4uQSl9ZWxzZSB5LnB1c2godik7cmV0dXJuIHl9LGUuZ2V0VmFyaWFudHM9ZnVuY3Rpb24oKXt2YXIgeTtsZXQgaD1bXTtmb3IobGV0W20sZ11vZiBlLnZhcmlhbnRPcHRpb25zLmVudHJpZXMoKSlnLnZhcmlhbnRJbmZvIT09enMuQmFzZSYmaC5wdXNoKHtuYW1lOm0saXNBcmJpdHJhcnk6Zy50eXBlPT09U3ltYm9sLmZvcihcIk1BVENIX1ZBUklBTlRcIiksdmFsdWVzOk9iamVjdC5rZXlzKCh5PWcudmFsdWVzKSE9bnVsbD95Ont9KSxoYXNEYXNoOm0hPT1cIkBcIixzZWxlY3RvcnMoe21vZGlmaWVyOncsdmFsdWU6Yn09e30pe3ZhciBDYSxBYSxfYSxUYTtsZXQgdj1cIl9fVEFJTFdJTkRfUExBQ0VIT0xERVJfX1wiLE89Ui5ydWxlKHtzZWxlY3RvcjpgLiR7dn1gfSkseD1SLnJvb3Qoe25vZGVzOltPLmNsb25lKCldfSksQT14LnRvU3RyaW5nKCksRT0oKENhPWUudmFyaWFudE1hcC5nZXQobSkpIT1udWxsP0NhOltdKS5mbGF0TWFwKChbaWUsc2VdKT0+c2UpLEk9W107Zm9yKGxldCBpZSBvZiBFKXtsZXQgc2U9W10saHI9e2FyZ3M6e21vZGlmaWVyOncsdmFsdWU6KF9hPShBYT1nLnZhbHVlcyk9PW51bGw/dm9pZCAwOkFhW2JdKSE9bnVsbD9fYTpifSxzZXBhcmF0b3I6ZS50YWlsd2luZENvbmZpZy5zZXBhcmF0b3IsbW9kaWZ5U2VsZWN0b3JzKHBlKXtyZXR1cm4geC5lYWNoKHFuPT57cW4udHlwZT09PVwicnVsZVwiJiYocW4uc2VsZWN0b3JzPXFuLnNlbGVjdG9ycy5tYXAoUGE9PnBlKHtnZXQgY2xhc3NOYW1lKCl7cmV0dXJuIFdzKFBhKX0sc2VsZWN0b3I6UGF9KSkpfSkseH0sZm9ybWF0KHBlKXtzZS5wdXNoKHBlKX0sd3JhcChwZSl7c2UucHVzaChgQCR7cGUubmFtZX0gJHtwZS5wYXJhbXN9IHsgJiB9YCl9LGNvbnRhaW5lcjp4fSxtcj1pZShocik7aWYoc2UubGVuZ3RoPjAmJkkucHVzaChzZSksQXJyYXkuaXNBcnJheShtcikpZm9yKGxldCBwZSBvZiBtcilzZT1bXSxwZShociksSS5wdXNoKHNlKX1sZXQgRj1bXSxZPXgudG9TdHJpbmcoKTtBIT09WSYmKHgud2Fsa1J1bGVzKGllPT57bGV0IHNlPWllLnNlbGVjdG9yLGhyPSgwLFZzLmRlZmF1bHQpKG1yPT57bXIud2Fsa0NsYXNzZXMocGU9PntwZS52YWx1ZT1gJHttfSR7ZS50YWlsd2luZENvbmZpZy5zZXBhcmF0b3J9JHtwZS52YWx1ZX1gfSl9KS5wcm9jZXNzU3luYyhzZSk7Ri5wdXNoKHNlLnJlcGxhY2UoaHIsXCImXCIpLnJlcGxhY2UodixcIiZcIikpfSkseC53YWxrQXRSdWxlcyhpZT0+e0YucHVzaChgQCR7aWUubmFtZX0gKCR7aWUucGFyYW1zfSkgeyAmIH1gKX0pKTtsZXQgSz0hKGIgaW4oKFRhPWcudmFsdWVzKSE9bnVsbD9UYTp7fSkpO0k9SS5tYXAoaWU9PmllLm1hcChzZT0+KHtmb3JtYXQ6c2UsaXNBcmJpdHJhcnlWYXJpYW50Okt9KSkpLEY9Ri5tYXAoaWU9Pih7Zm9ybWF0OmllLGlzQXJiaXRyYXJ5VmFyaWFudDpLfSkpO2xldCBCPXtjYW5kaWRhdGU6dixjb250ZXh0OmV9LHFlPUkubWFwKGllPT5vbihgLiR7dn1gLG90KGllLEIpLEIpLnJlcGxhY2UoYC4ke3Z9YCxcIiZcIikucmVwbGFjZShcInsgJiB9XCIsXCJcIikudHJpbSgpKTtyZXR1cm4gRi5sZW5ndGg+MCYmcWUucHVzaChvdChGLEIpLnRvU3RyaW5nKCkucmVwbGFjZShgLiR7dn1gLFwiJlwiKSkscWV9fSk7cmV0dXJuIGh9fWZ1bmN0aW9uIFRmKHQsZSl7IXQuY2xhc3NDYWNoZS5oYXMoZSl8fCh0Lm5vdENsYXNzQ2FjaGUuYWRkKGUpLHQuY2xhc3NDYWNoZS5kZWxldGUoZSksdC5hcHBseUNsYXNzQ2FjaGUuZGVsZXRlKGUpLHQuY2FuZGlkYXRlUnVsZU1hcC5kZWxldGUoZSksdC5jYW5kaWRhdGVSdWxlQ2FjaGUuZGVsZXRlKGUpLHQuc3R5bGVzaGVldENhY2hlPW51bGwpfWZ1bmN0aW9uIG12KHQsZSl7bGV0IHI9ZS5yYXdzLnRhaWx3aW5kLmNhbmRpZGF0ZTtpZighIXIpe2ZvcihsZXQgbiBvZiB0LnJ1bGVDYWNoZSluWzFdLnJhd3MudGFpbHdpbmQuY2FuZGlkYXRlPT09ciYmdC5ydWxlQ2FjaGUuZGVsZXRlKG4pO1RmKHQscil9fWZ1bmN0aW9uIFBmKHQsZT1bXSxyPVIucm9vdCgpKXt2YXIgYTtsZXQgbj17ZGlzcG9zYWJsZXM6W10scnVsZUNhY2hlOm5ldyBTZXQsY2FuZGlkYXRlUnVsZUNhY2hlOm5ldyBNYXAsY2xhc3NDYWNoZTpuZXcgTWFwLGFwcGx5Q2xhc3NDYWNoZTpuZXcgTWFwLG5vdENsYXNzQ2FjaGU6bmV3IFNldCgoYT10LmJsb2NrbGlzdCkhPW51bGw/YTpbXSkscG9zdENzc05vZGVDYWNoZTpuZXcgTWFwLGNhbmRpZGF0ZVJ1bGVNYXA6bmV3IE1hcCx0YWlsd2luZENvbmZpZzp0LGNoYW5nZWRDb250ZW50OmUsdmFyaWFudE1hcDpuZXcgTWFwLHN0eWxlc2hlZXRDYWNoZTpudWxsLHZhcmlhbnRPcHRpb25zOm5ldyBNYXAsbWFya0ludmFsaWRVdGlsaXR5Q2FuZGlkYXRlOnM9PlRmKG4scyksbWFya0ludmFsaWRVdGlsaXR5Tm9kZTpzPT5tdihuLHMpfSxpPWR2KG4scik7cmV0dXJuIGh2KGksbiksbn12YXIgQnM9SCh2ZSgpKTtmdW5jdGlvbiB5bih0LGUpe2xldCByPSgwLEJzLmRlZmF1bHQpKCkuYXN0U3luYyh0KTtyZXR1cm4gci5lYWNoKG49PntuLm5vZGVzWzBdLnR5cGU9PT1cInBzZXVkb1wiJiZuLm5vZGVzWzBdLnZhbHVlPT09XCI6aXNcIiYmbi5ub2Rlcy5ldmVyeShhPT5hLnR5cGUhPT1cImNvbWJpbmF0b3JcIil8fChuLm5vZGVzPVtCcy5kZWZhdWx0LnBzZXVkbyh7dmFsdWU6XCI6aXNcIixub2Rlczpbbi5jbG9uZSgpXX0pXSksYXQobil9KSxgJHtlfSAke3IudG9TdHJpbmcoKX1gfXZhciBndj0oMCx3bi5kZWZhdWx0KSh0PT50LmZpcnN0LmZpbHRlcigoe3R5cGU6ZX0pPT5lPT09XCJjbGFzc1wiKS5wb3AoKS52YWx1ZSk7ZnVuY3Rpb24gV3ModCl7cmV0dXJuIGd2LnRyYW5zZm9ybVN5bmModCl9ZnVuY3Rpb24qeXYodCl7bGV0IGU9MS8wO2Zvcig7ZT49MDspe2xldCByLG49ITE7aWYoZT09PTEvMCYmdC5lbmRzV2l0aChcIl1cIikpe2xldCBzPXQuaW5kZXhPZihcIltcIik7dFtzLTFdPT09XCItXCI/cj1zLTE6dFtzLTFdPT09XCIvXCI/KHI9cy0xLG49ITApOnI9LTF9ZWxzZSBlPT09MS8wJiZ0LmluY2x1ZGVzKFwiL1wiKT8ocj10Lmxhc3RJbmRleE9mKFwiL1wiKSxuPSEwKTpyPXQubGFzdEluZGV4T2YoXCItXCIsZSk7aWYocjwwKWJyZWFrO2xldCBpPXQuc2xpY2UoMCxyKSxhPXQuc2xpY2Uobj9yOnIrMSk7ZT1yLTEsIShpPT09XCJcInx8YT09PVwiL1wiKSYmKHlpZWxkW2ksYV0pfX1mdW5jdGlvbiB2dih0LGUpe2lmKHQubGVuZ3RoPT09MHx8ZS50YWlsd2luZENvbmZpZy5wcmVmaXg9PT1cIlwiKXJldHVybiB0O2ZvcihsZXQgciBvZiB0KXtsZXRbbl09cjtpZihuLm9wdGlvbnMucmVzcGVjdFByZWZpeCl7bGV0IGk9Ui5yb290KHtub2RlczpbclsxXS5jbG9uZSgpXX0pLGE9clsxXS5yYXdzLnRhaWx3aW5kLmNsYXNzQ2FuZGlkYXRlO2kud2Fsa1J1bGVzKHM9PntsZXQgbz1hLnN0YXJ0c1dpdGgoXCItXCIpO3Muc2VsZWN0b3I9aXQoZS50YWlsd2luZENvbmZpZy5wcmVmaXgscy5zZWxlY3RvcixvKX0pLHJbMV09aS5ub2Rlc1swXX19cmV0dXJuIHR9ZnVuY3Rpb24gd3YodCxlKXtpZih0Lmxlbmd0aD09PTApcmV0dXJuIHQ7bGV0IHI9W107Zm9yKGxldFtuLGldb2YgdCl7bGV0IGE9Ui5yb290KHtub2RlczpbaS5jbG9uZSgpXX0pO2Eud2Fsa1J1bGVzKHM9PntsZXQgbz0oMCx3bi5kZWZhdWx0KSgpLmFzdFN5bmMocy5zZWxlY3Rvcik7by5lYWNoKGw9Pk1zKGwsZSkpLGFmKG8sbD0+bD09PWU/YCEke2x9YDpsKSxzLnNlbGVjdG9yPW8udG9TdHJpbmcoKSxzLndhbGtEZWNscyhsPT5sLmltcG9ydGFudD0hMCl9KSxyLnB1c2goW3suLi5uLGltcG9ydGFudDohMH0sYS5ub2Rlc1swXV0pfXJldHVybiByfWZ1bmN0aW9uIGJ2KHQsZSxyKXt2YXIgaTtpZihlLmxlbmd0aD09PTApcmV0dXJuIGU7bGV0IG49e21vZGlmaWVyOm51bGwsdmFsdWU6bXR9O3tsZXRbYSwuLi5zXT1lZSh0LFwiL1wiKTtpZihzLmxlbmd0aD4xJiYoYT1hK1wiL1wiK3Muc2xpY2UoMCwtMSkuam9pbihcIi9cIikscz1zLnNsaWNlKC0xKSkscy5sZW5ndGgmJiFyLnZhcmlhbnRNYXAuaGFzKHQpJiYodD1hLG4ubW9kaWZpZXI9c1swXSwhRyhyLnRhaWx3aW5kQ29uZmlnLFwiZ2VuZXJhbGl6ZWRNb2RpZmllcnNcIikpKXJldHVybltdfWlmKHQuZW5kc1dpdGgoXCJdXCIpJiYhdC5zdGFydHNXaXRoKFwiW1wiKSl7bGV0IGE9LyguKSgtPylcXFsoLiopXFxdL2cuZXhlYyh0KTtpZihhKXtsZXRbLHMsbyxsXT1hO2lmKHM9PT1cIkBcIiYmbz09PVwiLVwiKXJldHVybltdO2lmKHMhPT1cIkBcIiYmbz09PVwiXCIpcmV0dXJuW107dD10LnJlcGxhY2UoYCR7b31bJHtsfV1gLFwiXCIpLG4udmFsdWU9bH19aWYoWXModCkmJiFyLnZhcmlhbnRNYXAuaGFzKHQpKXtsZXQgYT1yLm9mZnNldHMucmVjb3JkVmFyaWFudCh0KSxzPXoodC5zbGljZSgxLC0xKSksbz1lZShzLFwiLFwiKTtpZihvLmxlbmd0aD4xKXJldHVybltdO2lmKCFvLmV2ZXJ5KG1uKSlyZXR1cm5bXTtsZXQgbD1vLm1hcCgodSxmKT0+W3Iub2Zmc2V0cy5hcHBseVBhcmFsbGVsT2Zmc2V0KGEsZiksbHIodS50cmltKCkpXSk7ci52YXJpYW50TWFwLnNldCh0LGwpfWlmKHIudmFyaWFudE1hcC5oYXModCkpe2xldCBhPVlzKHQpLHM9ci52YXJpYW50TWFwLmdldCh0KS5zbGljZSgpLG89W107Zm9yKGxldFtsLHVdb2YgZSl7aWYobC5sYXllcj09PVwidXNlclwiKWNvbnRpbnVlO2xldCBmPVIucm9vdCh7bm9kZXM6W3UuY2xvbmUoKV19KTtmb3IobGV0W3AsYyxkXW9mIHMpe2xldCBtPWZ1bmN0aW9uKCl7aC5yYXdzLm5lZWRlZEJhY2t1cHx8KGgucmF3cy5uZWVkZWRCYWNrdXA9ITAsaC53YWxrUnVsZXModj0+di5yYXdzLm9yaWdpbmFsU2VsZWN0b3I9di5zZWxlY3RvcikpfSxnPWZ1bmN0aW9uKHYpe3JldHVybiBtKCksaC5lYWNoKE89PntPLnR5cGU9PT1cInJ1bGVcIiYmKE8uc2VsZWN0b3JzPU8uc2VsZWN0b3JzLm1hcCh4PT52KHtnZXQgY2xhc3NOYW1lKCl7cmV0dXJuIFdzKHgpfSxzZWxlY3Rvcjp4fSkpKX0pLGh9LGg9KGQhPW51bGw/ZDpmKS5jbG9uZSgpLHk9W10sdz1jKHtnZXQgY29udGFpbmVyKCl7cmV0dXJuIG0oKSxofSxzZXBhcmF0b3I6ci50YWlsd2luZENvbmZpZy5zZXBhcmF0b3IsbW9kaWZ5U2VsZWN0b3JzOmcsd3JhcCh2KXtsZXQgTz1oLm5vZGVzO2gucmVtb3ZlQWxsKCksdi5hcHBlbmQoTyksaC5hcHBlbmQodil9LGZvcm1hdCh2KXt5LnB1c2goe2Zvcm1hdDp2LGlzQXJiaXRyYXJ5VmFyaWFudDphfSl9LGFyZ3M6bn0pO2lmKEFycmF5LmlzQXJyYXkodykpe2ZvcihsZXRbdixPXW9mIHcuZW50cmllcygpKXMucHVzaChbci5vZmZzZXRzLmFwcGx5UGFyYWxsZWxPZmZzZXQocCx2KSxPLGguY2xvbmUoKV0pO2NvbnRpbnVlfWlmKHR5cGVvZiB3PT1cInN0cmluZ1wiJiZ5LnB1c2goe2Zvcm1hdDp3LGlzQXJiaXRyYXJ5VmFyaWFudDphfSksdz09PW51bGwpY29udGludWU7aC5yYXdzLm5lZWRlZEJhY2t1cCYmKGRlbGV0ZSBoLnJhd3MubmVlZGVkQmFja3VwLGgud2Fsa1J1bGVzKHY9PntsZXQgTz12LnJhd3Mub3JpZ2luYWxTZWxlY3RvcjtpZighT3x8KGRlbGV0ZSB2LnJhd3Mub3JpZ2luYWxTZWxlY3RvcixPPT09di5zZWxlY3RvcikpcmV0dXJuO2xldCB4PXYuc2VsZWN0b3IsQT0oMCx3bi5kZWZhdWx0KShFPT57RS53YWxrQ2xhc3NlcyhJPT57SS52YWx1ZT1gJHt0fSR7ci50YWlsd2luZENvbmZpZy5zZXBhcmF0b3J9JHtJLnZhbHVlfWB9KX0pLnByb2Nlc3NTeW5jKE8pO3kucHVzaCh7Zm9ybWF0OngucmVwbGFjZShBLFwiJlwiKSxpc0FyYml0cmFyeVZhcmlhbnQ6YX0pLHYuc2VsZWN0b3I9T30pKSxoLm5vZGVzWzBdLnJhd3MudGFpbHdpbmQ9ey4uLmgubm9kZXNbMF0ucmF3cy50YWlsd2luZCxwYXJlbnRMYXllcjpsLmxheWVyfTtsZXQgYj1bey4uLmwsc29ydDpyLm9mZnNldHMuYXBwbHlWYXJpYW50T2Zmc2V0KGwuc29ydCxwLE9iamVjdC5hc3NpZ24obixyLnZhcmlhbnRPcHRpb25zLmdldCh0KSkpLGNvbGxlY3RlZEZvcm1hdHM6KChpPWwuY29sbGVjdGVkRm9ybWF0cykhPW51bGw/aTpbXSkuY29uY2F0KHkpfSxoLm5vZGVzWzBdXTtvLnB1c2goYil9fXJldHVybiBvfXJldHVybltdfWZ1bmN0aW9uIEdzKHQsZSxyPXt9KXtyZXR1cm4hWCh0KSYmIUFycmF5LmlzQXJyYXkodCk/W1t0XSxyXTpBcnJheS5pc0FycmF5KHQpP0dzKHRbMF0sZSx0WzFdKTooZS5oYXModCl8fGUuc2V0KHQsbnQodCkpLFtlLmdldCh0KSxyXSl9dmFyIHh2PS9eW2Etel8tXS87ZnVuY3Rpb24gU3YodCl7cmV0dXJuIHh2LnRlc3QodCl9ZnVuY3Rpb24ga3YodCl7aWYoIXQuaW5jbHVkZXMoXCI6Ly9cIikpcmV0dXJuITE7dHJ5e2xldCBlPW5ldyBVUkwodCk7cmV0dXJuIGUuc2NoZW1lIT09XCJcIiYmZS5ob3N0IT09XCJcIn1jYXRjaHtyZXR1cm4hMX19ZnVuY3Rpb24gSWYodCl7bGV0IGU9ITA7cmV0dXJuIHQud2Fsa0RlY2xzKHI9PntpZighUmYoci5wcm9wLHIudmFsdWUpKXJldHVybiBlPSExLCExfSksZX1mdW5jdGlvbiBSZih0LGUpe2lmKGt2KGAke3R9OiR7ZX1gKSlyZXR1cm4hMTt0cnl7cmV0dXJuIFIucGFyc2UoYGF7JHt0fToke2V9fWApLnRvUmVzdWx0KCksITB9Y2F0Y2h7cmV0dXJuITF9fWZ1bmN0aW9uIE92KHQsZSl7dmFyIHM7bGV0WyxyLG5dPShzPXQubWF0Y2goL15cXFsoW2EtekEtWjAtOS1fXSspOihcXFMrKVxcXSQvKSkhPW51bGw/czpbXTtpZihuPT09dm9pZCAwfHwhU3Yocil8fCFsdChuKSlyZXR1cm4gbnVsbDtsZXQgaT16KG4pO3JldHVybiBSZihyLGkpP1tbe3NvcnQ6ZS5vZmZzZXRzLmFyYml0cmFyeVByb3BlcnR5KCksbGF5ZXI6XCJ1dGlsaXRpZXNcIn0sKCk9Pih7W0ZzKHQpXTp7W3JdOml9fSldXTpudWxsfWZ1bmN0aW9uKkV2KHQsZSl7ZS5jYW5kaWRhdGVSdWxlTWFwLmhhcyh0KSYmKHlpZWxkW2UuY2FuZGlkYXRlUnVsZU1hcC5nZXQodCksXCJERUZBVUxUXCJdKSx5aWVsZCpmdW5jdGlvbioobyl7byE9PW51bGwmJih5aWVsZFtvLFwiREVGQVVMVFwiXSl9KE92KHQsZSkpO2xldCByPXQsbj0hMSxpPWUudGFpbHdpbmRDb25maWcucHJlZml4LGE9aS5sZW5ndGgscz1yLnN0YXJ0c1dpdGgoaSl8fHIuc3RhcnRzV2l0aChgLSR7aX1gKTtyW2FdPT09XCItXCImJnMmJihuPSEwLHI9aStyLnNsaWNlKGErMSkpLG4mJmUuY2FuZGlkYXRlUnVsZU1hcC5oYXMocikmJih5aWVsZFtlLmNhbmRpZGF0ZVJ1bGVNYXAuZ2V0KHIpLFwiLURFRkFVTFRcIl0pO2ZvcihsZXRbbyxsXW9mIHl2KHIpKWUuY2FuZGlkYXRlUnVsZU1hcC5oYXMobykmJih5aWVsZFtlLmNhbmRpZGF0ZVJ1bGVNYXAuZ2V0KG8pLG4/YC0ke2x9YDpsXSl9ZnVuY3Rpb24gQ3YodCxlKXtyZXR1cm4gdD09PWtlP1trZV06ZWUodCxlKX1mdW5jdGlvbipBdih0LGUpe3ZhciByLG47Zm9yKGxldCBpIG9mIHQpaVsxXS5yYXdzLnRhaWx3aW5kPXsuLi5pWzFdLnJhd3MudGFpbHdpbmQsY2xhc3NDYW5kaWRhdGU6ZSxwcmVzZXJ2ZVNvdXJjZToobj0ocj1pWzBdLm9wdGlvbnMpPT1udWxsP3ZvaWQgMDpyLnByZXNlcnZlU291cmNlKSE9bnVsbD9uOiExfSx5aWVsZCBpfWZ1bmN0aW9uKmJuKHQsZSxyPXQpe3ZhciBvLGwsdSxmO2xldCBuPWUudGFpbHdpbmRDb25maWcuc2VwYXJhdG9yLFtpLC4uLmFdPUN2KHQsbikucmV2ZXJzZSgpLHM9ITE7aWYoaS5zdGFydHNXaXRoKFwiIVwiKSYmKHM9ITAsaT1pLnNsaWNlKDEpKSxHKGUudGFpbHdpbmRDb25maWcsXCJ2YXJpYW50R3JvdXBpbmdcIikmJmkuc3RhcnRzV2l0aChcIihcIikmJmkuZW5kc1dpdGgoXCIpXCIpKXtsZXQgcD1hLnNsaWNlKCkucmV2ZXJzZSgpLmpvaW4obik7Zm9yKGxldCBjIG9mIGVlKGkuc2xpY2UoMSwtMSksXCIsXCIpKXlpZWxkKmJuKHArbitjLGUscil9Zm9yKGxldCBwIG9mIEV2KGksZSkpe2xldCBjPVtdLGQ9bmV3IE1hcCxbaCx5XT1wLG09aC5sZW5ndGg9PT0xO2ZvcihsZXRbZyx3XW9mIGgpe2xldCBiPVtdO2lmKHR5cGVvZiB3PT1cImZ1bmN0aW9uXCIpZm9yKGxldCB2IG9mW10uY29uY2F0KHcoeSx7aXNPbmx5UGx1Z2luOm19KSkpe2xldFtPLHhdPUdzKHYsZS5wb3N0Q3NzTm9kZUNhY2hlKTtmb3IobGV0IEEgb2YgTyliLnB1c2goW3suLi5nLG9wdGlvbnM6ey4uLmcub3B0aW9ucywuLi54fX0sQV0pfWVsc2UgaWYoeT09PVwiREVGQVVMVFwifHx5PT09XCItREVGQVVMVFwiKXtsZXQgdj13LFtPLHhdPUdzKHYsZS5wb3N0Q3NzTm9kZUNhY2hlKTtmb3IobGV0IEEgb2YgTyliLnB1c2goW3suLi5nLG9wdGlvbnM6ey4uLmcub3B0aW9ucywuLi54fX0sQV0pfWlmKGIubGVuZ3RoPjApe2xldCB2PUFycmF5LmZyb20oUHMoKGw9KG89Zy5vcHRpb25zKT09bnVsbD92b2lkIDA6by50eXBlcykhPW51bGw/bDpbXSx5LCh1PWcub3B0aW9ucykhPW51bGw/dTp7fSxlLnRhaWx3aW5kQ29uZmlnKSkubWFwKChbTyx4XSk9PngpO3YubGVuZ3RoPjAmJmQuc2V0KGIsdiksYy5wdXNoKGIpfX1pZihZcyh5KSl7aWYoYy5sZW5ndGg+MSl7bGV0IGI9ZnVuY3Rpb24oTyl7cmV0dXJuIE8ubGVuZ3RoPT09MT9PWzBdOk8uZmluZCh4PT57bGV0IEE9ZC5nZXQoeCk7cmV0dXJuIHguc29tZSgoW3tvcHRpb25zOkV9LEldKT0+SWYoSSk/RS50eXBlcy5zb21lKCh7dHlwZTpGLHByZWZlck9uQ29uZmxpY3Q6WX0pPT5BLmluY2x1ZGVzKEYpJiZZKTohMSl9KX0sW2csd109Yy5yZWR1Y2UoKE8seCk9Pih4LnNvbWUoKFt7b3B0aW9uczpFfV0pPT5FLnR5cGVzLnNvbWUoKHt0eXBlOkl9KT0+ST09PVwiYW55XCIpKT9PWzBdLnB1c2goeCk6T1sxXS5wdXNoKHgpLE8pLFtbXSxbXV0pLHY9KGY9Yih3KSkhPW51bGw/ZjpiKGcpO2lmKHYpYz1bdl07ZWxzZXtsZXQgTz1jLm1hcChBPT57dmFyIEU7cmV0dXJuIG5ldyBTZXQoWy4uLihFPWQuZ2V0KEEpKSE9bnVsbD9FOltdXSl9KTtmb3IobGV0IEEgb2YgTylmb3IobGV0IEUgb2YgQSl7bGV0IEk9ITE7Zm9yKGxldCBGIG9mIE8pQSE9PUYmJkYuaGFzKEUpJiYoRi5kZWxldGUoRSksST0hMCk7SSYmQS5kZWxldGUoRSl9bGV0IHg9W107Zm9yKGxldFtBLEVdb2YgTy5lbnRyaWVzKCkpZm9yKGxldCBJIG9mIEUpe2xldCBGPWNbQV0ubWFwKChbLFldKT0+WSkuZmxhdCgpLm1hcChZPT5ZLnRvU3RyaW5nKCkuc3BsaXQoYFxuYCkuc2xpY2UoMSwtMSkubWFwKEs9PksudHJpbSgpKS5tYXAoSz0+YCAgICAgICR7S31gKS5qb2luKGBcbmApKS5qb2luKGBcblxuYCk7eC5wdXNoKGAgIFVzZSBcXGAke3QucmVwbGFjZShcIltcIixgWyR7SX06YCl9XFxgIGZvciBcXGAke0YudHJpbSgpfVxcYGApO2JyZWFrfUwud2FybihbYFRoZSBjbGFzcyBcXGAke3R9XFxgIGlzIGFtYmlndW91cyBhbmQgbWF0Y2hlcyBtdWx0aXBsZSB1dGlsaXRpZXMuYCwuLi54LGBJZiB0aGlzIGlzIGNvbnRlbnQgYW5kIG5vdCBhIGNsYXNzLCByZXBsYWNlIGl0IHdpdGggXFxgJHt0LnJlcGxhY2UoXCJbXCIsXCImbHNxYjtcIikucmVwbGFjZShcIl1cIixcIiZyc3FiO1wiKX1cXGAgdG8gc2lsZW5jZSB0aGlzIHdhcm5pbmcuYF0pO2NvbnRpbnVlfX1jPWMubWFwKGc9PmcuZmlsdGVyKHc9PklmKHdbMV0pKSl9Yz1jLmZsYXQoKSxjPUFycmF5LmZyb20oQXYoYyxpKSksYz12dihjLGUpLHMmJihjPXd2KGMsaSkpO2ZvcihsZXQgZyBvZiBhKWM9YnYoZyxjLGUpO2ZvcihsZXQgZyBvZiBjKWdbMV0ucmF3cy50YWlsd2luZD17Li4uZ1sxXS5yYXdzLnRhaWx3aW5kLGNhbmRpZGF0ZTp0fSxnPV92KGcse2NvbnRleHQ6ZSxjYW5kaWRhdGU6dCxvcmlnaW5hbDpyfSksZyE9PW51bGwmJih5aWVsZCBnKX19ZnVuY3Rpb24gX3YodCx7Y29udGV4dDplLGNhbmRpZGF0ZTpyLG9yaWdpbmFsOm59KXtpZighdFswXS5jb2xsZWN0ZWRGb3JtYXRzKXJldHVybiB0O2xldCBpPSEwLGE7dHJ5e2E9b3QodFswXS5jb2xsZWN0ZWRGb3JtYXRzLHtjb250ZXh0OmUsY2FuZGlkYXRlOnJ9KX1jYXRjaHtyZXR1cm4gbnVsbH1sZXQgcz1SLnJvb3Qoe25vZGVzOlt0WzFdLmNsb25lKCldfSk7cmV0dXJuIHMud2Fsa1J1bGVzKG89PntpZighdm4obykpdHJ5e28uc2VsZWN0b3I9b24oby5zZWxlY3RvcixhLHtjYW5kaWRhdGU6bixjb250ZXh0OmV9KX1jYXRjaHtyZXR1cm4gaT0hMSwhMX19KSxpPyh0WzFdPXMubm9kZXNbMF0sdCk6bnVsbH1mdW5jdGlvbiB2bih0KXtyZXR1cm4gdC5wYXJlbnQmJnQucGFyZW50LnR5cGU9PT1cImF0cnVsZVwiJiZ0LnBhcmVudC5uYW1lPT09XCJrZXlmcmFtZXNcIn1mdW5jdGlvbiBUdih0KXtpZih0PT09ITApcmV0dXJuIGU9Pnt2bihlKXx8ZS53YWxrRGVjbHMocj0+e3IucGFyZW50LnR5cGU9PT1cInJ1bGVcIiYmIXZuKHIucGFyZW50KSYmKHIuaW1wb3J0YW50PSEwKX0pfTtpZih0eXBlb2YgdD09XCJzdHJpbmdcIilyZXR1cm4gZT0+e3ZuKGUpfHwoZS5zZWxlY3RvcnM9ZS5zZWxlY3RvcnMubWFwKHI9PnluKHIsdCkpKX19ZnVuY3Rpb24gZ24odCxlKXt2YXIgaTtsZXQgcj1bXSxuPVR2KGUudGFpbHdpbmRDb25maWcuaW1wb3J0YW50KTtmb3IobGV0IGEgb2YgdCl7aWYoZS5ub3RDbGFzc0NhY2hlLmhhcyhhKSljb250aW51ZTtpZihlLmNhbmRpZGF0ZVJ1bGVDYWNoZS5oYXMoYSkpe3I9ci5jb25jYXQoQXJyYXkuZnJvbShlLmNhbmRpZGF0ZVJ1bGVDYWNoZS5nZXQoYSkpKTtjb250aW51ZX1sZXQgcz1BcnJheS5mcm9tKGJuKGEsZSkpO2lmKHMubGVuZ3RoPT09MCl7ZS5ub3RDbGFzc0NhY2hlLmFkZChhKTtjb250aW51ZX1lLmNsYXNzQ2FjaGUuc2V0KGEscyk7bGV0IG89KGk9ZS5jYW5kaWRhdGVSdWxlQ2FjaGUuZ2V0KGEpKSE9bnVsbD9pOm5ldyBTZXQ7ZS5jYW5kaWRhdGVSdWxlQ2FjaGUuc2V0KGEsbyk7Zm9yKGxldCBsIG9mIHMpe2xldFt7c29ydDp1LG9wdGlvbnM6Zn0scF09bDtpZihmLnJlc3BlY3RJbXBvcnRhbnQmJm4pe2xldCBkPVIucm9vdCh7bm9kZXM6W3AuY2xvbmUoKV19KTtkLndhbGtSdWxlcyhuKSxwPWQubm9kZXNbMF19bGV0IGM9W3UscF07by5hZGQoYyksZS5ydWxlQ2FjaGUuYWRkKGMpLHIucHVzaChjKX19cmV0dXJuIHJ9ZnVuY3Rpb24gWXModCl7cmV0dXJuIHQuc3RhcnRzV2l0aChcIltcIikmJnQuZW5kc1dpdGgoXCJdXCIpfWZ1bmN0aW9uIEdlKHQsZT12b2lkIDAscj12b2lkIDApe3JldHVybiB0Lm1hcChuPT57dmFyIHM7bGV0IGk9bi5jbG9uZSgpLGE9KChzPW4ucmF3cy50YWlsd2luZCk9PW51bGw/dm9pZCAwOnMucHJlc2VydmVTb3VyY2UpIT09ITB8fCFpLnNvdXJjZTtyZXR1cm4gZSE9PXZvaWQgMCYmYSYmKGkuc291cmNlPWUsXCJ3YWxrXCJpbiBpJiZpLndhbGsobz0+e28uc291cmNlPWV9KSksciE9PXZvaWQgMCYmKGkucmF3cy50YWlsd2luZD17Li4uaS5yYXdzLnRhaWx3aW5kLC4uLnJ9KSxpfSl9dmFyIERmPS9bXFxcXF4kLiorPygpW1xcXXt9fF0vZyxQdj1SZWdFeHAoRGYuc291cmNlKTtmdW5jdGlvbiB4bih0KXtyZXR1cm4gdD1BcnJheS5pc0FycmF5KHQpP3Q6W3RdLHQ9dC5tYXAoZT0+ZSBpbnN0YW5jZW9mIFJlZ0V4cD9lLnNvdXJjZTplKSx0LmpvaW4oXCJcIil9ZnVuY3Rpb24gY2UodCl7cmV0dXJuIG5ldyBSZWdFeHAoeG4odCksXCJnXCIpfWZ1bmN0aW9uIHV0KHQpe3JldHVybmAoPzoke3QubWFwKHhuKS5qb2luKFwifFwiKX0pYH1mdW5jdGlvbiBIcyh0KXtyZXR1cm5gKD86JHt4bih0KX0pP2B9ZnVuY3Rpb24gTWYodCl7cmV0dXJuYCg/OiR7eG4odCl9KSpgfWZ1bmN0aW9uIEZmKHQpe3JldHVybiB0JiZQdi50ZXN0KHQpP3QucmVwbGFjZShEZixcIlxcXFwkJlwiKTp0fHxcIlwifWZ1bmN0aW9uIExmKHQpe2xldCBlPUFycmF5LmZyb20oUnYodCkpO3JldHVybiByPT57dmFyIGk7bGV0IG49W107Zm9yKGxldCBhIG9mIGUpbj1bLi4ubiwuLi4oaT1yLm1hdGNoKGEpKSE9bnVsbD9pOltdXTtyZXR1cm4gbi5maWx0ZXIoYT0+YSE9PXZvaWQgMCkubWFwKEZ2KX19ZnVuY3Rpb24qUnYodCl7bGV0IGU9dC50YWlsd2luZENvbmZpZy5zZXBhcmF0b3Iscj1HKHQudGFpbHdpbmRDb25maWcsXCJ2YXJpYW50R3JvdXBpbmdcIiksbj10LnRhaWx3aW5kQ29uZmlnLnByZWZpeCE9PVwiXCI/SHMoY2UoWy8tPy8sRmYodC50YWlsd2luZENvbmZpZy5wcmVmaXgpXSkpOlwiXCIsaT11dChbL1xcW1teXFxzOidcImBdKzpbXlxcc1xcW1xcXV0rXFxdLywvXFxbW15cXHM6J1wiYF0rOlteXFxzXSs/XFxbW15cXHNdK1xcXVteXFxzXSs/XFxdLyxjZShbLy0/KD86XFx3KykvLEhzKHV0KFtjZShbLy0oPzpcXHcrLSkqXFxbW15cXHM6XStcXF0vLC8oPyFbeyhbXV0pLywvKD86XFwvW15cXHMnXCJgXFxcXD48JF0qKT8vXSksY2UoWy8tKD86XFx3Ky0pKlxcW1teXFxzXStcXF0vLC8oPyFbeyhbXV0pLywvKD86XFwvW15cXHMnXCJgXFxcXCRdKik/L10pLC9bLVxcL11bXlxccydcImBcXFxcJD17PjxdKi9dKSldKV0pLGE9W3V0KFtjZShbL0BcXFtbXlxcc1wiJ2BdK1xcXShcXC9bXlxcc1wiJ2BdKyk/LyxlXSksY2UoWy8oW15cXHNcIidgXFxbXFxcXF0rLSk/XFxbW15cXHNcIidgXStcXF0vLGVdKSxjZShbL1teXFxzXCInYFxcW1xcXFxdKy8sZV0pXSksdXQoW2NlKFsvKFteXFxzXCInYFxcW1xcXFxdKy0pP1xcW1teXFxzYF0rXFxdLyxlXSksY2UoWy9bXlxcc2BcXFtcXFxcXSsvLGVdKV0pXTtmb3IobGV0IHMgb2YgYSl5aWVsZCBjZShbXCIoKD89KChcIixzLFwiKSspKVxcXFwyKT9cIiwvIT8vLG4scj91dChbY2UoWy9cXCgvLGksTWYoWy8sLyxpXSksL1xcKS9dKSxpXSk6aV0pO3lpZWxkL1tePD5cIidgXFxzLigpe31bXFxdIz0lJF0qW148PlwiJ2BcXHMuKCl7fVtcXF0jPSU6JF0vZ312YXIgRHY9LyhbXFxbXFxdJ1wiYF0pKFteXFxbXFxdJ1wiYF0pPy9nLE12PS9bXlwiJ2BcXHM8PlxcXV0rLztmdW5jdGlvbiBGdih0KXtpZighdC5pbmNsdWRlcyhcIi1bXCIpKXJldHVybiB0O2xldCBlPTAscj1bXSxuPXQubWF0Y2hBbGwoRHYpO249QXJyYXkuZnJvbShuKS5mbGF0TWFwKGk9PntsZXRbLC4uLmFdPWk7cmV0dXJuIGEubWFwKChzLG8pPT5PYmplY3QuYXNzaWduKFtdLGkse2luZGV4OmkuaW5kZXgrbywwOnN9KSl9KTtmb3IobGV0IGkgb2Ygbil7bGV0IGE9aVswXSxzPXJbci5sZW5ndGgtMV07aWYoYT09PXM/ci5wb3AoKTooYT09PVwiJ1wifHxhPT09J1wiJ3x8YT09PVwiYFwiKSYmci5wdXNoKGEpLCFzKXtpZihhPT09XCJbXCIpe2UrKztjb250aW51ZX1lbHNlIGlmKGE9PT1cIl1cIil7ZS0tO2NvbnRpbnVlfWlmKGU8MClyZXR1cm4gdC5zdWJzdHJpbmcoMCxpLmluZGV4LTEpO2lmKGU9PT0wJiYhTXYudGVzdChhKSlyZXR1cm4gdC5zdWJzdHJpbmcoMCxpLmluZGV4KX19cmV0dXJuIHR9dmFyIEFlPVZuLE5mPXtERUZBVUxUOkxmfSxxZj17REVGQVVMVDp0PT50LHN2ZWx0ZTp0PT50LnJlcGxhY2UoLyg/Ol58XFxzKWNsYXNzOi9nLFwiIFwiKX07ZnVuY3Rpb24gTHYodCxlKXtsZXQgcj10LnRhaWx3aW5kQ29uZmlnLmNvbnRlbnQuZXh0cmFjdDtyZXR1cm4gcltlXXx8ci5ERUZBVUxUfHxOZltlXXx8TmYuREVGQVVMVCh0KX1mdW5jdGlvbiBOdih0LGUpe2xldCByPXQuY29udGVudC50cmFuc2Zvcm07cmV0dXJuIHJbZV18fHIuREVGQVVMVHx8cWZbZV18fHFmLkRFRkFVTFR9dmFyIHVyPW5ldyBXZWFrTWFwO2Z1bmN0aW9uIHF2KHQsZSxyLG4pe3VyLmhhcyhlKXx8dXIuc2V0KGUsbmV3ICRmLmRlZmF1bHQoe21heFNpemU6MjVlM30pKTtmb3IobGV0IGkgb2YgdC5zcGxpdChgXG5gKSlpZihpPWkudHJpbSgpLCFuLmhhcyhpKSlpZihuLmFkZChpKSx1ci5nZXQoZSkuaGFzKGkpKWZvcihsZXQgYSBvZiB1ci5nZXQoZSkuZ2V0KGkpKXIuYWRkKGEpO2Vsc2V7bGV0IGE9ZShpKS5maWx0ZXIobz0+byE9PVwiISpcIikscz1uZXcgU2V0KGEpO2ZvcihsZXQgbyBvZiBzKXIuYWRkKG8pO3VyLmdldChlKS5zZXQoaSxzKX19ZnVuY3Rpb24gJHYodCxlKXtsZXQgcj1lLm9mZnNldHMuc29ydCh0KSxuPXtiYXNlOm5ldyBTZXQsZGVmYXVsdHM6bmV3IFNldCxjb21wb25lbnRzOm5ldyBTZXQsdXRpbGl0aWVzOm5ldyBTZXQsdmFyaWFudHM6bmV3IFNldH07Zm9yKGxldFtpLGFdb2YgciluW2kubGF5ZXJdLmFkZChhKTtyZXR1cm4gbn1mdW5jdGlvbiBRcyh0KXtyZXR1cm4gZT0+e3ZhciBoO2xldCByPXtiYXNlOm51bGwsY29tcG9uZW50czpudWxsLHV0aWxpdGllczpudWxsLHZhcmlhbnRzOm51bGx9O2lmKGUud2Fsa0F0UnVsZXMoeT0+e3kubmFtZT09PVwidGFpbHdpbmRcIiYmT2JqZWN0LmtleXMocikuaW5jbHVkZXMoeS5wYXJhbXMpJiYoclt5LnBhcmFtc109eSl9KSxPYmplY3QudmFsdWVzKHIpLmV2ZXJ5KHk9Pnk9PT1udWxsKSlyZXR1cm4gZTtsZXQgbj1uZXcgU2V0KFsuLi4oaD10LmNhbmRpZGF0ZXMpIT1udWxsP2g6W10sa2VdKSxpPW5ldyBTZXQ7QWUuREVCVUcmJmNvbnNvbGUudGltZShcIlJlYWRpbmcgY2hhbmdlZCBmaWxlc1wiKTtmb3IobGV0e2ZpbGU6eSxjb250ZW50Om0sZXh0ZW5zaW9uOmd9b2YgdC5jaGFuZ2VkQ29udGVudCl7bGV0IHc9TnYodC50YWlsd2luZENvbmZpZyxnKSxiPUx2KHQsZyk7bT15P2h0LnJlYWRGaWxlU3luYyh5LFwidXRmOFwiKTptLHF2KHcobSksYixuLGkpfUFlLkRFQlVHJiZjb25zb2xlLnRpbWVFbmQoXCJSZWFkaW5nIGNoYW5nZWQgZmlsZXNcIik7bGV0IGE9dC5jbGFzc0NhY2hlLnNpemU7QWUuREVCVUcmJmNvbnNvbGUudGltZShcIkdlbmVyYXRlIHJ1bGVzXCIpLEFlLkRFQlVHJiZjb25zb2xlLnRpbWUoXCJTb3J0aW5nIGNhbmRpZGF0ZXNcIik7bGV0IHM9bmV3IFNldChbLi4ubl0uc29ydCgoeSxtKT0+eT09PW0/MDp5PG0/LTE6MSkpO0FlLkRFQlVHJiZjb25zb2xlLnRpbWVFbmQoXCJTb3J0aW5nIGNhbmRpZGF0ZXNcIiksZ24ocyx0KSxBZS5ERUJVRyYmY29uc29sZS50aW1lRW5kKFwiR2VuZXJhdGUgcnVsZXNcIiksQWUuREVCVUcmJmNvbnNvbGUudGltZShcIkJ1aWxkIHN0eWxlc2hlZXRcIiksKHQuc3R5bGVzaGVldENhY2hlPT09bnVsbHx8dC5jbGFzc0NhY2hlLnNpemUhPT1hKSYmKHQuc3R5bGVzaGVldENhY2hlPSR2KFsuLi50LnJ1bGVDYWNoZV0sdCkpLEFlLkRFQlVHJiZjb25zb2xlLnRpbWVFbmQoXCJCdWlsZCBzdHlsZXNoZWV0XCIpO2xldHtkZWZhdWx0czpvLGJhc2U6bCxjb21wb25lbnRzOnUsdXRpbGl0aWVzOmYsdmFyaWFudHM6cH09dC5zdHlsZXNoZWV0Q2FjaGU7ci5iYXNlJiYoci5iYXNlLmJlZm9yZShHZShbLi4ubCwuLi5vXSxyLmJhc2Uuc291cmNlLHtsYXllcjpcImJhc2VcIn0pKSxyLmJhc2UucmVtb3ZlKCkpLHIuY29tcG9uZW50cyYmKHIuY29tcG9uZW50cy5iZWZvcmUoR2UoWy4uLnVdLHIuY29tcG9uZW50cy5zb3VyY2Use2xheWVyOlwiY29tcG9uZW50c1wifSkpLHIuY29tcG9uZW50cy5yZW1vdmUoKSksci51dGlsaXRpZXMmJihyLnV0aWxpdGllcy5iZWZvcmUoR2UoWy4uLmZdLHIudXRpbGl0aWVzLnNvdXJjZSx7bGF5ZXI6XCJ1dGlsaXRpZXNcIn0pKSxyLnV0aWxpdGllcy5yZW1vdmUoKSk7bGV0IGM9QXJyYXkuZnJvbShwKS5maWx0ZXIoeT0+e3ZhciBnO2xldCBtPShnPXkucmF3cy50YWlsd2luZCk9PW51bGw/dm9pZCAwOmcucGFyZW50TGF5ZXI7cmV0dXJuIG09PT1cImNvbXBvbmVudHNcIj9yLmNvbXBvbmVudHMhPT1udWxsOm09PT1cInV0aWxpdGllc1wiP3IudXRpbGl0aWVzIT09bnVsbDohMH0pO3IudmFyaWFudHM/KHIudmFyaWFudHMuYmVmb3JlKEdlKGMsci52YXJpYW50cy5zb3VyY2Use2xheWVyOlwidmFyaWFudHNcIn0pKSxyLnZhcmlhbnRzLnJlbW92ZSgpKTpjLmxlbmd0aD4wJiZlLmFwcGVuZChHZShjLGUuc291cmNlLHtsYXllcjpcInZhcmlhbnRzXCJ9KSk7bGV0IGQ9Yy5zb21lKHk9Pnt2YXIgbTtyZXR1cm4oKG09eS5yYXdzLnRhaWx3aW5kKT09bnVsbD92b2lkIDA6bS5wYXJlbnRMYXllcik9PT1cInV0aWxpdGllc1wifSk7ci51dGlsaXRpZXMmJmYuc2l6ZT09PTAmJiFkJiZMLndhcm4oXCJjb250ZW50LXByb2JsZW1zXCIsW1wiTm8gdXRpbGl0eSBjbGFzc2VzIHdlcmUgZGV0ZWN0ZWQgaW4geW91ciBzb3VyY2UgZmlsZXMuIElmIHRoaXMgaXMgdW5leHBlY3RlZCwgZG91YmxlLWNoZWNrIHRoZSBgY29udGVudGAgb3B0aW9uIGluIHlvdXIgVGFpbHdpbmQgQ1NTIGNvbmZpZ3VyYXRpb24uXCIsXCJodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2NvbnRlbnQtY29uZmlndXJhdGlvblwiXSksQWUuREVCVUcmJihjb25zb2xlLmxvZyhcIlBvdGVudGlhbCBjbGFzc2VzOiBcIixuLnNpemUpLGNvbnNvbGUubG9nKFwiQWN0aXZlIGNvbnRleHRzOiBcIixXbi5zaXplKSksdC5jaGFuZ2VkQ29udGVudD1bXSxlLndhbGtBdFJ1bGVzKFwibGF5ZXJcIix5PT57T2JqZWN0LmtleXMocikuaW5jbHVkZXMoeS5wYXJhbXMpJiZ5LnJlbW92ZSgpfSl9fXZhciBrbj1IKHZlKCkpO2Z1bmN0aW9uIFNuKHQpe2xldCBlPW5ldyBNYXA7Ui5yb290KHtub2RlczpbdC5jbG9uZSgpXX0pLndhbGtSdWxlcyhhPT57KDAsa24uZGVmYXVsdCkocz0+e3Mud2Fsa0NsYXNzZXMobz0+e2xldCBsPW8ucGFyZW50LnRvU3RyaW5nKCksdT1lLmdldChsKTt1fHxlLnNldChsLHU9bmV3IFNldCksdS5hZGQoby52YWx1ZSl9KX0pLnByb2Nlc3NTeW5jKGEuc2VsZWN0b3IpfSk7bGV0IG49QXJyYXkuZnJvbShlLnZhbHVlcygpLGE9PkFycmF5LmZyb20oYSkpLGk9bi5mbGF0KCk7cmV0dXJuIE9iamVjdC5hc3NpZ24oaSx7Z3JvdXBzOm59KX12YXIgVXY9KDAsa24uZGVmYXVsdCkoKTtmdW5jdGlvbiBKcyh0KXtyZXR1cm4gVXYuYXN0U3luYyh0KX1mdW5jdGlvbiBVZih0LGUpe2xldCByPW5ldyBTZXQ7Zm9yKGxldCBuIG9mIHQpci5hZGQobi5zcGxpdChlKS5wb3AoKSk7cmV0dXJuIEFycmF5LmZyb20ocil9ZnVuY3Rpb24gamYodCxlKXtsZXQgcj10LnRhaWx3aW5kQ29uZmlnLnByZWZpeDtyZXR1cm4gdHlwZW9mIHI9PVwiZnVuY3Rpb25cIj9yKGUpOnIrZX1mdW5jdGlvbipWZih0KXtmb3IoeWllbGQgdDt0LnBhcmVudDspeWllbGQgdC5wYXJlbnQsdD10LnBhcmVudH1mdW5jdGlvbiBqdih0LGU9e30pe2xldCByPXQubm9kZXM7dC5ub2Rlcz1bXTtsZXQgbj10LmNsb25lKGUpO3JldHVybiB0Lm5vZGVzPXIsbn1mdW5jdGlvbiB6dih0KXtmb3IobGV0IGUgb2YgVmYodCkpaWYodCE9PWUpe2lmKGUudHlwZT09PVwicm9vdFwiKWJyZWFrO3Q9anYoZSx7bm9kZXM6W3RdfSl9cmV0dXJuIHR9ZnVuY3Rpb24gVnYodCxlKXtsZXQgcj1uZXcgTWFwO3JldHVybiB0LndhbGtSdWxlcyhuPT57dmFyIHM7Zm9yKGxldCBvIG9mIFZmKG4pKWlmKCgocz1vLnJhd3MudGFpbHdpbmQpPT1udWxsP3ZvaWQgMDpzLmxheWVyKSE9PXZvaWQgMClyZXR1cm47bGV0IGk9enYobiksYT1lLm9mZnNldHMuY3JlYXRlKFwidXNlclwiKTtmb3IobGV0IG8gb2YgU24obikpe2xldCBsPXIuZ2V0KG8pfHxbXTtyLnNldChvLGwpLGwucHVzaChbe2xheWVyOlwidXNlclwiLHNvcnQ6YSxpbXBvcnRhbnQ6ITF9LGldKX19KSxyfWZ1bmN0aW9uIFd2KHQsZSl7Zm9yKGxldCByIG9mIHQpe2lmKGUubm90Q2xhc3NDYWNoZS5oYXMocil8fGUuYXBwbHlDbGFzc0NhY2hlLmhhcyhyKSljb250aW51ZTtpZihlLmNsYXNzQ2FjaGUuaGFzKHIpKXtlLmFwcGx5Q2xhc3NDYWNoZS5zZXQocixlLmNsYXNzQ2FjaGUuZ2V0KHIpLm1hcCgoW2ksYV0pPT5baSxhLmNsb25lKCldKSk7Y29udGludWV9bGV0IG49QXJyYXkuZnJvbShibihyLGUpKTtpZihuLmxlbmd0aD09PTApe2Uubm90Q2xhc3NDYWNoZS5hZGQocik7Y29udGludWV9ZS5hcHBseUNsYXNzQ2FjaGUuc2V0KHIsbil9cmV0dXJuIGUuYXBwbHlDbGFzc0NhY2hlfWZ1bmN0aW9uIEJ2KHQpe2xldCBlPW51bGw7cmV0dXJue2dldDpyPT4oZT1lfHx0KCksZS5nZXQocikpLGhhczpyPT4oZT1lfHx0KCksZS5oYXMocikpfX1mdW5jdGlvbiBHdih0KXtyZXR1cm57Z2V0OmU9PnQuZmxhdE1hcChyPT5yLmdldChlKXx8W10pLGhhczplPT50LnNvbWUocj0+ci5oYXMoZSkpfX1mdW5jdGlvbiB6Zih0KXtsZXQgZT10LnNwbGl0KC9bXFxzXFx0XFxuXSsvZyk7cmV0dXJuIGVbZS5sZW5ndGgtMV09PT1cIiFpbXBvcnRhbnRcIj9bZS5zbGljZSgwLC0xKSwhMF06W2UsITFdfWZ1bmN0aW9uIFdmKHQsZSxyKXtsZXQgbj1uZXcgU2V0LGk9W107aWYodC53YWxrQXRSdWxlcyhcImFwcGx5XCIsbD0+e2xldFt1XT16ZihsLnBhcmFtcyk7Zm9yKGxldCBmIG9mIHUpbi5hZGQoZik7aS5wdXNoKGwpfSksaS5sZW5ndGg9PT0wKXJldHVybjtsZXQgYT1HdihbcixXdihuLGUpXSk7ZnVuY3Rpb24gcyhsLHUsZil7bGV0IHA9SnMobCksYz1Kcyh1KSxoPUpzKGAuJHtyZShmKX1gKS5ub2Rlc1swXS5ub2Rlc1swXTtyZXR1cm4gcC5lYWNoKHk9PntsZXQgbT1uZXcgU2V0O2MuZWFjaChnPT57bGV0IHc9ITE7Zz1nLmNsb25lKCksZy53YWxrQ2xhc3NlcyhiPT57Yi52YWx1ZT09PWgudmFsdWUmJih3fHwoYi5yZXBsYWNlV2l0aCguLi55Lm5vZGVzLm1hcCh2PT52LmNsb25lKCkpKSxtLmFkZChnKSx3PSEwKSl9KX0pO2ZvcihsZXQgZyBvZiBtKXtsZXQgdz1bW11dO2ZvcihsZXQgYiBvZiBnLm5vZGVzKWIudHlwZT09PVwiY29tYmluYXRvclwiPyh3LnB1c2goYiksdy5wdXNoKFtdKSk6d1t3Lmxlbmd0aC0xXS5wdXNoKGIpO2cubm9kZXM9W107Zm9yKGxldCBiIG9mIHcpQXJyYXkuaXNBcnJheShiKSYmYi5zb3J0KCh2LE8pPT52LnR5cGU9PT1cInRhZ1wiJiZPLnR5cGU9PT1cImNsYXNzXCI/LTE6di50eXBlPT09XCJjbGFzc1wiJiZPLnR5cGU9PT1cInRhZ1wiPzE6di50eXBlPT09XCJjbGFzc1wiJiZPLnR5cGU9PT1cInBzZXVkb1wiJiZPLnZhbHVlLnN0YXJ0c1dpdGgoXCI6OlwiKT8tMTp2LnR5cGU9PT1cInBzZXVkb1wiJiZ2LnZhbHVlLnN0YXJ0c1dpdGgoXCI6OlwiKSYmTy50eXBlPT09XCJjbGFzc1wiPzE6MCksZy5ub2Rlcz1nLm5vZGVzLmNvbmNhdChiKX15LnJlcGxhY2VXaXRoKC4uLm0pfSkscC50b1N0cmluZygpfWxldCBvPW5ldyBNYXA7Zm9yKGxldCBsIG9mIGkpe2xldFt1XT1vLmdldChsLnBhcmVudCl8fFtbXSxsLnNvdXJjZV07by5zZXQobC5wYXJlbnQsW3UsbC5zb3VyY2VdKTtsZXRbZixwXT16ZihsLnBhcmFtcyk7aWYobC5wYXJlbnQudHlwZT09PVwiYXRydWxlXCIpe2lmKGwucGFyZW50Lm5hbWU9PT1cInNjcmVlblwiKXtsZXQgYz1sLnBhcmVudC5wYXJhbXM7dGhyb3cgbC5lcnJvcihgQGFwcGx5IGlzIG5vdCBzdXBwb3J0ZWQgd2l0aGluIG5lc3RlZCBhdC1ydWxlcyBsaWtlIEBzY3JlZW4uIFdlIHN1Z2dlc3QgeW91IHdyaXRlIHRoaXMgYXMgQGFwcGx5ICR7Zi5tYXAoZD0+YCR7Y306JHtkfWApLmpvaW4oXCIgXCIpfSBpbnN0ZWFkLmApfXRocm93IGwuZXJyb3IoYEBhcHBseSBpcyBub3Qgc3VwcG9ydGVkIHdpdGhpbiBuZXN0ZWQgYXQtcnVsZXMgbGlrZSBAJHtsLnBhcmVudC5uYW1lfS4gWW91IGNhbiBmaXggdGhpcyBieSB1bi1uZXN0aW5nIEAke2wucGFyZW50Lm5hbWV9LmApfWZvcihsZXQgYyBvZiBmKXtpZihbamYoZSxcImdyb3VwXCIpLGpmKGUsXCJwZWVyXCIpXS5pbmNsdWRlcyhjKSl0aHJvdyBsLmVycm9yKGBAYXBwbHkgc2hvdWxkIG5vdCBiZSB1c2VkIHdpdGggdGhlICcke2N9JyB1dGlsaXR5YCk7aWYoIWEuaGFzKGMpKXRocm93IGwuZXJyb3IoYFRoZSBcXGAke2N9XFxgIGNsYXNzIGRvZXMgbm90IGV4aXN0LiBJZiBcXGAke2N9XFxgIGlzIGEgY3VzdG9tIGNsYXNzLCBtYWtlIHN1cmUgaXQgaXMgZGVmaW5lZCB3aXRoaW4gYSBcXGBAbGF5ZXJcXGAgZGlyZWN0aXZlLmApO2xldCBkPWEuZ2V0KGMpO3UucHVzaChbYyxwLGRdKX19Zm9yKGxldFtsLFt1LGZdXW9mIG8pe2xldCBwPVtdO2ZvcihsZXRbZCxoLHldb2YgdSl7bGV0IG09W2QsLi4uVWYoW2RdLGUudGFpbHdpbmRDb25maWcuc2VwYXJhdG9yKV07Zm9yKGxldFtnLHddb2YgeSl7bGV0IGI9U24obCksdj1Tbih3KTtpZih2PXYuZ3JvdXBzLmZpbHRlcihFPT5FLnNvbWUoST0+bS5pbmNsdWRlcyhJKSkpLmZsYXQoKSx2PXYuY29uY2F0KFVmKHYsZS50YWlsd2luZENvbmZpZy5zZXBhcmF0b3IpKSxiLnNvbWUoRT0+di5pbmNsdWRlcyhFKSkpdGhyb3cgdy5lcnJvcihgWW91IGNhbm5vdCBcXGBAYXBwbHlcXGAgdGhlIFxcYCR7ZH1cXGAgdXRpbGl0eSBoZXJlIGJlY2F1c2UgaXQgY3JlYXRlcyBhIGNpcmN1bGFyIGRlcGVuZGVuY3kuYCk7bGV0IHg9Ui5yb290KHtub2Rlczpbdy5jbG9uZSgpXX0pO3gud2FsayhFPT57RS5zb3VyY2U9Zn0pLCh3LnR5cGUhPT1cImF0cnVsZVwifHx3LnR5cGU9PT1cImF0cnVsZVwiJiZ3Lm5hbWUhPT1cImtleWZyYW1lc1wiKSYmeC53YWxrUnVsZXMoRT0+e2lmKCFTbihFKS5zb21lKEI9PkI9PT1kKSl7RS5yZW1vdmUoKTtyZXR1cm59bGV0IEk9dHlwZW9mIGUudGFpbHdpbmRDb25maWcuaW1wb3J0YW50PT1cInN0cmluZ1wiP2UudGFpbHdpbmRDb25maWcuaW1wb3J0YW50Om51bGwsWT1sLnJhd3MudGFpbHdpbmQhPT12b2lkIDAmJkkmJmwuc2VsZWN0b3IuaW5kZXhPZihJKT09PTA/bC5zZWxlY3Rvci5zbGljZShJLmxlbmd0aCk6bC5zZWxlY3RvcjtFLnNlbGVjdG9yPXMoWSxFLnNlbGVjdG9yLGQpLEkmJlkhPT1sLnNlbGVjdG9yJiYoRS5zZWxlY3Rvcj15bihFLnNlbGVjdG9yLEkpKSxFLndhbGtEZWNscyhCPT57Qi5pbXBvcnRhbnQ9Zy5pbXBvcnRhbnR8fGh9KTtsZXQgSz0oMCxrbi5kZWZhdWx0KSgpLmFzdFN5bmMoRS5zZWxlY3Rvcik7Sy5lYWNoKEI9PmF0KEIpKSxFLnNlbGVjdG9yPUsudG9TdHJpbmcoKX0pLHgubm9kZXNbMF0mJnAucHVzaChbZy5zb3J0LHgubm9kZXNbMF1dKX19bGV0IGM9ZS5vZmZzZXRzLnNvcnQocCkubWFwKGQ9PmRbMV0pO2wuYWZ0ZXIoYyl9Zm9yKGxldCBsIG9mIGkpbC5wYXJlbnQubm9kZXMubGVuZ3RoPjE/bC5yZW1vdmUoKTpsLnBhcmVudC5yZW1vdmUoKTtXZih0LGUscil9ZnVuY3Rpb24gWHModCl7cmV0dXJuIGU9PntsZXQgcj1CdigoKT0+VnYoZSx0KSk7V2YoZSx0LHIpfX12YXIgZnI9SChxcygpKSxvYz1IKEJmKCkpO3ZhciBvYT1IKHNjKCkpO2Z1bmN0aW9uIHNhKHQpe3JldHVybiB0eXBlb2YgdD09XCJvYmplY3RcIiYmdCE9PW51bGx9ZnVuY3Rpb24gdHcodCxlKXtsZXQgcj1MZShlKTtkbyBpZihyLnBvcCgpLCgwLGZyLmRlZmF1bHQpKHQscikhPT12b2lkIDApYnJlYWs7d2hpbGUoci5sZW5ndGgpO3JldHVybiByLmxlbmd0aD9yOnZvaWQgMH1mdW5jdGlvbiBjdCh0KXtyZXR1cm4gdHlwZW9mIHQ9PVwic3RyaW5nXCI/dDp0LnJlZHVjZSgoZSxyLG4pPT5yLmluY2x1ZGVzKFwiLlwiKT9gJHtlfVske3J9XWA6bj09PTA/cjpgJHtlfS4ke3J9YCxcIlwiKX1mdW5jdGlvbiBsYyh0KXtyZXR1cm4gdC5tYXAoZT0+YCcke2V9J2ApLmpvaW4oXCIsIFwiKX1mdW5jdGlvbiBhYyh0KXtyZXR1cm4gbGMoT2JqZWN0LmtleXModCkpfWZ1bmN0aW9uIGFhKHQsZSxyLG49e30pe2xldCBpPUFycmF5LmlzQXJyYXkoZSk/Y3QoZSk6ZS5yZXBsYWNlKC9eWydcIl0rfFsnXCJdKyQvZyxcIlwiKSxhPUFycmF5LmlzQXJyYXkoZSk/ZTpMZShpKSxzPSgwLGZyLmRlZmF1bHQpKHQudGhlbWUsYSxyKTtpZihzPT09dm9pZCAwKXtsZXQgbD1gJyR7aX0nIGRvZXMgbm90IGV4aXN0IGluIHlvdXIgdGhlbWUgY29uZmlnLmAsdT1hLnNsaWNlKDAsLTEpLGY9KDAsZnIuZGVmYXVsdCkodC50aGVtZSx1KTtpZihzYShmKSl7bGV0IHA9T2JqZWN0LmtleXMoZikuZmlsdGVyKGQ9PmFhKHQsWy4uLnUsZF0pLmlzVmFsaWQpLGM9KDAsb2MuZGVmYXVsdCkoYVthLmxlbmd0aC0xXSxwKTtjP2wrPWAgRGlkIHlvdSBtZWFuICcke2N0KFsuLi51LGNdKX0nP2A6cC5sZW5ndGg+MCYmKGwrPWAgJyR7Y3QodSl9JyBoYXMgdGhlIGZvbGxvd2luZyB2YWxpZCBrZXlzOiAke2xjKHApfWApfWVsc2V7bGV0IHA9dHcodC50aGVtZSxpKTtpZihwKXtsZXQgYz0oMCxmci5kZWZhdWx0KSh0LnRoZW1lLHApO3NhKGMpP2wrPWAgJyR7Y3QocCl9JyBoYXMgdGhlIGZvbGxvd2luZyBrZXlzOiAke2FjKGMpfWA6bCs9YCAnJHtjdChwKX0nIGlzIG5vdCBhbiBvYmplY3QuYH1lbHNlIGwrPWAgWW91ciB0aGVtZSBoYXMgdGhlIGZvbGxvd2luZyB0b3AtbGV2ZWwga2V5czogJHthYyh0LnRoZW1lKX1gfXJldHVybntpc1ZhbGlkOiExLGVycm9yOmx9fWlmKCEodHlwZW9mIHM9PVwic3RyaW5nXCJ8fHR5cGVvZiBzPT1cIm51bWJlclwifHx0eXBlb2Ygcz09XCJmdW5jdGlvblwifHxzIGluc3RhbmNlb2YgU3RyaW5nfHxzIGluc3RhbmNlb2YgTnVtYmVyfHxBcnJheS5pc0FycmF5KHMpKSl7bGV0IGw9YCcke2l9JyB3YXMgZm91bmQgYnV0IGRvZXMgbm90IHJlc29sdmUgdG8gYSBzdHJpbmcuYDtpZihzYShzKSl7bGV0IHU9T2JqZWN0LmtleXMocykuZmlsdGVyKGY9PmFhKHQsWy4uLmEsZl0pLmlzVmFsaWQpO3UubGVuZ3RoJiYobCs9YCBEaWQgeW91IG1lYW4gc29tZXRoaW5nIGxpa2UgJyR7Y3QoWy4uLmEsdVswXV0pfSc/YCl9cmV0dXJue2lzVmFsaWQ6ITEsZXJyb3I6bH19bGV0W29dPWE7cmV0dXJue2lzVmFsaWQ6ITAsdmFsdWU6Q2UobykocyxuKX19ZnVuY3Rpb24gcncodCxlLHIpe2U9ZS5tYXAoaT0+dWModCxpLHIpKTtsZXQgbj1bXCJcIl07Zm9yKGxldCBpIG9mIGUpaS50eXBlPT09XCJkaXZcIiYmaS52YWx1ZT09PVwiLFwiP24ucHVzaChcIlwiKTpuW24ubGVuZ3RoLTFdKz1vYS5kZWZhdWx0LnN0cmluZ2lmeShpKTtyZXR1cm4gbn1mdW5jdGlvbiB1Yyh0LGUscil7aWYoZS50eXBlPT09XCJmdW5jdGlvblwiJiZyW2UudmFsdWVdIT09dm9pZCAwKXtsZXQgbj1ydyh0LGUubm9kZXMscik7ZS50eXBlPVwid29yZFwiLGUudmFsdWU9cltlLnZhbHVlXSh0LC4uLm4pfXJldHVybiBlfWZ1bmN0aW9uIG53KHQsZSxyKXtyZXR1cm4oMCxvYS5kZWZhdWx0KShlKS53YWxrKG49Pnt1Yyh0LG4scil9KS50b1N0cmluZygpfXZhciBpdz17YXRydWxlOlwicGFyYW1zXCIsZGVjbDpcInZhbHVlXCJ9O2Z1bmN0aW9uKnN3KHQpe3Q9dC5yZXBsYWNlKC9eWydcIl0rfFsnXCJdKyQvZyxcIlwiKTtsZXQgZT10Lm1hdGNoKC9eKFteXFxzXSspKD8hW15cXFtdKlxcXSkoPzpcXHMqXFwvXFxzKihbXlxcL1xcc10rKSkkLykscjt5aWVsZFt0LHZvaWQgMF0sZSYmKHQ9ZVsxXSxyPWVbMl0seWllbGRbdCxyXSl9ZnVuY3Rpb24gYXcodCxlLHIpe3ZhciBpO2xldCBuPUFycmF5LmZyb20oc3coZSkpLm1hcCgoW2Esc10pPT5PYmplY3QuYXNzaWduKGFhKHQsYSxyLHtvcGFjaXR5VmFsdWU6c30pLHtyZXNvbHZlZFBhdGg6YSxhbHBoYTpzfSkpO3JldHVybihpPW4uZmluZChhPT5hLmlzVmFsaWQpKSE9bnVsbD9pOm5bMF19ZnVuY3Rpb24gZmModCl7bGV0IGU9dC50YWlsd2luZENvbmZpZyxyPXt0aGVtZToobixpLC4uLmEpPT57dmFyIGM7bGV0e2lzVmFsaWQ6cyx2YWx1ZTpvLGVycm9yOmwsYWxwaGE6dX09YXcoZSxpLGEubGVuZ3RoP2E6dm9pZCAwKTtpZighcyl7bGV0IGQ9bi5wYXJlbnQsaD0oYz1kPT1udWxsP3ZvaWQgMDpkLnJhd3MudGFpbHdpbmQpPT1udWxsP3ZvaWQgMDpjLmNhbmRpZGF0ZTtpZihkJiZoIT09dm9pZCAwKXt0Lm1hcmtJbnZhbGlkVXRpbGl0eU5vZGUoZCksZC5yZW1vdmUoKSxMLndhcm4oXCJpbnZhbGlkLXRoZW1lLWtleS1pbi1jbGFzc1wiLFtgVGhlIHV0aWxpdHkgXFxgJHtofVxcYCBjb250YWlucyBhbiBpbnZhbGlkIHRoZW1lIHZhbHVlIGFuZCB3YXMgbm90IGdlbmVyYXRlZC5gXSk7cmV0dXJufXRocm93IG4uZXJyb3IobCl9bGV0IGY9c3Qobyk7cmV0dXJuKHUhPT12b2lkIDB8fGYhPT12b2lkIDAmJnR5cGVvZiBmPT1cImZ1bmN0aW9uXCIpJiYodT09PXZvaWQgMCYmKHU9MSksbz13ZShmLHUsZikpLG99LHNjcmVlbjoobixpKT0+e2k9aS5yZXBsYWNlKC9eWydcIl0rL2csXCJcIikucmVwbGFjZSgvWydcIl0rJC9nLFwiXCIpO2xldCBzPUZlKGUudGhlbWUuc2NyZWVucykuZmluZCgoe25hbWU6b30pPT5vPT09aSk7aWYoIXMpdGhyb3cgbi5lcnJvcihgVGhlICcke2l9JyBzY3JlZW4gZG9lcyBub3QgZXhpc3QgaW4geW91ciB0aGVtZS5gKTtyZXR1cm4gTWUocyl9fTtyZXR1cm4gbj0+e24ud2FsayhpPT57bGV0IGE9aXdbaS50eXBlXTthIT09dm9pZCAwJiYoaVthXT1udyhpLGlbYV0scikpfSl9fWZ1bmN0aW9uIGNjKHt0YWlsd2luZENvbmZpZzp7dGhlbWU6dH19KXtyZXR1cm4gZnVuY3Rpb24oZSl7ZS53YWxrQXRSdWxlcyhcInNjcmVlblwiLHI9PntsZXQgbj1yLnBhcmFtcyxhPUZlKHQuc2NyZWVucykuZmluZCgoe25hbWU6c30pPT5zPT09bik7aWYoIWEpdGhyb3cgci5lcnJvcihgTm8gXFxgJHtufVxcYCBzY3JlZW4gZm91bmQuYCk7ci5uYW1lPVwibWVkaWFcIixyLnBhcmFtcz1NZShhKX0pfX12YXIgVG49SCh2ZSgpKTt2YXIgcGM9e2lkKHQpe3JldHVybiBUbi5kZWZhdWx0LmF0dHJpYnV0ZSh7YXR0cmlidXRlOlwiaWRcIixvcGVyYXRvcjpcIj1cIix2YWx1ZTp0LnZhbHVlLHF1b3RlTWFyazonXCInfSl9fTtmdW5jdGlvbiBvdyh0KXtsZXQgZT10LmZpbHRlcihvPT5vLnR5cGUhPT1cInBzZXVkb1wifHxvLm5vZGVzLmxlbmd0aD4wPyEwOm8udmFsdWUuc3RhcnRzV2l0aChcIjo6XCIpfHxbXCI6YmVmb3JlXCIsXCI6YWZ0ZXJcIixcIjpmaXJzdC1saW5lXCIsXCI6Zmlyc3QtbGV0dGVyXCJdLmluY2x1ZGVzKG8udmFsdWUpKS5yZXZlcnNlKCkscj1uZXcgU2V0KFtcInRhZ1wiLFwiY2xhc3NcIixcImlkXCIsXCJhdHRyaWJ1dGVcIl0pLG49ZS5maW5kSW5kZXgobz0+ci5oYXMoby50eXBlKSk7aWYobj09PS0xKXJldHVybiBlLnJldmVyc2UoKS5qb2luKFwiXCIpLnRyaW0oKTtsZXQgaT1lW25dLGE9cGNbaS50eXBlXT9wY1tpLnR5cGVdKGkpOmk7ZT1lLnNsaWNlKDAsbik7bGV0IHM9ZS5maW5kSW5kZXgobz0+by50eXBlPT09XCJjb21iaW5hdG9yXCImJm8udmFsdWU9PT1cIj5cIik7cmV0dXJuIHMhPT0tMSYmKGUuc3BsaWNlKDAscyksZS51bnNoaWZ0KFRuLmRlZmF1bHQudW5pdmVyc2FsKCkpKSxbYSwuLi5lLnJldmVyc2UoKV0uam9pbihcIlwiKS50cmltKCl9dmFyIGx3PSgwLFRuLmRlZmF1bHQpKHQ9PnQubWFwKGU9PntsZXQgcj1lLnNwbGl0KG49Pm4udHlwZT09PVwiY29tYmluYXRvclwiJiZuLnZhbHVlPT09XCIgXCIpLnBvcCgpO3JldHVybiBvdyhyKX0pKSxsYT1uZXcgTWFwO2Z1bmN0aW9uIHV3KHQpe3JldHVybiBsYS5oYXModCl8fGxhLnNldCh0LGx3LnRyYW5zZm9ybVN5bmModCkpLGxhLmdldCh0KX1mdW5jdGlvbiB1YSh7dGFpbHdpbmRDb25maWc6dH0pe3JldHVybiBlPT57dmFyIGksYTtsZXQgcj1uZXcgTWFwLG49bmV3IFNldDtpZihlLndhbGtBdFJ1bGVzKFwiZGVmYXVsdHNcIixzPT57aWYocy5ub2RlcyYmcy5ub2Rlcy5sZW5ndGg+MCl7bi5hZGQocyk7cmV0dXJufWxldCBvPXMucGFyYW1zO3IuaGFzKG8pfHxyLnNldChvLG5ldyBTZXQpLHIuZ2V0KG8pLmFkZChzLnBhcmVudCkscy5yZW1vdmUoKX0pLEcodCxcIm9wdGltaXplVW5pdmVyc2FsRGVmYXVsdHNcIikpZm9yKGxldCBzIG9mIG4pe2xldCBvPW5ldyBNYXAsbD0oaT1yLmdldChzLnBhcmFtcykpIT1udWxsP2k6W107Zm9yKGxldCB1IG9mIGwpZm9yKGxldCBmIG9mIHV3KHUuc2VsZWN0b3IpKXtsZXQgcD1mLmluY2x1ZGVzKFwiOi1cIil8fGYuaW5jbHVkZXMoXCI6Oi1cIik/ZjpcIl9fREVGQVVMVF9fXCIsYz0oYT1vLmdldChwKSkhPW51bGw/YTpuZXcgU2V0O28uc2V0KHAsYyksYy5hZGQoZil9aWYoRyh0LFwib3B0aW1pemVVbml2ZXJzYWxEZWZhdWx0c1wiKSl7aWYoby5zaXplPT09MCl7cy5yZW1vdmUoKTtjb250aW51ZX1mb3IobGV0Wyx1XW9mIG8pe2xldCBmPVIucnVsZSh7c291cmNlOnMuc291cmNlfSk7Zi5zZWxlY3RvcnM9Wy4uLnVdLGYuYXBwZW5kKHMubm9kZXMubWFwKHA9PnAuY2xvbmUoKSkpLHMuYmVmb3JlKGYpfX1zLnJlbW92ZSgpfWVsc2UgaWYobi5zaXplKXtsZXQgcz1SLnJ1bGUoe3NlbGVjdG9yczpbXCIqXCIsXCI6OmJlZm9yZVwiLFwiOjphZnRlclwiXX0pO2ZvcihsZXQgbCBvZiBuKXMuYXBwZW5kKGwubm9kZXMpLHMucGFyZW50fHxsLmJlZm9yZShzKSxzLnNvdXJjZXx8KHMuc291cmNlPWwuc291cmNlKSxsLnJlbW92ZSgpO2xldCBvPXMuY2xvbmUoe3NlbGVjdG9yczpbXCI6OmJhY2tkcm9wXCJdfSk7cy5hZnRlcihvKX19fXZhciBkYz17YXRydWxlOltcIm5hbWVcIixcInBhcmFtc1wiXSxydWxlOltcInNlbGVjdG9yXCJdfSxmdz1uZXcgU2V0KE9iamVjdC5rZXlzKGRjKSk7ZnVuY3Rpb24gZmEoKXtmdW5jdGlvbiB0KGUpe2xldCByPW51bGw7ZS5lYWNoKG49PntpZighZncuaGFzKG4udHlwZSkpe3I9bnVsbDtyZXR1cm59aWYocj09PW51bGwpe3I9bjtyZXR1cm59bGV0IGk9ZGNbbi50eXBlXTtuLnR5cGU9PT1cImF0cnVsZVwiJiZuLm5hbWU9PT1cImZvbnQtZmFjZVwiP3I9bjppLmV2ZXJ5KGE9Pnt2YXIgcyxvO3JldHVybigocz1uW2FdKSE9bnVsbD9zOlwiXCIpLnJlcGxhY2UoL1xccysvZyxcIiBcIik9PT0oKG89clthXSkhPW51bGw/bzpcIlwiKS5yZXBsYWNlKC9cXHMrL2csXCIgXCIpfSk/KG4ubm9kZXMmJnIuYXBwZW5kKG4ubm9kZXMpLG4ucmVtb3ZlKCkpOnI9bn0pLGUuZWFjaChuPT57bi50eXBlPT09XCJhdHJ1bGVcIiYmdChuKX0pfXJldHVybiBlPT57dChlKX19ZnVuY3Rpb24gY2EoKXtyZXR1cm4gdD0+e3Qud2Fsa1J1bGVzKGU9PntsZXQgcj1uZXcgTWFwLG49bmV3IFNldChbXSksaT1uZXcgTWFwO2Uud2Fsa0RlY2xzKGE9PntpZihhLnBhcmVudD09PWUpe2lmKHIuaGFzKGEucHJvcCkpe2lmKHIuZ2V0KGEucHJvcCkudmFsdWU9PT1hLnZhbHVlKXtuLmFkZChyLmdldChhLnByb3ApKSxyLnNldChhLnByb3AsYSk7cmV0dXJufWkuaGFzKGEucHJvcCl8fGkuc2V0KGEucHJvcCxuZXcgU2V0KSxpLmdldChhLnByb3ApLmFkZChyLmdldChhLnByb3ApKSxpLmdldChhLnByb3ApLmFkZChhKX1yLnNldChhLnByb3AsYSl9fSk7Zm9yKGxldCBhIG9mIG4pYS5yZW1vdmUoKTtmb3IobGV0IGEgb2YgaS52YWx1ZXMoKSl7bGV0IHM9bmV3IE1hcDtmb3IobGV0IG8gb2YgYSl7bGV0IGw9cHcoby52YWx1ZSk7bCE9PW51bGwmJihzLmhhcyhsKXx8cy5zZXQobCxuZXcgU2V0KSxzLmdldChsKS5hZGQobykpfWZvcihsZXQgbyBvZiBzLnZhbHVlcygpKXtsZXQgbD1BcnJheS5mcm9tKG8pLnNsaWNlKDAsLTEpO2ZvcihsZXQgdSBvZiBsKXUucmVtb3ZlKCl9fX0pfX12YXIgY3c9U3ltYm9sKFwidW5pdGxlc3MtbnVtYmVyXCIpO2Z1bmN0aW9uIHB3KHQpe3ZhciByO2xldCBlPS9eLT9cXGQqLj9cXGQrKFtcXHclXSspPyQvZy5leGVjKHQpO3JldHVybiBlPyhyPWVbMV0pIT1udWxsP3I6Y3c6bnVsbH1mdW5jdGlvbiBkdyh0KXtpZighdC53YWxrQXRSdWxlcylyZXR1cm47bGV0IGU9bmV3IFNldDtpZih0LndhbGtBdFJ1bGVzKFwiYXBwbHlcIixyPT57ZS5hZGQoci5wYXJlbnQpfSksZS5zaXplIT09MClmb3IobGV0IHIgb2YgZSl7bGV0IG49W10saT1bXTtmb3IobGV0IGEgb2Ygci5ub2RlcylhLnR5cGU9PT1cImF0cnVsZVwiJiZhLm5hbWU9PT1cImFwcGx5XCI/KGkubGVuZ3RoPjAmJihuLnB1c2goaSksaT1bXSksbi5wdXNoKFthXSkpOmkucHVzaChhKTtpZihpLmxlbmd0aD4wJiZuLnB1c2goaSksbi5sZW5ndGghPT0xKXtmb3IobGV0IGEgb2ZbLi4ubl0ucmV2ZXJzZSgpKXtsZXQgcz1yLmNsb25lKHtub2RlczpbXX0pO3MuYXBwZW5kKGEpLHIuYWZ0ZXIocyl9ci5yZW1vdmUoKX19fWZ1bmN0aW9uIFBuKCl7cmV0dXJuIHQ9Pntkdyh0KX19ZnVuY3Rpb24gaHcodCl7cmV0dXJuIHQudHlwZT09PVwicm9vdFwifWZ1bmN0aW9uIG13KHQpe3JldHVybiB0LnR5cGU9PT1cImF0cnVsZVwiJiZ0Lm5hbWU9PT1cImxheWVyXCJ9ZnVuY3Rpb24gaGModCl7cmV0dXJuKGUscik9PntsZXQgbj0hMTtlLndhbGtBdFJ1bGVzKFwidGFpbHdpbmRcIixpPT57aWYobilyZXR1cm4hMTtpZihpLnBhcmVudCYmIShodyhpLnBhcmVudCl8fG13KGkucGFyZW50KSkpcmV0dXJuIG49ITAsaS53YXJuKHIsW1wiTmVzdGVkIEB0YWlsd2luZCBydWxlcyB3ZXJlIGRldGVjdGVkLCBidXQgYXJlIG5vdCBzdXBwb3J0ZWQuXCIsXCJDb25zaWRlciB1c2luZyBhIHByZWZpeCB0byBzY29wZSBUYWlsd2luZCdzIGNsYXNzZXM6IGh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvY29uZmlndXJhdGlvbiNwcmVmaXhcIixcIkFsdGVybmF0aXZlbHksIHVzZSB0aGUgaW1wb3J0YW50IHNlbGVjdG9yIHN0cmF0ZWd5OiBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL2NvbmZpZ3VyYXRpb24jc2VsZWN0b3Itc3RyYXRlZ3lcIl0uam9pbihgXG5gKSksITF9KSxlLndhbGtSdWxlcyhpPT57aWYobilyZXR1cm4hMTtpLndhbGtSdWxlcyhhPT4obj0hMCxhLndhcm4ocixbXCJOZXN0ZWQgQ1NTIHdhcyBkZXRlY3RlZCwgYnV0IENTUyBuZXN0aW5nIGhhcyBub3QgYmVlbiBjb25maWd1cmVkIGNvcnJlY3RseS5cIixcIlBsZWFzZSBlbmFibGUgYSBDU1MgbmVzdGluZyBwbHVnaW4gKmJlZm9yZSogVGFpbHdpbmQgaW4geW91ciBjb25maWd1cmF0aW9uLlwiLFwiU2VlIGhvdyBoZXJlOiBodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3VzaW5nLXdpdGgtcHJlcHJvY2Vzc29ycyNuZXN0aW5nXCJdLmpvaW4oYFxuYCkpLCExKSl9KX19ZnVuY3Rpb24gcGEodCl7cmV0dXJuIGZ1bmN0aW9uKGUscil7bGV0e3RhaWx3aW5kRGlyZWN0aXZlczpuLGFwcGx5RGlyZWN0aXZlczppfT1VbihlKTtoYygpKGUsciksUG4oKShlLHIpO2xldCBhPXQoe3RhaWx3aW5kRGlyZWN0aXZlczpuLGFwcGx5RGlyZWN0aXZlczppLHJlZ2lzdGVyRGVwZW5kZW5jeShzKXtyLm1lc3NhZ2VzLnB1c2goe3BsdWdpbjpcInRhaWx3aW5kY3NzXCIscGFyZW50OnIub3B0cy5mcm9tLC4uLnN9KX0sY3JlYXRlQ29udGV4dChzLG8pe3JldHVybiBQZihzLG8sZSl9fSkoZSxyKTtpZihhLnRhaWx3aW5kQ29uZmlnLnNlcGFyYXRvcj09PVwiLVwiKXRocm93IG5ldyBFcnJvcihcIlRoZSAnLScgY2hhcmFjdGVyIGNhbm5vdCBiZSB1c2VkIGFzIGEgY3VzdG9tIHNlcGFyYXRvciBpbiBKSVQgbW9kZSBkdWUgdG8gcGFyc2luZyBhbWJpZ3VpdHkuIFBsZWFzZSB1c2UgYW5vdGhlciBjaGFyYWN0ZXIgbGlrZSAnXycgaW5zdGVhZC5cIik7bmYoYS50YWlsd2luZENvbmZpZyksUXMoYSkoZSxyKSxQbigpKGUsciksWHMoYSkoZSxyKSxmYyhhKShlLHIpLGNjKGEpKGUsciksdWEoYSkoZSxyKSxmYShhKShlLHIpLGNhKGEpKGUscil9fXZhciBtYz1bXCJwcmVmbGlnaHRcIixcImNvbnRhaW5lclwiLFwiYWNjZXNzaWJpbGl0eVwiLFwicG9pbnRlckV2ZW50c1wiLFwidmlzaWJpbGl0eVwiLFwicG9zaXRpb25cIixcImluc2V0XCIsXCJpc29sYXRpb25cIixcInpJbmRleFwiLFwib3JkZXJcIixcImdyaWRDb2x1bW5cIixcImdyaWRDb2x1bW5TdGFydFwiLFwiZ3JpZENvbHVtbkVuZFwiLFwiZ3JpZFJvd1wiLFwiZ3JpZFJvd1N0YXJ0XCIsXCJncmlkUm93RW5kXCIsXCJmbG9hdFwiLFwiY2xlYXJcIixcIm1hcmdpblwiLFwiYm94U2l6aW5nXCIsXCJsaW5lQ2xhbXBcIixcImRpc3BsYXlcIixcImFzcGVjdFJhdGlvXCIsXCJoZWlnaHRcIixcIm1heEhlaWdodFwiLFwibWluSGVpZ2h0XCIsXCJ3aWR0aFwiLFwibWluV2lkdGhcIixcIm1heFdpZHRoXCIsXCJmbGV4XCIsXCJmbGV4U2hyaW5rXCIsXCJmbGV4R3Jvd1wiLFwiZmxleEJhc2lzXCIsXCJ0YWJsZUxheW91dFwiLFwiY2FwdGlvblNpZGVcIixcImJvcmRlckNvbGxhcHNlXCIsXCJib3JkZXJTcGFjaW5nXCIsXCJ0cmFuc2Zvcm1PcmlnaW5cIixcInRyYW5zbGF0ZVwiLFwicm90YXRlXCIsXCJza2V3XCIsXCJzY2FsZVwiLFwidHJhbnNmb3JtXCIsXCJhbmltYXRpb25cIixcImN1cnNvclwiLFwidG91Y2hBY3Rpb25cIixcInVzZXJTZWxlY3RcIixcInJlc2l6ZVwiLFwic2Nyb2xsU25hcFR5cGVcIixcInNjcm9sbFNuYXBBbGlnblwiLFwic2Nyb2xsU25hcFN0b3BcIixcInNjcm9sbE1hcmdpblwiLFwic2Nyb2xsUGFkZGluZ1wiLFwibGlzdFN0eWxlUG9zaXRpb25cIixcImxpc3RTdHlsZVR5cGVcIixcImxpc3RTdHlsZUltYWdlXCIsXCJhcHBlYXJhbmNlXCIsXCJjb2x1bW5zXCIsXCJicmVha0JlZm9yZVwiLFwiYnJlYWtJbnNpZGVcIixcImJyZWFrQWZ0ZXJcIixcImdyaWRBdXRvQ29sdW1uc1wiLFwiZ3JpZEF1dG9GbG93XCIsXCJncmlkQXV0b1Jvd3NcIixcImdyaWRUZW1wbGF0ZUNvbHVtbnNcIixcImdyaWRUZW1wbGF0ZVJvd3NcIixcImZsZXhEaXJlY3Rpb25cIixcImZsZXhXcmFwXCIsXCJwbGFjZUNvbnRlbnRcIixcInBsYWNlSXRlbXNcIixcImFsaWduQ29udGVudFwiLFwiYWxpZ25JdGVtc1wiLFwianVzdGlmeUNvbnRlbnRcIixcImp1c3RpZnlJdGVtc1wiLFwiZ2FwXCIsXCJzcGFjZVwiLFwiZGl2aWRlV2lkdGhcIixcImRpdmlkZVN0eWxlXCIsXCJkaXZpZGVDb2xvclwiLFwiZGl2aWRlT3BhY2l0eVwiLFwicGxhY2VTZWxmXCIsXCJhbGlnblNlbGZcIixcImp1c3RpZnlTZWxmXCIsXCJvdmVyZmxvd1wiLFwib3ZlcnNjcm9sbEJlaGF2aW9yXCIsXCJzY3JvbGxCZWhhdmlvclwiLFwidGV4dE92ZXJmbG93XCIsXCJoeXBoZW5zXCIsXCJ3aGl0ZXNwYWNlXCIsXCJ3b3JkQnJlYWtcIixcImJvcmRlclJhZGl1c1wiLFwiYm9yZGVyV2lkdGhcIixcImJvcmRlclN0eWxlXCIsXCJib3JkZXJDb2xvclwiLFwiYm9yZGVyT3BhY2l0eVwiLFwiYmFja2dyb3VuZENvbG9yXCIsXCJiYWNrZ3JvdW5kT3BhY2l0eVwiLFwiYmFja2dyb3VuZEltYWdlXCIsXCJncmFkaWVudENvbG9yU3RvcHNcIixcImJveERlY29yYXRpb25CcmVha1wiLFwiYmFja2dyb3VuZFNpemVcIixcImJhY2tncm91bmRBdHRhY2htZW50XCIsXCJiYWNrZ3JvdW5kQ2xpcFwiLFwiYmFja2dyb3VuZFBvc2l0aW9uXCIsXCJiYWNrZ3JvdW5kUmVwZWF0XCIsXCJiYWNrZ3JvdW5kT3JpZ2luXCIsXCJmaWxsXCIsXCJzdHJva2VcIixcInN0cm9rZVdpZHRoXCIsXCJvYmplY3RGaXRcIixcIm9iamVjdFBvc2l0aW9uXCIsXCJwYWRkaW5nXCIsXCJ0ZXh0QWxpZ25cIixcInRleHRJbmRlbnRcIixcInZlcnRpY2FsQWxpZ25cIixcImZvbnRGYW1pbHlcIixcImZvbnRTaXplXCIsXCJmb250V2VpZ2h0XCIsXCJ0ZXh0VHJhbnNmb3JtXCIsXCJmb250U3R5bGVcIixcImZvbnRWYXJpYW50TnVtZXJpY1wiLFwibGluZUhlaWdodFwiLFwibGV0dGVyU3BhY2luZ1wiLFwidGV4dENvbG9yXCIsXCJ0ZXh0T3BhY2l0eVwiLFwidGV4dERlY29yYXRpb25cIixcInRleHREZWNvcmF0aW9uQ29sb3JcIixcInRleHREZWNvcmF0aW9uU3R5bGVcIixcInRleHREZWNvcmF0aW9uVGhpY2tuZXNzXCIsXCJ0ZXh0VW5kZXJsaW5lT2Zmc2V0XCIsXCJmb250U21vb3RoaW5nXCIsXCJwbGFjZWhvbGRlckNvbG9yXCIsXCJwbGFjZWhvbGRlck9wYWNpdHlcIixcImNhcmV0Q29sb3JcIixcImFjY2VudENvbG9yXCIsXCJvcGFjaXR5XCIsXCJiYWNrZ3JvdW5kQmxlbmRNb2RlXCIsXCJtaXhCbGVuZE1vZGVcIixcImJveFNoYWRvd1wiLFwiYm94U2hhZG93Q29sb3JcIixcIm91dGxpbmVTdHlsZVwiLFwib3V0bGluZVdpZHRoXCIsXCJvdXRsaW5lT2Zmc2V0XCIsXCJvdXRsaW5lQ29sb3JcIixcInJpbmdXaWR0aFwiLFwicmluZ0NvbG9yXCIsXCJyaW5nT3BhY2l0eVwiLFwicmluZ09mZnNldFdpZHRoXCIsXCJyaW5nT2Zmc2V0Q29sb3JcIixcImJsdXJcIixcImJyaWdodG5lc3NcIixcImNvbnRyYXN0XCIsXCJkcm9wU2hhZG93XCIsXCJncmF5c2NhbGVcIixcImh1ZVJvdGF0ZVwiLFwiaW52ZXJ0XCIsXCJzYXR1cmF0ZVwiLFwic2VwaWFcIixcImZpbHRlclwiLFwiYmFja2Ryb3BCbHVyXCIsXCJiYWNrZHJvcEJyaWdodG5lc3NcIixcImJhY2tkcm9wQ29udHJhc3RcIixcImJhY2tkcm9wR3JheXNjYWxlXCIsXCJiYWNrZHJvcEh1ZVJvdGF0ZVwiLFwiYmFja2Ryb3BJbnZlcnRcIixcImJhY2tkcm9wT3BhY2l0eVwiLFwiYmFja2Ryb3BTYXR1cmF0ZVwiLFwiYmFja2Ryb3BTZXBpYVwiLFwiYmFja2Ryb3BGaWx0ZXJcIixcInRyYW5zaXRpb25Qcm9wZXJ0eVwiLFwidHJhbnNpdGlvbkRlbGF5XCIsXCJ0cmFuc2l0aW9uRHVyYXRpb25cIixcInRyYW5zaXRpb25UaW1pbmdGdW5jdGlvblwiLFwid2lsbENoYW5nZVwiLFwiY29udGVudFwiXTtmdW5jdGlvbiBnYyh0LGUpe3JldHVybiB0PT09dm9pZCAwP2U6QXJyYXkuaXNBcnJheSh0KT90OlsuLi5uZXcgU2V0KGUuZmlsdGVyKG49PnQhPT0hMSYmdFtuXSE9PSExKS5jb25jYXQoT2JqZWN0LmtleXModCkuZmlsdGVyKG49PnRbbl0hPT0hMSkpKV19ZnVuY3Rpb24gY3Ioe3ZlcnNpb246dCxmcm9tOmUsdG86cn0pe0wud2FybihgJHtlfS1jb2xvci1yZW5hbWVkYCxbYEFzIG9mIFRhaWx3aW5kIENTUyAke3R9LCBcXGAke2V9XFxgIGhhcyBiZWVuIHJlbmFtZWQgdG8gXFxgJHtyfVxcYC5gLFwiVXBkYXRlIHlvdXIgY29uZmlndXJhdGlvbiBmaWxlIHRvIHNpbGVuY2UgdGhpcyB3YXJuaW5nLlwiXSl9dmFyIHljPXtpbmhlcml0OlwiaW5oZXJpdFwiLGN1cnJlbnQ6XCJjdXJyZW50Q29sb3JcIix0cmFuc3BhcmVudDpcInRyYW5zcGFyZW50XCIsYmxhY2s6XCIjMDAwXCIsd2hpdGU6XCIjZmZmXCIsc2xhdGU6ezUwOlwiI2Y4ZmFmY1wiLDEwMDpcIiNmMWY1ZjlcIiwyMDA6XCIjZTJlOGYwXCIsMzAwOlwiI2NiZDVlMVwiLDQwMDpcIiM5NGEzYjhcIiw1MDA6XCIjNjQ3NDhiXCIsNjAwOlwiIzQ3NTU2OVwiLDcwMDpcIiMzMzQxNTVcIiw4MDA6XCIjMWUyOTNiXCIsOTAwOlwiIzBmMTcyYVwiLDk1MDpcIiMwMjA2MTdcIn0sZ3JheTp7NTA6XCIjZjlmYWZiXCIsMTAwOlwiI2YzZjRmNlwiLDIwMDpcIiNlNWU3ZWJcIiwzMDA6XCIjZDFkNWRiXCIsNDAwOlwiIzljYTNhZlwiLDUwMDpcIiM2YjcyODBcIiw2MDA6XCIjNGI1NTYzXCIsNzAwOlwiIzM3NDE1MVwiLDgwMDpcIiMxZjI5MzdcIiw5MDA6XCIjMTExODI3XCIsOTUwOlwiIzAzMDcxMlwifSx6aW5jOns1MDpcIiNmYWZhZmFcIiwxMDA6XCIjZjRmNGY1XCIsMjAwOlwiI2U0ZTRlN1wiLDMwMDpcIiNkNGQ0ZDhcIiw0MDA6XCIjYTFhMWFhXCIsNTAwOlwiIzcxNzE3YVwiLDYwMDpcIiM1MjUyNWJcIiw3MDA6XCIjM2YzZjQ2XCIsODAwOlwiIzI3MjcyYVwiLDkwMDpcIiMxODE4MWJcIiw5NTA6XCIjMDkwOTBiXCJ9LG5ldXRyYWw6ezUwOlwiI2ZhZmFmYVwiLDEwMDpcIiNmNWY1ZjVcIiwyMDA6XCIjZTVlNWU1XCIsMzAwOlwiI2Q0ZDRkNFwiLDQwMDpcIiNhM2EzYTNcIiw1MDA6XCIjNzM3MzczXCIsNjAwOlwiIzUyNTI1MlwiLDcwMDpcIiM0MDQwNDBcIiw4MDA6XCIjMjYyNjI2XCIsOTAwOlwiIzE3MTcxN1wiLDk1MDpcIiMwYTBhMGFcIn0sc3RvbmU6ezUwOlwiI2ZhZmFmOVwiLDEwMDpcIiNmNWY1ZjRcIiwyMDA6XCIjZTdlNWU0XCIsMzAwOlwiI2Q2ZDNkMVwiLDQwMDpcIiNhOGEyOWVcIiw1MDA6XCIjNzg3MTZjXCIsNjAwOlwiIzU3NTM0ZVwiLDcwMDpcIiM0NDQwM2NcIiw4MDA6XCIjMjkyNTI0XCIsOTAwOlwiIzFjMTkxN1wiLDk1MDpcIiMwYzBhMDlcIn0scmVkOns1MDpcIiNmZWYyZjJcIiwxMDA6XCIjZmVlMmUyXCIsMjAwOlwiI2ZlY2FjYVwiLDMwMDpcIiNmY2E1YTVcIiw0MDA6XCIjZjg3MTcxXCIsNTAwOlwiI2VmNDQ0NFwiLDYwMDpcIiNkYzI2MjZcIiw3MDA6XCIjYjkxYzFjXCIsODAwOlwiIzk5MWIxYlwiLDkwMDpcIiM3ZjFkMWRcIiw5NTA6XCIjNDUwYTBhXCJ9LG9yYW5nZTp7NTA6XCIjZmZmN2VkXCIsMTAwOlwiI2ZmZWRkNVwiLDIwMDpcIiNmZWQ3YWFcIiwzMDA6XCIjZmRiYTc0XCIsNDAwOlwiI2ZiOTIzY1wiLDUwMDpcIiNmOTczMTZcIiw2MDA6XCIjZWE1ODBjXCIsNzAwOlwiI2MyNDEwY1wiLDgwMDpcIiM5YTM0MTJcIiw5MDA6XCIjN2MyZDEyXCIsOTUwOlwiIzQzMTQwN1wifSxhbWJlcjp7NTA6XCIjZmZmYmViXCIsMTAwOlwiI2ZlZjNjN1wiLDIwMDpcIiNmZGU2OGFcIiwzMDA6XCIjZmNkMzRkXCIsNDAwOlwiI2ZiYmYyNFwiLDUwMDpcIiNmNTllMGJcIiw2MDA6XCIjZDk3NzA2XCIsNzAwOlwiI2I0NTMwOVwiLDgwMDpcIiM5MjQwMGVcIiw5MDA6XCIjNzgzNTBmXCIsOTUwOlwiIzQ1MWEwM1wifSx5ZWxsb3c6ezUwOlwiI2ZlZmNlOFwiLDEwMDpcIiNmZWY5YzNcIiwyMDA6XCIjZmVmMDhhXCIsMzAwOlwiI2ZkZTA0N1wiLDQwMDpcIiNmYWNjMTVcIiw1MDA6XCIjZWFiMzA4XCIsNjAwOlwiI2NhOGEwNFwiLDcwMDpcIiNhMTYyMDdcIiw4MDA6XCIjODU0ZDBlXCIsOTAwOlwiIzcxM2YxMlwiLDk1MDpcIiM0MjIwMDZcIn0sbGltZTp7NTA6XCIjZjdmZWU3XCIsMTAwOlwiI2VjZmNjYlwiLDIwMDpcIiNkOWY5OWRcIiwzMDA6XCIjYmVmMjY0XCIsNDAwOlwiI2EzZTYzNVwiLDUwMDpcIiM4NGNjMTZcIiw2MDA6XCIjNjVhMzBkXCIsNzAwOlwiIzRkN2MwZlwiLDgwMDpcIiMzZjYyMTJcIiw5MDA6XCIjMzY1MzE0XCIsOTUwOlwiIzFhMmUwNVwifSxncmVlbjp7NTA6XCIjZjBmZGY0XCIsMTAwOlwiI2RjZmNlN1wiLDIwMDpcIiNiYmY3ZDBcIiwzMDA6XCIjODZlZmFjXCIsNDAwOlwiIzRhZGU4MFwiLDUwMDpcIiMyMmM1NWVcIiw2MDA6XCIjMTZhMzRhXCIsNzAwOlwiIzE1ODAzZFwiLDgwMDpcIiMxNjY1MzRcIiw5MDA6XCIjMTQ1MzJkXCIsOTUwOlwiIzA1MmUxNlwifSxlbWVyYWxkOns1MDpcIiNlY2ZkZjVcIiwxMDA6XCIjZDFmYWU1XCIsMjAwOlwiI2E3ZjNkMFwiLDMwMDpcIiM2ZWU3YjdcIiw0MDA6XCIjMzRkMzk5XCIsNTAwOlwiIzEwYjk4MVwiLDYwMDpcIiMwNTk2NjlcIiw3MDA6XCIjMDQ3ODU3XCIsODAwOlwiIzA2NWY0NlwiLDkwMDpcIiMwNjRlM2JcIiw5NTA6XCIjMDIyYzIyXCJ9LHRlYWw6ezUwOlwiI2YwZmRmYVwiLDEwMDpcIiNjY2ZiZjFcIiwyMDA6XCIjOTlmNmU0XCIsMzAwOlwiIzVlZWFkNFwiLDQwMDpcIiMyZGQ0YmZcIiw1MDA6XCIjMTRiOGE2XCIsNjAwOlwiIzBkOTQ4OFwiLDcwMDpcIiMwZjc2NmVcIiw4MDA6XCIjMTE1ZTU5XCIsOTAwOlwiIzEzNGU0YVwiLDk1MDpcIiMwNDJmMmVcIn0sY3lhbjp7NTA6XCIjZWNmZWZmXCIsMTAwOlwiI2NmZmFmZVwiLDIwMDpcIiNhNWYzZmNcIiwzMDA6XCIjNjdlOGY5XCIsNDAwOlwiIzIyZDNlZVwiLDUwMDpcIiMwNmI2ZDRcIiw2MDA6XCIjMDg5MWIyXCIsNzAwOlwiIzBlNzQ5MFwiLDgwMDpcIiMxNTVlNzVcIiw5MDA6XCIjMTY0ZTYzXCIsOTUwOlwiIzA4MzM0NFwifSxza3k6ezUwOlwiI2YwZjlmZlwiLDEwMDpcIiNlMGYyZmVcIiwyMDA6XCIjYmFlNmZkXCIsMzAwOlwiIzdkZDNmY1wiLDQwMDpcIiMzOGJkZjhcIiw1MDA6XCIjMGVhNWU5XCIsNjAwOlwiIzAyODRjN1wiLDcwMDpcIiMwMzY5YTFcIiw4MDA6XCIjMDc1OTg1XCIsOTAwOlwiIzBjNGE2ZVwiLDk1MDpcIiMwODJmNDlcIn0sYmx1ZTp7NTA6XCIjZWZmNmZmXCIsMTAwOlwiI2RiZWFmZVwiLDIwMDpcIiNiZmRiZmVcIiwzMDA6XCIjOTNjNWZkXCIsNDAwOlwiIzYwYTVmYVwiLDUwMDpcIiMzYjgyZjZcIiw2MDA6XCIjMjU2M2ViXCIsNzAwOlwiIzFkNGVkOFwiLDgwMDpcIiMxZTQwYWZcIiw5MDA6XCIjMWUzYThhXCIsOTUwOlwiIzE3MjU1NFwifSxpbmRpZ286ezUwOlwiI2VlZjJmZlwiLDEwMDpcIiNlMGU3ZmZcIiwyMDA6XCIjYzdkMmZlXCIsMzAwOlwiI2E1YjRmY1wiLDQwMDpcIiM4MThjZjhcIiw1MDA6XCIjNjM2NmYxXCIsNjAwOlwiIzRmNDZlNVwiLDcwMDpcIiM0MzM4Y2FcIiw4MDA6XCIjMzczMGEzXCIsOTAwOlwiIzMxMmU4MVwiLDk1MDpcIiMxZTFiNGJcIn0sdmlvbGV0Ons1MDpcIiNmNWYzZmZcIiwxMDA6XCIjZWRlOWZlXCIsMjAwOlwiI2RkZDZmZVwiLDMwMDpcIiNjNGI1ZmRcIiw0MDA6XCIjYTc4YmZhXCIsNTAwOlwiIzhiNWNmNlwiLDYwMDpcIiM3YzNhZWRcIiw3MDA6XCIjNmQyOGQ5XCIsODAwOlwiIzViMjFiNlwiLDkwMDpcIiM0YzFkOTVcIiw5NTA6XCIjMmUxMDY1XCJ9LHB1cnBsZTp7NTA6XCIjZmFmNWZmXCIsMTAwOlwiI2YzZThmZlwiLDIwMDpcIiNlOWQ1ZmZcIiwzMDA6XCIjZDhiNGZlXCIsNDAwOlwiI2MwODRmY1wiLDUwMDpcIiNhODU1ZjdcIiw2MDA6XCIjOTMzM2VhXCIsNzAwOlwiIzdlMjJjZVwiLDgwMDpcIiM2YjIxYThcIiw5MDA6XCIjNTgxYzg3XCIsOTUwOlwiIzNiMDc2NFwifSxmdWNoc2lhOns1MDpcIiNmZGY0ZmZcIiwxMDA6XCIjZmFlOGZmXCIsMjAwOlwiI2Y1ZDBmZVwiLDMwMDpcIiNmMGFiZmNcIiw0MDA6XCIjZTg3OWY5XCIsNTAwOlwiI2Q5NDZlZlwiLDYwMDpcIiNjMDI2ZDNcIiw3MDA6XCIjYTIxY2FmXCIsODAwOlwiIzg2MTk4ZlwiLDkwMDpcIiM3MDFhNzVcIiw5NTA6XCIjNGEwNDRlXCJ9LHBpbms6ezUwOlwiI2ZkZjJmOFwiLDEwMDpcIiNmY2U3ZjNcIiwyMDA6XCIjZmJjZmU4XCIsMzAwOlwiI2Y5YThkNFwiLDQwMDpcIiNmNDcyYjZcIiw1MDA6XCIjZWM0ODk5XCIsNjAwOlwiI2RiMjc3N1wiLDcwMDpcIiNiZTE4NWRcIiw4MDA6XCIjOWQxNzRkXCIsOTAwOlwiIzgzMTg0M1wiLDk1MDpcIiM1MDA3MjRcIn0scm9zZTp7NTA6XCIjZmZmMWYyXCIsMTAwOlwiI2ZmZTRlNlwiLDIwMDpcIiNmZWNkZDNcIiwzMDA6XCIjZmRhNGFmXCIsNDAwOlwiI2ZiNzE4NVwiLDUwMDpcIiNmNDNmNWVcIiw2MDA6XCIjZTExZDQ4XCIsNzAwOlwiI2JlMTIzY1wiLDgwMDpcIiM5ZjEyMzlcIiw5MDA6XCIjODgxMzM3XCIsOTUwOlwiIzRjMDUxOVwifSxnZXQgbGlnaHRCbHVlKCl7cmV0dXJuIGNyKHt2ZXJzaW9uOlwidjIuMlwiLGZyb206XCJsaWdodEJsdWVcIix0bzpcInNreVwifSksdGhpcy5za3l9LGdldCB3YXJtR3JheSgpe3JldHVybiBjcih7dmVyc2lvbjpcInYzLjBcIixmcm9tOlwid2FybUdyYXlcIix0bzpcInN0b25lXCJ9KSx0aGlzLnN0b25lfSxnZXQgdHJ1ZUdyYXkoKXtyZXR1cm4gY3Ioe3ZlcnNpb246XCJ2My4wXCIsZnJvbTpcInRydWVHcmF5XCIsdG86XCJuZXV0cmFsXCJ9KSx0aGlzLm5ldXRyYWx9LGdldCBjb29sR3JheSgpe3JldHVybiBjcih7dmVyc2lvbjpcInYzLjBcIixmcm9tOlwiY29vbEdyYXlcIix0bzpcImdyYXlcIn0pLHRoaXMuZ3JheX0sZ2V0IGJsdWVHcmF5KCl7cmV0dXJuIGNyKHt2ZXJzaW9uOlwidjMuMFwiLGZyb206XCJibHVlR3JheVwiLHRvOlwic2xhdGVcIn0pLHRoaXMuc2xhdGV9fTtmdW5jdGlvbiBkYSh0LC4uLmUpe3ZhciByLG47Zm9yKGxldCBpIG9mIGUpe2ZvcihsZXQgYSBpbiBpKShyPXQ9PW51bGw/dm9pZCAwOnQuaGFzT3duUHJvcGVydHkpIT1udWxsJiZyLmNhbGwodCxhKXx8KHRbYV09aVthXSk7Zm9yKGxldCBhIG9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoaSkpKG49dD09bnVsbD92b2lkIDA6dC5oYXNPd25Qcm9wZXJ0eSkhPW51bGwmJm4uY2FsbCh0LGEpfHwodFthXT1pW2FdKX1yZXR1cm4gdH1mdW5jdGlvbiB2Yyh0KXt2YXIgcjsoKCk9PntpZih0LnB1cmdlfHwhdC5jb250ZW50fHwhQXJyYXkuaXNBcnJheSh0LmNvbnRlbnQpJiYhKHR5cGVvZiB0LmNvbnRlbnQ9PVwib2JqZWN0XCImJnQuY29udGVudCE9PW51bGwpKXJldHVybiExO2lmKEFycmF5LmlzQXJyYXkodC5jb250ZW50KSlyZXR1cm4gdC5jb250ZW50LmV2ZXJ5KG49PnR5cGVvZiBuPT1cInN0cmluZ1wiPyEwOiEodHlwZW9mKG49PW51bGw/dm9pZCAwOm4ucmF3KSE9XCJzdHJpbmdcInx8KG49PW51bGw/dm9pZCAwOm4uZXh0ZW5zaW9uKSYmdHlwZW9mKG49PW51bGw/dm9pZCAwOm4uZXh0ZW5zaW9uKSE9XCJzdHJpbmdcIikpO2lmKHR5cGVvZiB0LmNvbnRlbnQ9PVwib2JqZWN0XCImJnQuY29udGVudCE9PW51bGwpe2lmKE9iamVjdC5rZXlzKHQuY29udGVudCkuc29tZShuPT4hW1wiZmlsZXNcIixcInJlbGF0aXZlXCIsXCJleHRyYWN0XCIsXCJ0cmFuc2Zvcm1cIl0uaW5jbHVkZXMobikpKXJldHVybiExO2lmKEFycmF5LmlzQXJyYXkodC5jb250ZW50LmZpbGVzKSl7aWYoIXQuY29udGVudC5maWxlcy5ldmVyeShuPT50eXBlb2Ygbj09XCJzdHJpbmdcIj8hMDohKHR5cGVvZihuPT1udWxsP3ZvaWQgMDpuLnJhdykhPVwic3RyaW5nXCJ8fChuPT1udWxsP3ZvaWQgMDpuLmV4dGVuc2lvbikmJnR5cGVvZihuPT1udWxsP3ZvaWQgMDpuLmV4dGVuc2lvbikhPVwic3RyaW5nXCIpKSlyZXR1cm4hMTtpZih0eXBlb2YgdC5jb250ZW50LmV4dHJhY3Q9PVwib2JqZWN0XCIpe2ZvcihsZXQgbiBvZiBPYmplY3QudmFsdWVzKHQuY29udGVudC5leHRyYWN0KSlpZih0eXBlb2YgbiE9XCJmdW5jdGlvblwiKXJldHVybiExfWVsc2UgaWYoISh0LmNvbnRlbnQuZXh0cmFjdD09PXZvaWQgMHx8dHlwZW9mIHQuY29udGVudC5leHRyYWN0PT1cImZ1bmN0aW9uXCIpKXJldHVybiExO2lmKHR5cGVvZiB0LmNvbnRlbnQudHJhbnNmb3JtPT1cIm9iamVjdFwiKXtmb3IobGV0IG4gb2YgT2JqZWN0LnZhbHVlcyh0LmNvbnRlbnQudHJhbnNmb3JtKSlpZih0eXBlb2YgbiE9XCJmdW5jdGlvblwiKXJldHVybiExfWVsc2UgaWYoISh0LmNvbnRlbnQudHJhbnNmb3JtPT09dm9pZCAwfHx0eXBlb2YgdC5jb250ZW50LnRyYW5zZm9ybT09XCJmdW5jdGlvblwiKSlyZXR1cm4hMTtpZih0eXBlb2YgdC5jb250ZW50LnJlbGF0aXZlIT1cImJvb2xlYW5cIiYmdHlwZW9mIHQuY29udGVudC5yZWxhdGl2ZTxcInVcIilyZXR1cm4hMX1yZXR1cm4hMH1yZXR1cm4hMX0pKCl8fEwud2FybihcInB1cmdlLWRlcHJlY2F0aW9uXCIsW1wiVGhlIGBwdXJnZWAvYGNvbnRlbnRgIG9wdGlvbnMgaGF2ZSBjaGFuZ2VkIGluIFRhaWx3aW5kIENTUyB2My4wLlwiLFwiVXBkYXRlIHlvdXIgY29uZmlndXJhdGlvbiBmaWxlIHRvIGVsaW1pbmF0ZSB0aGlzIHdhcm5pbmcuXCIsXCJodHRwczovL3RhaWx3aW5kY3NzLmNvbS9kb2NzL3VwZ3JhZGUtZ3VpZGUjY29uZmlndXJlLWNvbnRlbnQtc291cmNlc1wiXSksdC5zYWZlbGlzdD0oKCk9Pnt2YXIgcztsZXR7Y29udGVudDpuLHB1cmdlOmksc2FmZWxpc3Q6YX09dDtyZXR1cm4gQXJyYXkuaXNBcnJheShhKT9hOkFycmF5LmlzQXJyYXkobj09bnVsbD92b2lkIDA6bi5zYWZlbGlzdCk/bi5zYWZlbGlzdDpBcnJheS5pc0FycmF5KGk9PW51bGw/dm9pZCAwOmkuc2FmZWxpc3QpP2kuc2FmZWxpc3Q6QXJyYXkuaXNBcnJheSgocz1pPT1udWxsP3ZvaWQgMDppLm9wdGlvbnMpPT1udWxsP3ZvaWQgMDpzLnNhZmVsaXN0KT9pLm9wdGlvbnMuc2FmZWxpc3Q6W119KSgpLHQuYmxvY2tsaXN0PSgoKT0+e2xldHtibG9ja2xpc3Q6bn09dDtpZihBcnJheS5pc0FycmF5KG4pKXtpZihuLmV2ZXJ5KGk9PnR5cGVvZiBpPT1cInN0cmluZ1wiKSlyZXR1cm4gbjtMLndhcm4oXCJibG9ja2xpc3QtaW52YWxpZFwiLFtcIlRoZSBgYmxvY2tsaXN0YCBvcHRpb24gbXVzdCBiZSBhbiBhcnJheSBvZiBzdHJpbmdzLlwiLFwiaHR0cHM6Ly90YWlsd2luZGNzcy5jb20vZG9jcy9jb250ZW50LWNvbmZpZ3VyYXRpb24jZGlzY2FyZGluZy1jbGFzc2VzXCJdKX1yZXR1cm5bXX0pKCksdHlwZW9mIHQucHJlZml4PT1cImZ1bmN0aW9uXCI/KEwud2FybihcInByZWZpeC1mdW5jdGlvblwiLFtcIkFzIG9mIFRhaWx3aW5kIENTUyB2My4wLCBgcHJlZml4YCBjYW5ub3QgYmUgYSBmdW5jdGlvbi5cIixcIlVwZGF0ZSBgcHJlZml4YCBpbiB5b3VyIGNvbmZpZ3VyYXRpb24gdG8gYmUgYSBzdHJpbmcgdG8gZWxpbWluYXRlIHRoaXMgd2FybmluZy5cIixcImh0dHBzOi8vdGFpbHdpbmRjc3MuY29tL2RvY3MvdXBncmFkZS1ndWlkZSNwcmVmaXgtY2Fubm90LWJlLWEtZnVuY3Rpb25cIl0pLHQucHJlZml4PVwiXCIpOnQucHJlZml4PShyPXQucHJlZml4KSE9bnVsbD9yOlwiXCIsdC5jb250ZW50PXtyZWxhdGl2ZTooKCk9PntsZXR7Y29udGVudDpufT10O3JldHVybiBuIT1udWxsJiZuLnJlbGF0aXZlP24ucmVsYXRpdmU6Ryh0LFwicmVsYXRpdmVDb250ZW50UGF0aHNCeURlZmF1bHRcIil9KSgpLGZpbGVzOigoKT0+e2xldHtjb250ZW50Om4scHVyZ2U6aX09dDtyZXR1cm4gQXJyYXkuaXNBcnJheShpKT9pOkFycmF5LmlzQXJyYXkoaT09bnVsbD92b2lkIDA6aS5jb250ZW50KT9pLmNvbnRlbnQ6QXJyYXkuaXNBcnJheShuKT9uOkFycmF5LmlzQXJyYXkobj09bnVsbD92b2lkIDA6bi5jb250ZW50KT9uLmNvbnRlbnQ6QXJyYXkuaXNBcnJheShuPT1udWxsP3ZvaWQgMDpuLmZpbGVzKT9uLmZpbGVzOltdfSkoKSxleHRyYWN0OigoKT0+e2xldCBuPSgoKT0+e3ZhciBzLG8sbCx1LGYscCxjLGQsaCx5O3JldHVybihzPXQucHVyZ2UpIT1udWxsJiZzLmV4dHJhY3Q/dC5wdXJnZS5leHRyYWN0OihvPXQuY29udGVudCkhPW51bGwmJm8uZXh0cmFjdD90LmNvbnRlbnQuZXh0cmFjdDoodT0obD10LnB1cmdlKT09bnVsbD92b2lkIDA6bC5leHRyYWN0KSE9bnVsbCYmdS5ERUZBVUxUP3QucHVyZ2UuZXh0cmFjdC5ERUZBVUxUOihwPShmPXQuY29udGVudCk9PW51bGw/dm9pZCAwOmYuZXh0cmFjdCkhPW51bGwmJnAuREVGQVVMVD90LmNvbnRlbnQuZXh0cmFjdC5ERUZBVUxUOihkPShjPXQucHVyZ2UpPT1udWxsP3ZvaWQgMDpjLm9wdGlvbnMpIT1udWxsJiZkLmV4dHJhY3RvcnM/dC5wdXJnZS5vcHRpb25zLmV4dHJhY3RvcnM6KHk9KGg9dC5jb250ZW50KT09bnVsbD92b2lkIDA6aC5vcHRpb25zKSE9bnVsbCYmeS5leHRyYWN0b3JzP3QuY29udGVudC5vcHRpb25zLmV4dHJhY3RvcnM6e319KSgpLGk9e30sYT0oKCk9Pnt2YXIgcyxvLGwsdTtpZigobz0ocz10LnB1cmdlKT09bnVsbD92b2lkIDA6cy5vcHRpb25zKSE9bnVsbCYmby5kZWZhdWx0RXh0cmFjdG9yKXJldHVybiB0LnB1cmdlLm9wdGlvbnMuZGVmYXVsdEV4dHJhY3RvcjtpZigodT0obD10LmNvbnRlbnQpPT1udWxsP3ZvaWQgMDpsLm9wdGlvbnMpIT1udWxsJiZ1LmRlZmF1bHRFeHRyYWN0b3IpcmV0dXJuIHQuY29udGVudC5vcHRpb25zLmRlZmF1bHRFeHRyYWN0b3J9KSgpO2lmKGEhPT12b2lkIDAmJihpLkRFRkFVTFQ9YSksdHlwZW9mIG49PVwiZnVuY3Rpb25cIilpLkRFRkFVTFQ9bjtlbHNlIGlmKEFycmF5LmlzQXJyYXkobikpZm9yKGxldHtleHRlbnNpb25zOnMsZXh0cmFjdG9yOm99b2YgbiE9bnVsbD9uOltdKWZvcihsZXQgbCBvZiBzKWlbbF09bztlbHNlIHR5cGVvZiBuPT1cIm9iamVjdFwiJiZuIT09bnVsbCYmT2JqZWN0LmFzc2lnbihpLG4pO3JldHVybiBpfSkoKSx0cmFuc2Zvcm06KCgpPT57bGV0IG49KCgpPT57dmFyIGEscyxvLGwsdSxmO3JldHVybihhPXQucHVyZ2UpIT1udWxsJiZhLnRyYW5zZm9ybT90LnB1cmdlLnRyYW5zZm9ybToocz10LmNvbnRlbnQpIT1udWxsJiZzLnRyYW5zZm9ybT90LmNvbnRlbnQudHJhbnNmb3JtOihsPShvPXQucHVyZ2UpPT1udWxsP3ZvaWQgMDpvLnRyYW5zZm9ybSkhPW51bGwmJmwuREVGQVVMVD90LnB1cmdlLnRyYW5zZm9ybS5ERUZBVUxUOihmPSh1PXQuY29udGVudCk9PW51bGw/dm9pZCAwOnUudHJhbnNmb3JtKSE9bnVsbCYmZi5ERUZBVUxUP3QuY29udGVudC50cmFuc2Zvcm0uREVGQVVMVDp7fX0pKCksaT17fTtyZXR1cm4gdHlwZW9mIG49PVwiZnVuY3Rpb25cIiYmKGkuREVGQVVMVD1uKSx0eXBlb2Ygbj09XCJvYmplY3RcIiYmbiE9PW51bGwmJk9iamVjdC5hc3NpZ24oaSxuKSxpfSkoKX07Zm9yKGxldCBuIG9mIHQuY29udGVudC5maWxlcylpZih0eXBlb2Ygbj09XCJzdHJpbmdcIiYmL3soW14sXSo/KX0vZy50ZXN0KG4pKXtMLndhcm4oXCJpbnZhbGlkLWdsb2ItYnJhY2VzXCIsW2BUaGUgZ2xvYiBwYXR0ZXJuICR7bn0gaW4geW91ciBUYWlsd2luZCBDU1MgY29uZmlndXJhdGlvbiBpcyBpbnZhbGlkLmAsYFVwZGF0ZSBpdCB0byAke24ucmVwbGFjZSgveyhbXixdKj8pfS9nLFwiJDFcIil9IHRvIHNpbGVuY2UgdGhpcyB3YXJuaW5nLmBdKTticmVha31yZXR1cm4gdH1mdW5jdGlvbiBJbih0KXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0KT90Lm1hcChlPT5JbihlKSk6dHlwZW9mIHQ9PVwib2JqZWN0XCImJnQhPT1udWxsP09iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyh0KS5tYXAoKFtlLHJdKT0+W2UsSW4ocildKSk6dH1mdW5jdGlvbiBwdCh0KXtyZXR1cm4gdHlwZW9mIHQ9PVwiZnVuY3Rpb25cIn1mdW5jdGlvbiBwcih0LC4uLmUpe2xldCByPWUucG9wKCk7Zm9yKGxldCBuIG9mIGUpZm9yKGxldCBpIGluIG4pe2xldCBhPXIodFtpXSxuW2ldKTthPT09dm9pZCAwP1godFtpXSkmJlgobltpXSk/dFtpXT1wcih7fSx0W2ldLG5baV0scik6dFtpXT1uW2ldOnRbaV09YX1yZXR1cm4gdH12YXIgaGE9e2NvbG9yczp5YyxuZWdhdGl2ZSh0KXtyZXR1cm4gT2JqZWN0LmtleXModCkuZmlsdGVyKGU9PnRbZV0hPT1cIjBcIikucmVkdWNlKChlLHIpPT57bGV0IG49UmUodFtyXSk7cmV0dXJuIG4hPT12b2lkIDAmJihlW2AtJHtyfWBdPW4pLGV9LHt9KX0sYnJlYWtwb2ludHModCl7cmV0dXJuIE9iamVjdC5rZXlzKHQpLmZpbHRlcihlPT50eXBlb2YgdFtlXT09XCJzdHJpbmdcIikucmVkdWNlKChlLHIpPT4oey4uLmUsW2BzY3JlZW4tJHtyfWBdOnRbcl19KSx7fSl9fTtmdW5jdGlvbiBndyh0LC4uLmUpe3JldHVybiBwdCh0KT90KC4uLmUpOnR9ZnVuY3Rpb24geXcodCl7cmV0dXJuIHQucmVkdWNlKChlLHtleHRlbmQ6cn0pPT5wcihlLHIsKG4saSk9Pm49PT12b2lkIDA/W2ldOkFycmF5LmlzQXJyYXkobik/W2ksLi4ubl06W2ksbl0pLHt9KX1mdW5jdGlvbiB2dyh0KXtyZXR1cm57Li4udC5yZWR1Y2UoKGUscik9PmRhKGUscikse30pLGV4dGVuZDp5dyh0KX19ZnVuY3Rpb24gd2ModCxlKXtpZihBcnJheS5pc0FycmF5KHQpJiZYKHRbMF0pKXJldHVybiB0LmNvbmNhdChlKTtpZihBcnJheS5pc0FycmF5KGUpJiZYKGVbMF0pJiZYKHQpKXJldHVyblt0LC4uLmVdO2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGV9ZnVuY3Rpb24gd3coe2V4dGVuZDp0LC4uLmV9KXtyZXR1cm4gcHIoZSx0LChyLG4pPT4hcHQocikmJiFuLnNvbWUocHQpP3ByKHt9LHIsLi4ubix3Yyk6KGksYSk9PnByKHt9LC4uLltyLC4uLm5dLm1hcChzPT5ndyhzLGksYSkpLHdjKSl9ZnVuY3Rpb24qYncodCl7bGV0IGU9TGUodCk7aWYoZS5sZW5ndGg9PT0wfHwoeWllbGQgZSxBcnJheS5pc0FycmF5KHQpKSlyZXR1cm47bGV0IHI9L14oLio/KVxccypcXC9cXHMqKFteL10rKSQvLG49dC5tYXRjaChyKTtpZihuIT09bnVsbCl7bGV0WyxpLGFdPW4scz1MZShpKTtzLmFscGhhPWEseWllbGQgc319ZnVuY3Rpb24geHcodCl7bGV0IGU9KHIsbik9Pntmb3IobGV0IGkgb2YgYncocikpe2xldCBhPTAscz10O2Zvcig7cyE9bnVsbCYmYTxpLmxlbmd0aDspcz1zW2lbYSsrXV0scz1wdChzKSYmKGkuYWxwaGE9PT12b2lkIDB8fGE8PWkubGVuZ3RoLTEpP3MoZSxoYSk6cztpZihzIT09dm9pZCAwKXtpZihpLmFscGhhIT09dm9pZCAwKXtsZXQgbz1zdChzKTtyZXR1cm4gd2UobyxpLmFscGhhLE0obykpfXJldHVybiBYKHMpP0luKHMpOnN9fXJldHVybiBufTtyZXR1cm4gT2JqZWN0LmFzc2lnbihlLHt0aGVtZTplLC4uLmhhfSksT2JqZWN0LmtleXModCkucmVkdWNlKChyLG4pPT4ocltuXT1wdCh0W25dKT90W25dKGUsaGEpOnRbbl0scikse30pfWZ1bmN0aW9uIGJjKHQpe2xldCBlPVtdO3JldHVybiB0LmZvckVhY2gocj0+e3ZhciBpO2U9Wy4uLmUscl07bGV0IG49KGk9cj09bnVsbD92b2lkIDA6ci5wbHVnaW5zKSE9bnVsbD9pOltdO24ubGVuZ3RoIT09MCYmbi5mb3JFYWNoKGE9Pnt2YXIgczthLl9faXNPcHRpb25zRnVuY3Rpb24mJihhPWEoKSksZT1bLi4uZSwuLi5iYyhbKHM9YT09bnVsbD92b2lkIDA6YS5jb25maWcpIT1udWxsP3M6e31dKV19KX0pLGV9ZnVuY3Rpb24gU3codCl7cmV0dXJuWy4uLnRdLnJlZHVjZVJpZ2h0KChyLG4pPT5wdChuKT9uKHtjb3JlUGx1Z2luczpyfSk6Z2MobixyKSxtYyl9ZnVuY3Rpb24ga3codCl7cmV0dXJuWy4uLnRdLnJlZHVjZVJpZ2h0KChyLG4pPT5bLi4uciwuLi5uXSxbXSl9ZnVuY3Rpb24gbWEodCl7bGV0IGU9Wy4uLmJjKHQpLHtwcmVmaXg6XCJcIixpbXBvcnRhbnQ6ITEsc2VwYXJhdG9yOlwiOlwifV07cmV0dXJuIHZjKGRhKHt0aGVtZTp4dyh3dyh2dyhlLm1hcChyPT57dmFyIG47cmV0dXJuKG49cj09bnVsbD92b2lkIDA6ci50aGVtZSkhPW51bGw/bjp7fX0pKSkpLGNvcmVQbHVnaW5zOlN3KGUubWFwKHI9PnIuY29yZVBsdWdpbnMpKSxwbHVnaW5zOmt3KHQubWFwKHI9Pnt2YXIgbjtyZXR1cm4obj1yPT1udWxsP3ZvaWQgMDpyLnBsdWdpbnMpIT1udWxsP246W119KSl9LC4uLmUpKX12YXIga2M9SChTYygpKTtmdW5jdGlvbiBSbih0KXt2YXIgaTtsZXQgZT0oKGk9dD09bnVsbD92b2lkIDA6dC5wcmVzZXRzKSE9bnVsbD9pOltrYy5kZWZhdWx0XSkuc2xpY2UoKS5yZXZlcnNlKCkuZmxhdE1hcChhPT5SbihhIGluc3RhbmNlb2YgRnVuY3Rpb24/YSgpOmEpKSxyPXtyZXNwZWN0RGVmYXVsdFJpbmdDb2xvck9wYWNpdHk6e3RoZW1lOntyaW5nQ29sb3I6KHt0aGVtZTphfSk9Pih7REVGQVVMVDpcIiMzYjgyZjY3ZlwiLC4uLmEoXCJjb2xvcnNcIil9KX19LGRpc2FibGVDb2xvck9wYWNpdHlVdGlsaXRpZXNCeURlZmF1bHQ6e2NvcmVQbHVnaW5zOntiYWNrZ3JvdW5kT3BhY2l0eTohMSxib3JkZXJPcGFjaXR5OiExLGRpdmlkZU9wYWNpdHk6ITEscGxhY2Vob2xkZXJPcGFjaXR5OiExLHJpbmdPcGFjaXR5OiExLHRleHRPcGFjaXR5OiExfX19LG49T2JqZWN0LmtleXMocikuZmlsdGVyKGE9PkcodCxhKSkubWFwKGE9PnJbYV0pO3JldHVyblt0LC4uLm4sLi4uZV19ZnVuY3Rpb24gZ2EoLi4udCl7bGV0WywuLi5lXT1Sbih0WzBdKTtyZXR1cm4gbWEoWy4uLnQsLi4uZV0pfXZhciBPYz10PT57dmFyIG47bGV0IGU9Z2EoKG49dC5jb25maWcpIT1udWxsP246e30pO3JldHVybiBwYShpPT4oKT0+aS5jcmVhdGVDb250ZXh0KGUsW3tjb250ZW50OnQuY29udGVudH1dKSl9O3ZhciB3cD1IKHZwKCksMSk7dmFyIGJwPXQ9PntsZXQgZT1PYyh7Y29uZmlnOnQuY29uZmlnLGNvbnRlbnQ6dC5jb250ZW50fSk7cmV0dXJuIFIoW2UsKDAsd3AuZGVmYXVsdCkoKV0pLnByb2Nlc3MoeHAse2Zyb206dm9pZCAwfSkuY3NzfTt2YXIgeHA9U3RyaW5nLnJhd2BcbiAgQHRhaWx3aW5kIGJhc2U7XG4gIEB0YWlsd2luZCBjb21wb25lbnRzO1xuICBAdGFpbHdpbmQgdXRpbGl0aWVzO1xuYDtmdW5jdGlvbiBrcCh0KXtsZXQgZT1SLnBhcnNlKHQpO3JldHVybiB0bi5vYmplY3RpZnkoZSl9dmFyIHNiPSh0LGUpPT57dmFyIGksYTtsZXQgcj0oYT0oaT1lPT1udWxsP3ZvaWQgMDplLmNvcmVQbHVnaW5zKT09bnVsbD92b2lkIDA6aS5wcmVmbGlnaHQpIT1udWxsP2E6ITEsbj0oZT09bnVsbD92b2lkIDA6ZS5jb3JlUGx1Z2lucyl8fHt9O3JldHVybiBicCh7Y29uZmlnOnsuLi5lLGNvcmVQbHVnaW5zOnsuLi5uLHByZWZsaWdodDpyfX0sY29udGVudDp0fSl9LE9wPSh7Y29uZmlnOnQsb3B0aW9uczplfSk9Pih7dHdpOkVhKHQsZSksdHdqOkNwKHQsZSl9KSxFcD0oLi4udCk9PntsZXQgZT1cIlwiO3JldHVybiB0eXBlb2YgdFswXT09XCJzdHJpbmdcIj9lPXRbMF06QXJyYXkuaXNBcnJheSh0WzBdKT9lPXQuZmxhdCgxLzApLm1hcChyPT5FcChyKSkuam9pbihcIiBcIik6dHlwZW9mIHRbMF09PVwib2JqZWN0XCImJihlPU9iamVjdC5lbnRyaWVzKHRbMF0pLmZpbHRlcihyPT4hIXJbMV0pLm1hcChyPT5yWzBdKS5qb2luKFwiIFwiKSksZT1lLnJlcGxhY2UoL1xccysvZyxcIiBcIiksZX0sRWE9KHQsZSk9PiguLi5yKT0+e2xldCBuPUVwKHIpLHsxOml9PXJ8fHt9LHM9ey4uLnttZXJnZTohMCxtaW5pZnk6ITAsaWdub3JlTWVkaWFRdWVyaWVzOiEwfSwuLi5lLC4uLml9LG89UmEoc2Iobix0KSk7cmV0dXJuIHMhPW51bGwmJnMuaWdub3JlTWVkaWFRdWVyaWVzP28ucmVtb3ZlTWVkaWFRdWVyaWVzKCk6KG8ucmVtb3ZlVW5kZWZpbmVkKCksby5jb21iaW5lTWVkaWFRdWVyaWVzKCkpLG8uZml4UkdCKCkscyE9bnVsbCYmcy5tZXJnZSYmby5tZXJnZSgpLHMhPW51bGwmJnMubWluaWZ5JiZvLm1pbmlmeSgpLG8uZ2V0KCl9LENwPSh0LGUpPT4oLi4ucik9PmtwKEVhKHQsZSkocikpLFNwPUVhKCksYWI9Q3AoKSxvYj1PcDtleHBvcnR7T3AgYXMgdGFpbHdpbmRUb0NTUyxvYiBhcyB0d1RvQ1NTLFNwIGFzIHR3aSxhYiBhcyB0d2p9O1xuLyohIGh0dHBzOi8vbXRocy5iZS9jc3Nlc2MgdjMuMC4wIGJ5IEBtYXRoaWFzICovXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tw-to-css/dist/index.mjs\n");

/***/ })

};
;